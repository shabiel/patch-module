KIDS Distribution saved on Jul 27, 2015@23:48:31
PM 2.5
**KIDS**:PATCH MODULE 2.5^

**INSTALL NAME**
PATCH MODULE 2.5
"BLD",9345,0)
PATCH MODULE 2.5^PATCH MODULE^0^3150727^n
"BLD",9345,1,0)
^^2^2^3140418^
"BLD",9345,1,1,0)
The PATCH Module from FORUM.VA.GOV modified to handle OSEHRA Community 
"BLD",9345,1,2,0)
requirements.
"BLD",9345,4,0)
^9.64PA^9.4^12
"BLD",9345,4,9.4,0)
9.4
"BLD",9345,4,9.4,2,0)
^9.641^9.4901^1
"BLD",9345,4,9.4,2,9.4901,0)
PATCH APPLICATION HISTORY  (sub-file)
"BLD",9345,4,9.4,2,9.4901,1,0)
^9.6411^^
"BLD",9345,4,9.4,222)
y^y^p^^^^n^^n
"BLD",9345,4,9.4,224)

"BLD",9345,4,9.6,0)
9.6
"BLD",9345,4,9.6,2,0)
^9.641^9.619^3
"BLD",9345,4,9.6,2,9.6,0)
BUILD  (File-top level)
"BLD",9345,4,9.6,2,9.6,1,0)
^9.6411^.01^1
"BLD",9345,4,9.6,2,9.6,1,.01,0)
NAME
"BLD",9345,4,9.6,2,9.619,0)
PATCH  (sub-file)
"BLD",9345,4,9.6,2,9.619,1,0)
^9.6411^^
"BLD",9345,4,9.6,2,9.63,0)
MULTIPLE BUILD  (sub-file)
"BLD",9345,4,9.6,2,9.63,1,0)
^9.6411^.01^1
"BLD",9345,4,9.6,2,9.63,1,.01,0)
MULTIPLE BUILD
"BLD",9345,4,9.6,222)
y^y^p^^^^n^^n
"BLD",9345,4,9.6,224)

"BLD",9345,4,9.7,0)
9.7
"BLD",9345,4,9.7,2,0)
^9.641^9.719^2
"BLD",9345,4,9.7,2,9.7,0)
INSTALL  (File-top level)
"BLD",9345,4,9.7,2,9.7,1,0)
^9.6411^.01^1
"BLD",9345,4,9.7,2,9.7,1,.01,0)
NAME
"BLD",9345,4,9.7,2,9.719,0)
PATCH  (sub-file)
"BLD",9345,4,9.7,2,9.719,1,0)
^9.6411^^
"BLD",9345,4,9.7,222)
y^y^p^^^^n^^n
"BLD",9345,4,9.7,224)

"BLD",9345,4,11004,0)
11004
"BLD",9345,4,11004,222)
y^y^f^^^^n^^
"BLD",9345,4,11004,224)

"BLD",9345,4,11005,0)
11005
"BLD",9345,4,11005,222)
y^y^f^^^^n^^
"BLD",9345,4,11005,224)

"BLD",9345,4,11005.1,0)
11005.1
"BLD",9345,4,11005.1,222)
y^y^f^^^^n
"BLD",9345,4,11005.2,0)
11005.2
"BLD",9345,4,11005.2,222)
y^y^f^^y^^y^m^n
"BLD",9345,4,11005.2,224)

"BLD",9345,4,11005.5,0)
11005.5
"BLD",9345,4,11005.5,222)
y^y^f^^^^n^^
"BLD",9345,4,11005.5,224)

"BLD",9345,4,11006,0)
11006
"BLD",9345,4,11006,222)
y^y^f^^^^n
"BLD",9345,4,11007,0)
11007
"BLD",9345,4,11007,222)
y^y^f^^^^n^^
"BLD",9345,4,11007,224)

"BLD",9345,4,11007.1,0)
11007.1
"BLD",9345,4,11007.1,222)
y^y^f^^^^n^^
"BLD",9345,4,11007.1,224)

"BLD",9345,4,11007.2,0)
11007.2
"BLD",9345,4,11007.2,222)
y^y^f^^^^n
"BLD",9345,4,"APDD",9.4,9.4901)

"BLD",9345,4,"APDD",9.6,9.6)

"BLD",9345,4,"APDD",9.6,9.6,.01)

"BLD",9345,4,"APDD",9.6,9.619)

"BLD",9345,4,"APDD",9.6,9.63)

"BLD",9345,4,"APDD",9.6,9.63,.01)

"BLD",9345,4,"APDD",9.7,9.7)

"BLD",9345,4,"APDD",9.7,9.7,.01)

"BLD",9345,4,"APDD",9.7,9.719)

"BLD",9345,4,"B",9.4,9.4)

"BLD",9345,4,"B",9.6,9.6)

"BLD",9345,4,"B",9.7,9.7)

"BLD",9345,4,"B",11004,11004)

"BLD",9345,4,"B",11005,11005)

"BLD",9345,4,"B",11005.1,11005.1)

"BLD",9345,4,"B",11005.2,11005.2)

"BLD",9345,4,"B",11005.5,11005.5)

"BLD",9345,4,"B",11006,11006)

"BLD",9345,4,"B",11007,11007)

"BLD",9345,4,"B",11007.1,11007.1)

"BLD",9345,4,"B",11007.2,11007.2)

"BLD",9345,6.3)
48
"BLD",9345,"INID")
^n
"BLD",9345,"INIT")
A1AE2POS
"BLD",9345,"KRN",0)
^9.67PA^779.2^20
"BLD",9345,"KRN",.4,0)
.4
"BLD",9345,"KRN",.4,"NM",0)
^9.68A^17^17
"BLD",9345,"KRN",.4,"NM",1,0)
A1AE FULL SUMMARY BY DATE    FILE #11005^11005^0
"BLD",9345,"KRN",.4,"NM",2,0)
A1AE GT 500    FILE #11007^11007^0
"BLD",9345,"KRN",.4,"NM",3,0)
A1AE PACKAGE USERS    FILE #11007^11007^0
"BLD",9345,"KRN",.4,"NM",4,0)
A1AE PATCH COMPL/COMMENT RPT    FILE #11005^11005^0
"BLD",9345,"KRN",.4,"NM",5,0)
A1AE PATCH COMPLIANCE PRT    FILE #11005^11005^0
"BLD",9345,"KRN",.4,"NM",6,0)
A1AE PATCH OPTS DOC    FILE #19^19^0
"BLD",9345,"KRN",.4,"NM",7,0)
A1AE PATCH SUMMARY    FILE #11005^11005^0
"BLD",9345,"KRN",.4,"NM",8,0)
A1AE PROBLEM DETAILS    FILE #11006^11006^0
"BLD",9345,"KRN",.4,"NM",9,0)
A1AE ROUTINE INQUIRE    FILE #9.8^9.8^0
"BLD",9345,"KRN",.4,"NM",10,0)
A1AE RTN CHECKSUM    FILE #9.8^9.8^0
"BLD",9345,"KRN",.4,"NM",11,0)
A1AE SELECTED USERS    FILE #11007^11007^0
"BLD",9345,"KRN",.4,"NM",12,0)
A1AE STANDARD HEADER    FILE #11005^11005^0
"BLD",9345,"KRN",.4,"NM",13,0)
A1AE STANDARD PRINT    FILE #11005^11005^0
"BLD",9345,"KRN",.4,"NM",14,0)
A1AE TABLED PROBLEM    FILE #11006^11006^0
"BLD",9345,"KRN",.4,"NM",15,0)
A1AE VERIFIED PATCH SUMMARY    FILE #11005^11005^0
"BLD",9345,"KRN",.4,"NM",16,0)
A1AEZPKE    FILE #11005^11005^0
"BLD",9345,"KRN",.4,"NM",17,0)
A1AE PATCH RELATIONSHIPS    FILE #11005^11005^0
"BLD",9345,"KRN",.4,"NM","B","A1AE FULL SUMMARY BY DATE    FILE #11005",1)

"BLD",9345,"KRN",.4,"NM","B","A1AE GT 500    FILE #11007",2)

"BLD",9345,"KRN",.4,"NM","B","A1AE PACKAGE USERS    FILE #11007",3)

"BLD",9345,"KRN",.4,"NM","B","A1AE PATCH COMPL/COMMENT RPT    FILE #11005",4)

"BLD",9345,"KRN",.4,"NM","B","A1AE PATCH COMPLIANCE PRT    FILE #11005",5)

"BLD",9345,"KRN",.4,"NM","B","A1AE PATCH OPTS DOC    FILE #19",6)

"BLD",9345,"KRN",.4,"NM","B","A1AE PATCH RELATIONSHIPS    FILE #11005",17)

"BLD",9345,"KRN",.4,"NM","B","A1AE PATCH SUMMARY    FILE #11005",7)

"BLD",9345,"KRN",.4,"NM","B","A1AE PROBLEM DETAILS    FILE #11006",8)

"BLD",9345,"KRN",.4,"NM","B","A1AE ROUTINE INQUIRE    FILE #9.8",9)

"BLD",9345,"KRN",.4,"NM","B","A1AE RTN CHECKSUM    FILE #9.8",10)

"BLD",9345,"KRN",.4,"NM","B","A1AE SELECTED USERS    FILE #11007",11)

"BLD",9345,"KRN",.4,"NM","B","A1AE STANDARD HEADER    FILE #11005",12)

"BLD",9345,"KRN",.4,"NM","B","A1AE STANDARD PRINT    FILE #11005",13)

"BLD",9345,"KRN",.4,"NM","B","A1AE TABLED PROBLEM    FILE #11006",14)

"BLD",9345,"KRN",.4,"NM","B","A1AE VERIFIED PATCH SUMMARY    FILE #11005",15)

"BLD",9345,"KRN",.4,"NM","B","A1AEZPKE    FILE #11005",16)

"BLD",9345,"KRN",.401,0)
.401
"BLD",9345,"KRN",.401,"NM",0)
^9.68A^14^14
"BLD",9345,"KRN",.401,"NM",1,0)
A1AE FULL SUMARY SORT    FILE #11005^11005^0
"BLD",9345,"KRN",.401,"NM",2,0)
A1AE FULL SUMMARY BY DATE    FILE #11005^11005^0
"BLD",9345,"KRN",.401,"NM",3,0)
A1AE GT 500    FILE #11007^11007^0
"BLD",9345,"KRN",.401,"NM",4,0)
A1AE PATCH COMPL/COMM SORT    FILE #11005^11005^0
"BLD",9345,"KRN",.401,"NM",5,0)
A1AE PROBLEM SORT    FILE #11006^11006^0
"BLD",9345,"KRN",.401,"NM",6,0)
A1AE SEQ REV SAVE    FILE #11005^11005^0
"BLD",9345,"KRN",.401,"NM",7,0)
A1AE SEQ REV SUMMARY SORT    FILE #11005^11005^0
"BLD",9345,"KRN",.401,"NM",8,0)
A1AE SEQ SAVE    FILE #11005^11005^0
"BLD",9345,"KRN",.401,"NM",9,0)
A1AE SEQ SUMMARY SORT    FILE #11005^11005^0
"BLD",9345,"KRN",.401,"NM",10,0)
A1AE STANDARD SORT    FILE #11005^11005^0
"BLD",9345,"KRN",.401,"NM",11,0)
A1AE SUMMARY SORT    FILE #11005^11005^1^
"BLD",9345,"KRN",.401,"NM",12,0)
A1AEZPKE    FILE #11005^11005^0
"BLD",9345,"KRN",.401,"NM",13,0)
A1AE COM PATCH BY STRM BY DT    FILE #11005^11005^0
"BLD",9345,"KRN",.401,"NM",14,0)
A1AE STANDARD SORT1    FILE #11005^11005^0
"BLD",9345,"KRN",.401,"NM","B","A1AE COM PATCH BY STRM BY DT    FILE #11005",13)

"BLD",9345,"KRN",.401,"NM","B","A1AE FULL SUMARY SORT    FILE #11005",1)

"BLD",9345,"KRN",.401,"NM","B","A1AE FULL SUMMARY BY DATE    FILE #11005",2)

"BLD",9345,"KRN",.401,"NM","B","A1AE GT 500    FILE #11007",3)

"BLD",9345,"KRN",.401,"NM","B","A1AE PATCH COMPL/COMM SORT    FILE #11005",4)

"BLD",9345,"KRN",.401,"NM","B","A1AE PROBLEM SORT    FILE #11006",5)

"BLD",9345,"KRN",.401,"NM","B","A1AE SEQ REV SAVE    FILE #11005",6)

"BLD",9345,"KRN",.401,"NM","B","A1AE SEQ REV SUMMARY SORT    FILE #11005",7)

"BLD",9345,"KRN",.401,"NM","B","A1AE SEQ SAVE    FILE #11005",8)

"BLD",9345,"KRN",.401,"NM","B","A1AE SEQ SUMMARY SORT    FILE #11005",9)

"BLD",9345,"KRN",.401,"NM","B","A1AE STANDARD SORT    FILE #11005",10)

"BLD",9345,"KRN",.401,"NM","B","A1AE STANDARD SORT1    FILE #11005",14)

"BLD",9345,"KRN",.401,"NM","B","A1AE SUMMARY SORT    FILE #11005",11)

"BLD",9345,"KRN",.401,"NM","B","A1AEZPKE    FILE #11005",12)

"BLD",9345,"KRN",.402,0)
.402
"BLD",9345,"KRN",.402,"NM",0)
^9.68A^8^8
"BLD",9345,"KRN",.402,"NM",1,0)
A1AE ADD/EDIT PATCHES    FILE #11005^11005^0
"BLD",9345,"KRN",.402,"NM",2,0)
A1AE ADD/EDIT PROBLEMS    FILE #11006^11006^0
"BLD",9345,"KRN",.402,"NM",3,0)
A1AE ADD/EDIT USERS    FILE #11007^11007^0
"BLD",9345,"KRN",.402,"NM",4,0)
A1AE CHANGE PROBLEM STATUS    FILE #11006^11006^0
"BLD",9345,"KRN",.402,"NM",5,0)
A1AE COMP DATE    FILE #11005^11005^0
"BLD",9345,"KRN",.402,"NM",6,0)
A1AE CHANGE SITE SUBSCRIPTION    FILE #11007.1^11007.1^0
"BLD",9345,"KRN",.402,"NM",7,0)
A1AE EDIT DHCP PATCH STREAM    FILE #11007.1^11007.1^0
"BLD",9345,"KRN",.402,"NM",8,0)
A1AE EDIT PATCH STREAM HISTORY    FILE #11007.2^11007.2^0
"BLD",9345,"KRN",.402,"NM","B","A1AE ADD/EDIT PATCHES    FILE #11005",1)

"BLD",9345,"KRN",.402,"NM","B","A1AE ADD/EDIT PROBLEMS    FILE #11006",2)

"BLD",9345,"KRN",.402,"NM","B","A1AE ADD/EDIT USERS    FILE #11007",3)

"BLD",9345,"KRN",.402,"NM","B","A1AE CHANGE PROBLEM STATUS    FILE #11006",4)

"BLD",9345,"KRN",.402,"NM","B","A1AE CHANGE SITE SUBSCRIPTION    FILE #11007.1",6)

"BLD",9345,"KRN",.402,"NM","B","A1AE COMP DATE    FILE #11005",5)

"BLD",9345,"KRN",.402,"NM","B","A1AE EDIT DHCP PATCH STREAM    FILE #11007.1",7)

"BLD",9345,"KRN",.402,"NM","B","A1AE EDIT PATCH STREAM HISTORY    FILE #11007.2",8)

"BLD",9345,"KRN",.403,0)
.403
"BLD",9345,"KRN",.5,0)
.5
"BLD",9345,"KRN",.84,0)
.84
"BLD",9345,"KRN",3.6,0)
3.6
"BLD",9345,"KRN",3.6,"NM",0)
^9.68A^12^12
"BLD",9345,"KRN",3.6,"NM",1,0)
A1AE COMPLETED PATCH^^0
"BLD",9345,"KRN",3.6,"NM",2,0)
A1AE COMPLIANCE DATE EDIT^^0
"BLD",9345,"KRN",3.6,"NM",3,0)
A1AE ENTERED IN ERROR PATCH^^0
"BLD",9345,"KRN",3.6,"NM",4,0)
A1AE PKG^^0
"BLD",9345,"KRN",3.6,"NM",5,0)
A1AE RETIRED PATCH^^0
"BLD",9345,"KRN",3.6,"NM",6,0)
A1AE VERIFIED PACKAGE^^0
"BLD",9345,"KRN",3.6,"NM",7,0)
A1AE VERIFIED PATCH^^0
"BLD",9345,"KRN",3.6,"NM",8,0)
A1AE LOAD RELEASED PATCH^^0
"BLD",9345,"KRN",3.6,"NM",9,0)
A1AE DENIED SEC RELEASE PATCH^^0
"BLD",9345,"KRN",3.6,"NM",10,0)
A1AE SEC COMPLETION PATCH^^0
"BLD",9345,"KRN",3.6,"NM",11,0)
A1AE SEC DEVELOPMENT PATCH^^0
"BLD",9345,"KRN",3.6,"NM",12,0)
A1AE SEC RELEASE PATCH^^0
"BLD",9345,"KRN",3.6,"NM","B","A1AE COMPLETED PATCH",1)

"BLD",9345,"KRN",3.6,"NM","B","A1AE COMPLIANCE DATE EDIT",2)

"BLD",9345,"KRN",3.6,"NM","B","A1AE DENIED SEC RELEASE PATCH",9)

"BLD",9345,"KRN",3.6,"NM","B","A1AE ENTERED IN ERROR PATCH",3)

"BLD",9345,"KRN",3.6,"NM","B","A1AE LOAD RELEASED PATCH",8)

"BLD",9345,"KRN",3.6,"NM","B","A1AE PKG",4)

"BLD",9345,"KRN",3.6,"NM","B","A1AE RETIRED PATCH",5)

"BLD",9345,"KRN",3.6,"NM","B","A1AE SEC COMPLETION PATCH",10)

"BLD",9345,"KRN",3.6,"NM","B","A1AE SEC DEVELOPMENT PATCH",11)

"BLD",9345,"KRN",3.6,"NM","B","A1AE SEC RELEASE PATCH",12)

"BLD",9345,"KRN",3.6,"NM","B","A1AE VERIFIED PACKAGE",6)

"BLD",9345,"KRN",3.6,"NM","B","A1AE VERIFIED PATCH",7)

"BLD",9345,"KRN",3.8,0)
3.8
"BLD",9345,"KRN",3.8,"NM",0)
^9.68A^6^6
"BLD",9345,"KRN",3.8,"NM",1,0)
A1AE HFS MESSAGES^^0
"BLD",9345,"KRN",3.8,"NM",2,0)
A1AE PACKAGE RELEASE^^0
"BLD",9345,"KRN",3.8,"NM",3,0)
A1AE PATCH ERRORS^^0
"BLD",9345,"KRN",3.8,"NM",4,0)
A1AE LOAD RELEASED PATCH^^0
"BLD",9345,"KRN",3.8,"NM",5,0)
A1AEFMSC^^0
"BLD",9345,"KRN",3.8,"NM",6,0)
A1AESTRMCHG^^0
"BLD",9345,"KRN",3.8,"NM","B","A1AE HFS MESSAGES",1)

"BLD",9345,"KRN",3.8,"NM","B","A1AE LOAD RELEASED PATCH",4)

"BLD",9345,"KRN",3.8,"NM","B","A1AE PACKAGE RELEASE",2)

"BLD",9345,"KRN",3.8,"NM","B","A1AE PATCH ERRORS",3)

"BLD",9345,"KRN",3.8,"NM","B","A1AEFMSC",5)

"BLD",9345,"KRN",3.8,"NM","B","A1AESTRMCHG",6)

"BLD",9345,"KRN",9.2,0)
9.2
"BLD",9345,"KRN",9.2,"NM",0)
^9.68A^66^66
"BLD",9345,"KRN",9.2,"NM",1,0)
A1AE HELP MENU DEVELOPER^^0
"BLD",9345,"KRN",9.2,"NM",2,0)
A1AE HELP MENU IMPORT^^0
"BLD",9345,"KRN",9.2,"NM",3,0)
A1AE HELP MENU PACKAGE^^0
"BLD",9345,"KRN",9.2,"NM",4,0)
A1AE HELP MENU PATCH MGR^^0
"BLD",9345,"KRN",9.2,"NM",5,0)
A1AE HELP MENU PKG MGT^^0
"BLD",9345,"KRN",9.2,"NM",6,0)
A1AE HELP MENU SEC REPORTS^^0
"BLD",9345,"KRN",9.2,"NM",7,0)
A1AE HELP MENU SUPPORT^^0
"BLD",9345,"KRN",9.2,"NM",8,0)
A1AE HELP MENU USER^^0
"BLD",9345,"KRN",9.2,"NM",9,0)
A1AE HELP MENU VERIFIER^^0
"BLD",9345,"KRN",9.2,"NM",10,0)
A1AE HELP OPTION ADD PACKAGE^^0
"BLD",9345,"KRN",9.2,"NM",11,0)
A1AE HELP OPTION ADD PATCH^^0
"BLD",9345,"KRN",9.2,"NM",12,0)
A1AE HELP OPTION ADD PGK REL^^0
"BLD",9345,"KRN",9.2,"NM",13,0)
A1AE HELP OPTION ALL REL DET^^0
"BLD",9345,"KRN",9.2,"NM",14,0)
A1AE HELP OPTION ALL SECONDARY^^0
"BLD",9345,"KRN",9.2,"NM",15,0)
A1AE HELP OPTION ALLOCATE KEY^^0
"BLD",9345,"KRN",9.2,"NM",16,0)
A1AE HELP OPTION AUTH USERS^^0
"BLD",9345,"KRN",9.2,"NM",17,0)
A1AE HELP OPTION COMP DATE DSP^^0
"BLD",9345,"KRN",9.2,"NM",18,0)
A1AE HELP OPTION COMP DATE EDT^^0
"BLD",9345,"KRN",9.2,"NM",19,0)
A1AE HELP OPTION COMP DATE PRT^^0
"BLD",9345,"KRN",9.2,"NM",20,0)
A1AE HELP OPTION COMP SUMM PKG^^0
"BLD",9345,"KRN",9.2,"NM",21,0)
A1AE HELP OPTION COMPL NOT REL^^0
"BLD",9345,"KRN",9.2,"NM",22,0)
A1AE HELP OPTION COPY PATCH^^0
"BLD",9345,"KRN",9.2,"NM",23,0)
A1AE HELP OPTION DEL NR PATCH^^0
"BLD",9345,"KRN",9.2,"NM",24,0)
A1AE HELP OPTION DEL PGK REL^^0
"BLD",9345,"KRN",9.2,"NM",25,0)
A1AE HELP OPTION DISPLAY PATCH^^0
"BLD",9345,"KRN",9.2,"NM",26,0)
A1AE HELP OPTION DSPL NOT REL^^0
"BLD",9345,"KRN",9.2,"NM",27,0)
A1AE HELP OPTION EDIT PATCH^^0
"BLD",9345,"KRN",9.2,"NM",28,0)
A1AE HELP OPTION EDIT PGK REL^^0
"BLD",9345,"KRN",9.2,"NM",29,0)
A1AE HELP OPTION EDIT PKG REL^^0
"BLD",9345,"KRN",9.2,"NM",30,0)
A1AE HELP OPTION EXPORT PATCH^^0
"BLD",9345,"KRN",9.2,"NM",31,0)
A1AE HELP OPTION EXT DISPLAY^^0
"BLD",9345,"KRN",9.2,"NM",32,0)
A1AE HELP OPTION FULL SUMM^^0
"BLD",9345,"KRN",9.2,"NM",33,0)
A1AE HELP OPTION FWD NOT REL^^0
"BLD",9345,"KRN",9.2,"NM",34,0)
A1AE HELP OPTION FWD RELEASED^^0
"BLD",9345,"KRN",9.2,"NM",35,0)
A1AE HELP OPTION LIST USERS^^0
"BLD",9345,"KRN",9.2,"NM",36,0)
A1AE HELP OPTION PACKMAN MSG^^0
"BLD",9345,"KRN",9.2,"NM",37,0)
A1AE HELP OPTION PATCH STREAMS^^0
"BLD",9345,"KRN",9.2,"NM",38,0)
A1AE HELP OPTION PGK RELEASE^^0
"BLD",9345,"KRN",9.2,"NM",39,0)
A1AE HELP OPTION PKG NOTIFY^^0
"BLD",9345,"KRN",9.2,"NM",40,0)
A1AE HELP OPTION REL SUMM RPT^^0
"BLD",9345,"KRN",9.2,"NM",41,0)
A1AE HELP OPTION RELEASE PATCH^^0
"BLD",9345,"KRN",9.2,"NM",42,0)
A1AE HELP OPTION RELEASED RPT^^0
"BLD",9345,"KRN",9.2,"NM",43,0)
A1AE HELP OPTION RT OVERLAP^^0
"BLD",9345,"KRN",9.2,"NM",44,0)
A1AE HELP OPTION SEC BY DATE^^0
"BLD",9345,"KRN",9.2,"NM",45,0)
A1AE HELP OPTION SINGLE IMPORT^^0
"BLD",9345,"KRN",9.2,"NM",46,0)
A1AE HELP OPTION SUMMARY ALL^^0
"BLD",9345,"KRN",9.2,"NM",47,0)
A1AE HELP OPTION SUMMARY SEC^^0
"BLD",9345,"KRN",9.2,"NM",48,0)
A1AE HELP OPTION TREE IMPORT^^0
"BLD",9345,"KRN",9.2,"NM",49,0)
A1AE HELP OPTION UNDER DEV RPT^^0
"BLD",9345,"KRN",9.2,"NM",50,0)
A1AE HELP OPTION ALL REL SUMM^^0
"BLD",9345,"KRN",9.2,"NM",51,0)
A1AE HELP OPTION COMPL LISTING^^0
"BLD",9345,"KRN",9.2,"NM",52,0)
A1AE HELP OPTION COMPL SUM RPT^^0
"BLD",9345,"KRN",9.2,"NM",53,0)
A1AE HELP OPTION DET RPT REL^^0
"BLD",9345,"KRN",9.2,"NM",54,0)
A1AE HELP OPTION DOCUMENTATION^^0
"BLD",9345,"KRN",9.2,"NM",55,0)
A1AE HELP OPTION NEW NUMBER^^0
"BLD",9345,"KRN",9.2,"NM",56,0)
A1AE HELP OPTION NEW PATCHES^^0
"BLD",9345,"KRN",9.2,"NM",57,0)
A1AE HELP OPTION REL DETAIL^^0
"BLD",9345,"KRN",9.2,"NM",58,0)
A1AE HELP OPTION REL SUMMARY^^0
"BLD",9345,"KRN",9.2,"NM",59,0)
A1AE HELP OPTION ROUTINE INQ^^0
"BLD",9345,"KRN",9.2,"NM",60,0)
A1AE HELP OPTION SET PRINTED^^0
"BLD",9345,"KRN",9.2,"NM",61,0)
A1AE HELP OPTION SHOW RELAT^^0
"BLD",9345,"KRN",9.2,"NM",62,0)
A1AE HELP OPTION TEST SCAN^^0
"BLD",9345,"KRN",9.2,"NM",63,0)
A1AE HELP OPTION UNDER DEV LST^^0
"BLD",9345,"KRN",9.2,"NM",64,0)
A1AE HELP OPTION UNDER DEV VER^^0
"BLD",9345,"KRN",9.2,"NM",65,0)
A1AE CHNG SITE SUBSCR^^0
"BLD",9345,"KRN",9.2,"NM",66,0)
A1AE EDIT PATCH STRM HX^^0
"BLD",9345,"KRN",9.2,"NM","B","A1AE CHNG SITE SUBSCR",65)

"BLD",9345,"KRN",9.2,"NM","B","A1AE EDIT PATCH STRM HX",66)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP MENU DEVELOPER",1)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP MENU IMPORT",2)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP MENU PACKAGE",3)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP MENU PATCH MGR",4)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP MENU PKG MGT",5)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP MENU SEC REPORTS",6)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP MENU SUPPORT",7)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP MENU USER",8)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP MENU VERIFIER",9)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION ADD PACKAGE",10)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION ADD PATCH",11)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION ADD PGK REL",12)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION ALL REL DET",13)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION ALL REL SUMM",50)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION ALL SECONDARY",14)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION ALLOCATE KEY",15)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION AUTH USERS",16)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION COMP DATE DSP",17)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION COMP DATE EDT",18)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION COMP DATE PRT",19)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION COMP SUMM PKG",20)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION COMPL LISTING",51)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION COMPL NOT REL",21)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION COMPL SUM RPT",52)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION COPY PATCH",22)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION DEL NR PATCH",23)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION DEL PGK REL",24)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION DET RPT REL",53)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION DISPLAY PATCH",25)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION DOCUMENTATION",54)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION DSPL NOT REL",26)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION EDIT PATCH",27)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION EDIT PGK REL",28)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION EDIT PKG REL",29)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION EXPORT PATCH",30)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION EXT DISPLAY",31)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION FULL SUMM",32)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION FWD NOT REL",33)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION FWD RELEASED",34)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION LIST USERS",35)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION NEW NUMBER",55)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION NEW PATCHES",56)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION PACKMAN MSG",36)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION PATCH STREAMS",37)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION PGK RELEASE",38)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION PKG NOTIFY",39)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION REL DETAIL",57)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION REL SUMM RPT",40)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION REL SUMMARY",58)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION RELEASE PATCH",41)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION RELEASED RPT",42)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION ROUTINE INQ",59)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION RT OVERLAP",43)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION SEC BY DATE",44)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION SET PRINTED",60)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION SHOW RELAT",61)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION SINGLE IMPORT",45)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION SUMMARY ALL",46)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION SUMMARY SEC",47)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION TEST SCAN",62)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION TREE IMPORT",48)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION UNDER DEV LST",63)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION UNDER DEV RPT",49)

"BLD",9345,"KRN",9.2,"NM","B","A1AE HELP OPTION UNDER DEV VER",64)

"BLD",9345,"KRN",9.8,0)
9.8
"BLD",9345,"KRN",9.8,"NM",0)
^9.68A^110^85
"BLD",9345,"KRN",9.8,"NM",2,0)
A1AEAU^^0^B24270356
"BLD",9345,"KRN",9.8,"NM",3,0)
A1AECL1^^0^B16811729
"BLD",9345,"KRN",9.8,"NM",4,0)
A1AECOPD^^0^B24688471
"BLD",9345,"KRN",9.8,"NM",5,0)
A1AECOPR^^0^B27532901
"BLD",9345,"KRN",9.8,"NM",6,0)
A1AECOPY^^0^B27327351
"BLD",9345,"KRN",9.8,"NM",7,0)
A1AEHSVR^^0^B9819035
"BLD",9345,"KRN",9.8,"NM",8,0)
A1AEKEY^^0^B22612335
"BLD",9345,"KRN",9.8,"NM",10,0)
A1AEM^^0^B44398882
"BLD",9345,"KRN",9.8,"NM",11,0)
A1AEM1^^0^B60911745
"BLD",9345,"KRN",9.8,"NM",12,0)
A1AEM2^^0^B10308899
"BLD",9345,"KRN",9.8,"NM",13,0)
A1AEMAL^^0^B48135569
"BLD",9345,"KRN",9.8,"NM",14,0)
A1AEMAL1^^0^B26664026
"BLD",9345,"KRN",9.8,"NM",15,0)
A1AEMGR^^0^B11186398
"BLD",9345,"KRN",9.8,"NM",19,0)
A1AEPB1^^0^B14446124
"BLD",9345,"KRN",9.8,"NM",22,0)
A1AEPH1^^0^B48225759
"BLD",9345,"KRN",9.8,"NM",23,0)
A1AEPH2^^0^B126703731
"BLD",9345,"KRN",9.8,"NM",24,0)
A1AEPH3^^0^B9393637
"BLD",9345,"KRN",9.8,"NM",25,0)
A1AEPH4^^0^B15232947
"BLD",9345,"KRN",9.8,"NM",26,0)
A1AEPH5^^0^B9382626
"BLD",9345,"KRN",9.8,"NM",27,0)
A1AEPH6^^0^B22952338
"BLD",9345,"KRN",9.8,"NM",29,0)
A1AEPH8^^0^B106406810
"BLD",9345,"KRN",9.8,"NM",31,0)
A1AEPHS^^0^B279740285
"BLD",9345,"KRN",9.8,"NM",34,0)
A1AEPK^^0^B51078036
"BLD",9345,"KRN",9.8,"NM",36,0)
A1AERCON^^0^B6433154
"BLD",9345,"KRN",9.8,"NM",37,0)
A1AERD^^0^B4885631
"BLD",9345,"KRN",9.8,"NM",38,0)
A1AESP^^0^B26563239
"BLD",9345,"KRN",9.8,"NM",40,0)
A1AEUTL^^0^B268932974
"BLD",9345,"KRN",9.8,"NM",41,0)
A1AEUTL1^^0^B12588327
"BLD",9345,"KRN",9.8,"NM",42,0)
A1AEUTL2^^0^B16114599
"BLD",9345,"KRN",9.8,"NM",44,0)
A1AEVP^^0^B32575622
"BLD",9345,"KRN",9.8,"NM",45,0)
A1AEVP1^^0^B8230298
"BLD",9345,"KRN",9.8,"NM",46,0)
A1AEZCON^^0^B11798962
"BLD",9345,"KRN",9.8,"NM",47,0)
A1AEZTST^^0^B2731603
"BLD",9345,"KRN",9.8,"NM",48,0)
A1AEK2M^^0^B232688588
"BLD",9345,"KRN",9.8,"NM",49,0)
A1AEK2M0^^0^B242933845
"BLD",9345,"KRN",9.8,"NM",50,0)
A1AEK2M1^^0^B26219651
"BLD",9345,"KRN",9.8,"NM",51,0)
A1AEK2M2^^0^B41222210
"BLD",9345,"KRN",9.8,"NM",52,0)
A1AEK2MT^^0^B47328891
"BLD",9345,"KRN",9.8,"NM",54,0)
A1AEUT1^^0^B196291289
"BLD",9345,"KRN",9.8,"NM",55,0)
A1AEUT2^^0^B105106164
"BLD",9345,"KRN",9.8,"NM",56,0)
A1AEPSVR^^0^B237440248
"BLD",9345,"KRN",9.8,"NM",57,0)
A1AEM2K^^0^B55230631
"BLD",9345,"KRN",9.8,"NM",58,0)
A1AEK2V0^^0^B67773739
"BLD",9345,"KRN",9.8,"NM",59,0)
A1AEK2VC^^0^B133350061
"BLD",9345,"KRN",9.8,"NM",60,0)
A1AEOS^^0^B5762396
"BLD",9345,"KRN",9.8,"NM",61,0)
A1AEK2M3^^0^B13955888
"BLD",9345,"KRN",9.8,"NM",62,0)
A1AEPHS1^^0^B3482018
"BLD",9345,"KRN",9.8,"NM",63,0)
A1AEUPS1^^0^B54027214
"BLD",9345,"KRN",9.8,"NM",64,0)
A1AEUPS2^^0^B114795891
"BLD",9345,"KRN",9.8,"NM",65,0)
A1AEDD1^^0^B8373863
"BLD",9345,"KRN",9.8,"NM",66,0)
A1AEUDD^^0^B20611297
"BLD",9345,"KRN",9.8,"NM",67,0)
A1AEF1^^0^B112078132
"BLD",9345,"KRN",9.8,"NM",68,0)
A1AEF2^^0^B13458985
"BLD",9345,"KRN",9.8,"NM",69,0)
A1AEF3^^0^B91532031
"BLD",9345,"KRN",9.8,"NM",70,0)
A1AEF4^^0^B4694624
"BLD",9345,"KRN",9.8,"NM",71,0)
A1AEF5^^0^B91418133
"BLD",9345,"KRN",9.8,"NM",72,0)
A1AEUF1^^0^B187582876
"BLD",9345,"KRN",9.8,"NM",73,0)
A1AEUF1A^^0^B57870181
"BLD",9345,"KRN",9.8,"NM",74,0)
A1AEUF1B^^0^B198266809
"BLD",9345,"KRN",9.8,"NM",75,0)
A1AEUF2^^0^B18115754
"BLD",9345,"KRN",9.8,"NM",76,0)
A1AEUF3^^0^B12556837
"BLD",9345,"KRN",9.8,"NM",77,0)
A1AEUF4^^0^B126061421
"BLD",9345,"KRN",9.8,"NM",78,0)
A1AEUF5^^0^B209413302
"BLD",9345,"KRN",9.8,"NM",79,0)
A1AEUF5A^^0^B68204579
"BLD",9345,"KRN",9.8,"NM",80,0)
A1AEUF5B^^0^B186523669
"BLD",9345,"KRN",9.8,"NM",81,0)
A1AEUF5C^^0^B46863553
"BLD",9345,"KRN",9.8,"NM",84,0)
A1AEK3^^0^B181435108
"BLD",9345,"KRN",9.8,"NM",85,0)
A1AEUK3^^0^B268297865
"BLD",9345,"KRN",9.8,"NM",86,0)
A1AEUALL^^0^B35197964
"BLD",9345,"KRN",9.8,"NM",87,0)
A1AESPLT^^0^B125843207
"BLD",9345,"KRN",9.8,"NM",88,0)
A1AEUSPL^^0^B9585934
"BLD",9345,"KRN",9.8,"NM",89,0)
A1AEBLD^^0^B49735027
"BLD",9345,"KRN",9.8,"NM",90,0)
A1AEUBLD^^0^B123561282
"BLD",9345,"KRN",9.8,"NM",91,0)
A1AEUBL1^^0^B146587680
"BLD",9345,"KRN",9.8,"NM",96,0)
A1AEUT3^^0^B15854129
"BLD",9345,"KRN",9.8,"NM",97,0)
A1AEUT4^^0^B62809203
"BLD",9345,"KRN",9.8,"NM",102,0)
A1AEUTLC^^0^B35483202
"BLD",9345,"KRN",9.8,"NM",103,0)
A1AEUF5D^^0^B58991560
"BLD",9345,"KRN",9.8,"NM",104,0)
A1AEUF5E^^0^B35624611
"BLD",9345,"KRN",9.8,"NM",105,0)
A1AEP^^0^B21231210
"BLD",9345,"KRN",9.8,"NM",106,0)
A1AEUK1^^0^B167715864
"BLD",9345,"KRN",9.8,"NM",107,0)
A1AEUK2^^0^B265577528
"BLD",9345,"KRN",9.8,"NM",108,0)
A1AEPHD^^0^B70531362
"BLD",9345,"KRN",9.8,"NM",109,0)
A1AEK1^^0^B105446011
"BLD",9345,"KRN",9.8,"NM",110,0)
A1AEK2^^0^B98333709
"BLD",9345,"KRN",9.8,"NM","B","A1AEAU",2)

"BLD",9345,"KRN",9.8,"NM","B","A1AEBLD",89)

"BLD",9345,"KRN",9.8,"NM","B","A1AECL1",3)

"BLD",9345,"KRN",9.8,"NM","B","A1AECOPD",4)

"BLD",9345,"KRN",9.8,"NM","B","A1AECOPR",5)

"BLD",9345,"KRN",9.8,"NM","B","A1AECOPY",6)

"BLD",9345,"KRN",9.8,"NM","B","A1AEDD1",65)

"BLD",9345,"KRN",9.8,"NM","B","A1AEF1",67)

"BLD",9345,"KRN",9.8,"NM","B","A1AEF2",68)

"BLD",9345,"KRN",9.8,"NM","B","A1AEF3",69)

"BLD",9345,"KRN",9.8,"NM","B","A1AEF4",70)

"BLD",9345,"KRN",9.8,"NM","B","A1AEF5",71)

"BLD",9345,"KRN",9.8,"NM","B","A1AEHSVR",7)

"BLD",9345,"KRN",9.8,"NM","B","A1AEK1",109)

"BLD",9345,"KRN",9.8,"NM","B","A1AEK2",110)

"BLD",9345,"KRN",9.8,"NM","B","A1AEK2M",48)

"BLD",9345,"KRN",9.8,"NM","B","A1AEK2M0",49)

"BLD",9345,"KRN",9.8,"NM","B","A1AEK2M1",50)

"BLD",9345,"KRN",9.8,"NM","B","A1AEK2M2",51)

"BLD",9345,"KRN",9.8,"NM","B","A1AEK2M3",61)

"BLD",9345,"KRN",9.8,"NM","B","A1AEK2MT",52)

"BLD",9345,"KRN",9.8,"NM","B","A1AEK2V0",58)

"BLD",9345,"KRN",9.8,"NM","B","A1AEK2VC",59)

"BLD",9345,"KRN",9.8,"NM","B","A1AEK3",84)

"BLD",9345,"KRN",9.8,"NM","B","A1AEKEY",8)

"BLD",9345,"KRN",9.8,"NM","B","A1AEM",10)

"BLD",9345,"KRN",9.8,"NM","B","A1AEM1",11)

"BLD",9345,"KRN",9.8,"NM","B","A1AEM2",12)

"BLD",9345,"KRN",9.8,"NM","B","A1AEM2K",57)

"BLD",9345,"KRN",9.8,"NM","B","A1AEMAL",13)

"BLD",9345,"KRN",9.8,"NM","B","A1AEMAL1",14)

"BLD",9345,"KRN",9.8,"NM","B","A1AEMGR",15)

"BLD",9345,"KRN",9.8,"NM","B","A1AEOS",60)

"BLD",9345,"KRN",9.8,"NM","B","A1AEP",105)

"BLD",9345,"KRN",9.8,"NM","B","A1AEPB1",19)

"BLD",9345,"KRN",9.8,"NM","B","A1AEPH1",22)

"BLD",9345,"KRN",9.8,"NM","B","A1AEPH2",23)

"BLD",9345,"KRN",9.8,"NM","B","A1AEPH3",24)

"BLD",9345,"KRN",9.8,"NM","B","A1AEPH4",25)

"BLD",9345,"KRN",9.8,"NM","B","A1AEPH5",26)

"BLD",9345,"KRN",9.8,"NM","B","A1AEPH6",27)

"BLD",9345,"KRN",9.8,"NM","B","A1AEPH8",29)

"BLD",9345,"KRN",9.8,"NM","B","A1AEPHD",108)

"BLD",9345,"KRN",9.8,"NM","B","A1AEPHS",31)

"BLD",9345,"KRN",9.8,"NM","B","A1AEPHS1",62)

"BLD",9345,"KRN",9.8,"NM","B","A1AEPK",34)

"BLD",9345,"KRN",9.8,"NM","B","A1AEPSVR",56)

"BLD",9345,"KRN",9.8,"NM","B","A1AERCON",36)

"BLD",9345,"KRN",9.8,"NM","B","A1AERD",37)

"BLD",9345,"KRN",9.8,"NM","B","A1AESP",38)

"BLD",9345,"KRN",9.8,"NM","B","A1AESPLT",87)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUALL",86)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUBL1",91)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUBLD",90)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUDD",66)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUF1",72)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUF1A",73)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUF1B",74)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUF2",75)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUF3",76)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUF4",77)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUF5",78)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUF5A",79)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUF5B",80)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUF5C",81)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUF5D",103)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUF5E",104)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUK1",106)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUK2",107)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUK3",85)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUPS1",63)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUPS2",64)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUSPL",88)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUT1",54)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUT2",55)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUT3",96)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUT4",97)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUTL",40)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUTL1",41)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUTL2",42)

"BLD",9345,"KRN",9.8,"NM","B","A1AEUTLC",102)

"BLD",9345,"KRN",9.8,"NM","B","A1AEVP",44)

"BLD",9345,"KRN",9.8,"NM","B","A1AEVP1",45)

"BLD",9345,"KRN",9.8,"NM","B","A1AEZCON",46)

"BLD",9345,"KRN",9.8,"NM","B","A1AEZTST",47)

"BLD",9345,"KRN",19,0)
19
"BLD",9345,"KRN",19,"NM",0)
^9.68A^79^77
"BLD",9345,"KRN",19,"NM",1,0)
A1AE AUTHORIZED DOMAINS^^0
"BLD",9345,"KRN",19,"NM",2,0)
A1AE COMPLIANCE COMMENT PRT^^0
"BLD",9345,"KRN",19,"NM",3,0)
A1AE COMPLIANCE DISPLAY^^0
"BLD",9345,"KRN",19,"NM",4,0)
A1AE COMPLIANCE EDIT^^0
"BLD",9345,"KRN",19,"NM",5,0)
A1AE COPY PATCH^^0
"BLD",9345,"KRN",19,"NM",6,0)
A1AE DEV CREATE^^0
"BLD",9345,"KRN",19,"NM",7,0)
A1AE DEV FORWARD^^0
"BLD",9345,"KRN",19,"NM",8,0)
A1AE DEVELOPER^^0
"BLD",9345,"KRN",19,"NM",9,0)
A1AE DISCOMPH^^0
"BLD",9345,"KRN",19,"NM",10,0)
A1AE FORWARD^^0
"BLD",9345,"KRN",19,"NM",11,0)
A1AE FULL SUMMARY BY DATE^^0
"BLD",9345,"KRN",19,"NM",12,0)
A1AE HFS CHKSUM SVR^^0
"BLD",9345,"KRN",19,"NM",13,0)
A1AE MGR^^0
"BLD",9345,"KRN",19,"NM",14,0)
A1AE MGRADD^^0
"BLD",9345,"KRN",19,"NM",15,0)
A1AE PATCHDOC^^0
"BLD",9345,"KRN",19,"NM",16,0)
A1AE PBADD^^0
"BLD",9345,"KRN",19,"NM",17,0)
A1AE PBDEL^^0
"BLD",9345,"KRN",19,"NM",18,0)
A1AE PBEDIT^^0
"BLD",9345,"KRN",19,"NM",19,0)
A1AE PBPROBLEM^^0
"BLD",9345,"KRN",19,"NM",20,0)
A1AE PBPRT^^1^
"BLD",9345,"KRN",19,"NM",21,0)
A1AE PBRESREV^^0
"BLD",9345,"KRN",19,"NM",22,0)
A1AE PHADD^^0
"BLD",9345,"KRN",19,"NM",23,0)
A1AE PHDEL^^0
"BLD",9345,"KRN",19,"NM",24,0)
A1AE PHEDIT^^0
"BLD",9345,"KRN",19,"NM",25,0)
A1AE PHEXTEND^^0
"BLD",9345,"KRN",19,"NM",26,0)
A1AE PHVER^^0
"BLD",9345,"KRN",19,"NM",27,0)
A1AE PKADD^^0
"BLD",9345,"KRN",19,"NM",28,0)
A1AE PKDEL^^0
"BLD",9345,"KRN",19,"NM",29,0)
A1AE PKEDIT^^0
"BLD",9345,"KRN",19,"NM",30,0)
A1AE PKGEDIT^^0
"BLD",9345,"KRN",19,"NM",31,0)
A1AE PKGLIST^^0
"BLD",9345,"KRN",19,"NM",32,0)
A1AE PKGMGT^^0
"BLD",9345,"KRN",19,"NM",33,0)
A1AE PKGPRT^^0
"BLD",9345,"KRN",19,"NM",34,0)
A1AE PKGSEL^^0
"BLD",9345,"KRN",19,"NM",35,0)
A1AE PKMENU^^0
"BLD",9345,"KRN",19,"NM",36,0)
A1AE PKVER^^0
"BLD",9345,"KRN",19,"NM",38,0)
A1AE PRT SUM DT ORG^^0
"BLD",9345,"KRN",19,"NM",39,0)
A1AE PRTCNRP^^0
"BLD",9345,"KRN",19,"NM",40,0)
A1AE PRTCOMDETDT^^0
"BLD",9345,"KRN",19,"NM",41,0)
A1AE PRTCOMPH^^0
"BLD",9345,"KRN",19,"NM",42,0)
A1AE PRTCOMPHDTE^^0
"BLD",9345,"KRN",19,"NM",43,0)
A1AE PRTCOMPHVER^^0
"BLD",9345,"KRN",19,"NM",44,0)
A1AE PRTCOMSUMDT^^0
"BLD",9345,"KRN",19,"NM",45,0)
A1AE PRTDETDT ORG^^0
"BLD",9345,"KRN",19,"NM",46,0)
A1AE PRTNEWPH^^0
"BLD",9345,"KRN",19,"NM",47,0)
A1AE PRTNEWPHNUM^^0
"BLD",9345,"KRN",19,"NM",48,0)
A1AE PRTPHA^^0
"BLD",9345,"KRN",19,"NM",49,0)
A1AE PRTPHD^^0
"BLD",9345,"KRN",19,"NM",50,0)
A1AE PRTPHS^^0
"BLD",9345,"KRN",19,"NM",51,0)
A1AE PRTPHS ORG^^0
"BLD",9345,"KRN",19,"NM",52,0)
A1AE PRTUDP^^0
"BLD",9345,"KRN",19,"NM",53,0)
A1AE PRTUDVPH^^0
"BLD",9345,"KRN",19,"NM",54,0)
A1AE PRTUDVPH VER^^0
"BLD",9345,"KRN",19,"NM",55,0)
A1AE PRTVRPH^^0
"BLD",9345,"KRN",19,"NM",56,0)
A1AE RELEASE SUMMARY^^0
"BLD",9345,"KRN",19,"NM",57,0)
A1AE ROUTINE INQUIRE^^0
"BLD",9345,"KRN",19,"NM",59,0)
A1AE ROUTINES THAT OVERLAP^^0
"BLD",9345,"KRN",19,"NM",60,0)
A1AE SERVER VERIFIED^^0
"BLD",9345,"KRN",19,"NM",61,0)
A1AE SUPPORT^^0
"BLD",9345,"KRN",19,"NM",62,0)
A1AE TEST SCANNER^^0
"BLD",9345,"KRN",19,"NM",63,0)
A1AE USER^^0
"BLD",9345,"KRN",19,"NM",64,0)
A1AE VERIFIER^^0
"BLD",9345,"KRN",19,"NM",65,0)
A1AE XUSEC^^0
"BLD",9345,"KRN",19,"NM",66,0)
A1AE LOAD RELEASED PATCH^^0
"BLD",9345,"KRN",19,"NM",67,0)
A1AE EXPORT PATCH TO HFS^^0
"BLD",9345,"KRN",19,"NM",68,0)
A1AE IMPORT MENU^^0
"BLD",9345,"KRN",19,"NM",69,0)
A1AE IMPORT RECURSIVE^^0
"BLD",9345,"KRN",19,"NM",70,0)
A1AE IMPORT SINGLE DIR^^0
"BLD",9345,"KRN",19,"NM",71,0)
A1AE SHOW PATCH RELATIONSHIPS^^0
"BLD",9345,"KRN",19,"NM",72,0)
A1AE PRT BY SEC ST BY DATE SUM^^0
"BLD",9345,"KRN",19,"NM",73,0)
A1AE PRTPHS SEC^^0
"BLD",9345,"KRN",19,"NM",74,0)
A1AE SEC REPORTS^^0
"BLD",9345,"KRN",19,"NM",75,0)
A1AE PRTPHA SEC^^0
"BLD",9345,"KRN",19,"NM",76,0)
A1AEFMSC^^0
"BLD",9345,"KRN",19,"NM",77,0)
A1AE ADD/EDIT PATCH STREAMS^^0
"BLD",9345,"KRN",19,"NM",78,0)
A1AE CHANGE SITE SUBSCRIPTION^^0
"BLD",9345,"KRN",19,"NM",79,0)
A1AENEWSTRM^^0
"BLD",9345,"KRN",19,"NM","B","A1AE ADD/EDIT PATCH STREAMS",77)

"BLD",9345,"KRN",19,"NM","B","A1AE AUTHORIZED DOMAINS",1)

"BLD",9345,"KRN",19,"NM","B","A1AE CHANGE SITE SUBSCRIPTION",78)

"BLD",9345,"KRN",19,"NM","B","A1AE COMPLIANCE COMMENT PRT",2)

"BLD",9345,"KRN",19,"NM","B","A1AE COMPLIANCE DISPLAY",3)

"BLD",9345,"KRN",19,"NM","B","A1AE COMPLIANCE EDIT",4)

"BLD",9345,"KRN",19,"NM","B","A1AE COPY PATCH",5)

"BLD",9345,"KRN",19,"NM","B","A1AE DEV CREATE",6)

"BLD",9345,"KRN",19,"NM","B","A1AE DEV FORWARD",7)

"BLD",9345,"KRN",19,"NM","B","A1AE DEVELOPER",8)

"BLD",9345,"KRN",19,"NM","B","A1AE DISCOMPH",9)

"BLD",9345,"KRN",19,"NM","B","A1AE EXPORT PATCH TO HFS",67)

"BLD",9345,"KRN",19,"NM","B","A1AE FORWARD",10)

"BLD",9345,"KRN",19,"NM","B","A1AE FULL SUMMARY BY DATE",11)

"BLD",9345,"KRN",19,"NM","B","A1AE HFS CHKSUM SVR",12)

"BLD",9345,"KRN",19,"NM","B","A1AE IMPORT MENU",68)

"BLD",9345,"KRN",19,"NM","B","A1AE IMPORT RECURSIVE",69)

"BLD",9345,"KRN",19,"NM","B","A1AE IMPORT SINGLE DIR",70)

"BLD",9345,"KRN",19,"NM","B","A1AE LOAD RELEASED PATCH",66)

"BLD",9345,"KRN",19,"NM","B","A1AE MGR",13)

"BLD",9345,"KRN",19,"NM","B","A1AE MGRADD",14)

"BLD",9345,"KRN",19,"NM","B","A1AE PATCHDOC",15)

"BLD",9345,"KRN",19,"NM","B","A1AE PBADD",16)

"BLD",9345,"KRN",19,"NM","B","A1AE PBDEL",17)

"BLD",9345,"KRN",19,"NM","B","A1AE PBEDIT",18)

"BLD",9345,"KRN",19,"NM","B","A1AE PBPROBLEM",19)

"BLD",9345,"KRN",19,"NM","B","A1AE PBPRT",20)

"BLD",9345,"KRN",19,"NM","B","A1AE PBRESREV",21)

"BLD",9345,"KRN",19,"NM","B","A1AE PHADD",22)

"BLD",9345,"KRN",19,"NM","B","A1AE PHDEL",23)

"BLD",9345,"KRN",19,"NM","B","A1AE PHEDIT",24)

"BLD",9345,"KRN",19,"NM","B","A1AE PHEXTEND",25)

"BLD",9345,"KRN",19,"NM","B","A1AE PHVER",26)

"BLD",9345,"KRN",19,"NM","B","A1AE PKADD",27)

"BLD",9345,"KRN",19,"NM","B","A1AE PKDEL",28)

"BLD",9345,"KRN",19,"NM","B","A1AE PKEDIT",29)

"BLD",9345,"KRN",19,"NM","B","A1AE PKGEDIT",30)

"BLD",9345,"KRN",19,"NM","B","A1AE PKGLIST",31)

"BLD",9345,"KRN",19,"NM","B","A1AE PKGMGT",32)

"BLD",9345,"KRN",19,"NM","B","A1AE PKGPRT",33)

"BLD",9345,"KRN",19,"NM","B","A1AE PKGSEL",34)

"BLD",9345,"KRN",19,"NM","B","A1AE PKMENU",35)

"BLD",9345,"KRN",19,"NM","B","A1AE PKVER",36)

"BLD",9345,"KRN",19,"NM","B","A1AE PRT BY SEC ST BY DATE SUM",72)

"BLD",9345,"KRN",19,"NM","B","A1AE PRT SUM DT ORG",38)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTCNRP",39)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTCOMDETDT",40)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTCOMPH",41)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTCOMPHDTE",42)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTCOMPHVER",43)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTCOMSUMDT",44)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTDETDT ORG",45)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTNEWPH",46)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTNEWPHNUM",47)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTPHA",48)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTPHA SEC",75)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTPHD",49)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTPHS",50)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTPHS ORG",51)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTPHS SEC",73)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTUDP",52)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTUDVPH",53)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTUDVPH VER",54)

"BLD",9345,"KRN",19,"NM","B","A1AE PRTVRPH",55)

"BLD",9345,"KRN",19,"NM","B","A1AE RELEASE SUMMARY",56)

"BLD",9345,"KRN",19,"NM","B","A1AE ROUTINE INQUIRE",57)

"BLD",9345,"KRN",19,"NM","B","A1AE ROUTINES THAT OVERLAP",59)

"BLD",9345,"KRN",19,"NM","B","A1AE SEC REPORTS",74)

"BLD",9345,"KRN",19,"NM","B","A1AE SERVER VERIFIED",60)

"BLD",9345,"KRN",19,"NM","B","A1AE SHOW PATCH RELATIONSHIPS",71)

"BLD",9345,"KRN",19,"NM","B","A1AE SUPPORT",61)

"BLD",9345,"KRN",19,"NM","B","A1AE TEST SCANNER",62)

"BLD",9345,"KRN",19,"NM","B","A1AE USER",63)

"BLD",9345,"KRN",19,"NM","B","A1AE VERIFIER",64)

"BLD",9345,"KRN",19,"NM","B","A1AE XUSEC",65)

"BLD",9345,"KRN",19,"NM","B","A1AEFMSC",76)

"BLD",9345,"KRN",19,"NM","B","A1AENEWSTRM",79)

"BLD",9345,"KRN",19.1,0)
19.1
"BLD",9345,"KRN",19.1,"NM",0)
^9.68A^9^9
"BLD",9345,"KRN",19.1,"NM",1,0)
A1AE COMPDATE^^0
"BLD",9345,"KRN",19.1,"NM",2,0)
A1AE DEVELOPER^^0
"BLD",9345,"KRN",19.1,"NM",3,0)
A1AE MGR^^0
"BLD",9345,"KRN",19.1,"NM",4,0)
A1AE PHVER^^0
"BLD",9345,"KRN",19.1,"NM",5,0)
A1AE PKGEDIT^^0
"BLD",9345,"KRN",19.1,"NM",6,0)
A1AE SCAN MESSAGE^^0
"BLD",9345,"KRN",19.1,"NM",7,0)
A1AE SUPPORT^^0
"BLD",9345,"KRN",19.1,"NM",8,0)
A1AE XUSEC^^0
"BLD",9345,"KRN",19.1,"NM",9,0)
A1AE IMPORT^^0
"BLD",9345,"KRN",19.1,"NM","B","A1AE COMPDATE",1)

"BLD",9345,"KRN",19.1,"NM","B","A1AE DEVELOPER",2)

"BLD",9345,"KRN",19.1,"NM","B","A1AE IMPORT",9)

"BLD",9345,"KRN",19.1,"NM","B","A1AE MGR",3)

"BLD",9345,"KRN",19.1,"NM","B","A1AE PHVER",4)

"BLD",9345,"KRN",19.1,"NM","B","A1AE PKGEDIT",5)

"BLD",9345,"KRN",19.1,"NM","B","A1AE SCAN MESSAGE",6)

"BLD",9345,"KRN",19.1,"NM","B","A1AE SUPPORT",7)

"BLD",9345,"KRN",19.1,"NM","B","A1AE XUSEC",8)

"BLD",9345,"KRN",101,0)
101
"BLD",9345,"KRN",409.61,0)
409.61
"BLD",9345,"KRN",771,0)
771
"BLD",9345,"KRN",779.2,0)
779.2
"BLD",9345,"KRN",870,0)
870
"BLD",9345,"KRN",8989.51,0)
8989.51
"BLD",9345,"KRN",8989.52,0)
8989.52
"BLD",9345,"KRN",8994,0)
8994
"BLD",9345,"KRN","B",.4,.4)

"BLD",9345,"KRN","B",.401,.401)

"BLD",9345,"KRN","B",.402,.402)

"BLD",9345,"KRN","B",.403,.403)

"BLD",9345,"KRN","B",.5,.5)

"BLD",9345,"KRN","B",.84,.84)

"BLD",9345,"KRN","B",3.6,3.6)

"BLD",9345,"KRN","B",3.8,3.8)

"BLD",9345,"KRN","B",9.2,9.2)

"BLD",9345,"KRN","B",9.8,9.8)

"BLD",9345,"KRN","B",19,19)

"BLD",9345,"KRN","B",19.1,19.1)

"BLD",9345,"KRN","B",101,101)

"BLD",9345,"KRN","B",409.61,409.61)

"BLD",9345,"KRN","B",771,771)

"BLD",9345,"KRN","B",779.2,779.2)

"BLD",9345,"KRN","B",870,870)

"BLD",9345,"KRN","B",8989.51,8989.51)

"BLD",9345,"KRN","B",8989.52,8989.52)

"BLD",9345,"KRN","B",8994,8994)

"BLD",9345,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9345,"QUES",0)
^9.62^^
"DATA",11005.2,1,0)
u^UNDER DEVELOPMENT^Under Development^^^^Display Patch^1
"DATA",11005.2,2,0)
c^COMPLETED/UNVERIFIED^Completed/Unreleased^A1AE COMPLETED PATCH^the CS team^COMPLETED/NOTRELEASED^Display a Completed/NotReleased Patch^0
"DATA",11005.2,3,0)
v^VERIFIED^Released^A1AE VERIFIED PATCH^select users^^New Patch Report^0
"DATA",11005.2,4,0)
e^ENTERED IN ERROR^Entered in Error^A1AE ENTERED IN ERROR PATCH^users who have viewed this patch^^Display Patch^0
"DATA",11005.2,5,0)
r^RETIRED^Retired^A1AE RETIRED PATCH^users who have viewed this patch^^Display Patch^0
"DATA",11005.2,6,0)
x^cancel^Canceled^^^^Display Patch^0
"DATA",11005.2,7,0)
i2^IN REVIEW^In Review^A1AE LOAD RELEASED PATCH^the reviewers^^Extended (DIQ) Display of a Patch^1
"DATA",11005.2,8,0)
d2^SEC DEVELOPMENT^Secondary Development^A1AE SEC DEVELOPMENT PATCH^the developers^SECONDARY DEVELOPED^Extended (DIQ) Display of a Patch^1
"DATA",11005.2,9,0)
s2^SEC COMPLETION^Secondary Completion^A1AE SEC COMPLETION PATCH^the CS team^SECONDARY COMPLETION^Display a Completed/NotReleased Patch^0
"DATA",11005.2,10,0)
r2^SEC RELEASE^Secondary Released^A1AE SEC RELEASE PATCH^select users^SECONDARY VERIFIED^New Patch Report^0
"DATA",11005.2,11,0)
n2^NOT FOR SEC RELEASE^Denied Secondary Release^A1AE DENIED SEC RELEASE PATCH^users who have viewed this patch^NOT FOR SECONDARY RELEASE^Extended (DIQ) Display of a Patch^0
"FIA",9.4)
PACKAGE
"FIA",9.4,0)
^DIC(9.4,
"FIA",9.4,0,0)
9.4I
"FIA",9.4,0,1)
y^y^p^^^^n^^n
"FIA",9.4,0,10)

"FIA",9.4,0,11)

"FIA",9.4,0,"RLRO")

"FIA",9.4,0,"VR")
2.5^PATCH MODULE
"FIA",9.4,9.4)
1
"FIA",9.4,9.49)
1
"FIA",9.4,9.49,1105)

"FIA",9.4,9.4901)
0
"FIA",9.4,9.49011)
0
"FIA",9.6)
BUILD
"FIA",9.6,0)
^XPD(9.6,
"FIA",9.6,0,0)
9.6I
"FIA",9.6,0,1)
y^y^p^^^^n^^n
"FIA",9.6,0,10)

"FIA",9.6,0,11)

"FIA",9.6,0,"RLRO")

"FIA",9.6,0,"VR")
2.5^PATCH MODULE
"FIA",9.6,9.6)
1
"FIA",9.6,9.6,.01)

"FIA",9.6,9.6,10)

"FIA",9.6,9.6,19)

"FIA",9.6,9.619)
0
"FIA",9.6,9.63)
1
"FIA",9.6,9.63,.01)

"FIA",9.7)
INSTALL
"FIA",9.7,0)
^XPD(9.7,
"FIA",9.7,0,0)
9.7I
"FIA",9.7,0,1)
y^y^p^^^^n^^n
"FIA",9.7,0,10)

"FIA",9.7,0,11)

"FIA",9.7,0,"RLRO")

"FIA",9.7,0,"VR")
2.5^PATCH MODULE
"FIA",9.7,9.7)
1
"FIA",9.7,9.7,.01)

"FIA",9.7,9.7,19)

"FIA",9.7,9.719)
0
"FIA",11004)
PATCH
"FIA",11004,0)
^A1AE(11004,
"FIA",11004,0,0)
11004I
"FIA",11004,0,1)
y^y^f^^^^n^^
"FIA",11004,0,10)

"FIA",11004,0,11)

"FIA",11004,0,"RLRO")

"FIA",11004,0,"VR")
2.5^PATCH MODULE
"FIA",11004,11004)
0
"FIA",11004,11004.01)
0
"FIA",11004,11004.019)
0
"FIA",11004,11004.03)
0
"FIA",11004,11004.04)
0
"FIA",11004,11004.05)
0
"FIA",11004,11004.32)
0
"FIA",11005)
DHCP PATCHES
"FIA",11005,0)
^A1AE(11005,
"FIA",11005,0,0)
11005I
"FIA",11005,0,1)
y^y^f^^^^n^^
"FIA",11005,0,10)

"FIA",11005,0,11)

"FIA",11005,0,"RLRO")

"FIA",11005,0,"VR")
2.5^PATCH MODULE
"FIA",11005,11005)
0
"FIA",11005,11005.01)
0
"FIA",11005,11005.016)
0
"FIA",11005,11005.019)
0
"FIA",11005,11005.02)
0
"FIA",11005,11005.026)
0
"FIA",11005,11005.027)
0
"FIA",11005,11005.028)
0
"FIA",11005,11005.03)
0
"FIA",11005,11005.04)
0
"FIA",11005,11005.05)
0
"FIA",11005,11005.06)
0
"FIA",11005,11005.07)
0
"FIA",11005,11005.08)
0
"FIA",11005,11005.09)
0
"FIA",11005,11005.32)
0
"FIA",11005.1)
DHCP PATCH MESSAGE
"FIA",11005.1,0)
^A1AE(11005.1,
"FIA",11005.1,0,0)
11005.1P
"FIA",11005.1,0,1)
y^y^f^^^^n
"FIA",11005.1,0,10)

"FIA",11005.1,0,11)

"FIA",11005.1,0,"RLRO")

"FIA",11005.1,0,"VR")
2.5^PATCH MODULE
"FIA",11005.1,11005.1)
0
"FIA",11005.1,11005.11)
0
"FIA",11005.2)
DHCP PATCH STATUS
"FIA",11005.2,0)
^A1AE(11005.2,
"FIA",11005.2,0,0)
11005.2
"FIA",11005.2,0,1)
y^y^f^^y^^y^m^n
"FIA",11005.2,0,10)

"FIA",11005.2,0,11)

"FIA",11005.2,0,"RLRO")

"FIA",11005.2,0,"VR")
2.5^PATCH MODULE
"FIA",11005.2,11005.2)
0
"FIA",11005.5)
DHCP HFS MESSAGE
"FIA",11005.5,0)
^A1AE(11005.5,
"FIA",11005.5,0,0)
11005.5P
"FIA",11005.5,0,1)
y^y^f^^^^n^^
"FIA",11005.5,0,10)

"FIA",11005.5,0,11)

"FIA",11005.5,0,"RLRO")

"FIA",11005.5,0,"VR")
2.5^PATCH MODULE
"FIA",11005.5,11005.5)
0
"FIA",11005.5,11005.511)
0
"FIA",11005.5,11005.521)
0
"FIA",11006)
DHCP PROBLEMS
"FIA",11006,0)
^A1AE(11006,
"FIA",11006,0,0)
11006I
"FIA",11006,0,1)
y^y^f^^^^n
"FIA",11006,0,10)

"FIA",11006,0,11)

"FIA",11006,0,"RLRO")

"FIA",11006,0,"VR")
2.5^PATCH MODULE
"FIA",11006,11006)
0
"FIA",11006,11006.01)
0
"FIA",11006,11006.02)
0
"FIA",11006,11006.03)
0
"FIA",11007)
DHCP PATCH/PROBLEM PACKAGE
"FIA",11007,0)
^A1AE(11007,
"FIA",11007,0,0)
11007PI
"FIA",11007,0,1)
y^y^f^^^^n^^
"FIA",11007,0,10)

"FIA",11007,0,11)

"FIA",11007,0,"RLRO")

"FIA",11007,0,"VR")
2.5^PATCH MODULE
"FIA",11007,11007)
0
"FIA",11007,11007.01)
0
"FIA",11007,11007.02)
0
"FIA",11007,11007.03)
0
"FIA",11007,11007.04)
0
"FIA",11007,11007.05)
0
"FIA",11007,11007.128)
0
"FIA",11007.1)
DHCP PATCH STREAM
"FIA",11007.1,0)
^A1AE(11007.1,
"FIA",11007.1,0,0)
11007.1
"FIA",11007.1,0,1)
y^y^f^^^^n^^
"FIA",11007.1,0,10)

"FIA",11007.1,0,11)

"FIA",11007.1,0,"RLRO")

"FIA",11007.1,0,"VR")
2.5^PATCH MODULE
"FIA",11007.1,11007.1)
0
"FIA",11007.1,11007.11)
0
"FIA",11007.1,11007.12)
0
"FIA",11007.1,11007.122)
0
"FIA",11007.2)
PATCH STREAM HISTORY
"FIA",11007.2,0)
^A1AE(11007.2,
"FIA",11007.2,0,0)
11007.2P
"FIA",11007.2,0,1)
y^y^f^^^^n
"FIA",11007.2,0,10)

"FIA",11007.2,0,11)

"FIA",11007.2,0,"RLRO")

"FIA",11007.2,0,"VR")
2.5^PATCH MODULE
"FIA",11007.2,11007.2)
0
"FIA",11007.2,11007.21)
0
"INIT")
A1AE2POS
"IX",9.4,9.4,"APPLDT",0)
9.4^APPLDT^Cross-reference for lookup of patch application date^R^^R^IR^W^9.4901^^^^^S
"IX",9.4,9.4,"APPLDT",.1,0)
^^2^2^3150617^
"IX",9.4,9.4,"APPLDT",.1,1,0)
This cross-reference was added for the Patch Module Client to enable 
"IX",9.4,9.4,"APPLDT",.1,2,0)
interoperability between KIDS and the Patch Module.
"IX",9.4,9.4,"APPLDT",1)
S ^DIC(9.4,"APPLDT",X(2),X(3),DA(2),DA(1),DA)=""
"IX",9.4,9.4,"APPLDT",2)
K ^DIC(9.4,"APPLDT",X(2),X(3),DA(2),DA(1),DA)
"IX",9.4,9.4,"APPLDT",2.5)
K ^DIC(9.4,"APPLDT")
"IX",9.4,9.4,"APPLDT",11.1,0)
^.114IA^4^3
"IX",9.4,9.4,"APPLDT",11.1,2,0)
2^C^^^^1
"IX",9.4,9.4,"APPLDT",11.1,2,1.5)
S X=$P(^DIC(9.4,DA(2),0),"^",2)_"*"_$P(^DIC(9.4,DA(2),22,DA(1),0),"^")_"*"_$P($P(^DIC(9.4,DA(2),22,DA(1),"PAH",DA,0),"^")," ")
"IX",9.4,9.4,"APPLDT",11.1,3,0)
1^F^9.4901^.01^30^^F
"IX",9.4,9.4,"APPLDT",11.1,4,0)
3^F^9.4901^.02^^2^F
"IX",9.6,9.6,"MBLD",0)
9.6^MBLD^Quick lookup of all builds contained in other builds^MU^^F^IR^W^9.63^^^^^LS
"IX",9.6,9.6,"MBLD",1)
S ^XPD(9.6,"MBLD",$E(X,1,60),DA(1),DA)=""
"IX",9.6,9.6,"MBLD",2)
K ^XPD(9.6,"MBLD",$E(X,1,60),DA(1),DA)
"IX",9.6,9.6,"MBLD",2.5)
K ^XPD(9.6,"MBLD")
"IX",9.6,9.6,"MBLD",11.1,0)
^.114IA^1^1
"IX",9.6,9.6,"MBLD",11.1,1,0)
1^F^9.63^.01^^1^F
"IX",9.6,9.6,"PATCH",0)
9.6^PATCH^Quick lookup of DHCP PATCHES pointers relating to this BUILD^R^^R^IR^W^9.619^^^^^LS
"IX",9.6,9.6,"PATCH",1)
S ^XPD(9.6,"PATCH",$E(X(1),1,30),X(2),DA(1),DA)=""
"IX",9.6,9.6,"PATCH",2)
K ^XPD(9.6,"PATCH",$E(X(1),1,30),X(2),DA(1),DA)
"IX",9.6,9.6,"PATCH",2.5)
K ^XPD(9.6,"PATCH")
"IX",9.6,9.6,"PATCH",11.1,0)
^.114IA^2^2
"IX",9.6,9.6,"PATCH",11.1,1,0)
1^F^9.619^.02^30^1^F
"IX",9.6,9.6,"PATCH",11.1,2,0)
2^F^9.619^.01^^2^F
"IX",9.7,9.7,"PATCH",0)
9.7^PATCH^Quick lookup of DHCP PATCHES pointer for this INSTALL^R^^R^IR^W^9.719^^^^^LS
"IX",9.7,9.7,"PATCH",1)
S ^XPD(9.7,"PATCH",$E(X(1),1,30),X(2),DA(1),DA)=""
"IX",9.7,9.7,"PATCH",2)
K ^XPD(9.7,"PATCH",$E(X(1),1,30),X(2),DA(1),DA)
"IX",9.7,9.7,"PATCH",2.5)
K ^XPD(9.7,"PATCH")
"IX",9.7,9.7,"PATCH",11.1,0)
^.114IA^2^2
"IX",9.7,9.7,"PATCH",11.1,1,0)
1^F^9.719^.02^30^1^F
"IX",9.7,9.7,"PATCH",11.1,2,0)
2^F^9.719^.01^^2^F
"IX",11004,11004,"AB",0)
11004^AB^Index used to figure out next patch numbers and walk through the patches^R^^F^IR^I^11004^^^^^S
"IX",11004,11004,"AB",1)
S ^A1AE(11004,"AB",X(2),X(3),X(4),DA)=""
"IX",11004,11004,"AB",2)
K ^A1AE(11004,"AB",X(2),X(3),X(4),DA)
"IX",11004,11004,"AB",2.5)
K ^A1AE(11004,"AB")
"IX",11004,11004,"AB",11.1,0)
^.114IA^4^4
"IX",11004,11004,"AB",11.1,1,0)
1^F^11004^.01^^^F
"IX",11004,11004,"AB",11.1,1,3)

"IX",11004,11004,"AB",11.1,2,0)
2^C^^^^1
"IX",11004,11004,"AB",11.1,2,1.5)
S X=$P(X(1),"*")
"IX",11004,11004,"AB",11.1,3,0)
3^C^^^^2
"IX",11004,11004,"AB",11.1,3,1.5)
S X=$P(X(1),"*",2)
"IX",11004,11004,"AB",11.1,4,0)
4^C^^^^3
"IX",11004,11004,"AB",11.1,4,1.5)
S X=$P(X(1),"*",3)
"IX",11004,11004,"ADERIVED",0)
11004^ADERIVED^This is used by the importer (A1AEK2M) prevent importing a patch twice.^R^^F^IR^I^11004^^^^^S
"IX",11004,11004,"ADERIVED",1)
S ^A1AE(11004,"ADERIVED",X(2),DA)=""
"IX",11004,11004,"ADERIVED",2)
K ^A1AE(11004,"ADERIVED",X(2),DA)
"IX",11004,11004,"ADERIVED",2.5)
K ^A1AE(11004,"ADERIVED")
"IX",11004,11004,"ADERIVED",11.1,0)
^.114IA^2^2
"IX",11004,11004,"ADERIVED",11.1,1,0)
1^F^11004^5.2^^^F
"IX",11004,11004,"ADERIVED",11.1,2,0)
2^C^^^^1
"IX",11004,11004,"ADERIVED",11.1,2,1.5)
S X=$$EXTERNAL^DILFD(11004,5.2,,X(1))
"IX",11004,11004,"ADERIVEDK",0)
11004^ADERIVEDK^This kills any entries in ADERIVED index when the pointed to entry is killed.^MU^^F^IR^I^11004^^^^^A
"IX",11004,11004,"ADERIVEDK",1)
Q
"IX",11004,11004,"ADERIVEDK",2)
K ^A1AE(11004,"ADERIVED",X)
"IX",11004,11004,"ADERIVEDK",2.5)
K ^A1AE(11004,"ADREIVED")
"IX",11004,11004,"ADERIVEDK",11.1,0)
^.114IA^1^1
"IX",11004,11004,"ADERIVEDK",11.1,1,0)
1^F^11004^.01^^1^F
"IX",11004,11004,"APTCSTM",0)
11004^APTCSTM^Quick lookup for patch and patch stream^R^^R^IR^I^11004^^^^^S
"IX",11004,11004,"APTCSTM",1)
S ^A1AE(11004,"APTCSTM",$E(X(1),1,30),X(2),DA)=""
"IX",11004,11004,"APTCSTM",2)
K ^A1AE(11004,"APTCSTM",$E(X(1),1,30),X(2),DA)
"IX",11004,11004,"APTCSTM",2.5)
K ^A1AE(11004,"APTCSTM")
"IX",11004,11004,"APTCSTM",11.1,0)
^.114IA^2^2
"IX",11004,11004,"APTCSTM",11.1,1,0)
1^F^11004^.01^30^1^F
"IX",11004,11004,"APTCSTM",11.1,2,0)
2^F^11004^.2^^2^F
"IX",11004,11004,"B",0)
11004^B^Select patches by field Patch Designation (.01)^R^^F^IR^I^11004^^^^^LS
"IX",11004,11004,"B",1)
S ^A1AE(11004,"B",X,DA)=""
"IX",11004,11004,"B",2)
K ^A1AE(11004,"B",X,DA)
"IX",11004,11004,"B",2.5)
K ^A1AE(11004,"B")
"IX",11004,11004,"B",11.1,0)
^.114IA^1^1
"IX",11004,11004,"B",11.1,1,0)
1^F^11004^.01^^1^F
"IX",11005,11005,"AB",0)
11005^AB^Index used to figure out next patch numbers and walk through the patches^R^^F^IR^I^11005^^^^^S
"IX",11005,11005,"AB",1)
S ^A1AE(11005,"AB",X(2),X(3),X(4),DA)=""
"IX",11005,11005,"AB",2)
K ^A1AE(11005,"AB",X(2),X(3),X(4),DA)
"IX",11005,11005,"AB",2.5)
K ^A1AE(11005,"AB")
"IX",11005,11005,"AB",11.1,0)
^.114IA^4^4
"IX",11005,11005,"AB",11.1,1,0)
1^F^11005^.01^^^F
"IX",11005,11005,"AB",11.1,1,3)

"IX",11005,11005,"AB",11.1,2,0)
2^C^^^^1
"IX",11005,11005,"AB",11.1,2,1.5)
S X=$P(X(1),"*")
"IX",11005,11005,"AB",11.1,3,0)
3^C^^^^2
"IX",11005,11005,"AB",11.1,3,1.5)
S X=$P(X(1),"*",2)
"IX",11005,11005,"AB",11.1,4,0)
4^C^^^^3
"IX",11005,11005,"AB",11.1,4,1.5)
S X=$P(X(1),"*",3)
"IX",11005,11005,"ADERIVED",0)
11005^ADERIVED^This is used by the importer (A1AEK2M) prevent importing a patch twice.^R^^F^IR^I^11005^^^^^S
"IX",11005,11005,"ADERIVED",1)
S ^A1AE(11005,"ADERIVED",X(2),DA)=""
"IX",11005,11005,"ADERIVED",2)
K ^A1AE(11005,"ADERIVED",X(2),DA)
"IX",11005,11005,"ADERIVED",2.5)
K ^A1AE(11005,"ADERIVED")
"IX",11005,11005,"ADERIVED",11.1,0)
^.114IA^2^2
"IX",11005,11005,"ADERIVED",11.1,1,0)
1^F^11005^5.2^^^F
"IX",11005,11005,"ADERIVED",11.1,2,0)
2^C^^^^1
"IX",11005,11005,"ADERIVED",11.1,2,1.5)
S X=$$EXTERNAL^DILFD(11005,5.2,,X(1))
"IX",11005,11005,"ADERIVEDK",0)
11005^ADERIVEDK^This kills any entries in ADERIVED index when the pointed to entry is killed.^MU^^F^IR^I^11005^^^^^A
"IX",11005,11005,"ADERIVEDK",1)
Q
"IX",11005,11005,"ADERIVEDK",2)
K ^A1AE(11005,"ADERIVED",X)
"IX",11005,11005,"ADERIVEDK",2.5)
K ^A1AE(11005,"ADREIVED")
"IX",11005,11005,"ADERIVEDK",11.1,0)
^.114IA^1^1
"IX",11005,11005,"ADERIVEDK",11.1,1,0)
1^F^11005^.01^^1^F
"IX",11005,11005,"APTCSTM",0)
11005^APTCSTM^Quick lookup for patch and patch stream^R^^R^IR^I^11005^^^^^S
"IX",11005,11005,"APTCSTM",1)
S ^A1AE(11005,"APTCSTM",$E(X(1),1,30),X(2),DA)=""
"IX",11005,11005,"APTCSTM",2)
K ^A1AE(11005,"APTCSTM",$E(X(1),1,30),X(2),DA)
"IX",11005,11005,"APTCSTM",2.5)
K ^A1AE(11005,"APTCSTM")
"IX",11005,11005,"APTCSTM",11.1,0)
^.114IA^2^2
"IX",11005,11005,"APTCSTM",11.1,1,0)
1^F^11005^.01^30^1^F
"IX",11005,11005,"APTCSTM",11.1,2,0)
2^F^11005^.2^^2^F
"IX",11005,11005,"B",0)
11005^B^Select patches by field Patch Designation (.01)^R^^F^IR^I^11005^^^^^LS
"IX",11005,11005,"B",1)
S ^A1AE(11005,"B",X,DA)=""
"IX",11005,11005,"B",2)
K ^A1AE(11005,"B",X,DA)
"IX",11005,11005,"B",2.5)
K ^A1AE(11005,"B")
"IX",11005,11005,"B",11.1,0)
^.114IA^1^1
"IX",11005,11005,"B",11.1,1,0)
1^F^11005^.01^^1^F
"IX",11005.2,11005.2,"B",0)
11005.2^B^select Status by code^R^^F^IR^I^11005.2^^^^^LS
"IX",11005.2,11005.2,"B",1)
S ^A1AE(11005.2,"B",X,DA)=""
"IX",11005.2,11005.2,"B",2)
K ^A1AE(11005.2,"B",X,DA)
"IX",11005.2,11005.2,"B",2.5)
K ^A1AE(11005.2,"B")
"IX",11005.2,11005.2,"B",11.1,0)
^.114IA^1^1
"IX",11005.2,11005.2,"B",11.1,1,0)
1^F^11005.2^.01^^1^F
"IX",11005.2,11005.2,"B",11.1,1,3)

"IX",11005.2,11005.2,"C",0)
11005.2^C^select Status by meaning^R^^F^IR^I^11005.2^^^^^LS
"IX",11005.2,11005.2,"C",1)
S ^A1AE(11005.2,"C",X,DA)=""
"IX",11005.2,11005.2,"C",2)
K ^A1AE(11005.2,"C",X,DA)
"IX",11005.2,11005.2,"C",2.5)
K ^A1AE(11005.2,"C")
"IX",11005.2,11005.2,"C",11.1,0)
^.114IA^1^1
"IX",11005.2,11005.2,"C",11.1,1,0)
1^F^11005.2^.02^^1^F
"IX",11005.2,11005.2,"D",0)
11005.2^D^select Status by display^R^^F^IR^I^11005.2^^^^^LS
"IX",11005.2,11005.2,"D",1)
S ^A1AE(11005.2,"D",X,DA)=""
"IX",11005.2,11005.2,"D",2)
K ^A1AE(11005.2,"D",X,DA)
"IX",11005.2,11005.2,"D",2.5)
K ^A1AE(11005.2,"D")
"IX",11005.2,11005.2,"D",11.1,0)
^.114IA^1^1
"IX",11005.2,11005.2,"D",11.1,1,0)
1^F^11005.2^.03^^1^F
"IX",11005.2,11005.2,"D",11.1,1,2)
S X=$$UP^XLFSTR(X)
"IX",11005.2,11005.2,"D",11.1,1,4)
S X=$$UP^XLFSTR(X)
"IX",11005.2,11005.2,"E",0)
11005.2^E^select Status by alternate meaning^R^^F^IR^I^11005.2^^^^^LS
"IX",11005.2,11005.2,"E",1)
S ^A1AE(11005.2,"E",X,DA)=""
"IX",11005.2,11005.2,"E",2)
K ^A1AE(11005.2,"E",X,DA)
"IX",11005.2,11005.2,"E",2.5)
K ^A1AE(11005.2,"E")
"IX",11005.2,11005.2,"E",11.1,0)
^.114IA^1^1
"IX",11005.2,11005.2,"E",11.1,1,0)
1^F^11005.2^.06^^1^F
"IX",11007.1,11007.1,"AFORUM",0)
11007.1^AFORUM^Indicate DHCP PATCH STREAM site as FORUM ^R^^F^IR^I^11007.1^^^^^S
"IX",11007.1,11007.1,"AFORUM",1)
S ^A1AE(11007.1,"AFORUM",$E(X,1,30),DA)=""
"IX",11007.1,11007.1,"AFORUM",2)
K ^A1AE(11007.1,"AFORUM",$E(X,1,30),DA)
"IX",11007.1,11007.1,"AFORUM",2.5)
K ^A1AE(11007.1,"AFORUM")
"IX",11007.1,11007.1,"AFORUM",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"AFORUM",11.1,1,0)
1^F^11007.1^.07^30^1^F
"IX",11007.1,11007.1,"AFORUM",11.1,1,3)

"IX",11007.1,11007.1,"APRIM",0)
11007.1^APRIM^Support computation of initial patch number by identifying primary patch stream^R^^F^IR^I^11007.1^^^^^S
"IX",11007.1,11007.1,"APRIM",.1,0)
^^25^25^3140805^^
"IX",11007.1,11007.1,"APRIM",.1,1,0)
Cross-reference APRIM builds index APRIM on file DHCP Patch Stream 
"IX",11007.1,11007.1,"APRIM",.1,2,0)
(11007.1) to allow selection of patch streams by whether they are primary.
"IX",11007.1,11007.1,"APRIM",.1,3,0)
 
"IX",11007.1,11007.1,"APRIM",.1,4,0)
Technical Description:
"IX",11007.1,11007.1,"APRIM",.1,5,0)
 
"IX",11007.1,11007.1,"APRIM",.1,6,0)
Index APRIM is used by $$PRIMSTRM^A1AEUTL to identify the primary patch 
"IX",11007.1,11007.1,"APRIM",.1,7,0)
stream so its field Patch Number Start (.001) can be used to seed the 
"IX",11007.1,11007.1,"APRIM",.1,8,0)
assignment of patch numbers for a new version of a package within a patch 
"IX",11007.1,11007.1,"APRIM",.1,9,0)
stream. To create this index is why this field exists.
"IX",11007.1,11007.1,"APRIM",.1,10,0)
 
"IX",11007.1,11007.1,"APRIM",.1,11,0)
Change History:
"IX",11007.1,11007.1,"APRIM",.1,12,0)
 
"IX",11007.1,11007.1,"APRIM",.1,13,0)
Wednesday, 22 January 2014: (VEN/SMH) Created traditional PRIM 
"IX",11007.1,11007.1,"APRIM",.1,14,0)
cross-reference to build index PRIM for Patch Module version 2.4 as part 
"IX",11007.1,11007.1,"APRIM",.1,15,0)
of the OSEHRA Forum Project Phase One.
"IX",11007.1,11007.1,"APRIM",.1,16,0)
 
"IX",11007.1,11007.1,"APRIM",.1,17,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted traditional PRIM 
"IX",11007.1,11007.1,"APRIM",.1,18,0)
cross-reference and created new-style APRIM cross-reference; revised 
"IX",11007.1,11007.1,"APRIM",.1,19,0)
Description; wrote Change History; for Patch Module version 2.4 as part 
"IX",11007.1,11007.1,"APRIM",.1,20,0)
of the OSEHRA Forum Project Phase One. The cross-reference was renamed 
"IX",11007.1,11007.1,"APRIM",.1,21,0)
from PRIM to APRIM to change it from a lookup-and-sorting index to a 
"IX",11007.1,11007.1,"APRIM",.1,22,0)
sorting-only index; previously, a user could select the primary patch 
"IX",11007.1,11007.1,"APRIM",.1,23,0)
stream by typing YES at the selection prompt, which was not a desired 
"IX",11007.1,11007.1,"APRIM",.1,24,0)
feature. $$PRIMSTRM^A1AEUTL had to be simultaneously changed from using 
"IX",11007.1,11007.1,"APRIM",.1,25,0)
removed index PRIM to using replacement index APRIM.
"IX",11007.1,11007.1,"APRIM",1)
S ^A1AE(11007.1,"APRIM",X,DA)=""
"IX",11007.1,11007.1,"APRIM",2)
K ^A1AE(11007.1,"APRIM",X,DA)
"IX",11007.1,11007.1,"APRIM",2.5)
K ^A1AE(11007.1,"APRIM")
"IX",11007.1,11007.1,"APRIM",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"APRIM",11.1,1,0)
1^F^11007.1^.02^^1^F
"IX",11007.1,11007.1,"APRIM1",0)
11007.1^APRIM1^Ensure only one record is marked primary at a time^MU^^F^^I^11007.1^^^^^A
"IX",11007.1,11007.1,"APRIM1",.1,0)
^^21^21^3140805^^
"IX",11007.1,11007.1,"APRIM1",.1,1,0)
Cross-reference APRIM1 on file DHCP Patch Stream (11007.1) ensures only 
"IX",11007.1,11007.1,"APRIM1",.1,2,0)
one record is marked primary at a time. Whenever field Primary? (.02) is 
"IX",11007.1,11007.1,"APRIM1",.1,3,0)
set to YES for one record, APRIM1 fires the kill logic for all 
"IX",11007.1,11007.1,"APRIM1",.1,4,0)
cross-references on Primary? for all records in the file, sets Primary? 
"IX",11007.1,11007.1,"APRIM1",.1,5,0)
to NO for all other records, and then fires the set logic for all 
"IX",11007.1,11007.1,"APRIM1",.1,6,0)
cross-references on Primary? for all records in the file.
"IX",11007.1,11007.1,"APRIM1",.1,7,0)
 
"IX",11007.1,11007.1,"APRIM1",.1,8,0)
Change History:
"IX",11007.1,11007.1,"APRIM1",.1,9,0)
 
"IX",11007.1,11007.1,"APRIM1",.1,10,0)
Wednesday, 22 January 2014: (VEN/SMH) Created traditional APRIM 
"IX",11007.1,11007.1,"APRIM1",.1,11,0)
cross-reference (which required fixing a File Manager bug in routine DIK 
"IX",11007.1,11007.1,"APRIM1",.1,12,0)
to support firing cross-references re-entrantly) for Patch Module version 
"IX",11007.1,11007.1,"APRIM1",.1,13,0)
2.4 as part of the OSEHRA Forum Project Phase One.
"IX",11007.1,11007.1,"APRIM1",.1,14,0)
 
"IX",11007.1,11007.1,"APRIM1",.1,15,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted traditional APRIM 
"IX",11007.1,11007.1,"APRIM1",.1,16,0)
cross-reference and created new-style APRIM1 cross-reference; revised code
"IX",11007.1,11007.1,"APRIM1",.1,17,0)
to operate on new field .02 instead of old, deleted field 2; revised 
"IX",11007.1,11007.1,"APRIM1",.1,18,0)
Description; wrote Change History; for Patch Module version 2.4 as part of
"IX",11007.1,11007.1,"APRIM1",.1,19,0)
the OSEHRA Forum Project Phase One. For an explanation of the renaming of 
"IX",11007.1,11007.1,"APRIM1",.1,20,0)
this cross-reference, see the description of new-style cross-reference 
"IX",11007.1,11007.1,"APRIM1",.1,21,0)
APRIM.
"IX",11007.1,11007.1,"APRIM1",1)
N DIK,DA S DIK(1)=".02",DIK="^A1AE(11007.1," D ENALL2^DIK N A1AEI X "F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  I A1AEI'=D0 S $P(^(A1AEI,0),U,2)=0" D ENALL^DIK
"IX",11007.1,11007.1,"APRIM1",1.4)
I X
"IX",11007.1,11007.1,"APRIM1",2)
Q
"IX",11007.1,11007.1,"APRIM1",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"APRIM1",11.1,1,0)
1^F^11007.1^.02^^^F
"IX",11007.1,11007.1,"ASUBCNG",0)
11007.1^ASUBCNG^Force a new entry into SUBSCRIPTION DATE^MU^^F^^I^11007.1^^^^^A
"IX",11007.1,11007.1,"ASUBCNG",.1,0)
^^3^3^3140805^
"IX",11007.1,11007.1,"ASUBCNG",.1,1,0)
This cross is to force a new entry in the SUBSCRIPTION DATE and 
"IX",11007.1,11007.1,"ASUBCNG",.1,2,0)
AUTHORIZING INDIVIDUAL field when the SUBSCRIPTION field for this Patch 
"IX",11007.1,11007.1,"ASUBCNG",.1,3,0)
Stream entry is toggled as the account SUBSCRIPTION
"IX",11007.1,11007.1,"ASUBCNG",1)
D ASUBCNG^A1AEUTL(D0)
"IX",11007.1,11007.1,"ASUBCNG",1.4)
I X
"IX",11007.1,11007.1,"ASUBCNG",2)
Q
"IX",11007.1,11007.1,"ASUBCNG",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"ASUBCNG",11.1,1,0)
1^F^11007.1^.06^^^F
"IX",11007.1,11007.1,"ASUBS",0)
11007.1^ASUBS^Indicate Subscription Stream active in this account^R^^F^IR^I^11007.1^^^^^S
"IX",11007.1,11007.1,"ASUBS",1)
S ^A1AE(11007.1,"ASUBS",X,DA)=""
"IX",11007.1,11007.1,"ASUBS",1.4)

"IX",11007.1,11007.1,"ASUBS",2)
K ^A1AE(11007.1,"ASUBS",X,DA)
"IX",11007.1,11007.1,"ASUBS",2.5)
K ^A1AE(11007.1,"ASUBS")
"IX",11007.1,11007.1,"ASUBS",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"ASUBS",11.1,1,0)
1^F^11007.1^.06^^1^F
"IX",11007.1,11007.1,"ASUBS1",0)
11007.1^ASUBS1^Ensure only one record is marked SUBSCRIBER at a time^MU^^F^^I^11007.1^^^^^A
"IX",11007.1,11007.1,"ASUBS1",.1,0)
^^2^2^3140805^
"IX",11007.1,11007.1,"ASUBS1",.1,1,0)
Ensure only one record is marked as SUSCRIBER at a time.  More 
"IX",11007.1,11007.1,"ASUBS1",.1,2,0)
description will be added later
"IX",11007.1,11007.1,"ASUBS1",1)
N DIK,DA S DIK(1)=".06",DIK="^A1AE(11007.1," D ENALL2^DIK N A1AEI X "F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  I A1AEI'=D0 S $P(^(A1AEI,0),U,6)=0" D ENALL^DIK
"IX",11007.1,11007.1,"ASUBS1",1.4)
I X
"IX",11007.1,11007.1,"ASUBS1",2)
Q
"IX",11007.1,11007.1,"ASUBS1",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"ASUBS1",11.1,1,0)
1^F^11007.1^.06^^^F
"IX",11007.1,11007.1,"ASUBS1",11.1,1,3)

"IX",11007.1,11007.1,"B",0)
11007.1^B^Selects Patch Streams by Name^R^^F^IR^I^11007.1^^^^^LS
"IX",11007.1,11007.1,"B",.1,0)
^^14^14^3140211^
"IX",11007.1,11007.1,"B",.1,1,0)
Cross-reference B builds index B on file DHCP Patch Stream (11007.1) to
"IX",11007.1,11007.1,"B",.1,2,0)
support the selection of patch streams by field Name (.01).
"IX",11007.1,11007.1,"B",.1,3,0)
 
"IX",11007.1,11007.1,"B",.1,4,0)
Change History:
"IX",11007.1,11007.1,"B",.1,5,0)
 
"IX",11007.1,11007.1,"B",.1,6,0)
Monday, 13 January 2014: (VEN/SMH) Created traditional B cross-reference
"IX",11007.1,11007.1,"B",.1,7,0)
automatically by creating file DHCP Patch Stream (11007.1) for Patch
"IX",11007.1,11007.1,"B",.1,8,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One.
"IX",11007.1,11007.1,"B",.1,9,0)
 
"IX",11007.1,11007.1,"B",.1,10,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted traditional B 
"IX",11007.1,11007.1,"B",.1,11,0)
cross-reference and created new-style B cross-reference to support 
"IX",11007.1,11007.1,"B",.1,12,0)
creation of primary key on field Name (.01) for Patch Module version 2.4 
"IX",11007.1,11007.1,"B",.1,13,0)
as part of the OSEHRA Forum Project Phase One. Write Description and 
"IX",11007.1,11007.1,"B",.1,14,0)
Change History.
"IX",11007.1,11007.1,"B",1)
S ^A1AE(11007.1,"B",X,DA)=""
"IX",11007.1,11007.1,"B",2)
K ^A1AE(11007.1,"B",X,DA)
"IX",11007.1,11007.1,"B",2.5)
K ^A1AE(11007.1,"B")
"IX",11007.1,11007.1,"B",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"B",11.1,1,0)
1^F^11007.1^.01^^1^F
"IX",11007.1,11007.1,"C",0)
11007.1^C^Select DHCP Patch Streams by Abbreviation^R^^F^IR^I^11007.1^^^^^LS
"IX",11007.1,11007.1,"C",.1,0)
^^8^8^3140211^
"IX",11007.1,11007.1,"C",.1,1,0)
Cross-reference C builds index C on file DHCP Patch Stream (11007.1) to 
"IX",11007.1,11007.1,"C",.1,2,0)
support the selection of patch streams by field Abbreviation (.05).
"IX",11007.1,11007.1,"C",.1,3,0)
 
"IX",11007.1,11007.1,"C",.1,4,0)
Change History:
"IX",11007.1,11007.1,"C",.1,5,0)
 
"IX",11007.1,11007.1,"C",.1,6,0)
Tuesday, 11 February 2014: (VEN/TOAD) Created new-style cross-reference C 
"IX",11007.1,11007.1,"C",.1,7,0)
to support creation of primary key on field Abbreviation (.05) for Patch 
"IX",11007.1,11007.1,"C",.1,8,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One.
"IX",11007.1,11007.1,"C",1)
S ^A1AE(11007.1,"C",X,DA)=""
"IX",11007.1,11007.1,"C",2)
K ^A1AE(11007.1,"C",X,DA)
"IX",11007.1,11007.1,"C",2.5)
K ^A1AE(11007.1,"C")
"IX",11007.1,11007.1,"C",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"C",11.1,1,0)
1^F^11007.1^.05^^1^F
"IX",11007.1,11007.1,"C",11.1,1,3)

"IX",11007.1,11007.1,"SUBSDT",0)
11007.1^SUBSDT^CROSS TO DOCUMENT PATCH STREAM HISTORY^R^^F^IR^W^11007.12^^^^^LS
"IX",11007.1,11007.1,"SUBSDT",.1,0)
^^4^4^3140806^
"IX",11007.1,11007.1,"SUBSDT",.1,1,0)
This cross-reference will be useful when installing a patch that has 
"IX",11007.1,11007.1,"SUBSDT",.1,2,0)
previous patch dependencies.  It may be that one patch that needs 
"IX",11007.1,11007.1,"SUBSDT",.1,3,0)
installed was distributed under the FOIA VISTA stream, and another after 
"IX",11007.1,11007.1,"SUBSDT",.1,4,0)
the site had converted to the OSEHRA VISTA stream.
"IX",11007.1,11007.1,"SUBSDT",1)
S ^A1AE(11007.1,"SUBSDT",X,DA(1),DA)=""
"IX",11007.1,11007.1,"SUBSDT",2)
K ^A1AE(11007.1,"SUBSDT",X,DA(1),DA)
"IX",11007.1,11007.1,"SUBSDT",2.5)
K ^A1AE(11007.1,"SUBSDT")
"IX",11007.1,11007.1,"SUBSDT",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"SUBSDT",11.1,1,0)
1^F^11007.12^.01^^1^F
"IX",11007.1,11007.1,"SUBSDT",11.1,1,3)

"IX",11007.2,11007.2,"AC",0)
11007.2^AC^Fire off Forum Approval/Disapproval email when SCS edited^MU^^F^IR^I^11007.2^^^^^A
"IX",11007.2,11007.2,"AC",.1,0)
^^23^23^3150705^^
"IX",11007.2,11007.2,"AC",.1,1,0)
When a site requests a patch stream change, their request results in an 
"IX",11007.2,11007.2,"AC",.1,2,0)
edit in the PATCH STREAM HISTORY [#11007.2] file.  The entry has the 
"IX",11007.2,11007.2,"AC",.1,3,0)
status of the stream change (SCS field xx) set to AWAITING FORUM APPROVAL 
"IX",11007.2,11007.2,"AC",.1,4,0)
(Set of codes 2).
"IX",11007.2,11007.2,"AC",.1,5,0)
 
"IX",11007.2,11007.2,"AC",.1,6,0)
       0        NO REQUESTS
"IX",11007.2,11007.2,"AC",.1,7,0)
       1        IN REVIEW
"IX",11007.2,11007.2,"AC",.1,8,0)
       2        WAITING FORUM APPROVAL
"IX",11007.2,11007.2,"AC",.1,9,0)
       3        CHANGE CONFIRMED
"IX",11007.2,11007.2,"AC",.1,10,0)
 
"IX",11007.2,11007.2,"AC",.1,11,0)
An option APPROVE/DISAPPROVE PATCH STREAM CHANG REQ, allows editing of 
"IX",11007.2,11007.2,"AC",.1,12,0)
this field.  
"IX",11007.2,11007.2,"AC",.1,13,0)
 
"IX",11007.2,11007.2,"AC",.1,14,0)
Changing to 1 (IN REVIEW) will cause this action
"IX",11007.2,11007.2,"AC",.1,15,0)
cross-reference to send an approval email to the requestor and store this
"IX",11007.2,11007.2,"AC",.1,16,0)
email response as an edit to the original request in 11007.2.  
"IX",11007.2,11007.2,"AC",.1,17,0)
 
"IX",11007.2,11007.2,"AC",.1,18,0)
Changing the status to 0 (NO REQUESTS) will result in a email of
"IX",11007.2,11007.2,"AC",.1,19,0)
disapproval sent to the requestor and store this email response as an edit
"IX",11007.2,11007.2,"AC",.1,20,0)
to the original request in 11007.2
"IX",11007.2,11007.2,"AC",.1,21,0)
 
"IX",11007.2,11007.2,"AC",.1,22,0)
Attempting to change the status to 3 (CHANGE CONFIRMED) will not work, 
"IX",11007.2,11007.2,"AC",.1,23,0)
but the status will be returned to 2 (WAITING FORUM APPROVAL)
"IX",11007.2,11007.2,"AC",1)
I $G(X1),$G(X2) D FRMAPPR^A1AEK3(X1,X2)
"IX",11007.2,11007.2,"AC",2)
Q
"IX",11007.2,11007.2,"AC",11.1,0)
^.114IA^1^1
"IX",11007.2,11007.2,"AC",11.1,1,0)
1^F^11007.2^.06^^^F
"IX",11007.2,11007.2,"C",0)
11007.2^C^Quick lookup of Stream Change Status^MU^^R^IR^I^11007.2^^^^^LS
"IX",11007.2,11007.2,"C",1)
S ^A1AE(11007.2,"C",X(2),X(1),DA)=""
"IX",11007.2,11007.2,"C",2)
K ^A1AE(11007.2,"C",X(2))
"IX",11007.2,11007.2,"C",2.5)
K ^A1AE(11007.2,"C")
"IX",11007.2,11007.2,"C",11.1,0)
^.114IA^2^2
"IX",11007.2,11007.2,"C",11.1,1,0)
1^F^11007.2^.06^^1^F
"IX",11007.2,11007.2,"C",11.1,1,1)

"IX",11007.2,11007.2,"C",11.1,2,0)
2^F^11007.2^.01^^2^F
"KEY",11004,11004,"A",0)
11004^A^P^1126
"KEY",11004,11004,"A",2,0)
^.312IA^1^1
"KEY",11004,11004,"A",2,1,0)
.01^11004^1
"KEY",11005,11005,"A",0)
11004^A^P^1126
"KEY",11005,11005,"A",2,0)
^.312IA^1^1
"KEY",11005,11005,"A",2,1,0)
.01^11004^1
"KEY",11005.2,11005.2,"A",0)
11005.2^A^P^1102
"KEY",11005.2,11005.2,"A",2,0)
^.312IA^1^1
"KEY",11005.2,11005.2,"A",2,1,0)
.01^11005.2^1
"KEY",11005.2,11005.2,"B",0)
11005.2^B^S^1103
"KEY",11005.2,11005.2,"B",2,0)
^.312IA^1^1
"KEY",11005.2,11005.2,"B",2,1,0)
.02^11005.2^1
"KEY",11007.1,11007.1,"A",0)
11007.1^A^P^1024
"KEY",11007.1,11007.1,"A",2,0)
^.312IA^1^1
"KEY",11007.1,11007.1,"A",2,1,0)
.01^11007.1^1
"KEY",11007.1,11007.1,"B",0)
11007.1^B^S^1027
"KEY",11007.1,11007.1,"B",2,0)
^.312IA^1^1
"KEY",11007.1,11007.1,"B",2,1,0)
.05^11007.1^1
"KEYPTR",11004,11004,"A")
11004^B
"KEYPTR",11005,11005,"A")
11004^B
"KEYPTR",11005.2,11005.2,"A")
11005.2^B
"KEYPTR",11005.2,11005.2,"B")
11005.2^C
"KEYPTR",11007.1,11007.1,"A")
11007.1^B
"KEYPTR",11007.1,11007.1,"B")
11007.1^C
"KRN",.4,1530,-1)
0^14
"KRN",.4,1530,0)
A1AE TABLED PROBLEM^2860128^^11006^^^^
"KRN",.4,1530,"%D",0)
^^1^1^3150705.225758
"KRN",.4,1530,"%D",1,0)
Not used.
"KRN",.4,1530,"F",1)
"Problem Designation:";C1~.01;""~5;C40;""~"Reporting Station:";C1;S1~6;""~"Reported By/Phone:";C1~7;""~"Date Reported:";C1~9;""~
"KRN",.4,1530,"F",2)
"Problem Description:";C1;S1~5.5,.01;""~"Current Status of Problem:";C1;S1~10;""~
"KRN",.4,1530,"F",3)
W !!,"----------------------------TABLED DETAILS-------------------------------------";X;Z;"W !!,"----------------------------TABLED DETAILS-------------------------------------""~
"KRN",.4,1530,"F",4)
"Problem Tabled by:";C1;S1~15;""~"Date Tabled:";C1~11;""~"Tabled Comments:";C1~11.5,.01;""~W ! F I=1:1:79 W "-";X;Z;"W ! F I=1:1:79 W "-""~
"KRN",.4,1530,"H")
TABLED PROBLEMS
"KRN",.4,1531,-1)
0^8
"KRN",.4,1531,0)
A1AE PROBLEM DETAILS^2860128^^11006^^^^
"KRN",.4,1531,"%D",0)
^^1^1^3150705.225444
"KRN",.4,1531,"%D",1,0)
Not used.
"KRN",.4,1531,"F",1)
"Problem Designation:";C1~.01;""~5;C40;""~"Reporting Station:";C1;S1~6;""~"Reported By/Phone:";C1~7;""~"Date Reported:";C1~9;""~
"KRN",.4,1531,"F",2)
"Problem Description:";C1;S1~5.5,.01;""~"Current Status of Problem:";C1;S1~10;""~W ! F I=1:1:79 W "-";X;Z;"W ! F I=1:1:79 W "-""~
"KRN",.4,1531,"H")
PROBLEM DETAILS
"KRN",.4,1532,-1)
0^7
"KRN",.4,1532,0)
A1AE PATCH SUMMARY^2920929.1347^^11005^^^3060223^
"KRN",.4,1532,"%D",0)
^^1^1^3150705.22532
"KRN",.4,1532,"%D",1,0)
Not used by the patch module.
"KRN",.4,1532,"DXS",1,9)
S YY=^(0),YZ=$P(YY,U,8),Y=$S(YZ="v":$P(YY,U,11),YZ="c":$P(YY,U,10),YZ="u":$P(YY,U,12),1:"") I Y]"" D TM^A1AEUTL1 W ?50,Y K YY,YZ
"KRN",.4,1532,"F",1)
.01;"Designation";L13;C1~5;"Subject";L30;C15~8;L1;C48;X~
"KRN",.4,1532,"F",2)
X DXS(1,9);"Status";Z;"S YY=^(0),YZ=$P(YY,U,8),Y=$S(YZ="v":$P(YY,U,11),YZ="c":$P(YY,U,10),YZ="u":$P(YY,U,12),1:"") I Y]"" D TM^A1AEUTL1 W ?50,Y K YY,YZ"~
"KRN",.4,1532,"F",3)
100,.01;"Routine";C64;L8~"-----------------------------------------------------------------------------";C1~
"KRN",.4,1532,"H")
DHCP Patch Summary Report
"KRN",.4,1533,-1)
0^13
"KRN",.4,1533,0)
A1AE STANDARD PRINT^3140326.1739^^11005^^^3140325^
"KRN",.4,1533,"%D",0)
^^1^1^3150705.225745
"KRN",.4,1533,"%D",1,0)
Not used.
"KRN",.4,1533,"DXS")
4
"KRN",.4,1533,"DXS",1,9)
I $D(^A1AE(11005,D0,"Q","B")) S A1AEPD=$P(^A1AE(11005,D0,0),"^"),PRINT="" D PCHK^A1AEUTL1 K AZ,PRINT
"KRN",.4,1533,"DXS",2,9)
I $P(^A1AE(11005,D0,0),U,20) S X=$G(^A1AE(11005,D0,0)) S Y=$P(X,U,20) S Y=$S(Y="":Y,$D(^A1AE(11007.1,Y,0))#2:$P(^(0),U),1:Y) W !,"Source: "_Y
"KRN",.4,1533,"DXS",3,9)
I $P(^A1AE(11005,D0,5),U,2) S X=$G(^A1AE(11005,D0,5)) S Y=$P(X,U,2) S Y=$S(Y="":Y,$D(^A1AE(11005,Y,0))#2:$P(^(0),U),1:Y) W !!,"Derived from Patch: "_Y
"KRN",.4,1533,"F",1)
X DXS(1,9);Z;"I $D(^A1AE(11005,D0,"Q","B")) S A1AEPD=$P(^A1AE(11005,D0,0),"^"),PRINT="" D PCHK^A1AEUTL1 K AZ,PRINT"~
"KRN",.4,1533,"F",2)
X DXS(2,9);Z;"I $P(^A1AE(11005,D0,0),U,20) S X=$G(^A1AE(11005,D0,0)) S Y=$P(X,U,20) S Y=$S(Y="":Y,$D(^A1AE(11007.1,Y,0))#2:$P(^(0),U),1:Y) W !,"Source: "_Y"~
"KRN",.4,1533,"F",3)
X DXS(3,9);Z;"I $P(^A1AE(11005,D0,5),U,2) S X=$G(^A1AE(11005,D0,5)) S Y=$P(X,U,2) S Y=$S(Y="":Y,$D(^A1AE(11005,Y,0))#2:$P(^(0),U),1:Y) W !!,"Derived from Patch: "_Y"~
"KRN",.4,1533,"F",4)
"Subject:";C1;S1~5;"";L70~"Category:";C1;S1~6.5,.01;""~"Description:";C1;S1~"===========";C1~" ";C1~5.5,.01;"";C1~"Routine Information:";C1;S2~
"KRN",.4,1533,"F",5)
"====================";C1~D RTNINFO^A1AEUTL2();C1;S1;Z;"D RTNINFO^A1AEUTL2()"~
"KRN",.4,1533,"F",6)
"=============================================================================";C1;S2~"User Information:";C1~
"KRN",.4,1533,"F",7)
S Y=$P(^A1AE(11005,D0,0),"^",17) I Y X ^DD("DD") W ?40,"   Hold Date :   "_Y;Z;"S Y=$P(^A1AE(11005,D0,0),"^",17) I Y X ^DD("DD") W ?40,"   Hold Date :   "_Y"~
"KRN",.4,1533,"F",8)
"Entered By  : ";C3~9;L20;""~"Date Entered  : ";C40~12;L15;""~"Completed By: ";C3~13;L20;""~"Date Completed: ";C40~10;L15;""~"Released By : ";C3~
"KRN",.4,1533,"F",9)
14;L20;""~"Date Released : ";C40~11;L15;""~N A1AEPRNT S A1AEPRNT=1 D USERS^A1AEMAL(D0);C1;S1;Z;"N A1AEPRNT S A1AEPRNT=1 D USERS^A1AEMAL(D0)"~
"KRN",.4,1533,"F",10)
"=============================================================================";C1~
"KRN",.4,1533,"F",11)
S:'$D(A1AEHD) A1AEHD="Patch Details" D PRT^A1AEUTL:A1AEHD'["Display"&(A1AEOUT'["^");X;Z;"S:'$D(A1AEHD) A1AEHD="Patch Details" D PRT^A1AEUTL:A1AEHD'["Display"&(A1AEOUT'["^")"~
"KRN",.4,1533,"H")
@
"KRN",.4,1533,"IOM")
80
"KRN",.4,1533,"LAST")

"KRN",.4,1533,"ROUOLD")
A1AEP
"KRN",.4,1533,"SUB")
1
"KRN",.4,1534,-1)
0^12
"KRN",.4,1534,0)
A1AE STANDARD HEADER^2920929.1322^^11005^^^^
"KRN",.4,1534,"%D",0)
^^1^1^3150705.225721
"KRN",.4,1534,"%D",1,0)
Compiled into routine ^A1AEP, which is called directly by five options.
"KRN",.4,1534,"F",1)
W !,$S($D(A1AEHD):A1AEHD,1:"Patch Details");"";X;Z;"W !,$S($D(A1AEHD):A1AEHD,1:"Patch Details")"~
"KRN",.4,1534,"F",2)
S:'$D(A1AEPGE) A1AEPGE=0 S A1AEPGE=A1AEPGE+1 W ?70,"Page: ",A1AEPGE;"";X;Z;"S:'$D(A1AEPGE) A1AEPGE=0 S A1AEPGE=A1AEPGE+1 W ?70,"Page: ",A1AEPGE"~
"KRN",.4,1534,"F",3)
"=============================================================================";C1~
"KRN",.4,1534,"F",4)
W !,"Run Date:  " S Y=DT D DT^DIQ;"";X;Z;"W !,"Run Date:  " S Y=DT D DT^DIQ"~"Designation:";C44~.01;""~"Package :";C1~2;""~"Status     :";C44~8;""~
"KRN",.4,1534,"F",5)
"=============================================================================";C1~
"KRN",.4,1534,"H")
@
"KRN",.4,1534,"SUB")
1
"KRN",.4,1535,-1)
0^3
"KRN",.4,1535,0)
A1AE PACKAGE USERS^2860311^^11007^^^3100818^
"KRN",.4,1535,"%D",0)
^.4001^1^1^3150705^^
"KRN",.4,1535,"%D",1,0)
Print development users and support personnel for a package
"KRN",.4,1535,"F",1)
"Package:";C3~.01;""~"User Selection Allowed:";C40~2;""~"Developers: ";C3;S2~200,.01;"";C37~
"KRN",.4,1535,"F",2)
"-------------------------------------------------------------------------------";C1~"Support Personnel: ";C3~100,.01;C37;L25;""~100,2;"";C65~
"KRN",.4,1535,"F",3)
"-------------------------------------------------------------------------------";C1~"User Selected For Notification: ";C3~50,.01;C37;""~
"KRN",.4,1535,"H")
Package Users
"KRN",.4,1536,-1)
0^11
"KRN",.4,1536,0)
A1AE SELECTED USERS^2860328^@^11007^^@
"KRN",.4,1536,"%D",0)
^^1^1^3150705.225632
"KRN",.4,1536,"%D",1,0)
Not used.
"KRN",.4,1536,"DXS",1,9.2)
S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^A1AE(11007,D0,0)):^(0),1:""),D0=$P(DIP(1),U,1) S:'$D(^DIC(9.4,+D0,0)) D0=-1 S DIP(101)=$S($D(^DIC(9.4,D0,0)):^(0),1:"")
"KRN",.4,1536,"DXS",2,9.2)
S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^A1AE(11007,D0,1,D1,0)):^(0),1:""),D0=$P(DIP(1),U,1) S:'$D(^DIC(3,+D0,0)) D0=-1 S DIP(101)=$S($D(^DIC(3,D0,6000)):^(6000),1:"")
"KRN",.4,1536,"F",1)
X DXS(1,9.2) S X=$P(DIP(101),U,2) S D0=I(0,0) W X K DIP;"Package";Z;".01:PREFIX"~50,.01;"User"~
"KRN",.4,1536,"F",2)
50,X DXS(2,9.2) S X=$P(DIP(101),U,1) S D0=I(0,0) W X K DIP;"";Z;".01:INSTITUTION"~
"KRN",.4,1536,"H")
Selected Users
"KRN",.4,1537,-1)
0^16
"KRN",.4,1537,0)
A1AEZPKE^2920715.1522^@^11005^^@^2920715
"KRN",.4,1537,"%D",0)
^^1^1^3150705.225854
"KRN",.4,1537,"%D",1,0)
Not used.
"KRN",.4,1537,"F",2)
.01;L12~5;L25~9;L14~12;L12~13;L14~10;L12~14;L14~11;L12~
"KRN",.4,1537,"H")
DHCP PATCHES LIST
"KRN",.4,1538,-1)
0^15
"KRN",.4,1538,0)
A1AE VERIFIED PATCH SUMMARY^3140327.1425^^11005^^^3150717^
"KRN",.4,1538,"%D",0)
^^1^1^3150705.225831
"KRN",.4,1538,"%D",1,0)
Used by menu option A1AE PRTCOMPHDTE.
"KRN",.4,1538,"DXS")
2
"KRN",.4,1538,"DXS",1,9)
I $D(^A1AE(11005,D0,"Q","B")) S A1AEPD=$P(^A1AE(11005,D0,0),"^"),PRINT="" D PCHK^A1AEUTL1 K AZ,PRINT,A1AEPD
"KRN",.4,1538,"F",1)
S YY=^(0);X;Z;"S YY=^(0)"~.01;"Patch ID";L13;C1~6;"SEQ";C15;R3~5;"Subject";L37;C20~8;L1;C60;X~
"KRN",.4,1538,"F",2)
S Y=$$LASTDATE^A1AEPH2(D0) I Y]"" S Y=$$FMTE^XLFDT(Y,4) W ?61,Y;"Status";Z;"S Y=$$LASTDATE^A1AEPH2(D0) I Y]"" S Y=$$FMTE^XLFDT(Y,4) W ?61,Y"~
"KRN",.4,1538,"F",3)
100,.01;"Routine";C72;L8~
"KRN",.4,1538,"F",4)
S Y=$P(YY,"^",17) I Y]"" S Y=$$FMTE^XLFDT(Y,4) W !,?39,"Hold date  "_Y;X;Z;"S Y=$P(YY,"^",17) I Y]"" S Y=$$FMTE^XLFDT(Y,4) W !,?39,"Hold date  "_Y"~
"KRN",.4,1538,"F",5)
X DXS(1,9);"";X;Z;"I $D(^A1AE(11005,D0,"Q","B")) S A1AEPD=$P(^A1AE(11005,D0,0),"^"),PRINT="" D PCHK^A1AEUTL1 K AZ,PRINT,A1AEPD"~
"KRN",.4,1538,"F",6)
"-------------------------------------------------------------------------------";C1~K YY;X;Z;"K YY"~
"KRN",.4,1538,"H")
DHCP Patch Summary Report
"KRN",.4,1539,-1)
0^6
"KRN",.4,1539,0)
A1AE PATCH OPTS DOC^2981106^^19^^^3150626
"KRN",.4,1539,"%D",0)
^.4001^1^1^3150705^
"KRN",.4,1539,"%D",1,0)
Called by A1AE PATCHDOC
"KRN",.4,1539,"DXS",1,9.2)
S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^DIC(19,D0,10,D1,0)):^(0),1:""),D0=$P(DIP(1),U,1) S:'$D(^DIC(19,+D0,0)) D0=-1 S DIP(101)=$S($D(^DIC(19,D0,0)):^(0),1:"")
"KRN",.4,1539,"F",1)
"Option Name:";C1~.01;""~"Menu Text:";C1;S1~1;""~":";C1;S1~3.5,.01;C3;S1;""~" ";C1;S1~
"KRN",.4,1539,"F",2)
I $P(^DIC(19,D0,0),U,4)="M" W "Menu Options:";X;Z;"I $P(19,D0,0),U,4)="M" W "Menu Options:""~" ";C1;S1~10,.01;C5;L15;""~
"KRN",.4,1539,"F",3)
10,X DXS(1,9.2) S X=$P(DIP(101),U,2) S D0=I(0,0) W X K DIP;5
"KRN",.4,1539,"F",4)
"-------------------------------------------------------------------------------";C1~
"KRN",.4,1539,"H")
National Patch Module Options
"KRN",.4,1540,-1)
0^1
"KRN",.4,1540,0)
A1AE FULL SUMMARY BY DATE^3020513.105^@^11005^^@^3150318
"KRN",.4,1540,"%D",0)
^^6^6^3150705.221924
"KRN",.4,1540,"%D",1,0)
First Print FIELD: PATCH DESIGNATION;L15 
"KRN",.4,1540,"%D",2,0)
Then Print FIELD: PATCH SUBJECT;L30//
"KRN",.4,1540,"%D",3,0)
Then Print FIELD: DATE PATCH VERIFIED//
"KRN",.4,1540,"%D",4,0)
Prints patch designation, subject, and date verified
"KRN",.4,1540,"%D",5,0)

"KRN",.4,1540,"%D",6,0)
Called by option A1AE FULL SUMMARY BY DATE.
"KRN",.4,1540,"F",2)
.01;L15~5;L30~11~
"KRN",.4,1540,"H")
DHCP PATCHES SEARCH
"KRN",.4,1541,-1)
0^5
"KRN",.4,1541,0)
A1AE PATCH COMPLIANCE PRT^3030708.1903^^11005^^^3070314
"KRN",.4,1541,"%D",0)
^^1^1^3150705.222334
"KRN",.4,1541,"%D",1,0)
Not used in the patch module.
"KRN",.4,1541,"F",2)
.01;C1;S1;""~7;"";C13~18~6.5,.01;C45;"CATEGORY"~2;C65;""~
"KRN",.4,1541,"H")
COMPLIANCE DATE REPORTS
"KRN",.4,1542,-1)
0^4
"KRN",.4,1542,0)
A1AE PATCH COMPL/COMMENT RPT^3070327.1^^11005^^^3140912
"KRN",.4,1542,"%D",0)
^^1^1^3150705.222105
"KRN",.4,1542,"%D",1,0)
Called by A1AE COMPLIANCE DISPLAY. 
"KRN",.4,1542,"F",2)
.01;C1;S1;""~7;"";C13~18~6.5,.01;C45;"CATEGORY"~2;C62;L18~19,.01;"REASON FOR CHANGE"~
"KRN",.4,1542,"H")
PATCH COMPL/COMMENT RPT
"KRN",.4,1543,-1)
0^10
"KRN",.4,1543,0)
A1AE RTN CHECKSUM^3070612.1121^^9.8^^@^3150507
"KRN",.4,1543,"%D",0)
^^1^1^3150705.225613
"KRN",.4,1543,"%D",1,0)
Not used.
"KRN",.4,1543,"F",1)
.01;"Routine Name";L13~"Current Checksum: ";C2~7.2;X~" Date: ";C35~7.1;X~"Patch List: ";C8~7.3;X~"---Patch-----------Checksum----";C1~8,.01;C4;L15;X~
"KRN",.4,1543,"F",2)
8,2;X;C20~8,3;C4;X~
"KRN",.4,1543,"H")
Routine Checksum List
"KRN",.4,1544,-1)
0^9
"KRN",.4,1544,0)
A1AE ROUTINE INQUIRE^3070612.0933^^9.8^^@^3070612
"KRN",.4,1544,"%D",0)
^^1^1^3150705.22552
"KRN",.4,1544,"%D",1,0)
Not used.
"KRN",.4,1544,"F",1)
"Routine Name: ";C2~.01;X~"Checksum Report: ";C40~6;X~"Checksum Date: ";C3~7.1;X~"Checksum Value: ";C2~7.2;X~"Patch List: ";C6~7.3;X~8,"Patch: ";C5~
"KRN",.4,1544,"F",2)
8,.01;X~8,"Checksum: ";C40~8,2;X~
"KRN",.4,1544,"H")
ROUTINE LIST
"KRN",.4,1545,-1)
0^2
"KRN",.4,1545,0)
A1AE GT 500^3070614.1209^#^11007^^#^3070614
"KRN",.4,1545,"%D",0)
^^8^8^3150705.222006
"KRN",.4,1545,"%D",1,0)
First Print FIELD: PACKAGE//
"KRN",.4,1545,"%D",2,0)
Then Print FIELD: VERSION//     (multiple)
"KRN",.4,1545,"%D",3,0)
  Then Print VERSION SUB-FIELD: VERSION//
"KRN",.4,1545,"%D",4,0)
  Then Print VERSION SUB-FIELD: NEXT PATCH NUMBER//
"KRN",.4,1545,"%D",5,0)
  Then Print VERSION SUB-FIELD:
"KRN",.4,1545,"%D",6,0)
Prints package, version, and next patch number
"KRN",.4,1545,"%D",7,0)

"KRN",.4,1545,"%D",8,0)
Template not used in Patch Module.
"KRN",.4,1545,"F",2)
.01~300,.01~300,26~
"KRN",.4,1545,"H")
DHCP PACKAGE'S >500 PATCHES
"KRN",.4,1546,-1)
0^17
"KRN",.4,1546,0)
A1AE PATCH RELATIONSHIPS^3140327.1738^@^11005^^@^3140327^
"KRN",.4,1546,"%D",0)
^^1^1^3150705.223332
"KRN",.4,1546,"%D",1,0)
Invoked by A1AE SHOW PATCH RELATIONSHIPS. 
"KRN",.4,1546,"DXS")
2
"KRN",.4,1546,"DXS",1,9)
I $D(^A1AE(11005,D0,"Q","B")) S A1AEPD=$P(^A1AE(11005,D0,0),"^"),PRINT="" D PCHK^A1AEUTL1 K AZ,PRINT,A1AEPD
"KRN",.4,1546,"F",1)
"Patch Designation: ";X;C1;S1;""~.01;C21;""~"Derived from: ";X;C1;S1;""~5.2;C21;""~
"KRN",.4,1546,"F",2)
X DXS(1,9);"";S1;X;Z;"I $D(^A1AE(11005,D0,"Q","B")) S A1AEPD=$P(^A1AE(11005,D0,0),"^"),PRINT="" D PCHK^A1AEUTL1 K AZ,PRINT,A1AEPD"~
"KRN",.4,1546,"H")
Patch Relationships
"KRN",.401,917,-1)
0^5
"KRN",.401,917,0)
A1AE PROBLEM SORT^2860128^^11006^^^^
"KRN",.401,917,2,1)
11006^^PACKAGE^]@"2^
"KRN",.401,917,2,1,"CM")
S Y(1)=$S($D(^A1AE(11006,D0,0)):^(0),1:"") S X=$S('$D(^DIC(9.4,+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1)) I D0>0 S X(1)=X
"KRN",.401,917,2,2)
11006^3^VERSION^@^
"KRN",.401,917,2,3)
11006^10^STATUS OF PROBLEM^@^
"KRN",.401,917,2,4)
11006^.01^PROBLEM DESIGNATION^@^
"KRN",.401,917,2,4,"IX")
^A1AE(11006,"B",^A1AE(11006,^2
"KRN",.401,917,"%D",0)
^^1^1^3150705.235028
"KRN",.401,917,"%D",1,0)
Not used.
"KRN",.401,918,-1)
0^10
"KRN",.401,918,0)
A1AE STANDARD SORT^2860306^^11005^^^2961010^
"KRN",.401,918,2,0)
^.4014^1^1
"KRN",.401,918,2,1,0)
11005^.01^PATCH DESIGNATION^]#^^^^^^4
"KRN",.401,918,2,1,"ASK")
1
"KRN",.401,918,2,1,"F")
PRC*5)z^PRC*5*
"KRN",.401,918,2,1,"GET")
S DISX(1)=$P($G(^A1AE(11005,D0,0)),U,1),Y=DISX(1) S Y(0)=Y S:$P(Y,"*",2)=999 $P(Y,"*",2)="DBA" S DISX(1)=Y
"KRN",.401,918,2,1,"IX")
^A1AE(11005,"B",^A1AE(11005,^2
"KRN",.401,918,2,1,"QCON")
I (DISX(1)]]"PRC*5)z")&(DISX(1)']]"PRC*5*999")
"KRN",.401,918,2,1,"SER")
998^998
"KRN",.401,918,2,1,"T")
PRC*5*999^PRC*5*999
"KRN",.401,918,2,1,"TXT")
PATCH DESIGNATION from PRC*5* to PRC*5*999
"KRN",.401,918,2,"B",11005,1)

"KRN",.401,918,"%D",0)
^^1^1^3150705.235439
"KRN",.401,918,"%D",1,0)
Not used. 
"KRN",.401,920,-1)
0^12
"KRN",.401,920,0)
A1AEZPKE^2920715.1449^@^11005^^@^2920715
"KRN",.401,920,2,1)
11005^.01^PATCH DESIGNATION^^
"KRN",.401,920,2,2)
11005^11^DATE PATCH VERIFIED^^
"KRN",.401,920,2,2,"ASK")

"KRN",.401,920,2,2,"F")
2920100.99999^1.1.92
"KRN",.401,920,2,2,"T")
z^
"KRN",.401,920,"%D",0)
^^1^1^3150705.235004
"KRN",.401,920,"%D",1,0)
Not used.
"KRN",.401,921,-1)
0^9
"KRN",.401,921,0)
A1AE SEQ SUMMARY SORT^2950413.2038^^11005^^^2980226
"KRN",.401,921,2,0)
^.4014^2^2
"KRN",.401,921,2,1,0)
11005^^INTERNAL(#3)^@"^^^^^^4
"KRN",.401,921,2,1,"ASK")
1
"KRN",.401,921,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X I D0>0 S DISX(1)=X
"KRN",.401,921,2,1,"F")
REFz^REG
"KRN",.401,921,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X I D0>0 S DISX(1)=X
"KRN",.401,921,2,1,"QCON")
I DISX(1)]]"REFz"
"KRN",.401,921,2,1,"T")
z^
"KRN",.401,921,2,1,"TXT")
INTERNAL(#3) from REG
"KRN",.401,921,2,2,0)
11005^6^SEQUENTIAL RELEASE NUMBER^^^^^^^2
"KRN",.401,921,2,2,"ASK")
1
"KRN",.401,921,2,2,"F")
?z^@
"KRN",.401,921,2,2,"GET")
S DISX(2)=$P($G(^A1AE(11005,D0,0)),U,6)
"KRN",.401,921,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,921,2,2,"SER")
0.2772^0.2772
"KRN",.401,921,2,2,"T")
99999^99999
"KRN",.401,921,2,2,"TXT")
SEQUENTIAL RELEASE NUMBER not null
"KRN",.401,921,2,"B",11005,1)

"KRN",.401,921,2,"B",11005,2)

"KRN",.401,921,"%D",0)
^^1^1^3150705.235701
"KRN",.401,921,"%D",1,0)
Not used.
"KRN",.401,922,-1)
0^7
"KRN",.401,922,0)
A1AE SEQ REV SUMMARY SORT^2950413.2035^^11005^^^2980225
"KRN",.401,922,2,0)
^.4014^2^2
"KRN",.401,922,2,1,0)
11005^^INTERNAL(#3)^@"^^^^^^4
"KRN",.401,922,2,1,"ASK")
1
"KRN",.401,922,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X I D0>0 S DISX(1)=X
"KRN",.401,922,2,1,"F")
-1^0
"KRN",.401,922,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X I D0>0 S DISX(1)=X
"KRN",.401,922,2,1,"QCON")
I (DISX(1)]]-1)&(DISX(1)']]99999)
"KRN",.401,922,2,1,"T")
99999^99999
"KRN",.401,922,2,1,"TXT")
INTERNAL(#3) from 0 to 99999
"KRN",.401,922,2,2,0)
11005^6^SEQUENTIAL RELEASE NUMBER^-^^^^^^2
"KRN",.401,922,2,2,"ASK")
1
"KRN",.401,922,2,2,"F")
?z^@
"KRN",.401,922,2,2,"GET")
S DISX(2)=$P($G(^A1AE(11005,D0,0)),U,6)
"KRN",.401,922,2,2,"QCON")
I DISX(2)']]99999
"KRN",.401,922,2,2,"SER")
0.0000^0.0000
"KRN",.401,922,2,2,"T")
99999^99999
"KRN",.401,922,2,2,"TXT")
SEQUENTIAL RELEASE NUMBER to 99999 (includes nulls)
"KRN",.401,922,2,"B",11005,1)

"KRN",.401,922,2,"B",11005,2)

"KRN",.401,922,"%D",0)
^^1^1^3150705.235716
"KRN",.401,922,"%D",1,0)
Not used.
"KRN",.401,923,-1)
0^6
"KRN",.401,923,0)
A1AE SEQ REV SAVE^2950413.2031^@^11005^^@^2950413
"KRN",.401,923,2,0)
^.4014^2^2
"KRN",.401,923,2,1,0)
11005^^INTERNAL(#.01)^'@"^^^^^^4
"KRN",.401,923,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X I D0>0 S DISX(1)=X
"KRN",.401,923,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X I D0>0 S DISX(1)=X
"KRN",.401,923,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,923,2,1,"TXT")
INTERNAL(#.01) not null
"KRN",.401,923,2,2,0)
11005^6^SEQUENTIAL RELEASE NUMBER^-^^^^^^2
"KRN",.401,923,2,2,"GET")
S DISX(2)=$P($G(^A1AE(11005,D0,0)),U,6)
"KRN",.401,923,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,923,2,2,"SER")
0.3267^0.3267
"KRN",.401,923,2,2,"TXT")
SEQUENTIAL RELEASE NUMBER not null
"KRN",.401,923,2,"B",11005,1)

"KRN",.401,923,2,"B",11005,2)

"KRN",.401,923,"%D",0)
^^1^1^3150705.235733
"KRN",.401,923,"%D",1,0)
Not used.
"KRN",.401,924,-1)
0^8
"KRN",.401,924,0)
A1AE SEQ SAVE^2950413.2032^@^11005^^@^2950413
"KRN",.401,924,2,0)
^.4014^2^2
"KRN",.401,924,2,1,0)
11005^^INTERNAL(#.01)^'@"^^^^^^4
"KRN",.401,924,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X I D0>0 S DISX(1)=X
"KRN",.401,924,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X I D0>0 S DISX(1)=X
"KRN",.401,924,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,924,2,1,"TXT")
INTERNAL(#.01) not null
"KRN",.401,924,2,2,0)
11005^6^SEQUENTIAL RELEASE NUMBER^^^^^^^2
"KRN",.401,924,2,2,"GET")
S DISX(2)=$P($G(^A1AE(11005,D0,0)),U,6)
"KRN",.401,924,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,924,2,2,"SER")
0.3267^0.3267
"KRN",.401,924,2,2,"TXT")
SEQUENTIAL RELEASE NUMBER not null
"KRN",.401,924,2,"B",11005,1)

"KRN",.401,924,2,"B",11005,2)

"KRN",.401,924,"%D",0)
^^1^1^3150705.235637
"KRN",.401,924,"%D",1,0)
Not used.
"KRN",.401,925,-1)
0^2
"KRN",.401,925,0)
A1AE FULL SUMMARY BY DATE^3020513.0936^@^11005^^@^3070327
"KRN",.401,925,"%D",0)
^^1^1^3150705.235055
"KRN",.401,925,"%D",1,0)
Not used.
"KRN",.401,925,"DA")
DIS("A1",
"KRN",.401,925,"DA",1)
X DIS("A1",9.2) S X1=Y(3) S X2=Y(2) S:X<X1 %=X1,X1=X,X=% S X=X2'>X&(X2'<X1)
"KRN",.401,925,"DC",1)
-1^=1
"KRN",.401,925,"DIS",0)
X DIS("A1",9.2) S X1=Y(3) S X2=Y(2) S:X<X1 %=X1,X1=X,X=% S X=X2'>X&(X2'<X1) I X=1
"KRN",.401,925,"DIS","A1",9.2)
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),Y(2)=X S X=3020101,Y(3)=X S X=3020331
"KRN",.401,925,"DL")
1
"KRN",.401,925,"DL",0)
^1^
"KRN",.401,925,"O",0)
^
"KRN",.401,925,"O",1,0)
BETWEEN(DATE PATCH VERIFIED,3020101,3020331) EQUALS 1
"KRN",.401,925,"QR")
3020513.09384^15
"KRN",.401,926,-1)
0^1
"KRN",.401,926,0)
A1AE FULL SUMARY SORT^3140325.1307^^11005^^@^3150318
"KRN",.401,926,2,0)
^.4014^3^3
"KRN",.401,926,2,1,0)
11005^^PATCH STREAM^@".2^^^^^^4
"KRN",.401,926,2,1,"ASK")
1
"KRN",.401,926,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11007.1,+$P(Y(1),U,20),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,926,2,1,"F")
FOI@z^FOIA
"KRN",.401,926,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11007.1,+$P(Y(1),U,20),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,926,2,1,"QCON")
I (DISX(1)]]"FOI@z")&(DISX(1)']]"FOIAZZ")
"KRN",.401,926,2,1,"T")
FOIAZZ^FOIAZZ
"KRN",.401,926,2,1,"TXT")
PATCH STREAM from FOIA to FOIAZZ
"KRN",.401,926,2,2,0)
11005^.01^PATCH DESIGNATION^^^^^^^4
"KRN",.401,926,2,2,"GET")
S DISX(2)=$P($G(^A1AE(11005,D0,0)),U)
"KRN",.401,926,2,2,"IX")
^A1AE(11005,"B",^A1AE(11005,^2
"KRN",.401,926,2,2,"LANG")
PATCH DESIGNATION
"KRN",.401,926,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,926,2,2,"SER")
0^0
"KRN",.401,926,2,2,"TXT")
 PATCH DESIGNATION not null
"KRN",.401,926,2,3,0)
11005^11^DATE PATCH VERIFIED^^^^^^^1
"KRN",.401,926,2,3,"ASK")
1
"KRN",.401,926,2,3,"F")
3100800.999999^AUG 1,2010^AUG 1,2010
"KRN",.401,926,2,3,"GET")
S DISX(3)=$P($G(^A1AE(11005,D0,0)),U,11)
"KRN",.401,926,2,3,"LANG")
DATE PATCH VERIFIED
"KRN",.401,926,2,3,"QCON")
I (DISX(3)]]3100800.999999)&(DISX(3)']]3150318.24)
"KRN",.401,926,2,3,"SER")
0.0000^0.0000
"KRN",.401,926,2,3,"T")
3150318.24^T@2400^MAR 18,2015@24:00
"KRN",.401,926,2,3,"TXT")
DATE PATCH VERIFIED from AUG 1,2010 to MAR 18,2015@24:00
"KRN",.401,926,2,"B",11005,1)

"KRN",.401,926,2,"B",11005,2)

"KRN",.401,926,2,"B",11005,3)

"KRN",.401,926,"%D",0)
^^1^1^3150705.235835
"KRN",.401,926,"%D",1,0)
Used by menu option A1AE FULL SUMMARY BY DATE.
"KRN",.401,927,-1)
0^4
"KRN",.401,927,0)
A1AE PATCH COMPL/COMM SORT^3140325.1337^@^11005^^@^3140912
"KRN",.401,927,2,0)
^.4014^3^3
"KRN",.401,927,2,1,0)
11005^^PATCH STREAM^@".2^^^^^^4
"KRN",.401,927,2,1,"ASK")
1
"KRN",.401,927,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11007.1,+$P(Y(1),U,20),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,927,2,1,"F")
FOIA VIST@z^FOIA VISTA
"KRN",.401,927,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11007.1,+$P(Y(1),U,20),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,927,2,1,"QCON")
I DISX(1)="FOIA VISTA"
"KRN",.401,927,2,1,"T")
FOIA VISTA^FOIA VISTA
"KRN",.401,927,2,1,"TXT")
PATCH STREAM equals FOIA VISTA
"KRN",.401,927,2,2,0)
11005^11^DATE PATCH VERIFIED^^^^^^^1
"KRN",.401,927,2,2,"ASK")
1
"KRN",.401,927,2,2,"F")
3100600.999999^JUN 1,2010^JUN 1,2010
"KRN",.401,927,2,2,"GET")
S DISX(2)=$P($G(^A1AE(11005,D0,0)),U,11)
"KRN",.401,927,2,2,"LANG")
DATE PATCH VERIFIED
"KRN",.401,927,2,2,"QCON")
I DISX(2)]]3100600.999999
"KRN",.401,927,2,2,"SER")
0.0000^0.0000
"KRN",.401,927,2,2,"T")
z^
"KRN",.401,927,2,2,"TXT")
DATE PATCH VERIFIED from JUN 1,2010
"KRN",.401,927,2,3,0)
11005^^PACKAGE^"2^^^^^^4
"KRN",.401,927,2,3,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^DIC(9.4,+$P(Y(1),U,2),0)),U) I D0>0 S DISX(3)=X
"KRN",.401,927,2,3,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^DIC(9.4,+$P(Y(1),U,2),0)),U) I D0>0 S DISX(3)=X
"KRN",.401,927,2,3,"IX")
^A1AE(11005,"D",^A1AE(11005,^2
"KRN",.401,927,2,3,"PTRIX")
^DIC(9.4,"B",
"KRN",.401,927,2,3,"QCON")
I DISX(3)'=""
"KRN",.401,927,2,3,"SER")
0.0000^0.0000
"KRN",.401,927,2,3,"TXT")
 PACKAGE not null
"KRN",.401,927,2,"B",11005,1)

"KRN",.401,927,2,"B",11005,2)

"KRN",.401,927,2,"B",11005,3)

"KRN",.401,927,"%D",0)
^^1^1^3150705.235754
"KRN",.401,927,"%D",1,0)
Used by menu option A1AE COMPLIANCE DISPLAY.
"KRN",.401,928,-1)
0^3
"KRN",.401,928,0)
A1AE GT 500^3070614.1223^@^11007^^@^3070614
"KRN",.401,928,"%D",0)
^.4012^1^1^3150705^^
"KRN",.401,928,"%D",1,0)
Find packages with patch numbers > 500.
"KRN",.401,928,"DC",1)
300,26^>500
"KRN",.401,928,"DIS",0)
S D1=+$O(^A1AE(11007,D0,"V",0)) X DIS("0A") I $T
"KRN",.401,928,"DIS","0A")
F  X DIS("0AA") X:D1'>0 "IF 0" Q:$T  S D1=$O(^A1AE(11007,D0,"V",D1)) Q:D1'>0
"KRN",.401,928,"DIS","0AA")
I $P($G(^A1AE(11007,D0,"V",D1,"PH")),U,1)>500
"KRN",.401,928,"DL")
1
"KRN",.401,928,"DL",0)
^1^
"KRN",.401,928,"O",0)
^
"KRN",.401,928,"O",1,0)
DHCP PATCH/PROBLEM PACKAGE NEXT PATCH NUMBER GREATER THAN 500
"KRN",.401,928,"QR")
3070614.12244^2
"KRN",.401,930,-1)
0^14
"KRN",.401,930,0)
A1AE STANDARD SORT1^3140325.1634^@^11005^^@^3140325
"KRN",.401,930,2,0)
^.4014^4^1
"KRN",.401,930,2,4,0)
11005^^INTERNAL(#.01)^'@"^^^^^^4
"KRN",.401,930,2,4,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X I D0>0 S DISX(4)=X
"KRN",.401,930,2,4,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X I D0>0 S DISX(4)=X
"KRN",.401,930,2,4,"QCON")
I DISX(4)'=""
"KRN",.401,930,2,4,"TXT")
 INTERNAL(#.01) not null
"KRN",.401,930,2,"B",11005,4)

"KRN",.401,930,"%D",0)
^^1^1^3150705.235519
"KRN",.401,930,"%D",1,0)
Not used.
"KRN",.401,930,"BY0")
A1AE(11005,"AB",^4
"KRN",.401,930,"BY0D",0)
^.4011624^3^3
"KRN",.401,930,"BY0D",1,0)
1^ZZZ^ZZZ
"KRN",.401,930,"BY0D",2,0)
2^2^999
"KRN",.401,930,"BY0D",3,0)
3^10000^10999
"KRN",.401,930,"BY0D","B",1,1)

"KRN",.401,930,"BY0D","B",2,2)

"KRN",.401,930,"BY0D","B",3,3)

"KRN",.401,931,-1)
0^13
"KRN",.401,931,0)
A1AE COM PATCH BY STRM BY DT^3140327.165^^11005^^^3140912
"KRN",.401,931,2,0)
^.4014^3^3
"KRN",.401,931,2,1,0)
11005^^PATCH STREAM^@".2^^^^^^4
"KRN",.401,931,2,1,"ASK")
1
"KRN",.401,931,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11007.1,+$P(Y(1),U,20),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,931,2,1,"F")
FOIA VIST@z^FOIA VISTA
"KRN",.401,931,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11007.1,+$P(Y(1),U,20),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,931,2,1,"QCON")
I (DISX(1)]]"FOIA VIST@z")&(DISX(1)']]"OSEHRA VISTA")
"KRN",.401,931,2,1,"T")
OSEHRA VISTA^OSEHRA VISTA
"KRN",.401,931,2,1,"TXT")
PATCH STREAM from FOIA VISTA to OSEHRA VISTA
"KRN",.401,931,2,2,0)
11005^^INTERNAL(STATUS OF PATCH)="c"^"@B^;L1^^^^^4
"KRN",.401,931,2,2,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S X=X="c" I D0>0 S DISX(2)=X
"KRN",.401,931,2,2,"F")
0
"KRN",.401,931,2,2,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S X=X="c" I D0>0 S DISX(2)=X
"KRN",.401,931,2,2,"QCON")
I DISX(2)
"KRN",.401,931,2,2,"T")
1
"KRN",.401,931,2,2,"TXT")
INTERNAL(STATUS OF PATCH)=""c""
"KRN",.401,931,2,3,0)
11005^10^DATE PATCH COMPLETED^@^^^^^^1
"KRN",.401,931,2,3,"ASK")
1
"KRN",.401,931,2,3,"F")
3000302.999999^MAR 3,2000^MAR 3,2000
"KRN",.401,931,2,3,"GET")
S DISX(3)=$P($G(^A1AE(11005,D0,0)),U,10)
"KRN",.401,931,2,3,"LANG")
DATE PATCH COMPLETED
"KRN",.401,931,2,3,"QCON")
I DISX(3)]]3000302.999999
"KRN",.401,931,2,3,"SER")
0.0000^0.0000
"KRN",.401,931,2,3,"T")
z^
"KRN",.401,931,2,3,"TXT")
DATE PATCH COMPLETED from MAR 3,2000
"KRN",.401,931,2,"B",11005,1)

"KRN",.401,931,2,"B",11005,2)

"KRN",.401,931,2,"B",11005,3)

"KRN",.401,931,"%D",0)
^^1^1^3150705.235144
"KRN",.401,931,"%D",1,0)
Used by menu option A1AE PRTCOMPHDTE.
"KRN",.401,932,-1)
1^11
"KRN",.401,932,0)
A1AE SUMMARY SORT    FILE #11005
"KRN",.402,1760,-1)
0^2
"KRN",.402,1760,0)
A1AE ADD/EDIT PROBLEMS^2860121^^11006^^^^
"KRN",.402,1760,"%D",0)
^^1^1^3150705.234532
"KRN",.402,1760,"%D",1,0)
Not used.
"KRN",.402,1760,"DR",1,11006)
5;5.5;6;7;10;
"KRN",.402,1761,-1)
0^4
"KRN",.402,1761,0)
A1AE CHANGE PROBLEM STATUS^2860211^^11006^^^^
"KRN",.402,1761,"%D",0)
^^1^1^3150705.234635
"KRN",.402,1761,"%D",1,0)
Not used.
"KRN",.402,1761,"DR",1,11006)
Q;S A1AESTA=$P(^A1AE(11006,DA,0),U,10),DIE("NO^")="";Q;Q;@10;10;S Y=$S(X="T":"@20",X="R":"@30",X="C"!(X="U"):"@99",1:"@40");@20;11.5;S Y="@99";@30;12.5;13;S Y="@99";@40;Q;Q;Q;Q;
"KRN",.402,1761,"DR",1,11006,1)
W !?3,*7,"Please enter 'T'abled, or 'R'esolved, or 'U'nder Review.",!?3,"You can also leave status as 'C'omplete/Release for Review.";Q;10///^S X=A1AESTA;S Y="@10";@99;K A1AESTA,DIE("NO^");
"KRN",.402,1762,-1)
0^1
"KRN",.402,1762,0)
A1AE ADD/EDIT PATCHES^3150527.2156^^11005^^^3150727
"KRN",.402,1762,"%D",0)
^^9^9^3150706.223844
"KRN",.402,1762,"%D",1,0)
This input template is the CENTER of the Patch Module workflow.
"KRN",.402,1762,"%D",2,0)

"KRN",.402,1762,"%D",3,0)
It's used by the following options:
"KRN",.402,1762,"%D",4,0)

"KRN",.402,1762,"%D",5,0)
A1AE PHADD [Add a Patch]
"KRN",.402,1762,"%D",6,0)
A1AE PHEDIT [Edit a Patch]
"KRN",.402,1762,"%D",7,0)
A1AE COPY PATCH [Copy a patch into a new patch]
"KRN",.402,1762,"%D",8,0)
A1AE PKADD [Add a Package Release]
"KRN",.402,1762,"%D",9,0)
A1AE PKEDIT [Edit a Package Release]
"KRN",.402,1762,"DIAB",1,0,11005,5)
DHCP PATCH MESSAGE:
"KRN",.402,1762,"DIAB",1,1,11005.05,0)
ALL
"KRN",.402,1762,"DIAB",1,1,11005.09,0)
ALL
"KRN",.402,1762,"DIAB",2,0,11005,0)
LAST EDITED///NOW
"KRN",.402,1762,"DR",1,11005)
Q;20///^N %I,%H,% D NOW^%DTC S X=%;S A1AETVR=$P(^A1AE(11005,DA,0),U,3);S A1AEST=$P(^A1AE(11005,DA,0),U,8);S A1AEKIDS=0;I A1AEST'="u" S DIE("NO^")="OUTOK";I A1AEST="u" S Y="@6";I A1AEST="c" S Y="@2";I A1AEST="v" S Y="@10";
"KRN",.402,1762,"DR",1,11005,1)
I A1AEST="e" S Y="@20";I A1AEST="r" S Y="@30";I A1AEST="x" S Y="@10";I A1AEST="i2" S Y="@10";I A1AEST="d2" S Y="@6";I A1AEST="s2" S Y="@3";I A1AEST="r2" S Y="@50";I A1AEST="n2" S Y="@10";S Y="@6";@1;8///R2;S A1AEST="r2";S Y="@99";
"KRN",.402,1762,"DR",1,11005,2)
@2;5;17;W !;D CONT^A1AEM;8///U;S A1AEST="u";K DIE("NO^");S Y="@6";@3;5;17;W !;D CONTS2^A1AEM;K DIE("NO^");I A1AEMNEW="" S Y="@99";I A1AEMNEW="R2" S Y="@1";I A1AEMNEW="I2" S Y="@4";I A1AEMNEW="N2" S Y="@5";8///D2;S A1AEST="d2";
"KRN",.402,1762,"DR",1,11005,3)
S Y="@6";@4;8///I2;S A1AEST="i2";26;S Y="@99";@5;8///N2;S A1AEST="n2";28;S Y="@99";@6;N % S %=$$GSTRMP^A1AEUTL(DA) I $D(^A1AE(11007.1,%)) S $P(^A1AE(11005,DA,0),U,20)=% N DIK S DIK="^A1AE(11005,",DIK(1)=.2 D EN1^DIK;5;17;@7;7;
"KRN",.402,1762,"DR",1,11005,4)
I A1AETVR=999 S Y="@8";6.5;@8;D ^A1AECOPD;5.5;I A1AETVR=999 S Y="@10";
"KRN",.402,1762,"DR",1,11005,5)
^11005.1^A1AE(11005.1,^^S I(0,0)=$G(D0),D0=D0 S:'D0!'$D(^A1AE(11005.1,+D0,0)) D0=-1 S D(0)=D0 S Y(101)=$S($D(^A1AE(11005.1,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11005,+$P(Y(101),U,1),0)),U) S D0=I(0,0) S X=$S(D(0)>0:D(0),1:"");
"KRN",.402,1762,"DR",1,11005,6)
I A1AEKIDS S Y="@9";100;@9;103//Yes;W !,"editing comments only seen by releasers/developers";16;150;W !;I A1AEST'="d2" S Y="@10";27;W !;@10;8;I X="e" S Y="@20";I X="r" S Y="@30";I X="i2" S Y="@40";I X="n2" S Y="@60";S Y="@99";@20;
"KRN",.402,1762,"DR",1,11005,7)
8.5;S Y="@99";@30;15;15.5;S Y="@99";@40;26;S Y="@99";@50;W !,"Secondary released patches cannot be edited after release.";S Y="@99";@60;28;S Y="@99";@99;K A1AEKIDS,A1AEMNEW,A1AEST,A1AETVR;
"KRN",.402,1762,"DR",2,11005.03)
.01;W !?20,"editing DESCRIPTION OF ROUTINE CHANGES";D ^A1AECOPY;D ^A1AECOPR;2.5;2;
"KRN",.402,1762,"DR",2,11005.05)
.01
"KRN",.402,1762,"DR",2,11005.09)
.01:2
"KRN",.402,1762,"DR",2,11005.1)
W !?20,"editing MESSAGE TEXT";D ^A1AEM1;W !;20;
"KRN",.402,1763,-1)
0^3
"KRN",.402,1763,0)
A1AE ADD/EDIT USERS^3030108.1107^^11007^^^3150727
"KRN",.402,1763,"%D",0)
^^4^4^3150705.234618
"KRN",.402,1763,"%D",1,0)
A1AE ADD/EDIT USERS (File #11007) is used in the following options:
"KRN",.402,1763,"%D",2,0)

"KRN",.402,1763,"%D",3,0)
A1AE PKGEDIT [Enter/Edit Authorized Users] 1^A1AEAU
"KRN",.402,1763,"%D",4,0)
A1AE MGRADD [Add Package to Patch Module] 3^A1AEAU
"KRN",.402,1763,"DIAB",1,1,11007.03,0)
ALL
"KRN",.402,1763,"DR",1,11007)
S A1AE2=$P(^A1AE(11007,DA,0),U,2),A1AE4=$P(^(0),U,4);I A1AE4="y" W !!,"This package is considered a TEST SITE PACKAGE in the Patch Module.",!!;S MASTER=$O(^DIC(9.4,"C","A1AE",0)) I MASTER'=DA K MASTER;
"KRN",.402,1763,"DR",1,11007,1)
W !,"-------------------------------------------------------------------------------";I A1AE4="y" S Y="@5";2//^S X="NO";@5;3//^S X="YES";I '$D(^XUSEC("A1AE MGR",DUZ)) S Y="@10";4//^S X="NO";S A1AE4=X;6;@10;5;I A1AE4'="y" S Y="@20";
"KRN",.402,1763,"DR",1,11007,2)
W !,"-------------------------------------------------------------------------------";50;@20;W !,"-------------------------------------------------------------------------------";100;
"KRN",.402,1763,"DR",1,11007,3)
W !,"-------------------------------------------------------------------------------";200;W !,"-------------------------------------------------------------------------------";I '$D(MASTER) S Y="@99";
"KRN",.402,1763,"DR",1,11007,4)
W !,"-------------------------------------------------------------------------------";400;@99;K A1AE2,A1AE4,MASTER;
"KRN",.402,1763,"DR",2,11007.02)
.01;2;I X'="V" S Y="";3;
"KRN",.402,1763,"DR",2,11007.03)
.01
"KRN",.402,1763,"DR",2,11007.04)
.01;2;I $D(X) W !,"For Verified Patches";3;
"KRN",.402,1763,"DR",2,11007.05)
.01;2///^S X="TODAY";I A1AE4'="y" S Y="@20";3;
"KRN",.402,1764,-1)
0^5
"KRN",.402,1764,0)
A1AE COMP DATE^3070327.1036^@^11005^^@^3150701
"KRN",.402,1764,"%D",0)
^^2^2^3150705.234713
"KRN",.402,1764,"%D",1,0)
A1AE COMP DATE (File #11005) is used by the following option:
"KRN",.402,1764,"%D",2,0)
A1AE COMPLIANCE EDIT [Compliance Date Edit]
"KRN",.402,1764,"DIAB",4,0,11005,0)
19;REQ;"REASON FOR CHANGE"
"KRN",.402,1764,"DR",1,11005)
S A1AEPRE=$P(^A1AE(11005,D0,0),"^",18);18;@1;19REASON FOR CHANGE~R~;S CDC=$$GET1^DIQ(11005,D0,19,"Z","CDC");S (I,CNT,CNT1)=0 I CDC'="" F I=1:1 S I=$O(CDC(I)) Q:'I  S CNT=CNT+$L(CDC(I,0)),CNT1=I;
"KRN",.402,1764,"DR",1,11005,1)
I CNT>256 W !!,"Text is too long. You have ",CNT," characters.  Maximum characters is 256",! K CDC,CNT,I S Y="@1";
"KRN",.402,1764,"DR",1,11005,2)
I CNT1>5 W !!,"Please enter text on less than 5 lines so text will fit in the bulletin message",! K CDC,CNT,CNT1,I S Y="@1";D:$P(^A1AE(11005,D0,0),"^",18)'=A1AEPRE ^A1AECDE;
"KRN",.402,1765,-1)
0^7
"KRN",.402,1765,0)
A1AE EDIT DHCP PATCH STREAM^3140729.2049^@^11007.1^^@^3140729
"KRN",.402,1765,"%D",0)
^^1^1^3150705.234743
"KRN",.402,1765,"%D",1,0)
Not used.
"KRN",.402,1765,"DIAB",1,0,11007.1,0)
ALL
"KRN",.402,1765,"DR",1,11007.1)
.01:10
"KRN",.402,1765,"DR",2,11007.11)
1.1
"KRN",.402,1766,-1)
0^8
"KRN",.402,1766,0)
A1AE EDIT PATCH STREAM HISTORY^3140730.1824^@^11007.2^^@^3150705
"KRN",.402,1766,"%D",0)
^^2^2^3150705.234836
"KRN",.402,1766,"%D",1,0)
A1AE EDIT PATCH STREAM HISTORY (File #11007.2) is a new template that 
"KRN",.402,1766,"%D",2,0)
is used by option A1AE EDIT PATCH STREAM HISTORY (same name).
"KRN",.402,1766,"DIAB",1,0,11007.2,0)
ALL
"KRN",.402,1766,"DR",1,11007.2)
.01:1
"KRN",.402,1766,"DR",2,11007.21)
.01:3
"KRN",.402,1766,"DR",3,11007.212)
.01
"KRN",.402,1768,-1)
0^6
"KRN",.402,1768,0)
A1AE CHANGE SITE SUBSCRIPTION^3140808.2146^@^11007.1^^@^3150607
"KRN",.402,1768,"%D",0)
^.4021^1^1^3150705^^
"KRN",.402,1768,"%D",1,0)
Used by menu option A1AE CHANGE SITE SUBSCRIPTION in order to prompt a user to select a new stream to subscribe to.
"KRN",.402,1768,"DIAB",1,1,11007.12,0)
ALL
"KRN",.402,1768,"DR",1,11007.1)
.06;1;
"KRN",.402,1768,"DR",2,11007.12)
.01:2
"KRN",.402,1768,"DR",3,11007.122)
.01
"KRN",3.6,205,-1)
0^3
"KRN",3.6,205,0)
A1AE ENTERED IN ERROR PATCH^Entered in error patch for |1|
"KRN",3.6,205,1,0)
^^5^5^2870310^^^^
"KRN",3.6,205,1,1,0)
A patch has been entered in error for '|1|'.
"KRN",3.6,205,1,2,0)
 
"KRN",3.6,205,1,3,0)
The patch is '|2|' and the subject is '|3|'.
"KRN",3.6,205,1,4,0)
 
"KRN",3.6,205,1,5,0)
Use the 'Display Patch' option for more details.
"KRN",3.6,205,3,0)
^3.63^2^2^3150705^^
"KRN",3.6,205,3,1,0)
Sent when patch module user marks patch as ENTERED IN ERROR in EDIT A 
"KRN",3.6,205,3,2,0)
PATCH [A1AE PHEDIT].
"KRN",3.6,205,4,0)
^3.64A^3^3
"KRN",3.6,205,4,1,0)
1
"KRN",3.6,205,4,1,1,0)
^^1^1^2860310^^^^
"KRN",3.6,205,4,1,1,1,0)
Package Name
"KRN",3.6,205,4,2,0)
2
"KRN",3.6,205,4,2,1,0)
^^1^1^2860310^^^^
"KRN",3.6,205,4,2,1,1,0)
Patch Designation
"KRN",3.6,205,4,3,0)
3
"KRN",3.6,205,4,3,1,0)
^^1^1^2860327^^^^
"KRN",3.6,205,4,3,1,1,0)
Subject
"KRN",3.6,206,-1)
0^1
"KRN",3.6,206,0)
A1AE COMPLETED PATCH^New Completed Patch |2|
"KRN",3.6,206,1,0)
^3.61A^12^12^3150701^^^^
"KRN",3.6,206,1,1,0)
A new patch has been completed for '|1|'.
"KRN",3.6,206,1,2,0)
 
"KRN",3.6,206,1,3,0)
The Patch is '|2|' and its status is 'COMPLETED/NOT RELEASED'.
"KRN",3.6,206,1,4,0)
     Patch Subject : |3|
"KRN",3.6,206,1,5,0)
     Patch Priority: |4|
"KRN",3.6,206,1,6,0)
 |7|
"KRN",3.6,206,1,7,0)
 
"KRN",3.6,206,1,8,0)
See 'Display a Completed/NotReleased Patch' for details.
"KRN",3.6,206,1,9,0)
 
"KRN",3.6,206,1,10,0)
A patch message has been sent.
"KRN",3.6,206,1,11,0)
     Number        : |5|
"KRN",3.6,206,1,12,0)
     Subject       : |6|
"KRN",3.6,206,3,0)
^3.63^2^2^3150705^^
"KRN",3.6,206,3,1,0)
Sent when patch module user marks patch as COMPLETED/UNVERIFIED in EDIT A 
"KRN",3.6,206,3,2,0)
PATCH [A1AE PHEDIT].
"KRN",3.6,206,4,0)
^3.64A^7^5
"KRN",3.6,206,4,1,0)
1
"KRN",3.6,206,4,1,1,0)
^3.65^1^1^3000406^^^^
"KRN",3.6,206,4,1,1,1,0)
Package Name
"KRN",3.6,206,4,2,0)
2
"KRN",3.6,206,4,2,1,0)
^^1^1^2871105^^^
"KRN",3.6,206,4,2,1,1,0)
Patch Designation
"KRN",3.6,206,4,3,0)
3
"KRN",3.6,206,4,3,1,0)
^^1^1^2860312^^^^
"KRN",3.6,206,4,3,1,1,0)
Subject
"KRN",3.6,206,4,4,0)
4
"KRN",3.6,206,4,4,1,0)
^^1^1^2920608^^^^
"KRN",3.6,206,4,4,1,1,0)
Priority of the patch
"KRN",3.6,206,4,7,0)
7
"KRN",3.6,206,4,7,1,0)
^3.65^1^1^3011003^^^^
"KRN",3.6,206,4,7,1,1,0)
display category if PATCH FOR A PATCH
"KRN",3.6,207,-1)
0^4
"KRN",3.6,207,0)
A1AE PKG^New DHCP Problem/Patch Package
"KRN",3.6,207,1,0)
^^12^12^2951031^^^^
"KRN",3.6,207,1,1,0)
The |1| package is available for user selection as 
"KRN",3.6,207,1,2,0)
part of the patch module. The package prefix is '|2|' and the
"KRN",3.6,207,1,3,0)
short description of the package is as follows:
"KRN",3.6,207,1,4,0)
 
"KRN",3.6,207,1,5,0)
 |3|
"KRN",3.6,207,1,6,0)
 
"KRN",3.6,207,1,7,0)
If you choose to select this package you will receive automatic
"KRN",3.6,207,1,8,0)
notification of new |1| patches, and automatic
"KRN",3.6,207,1,9,0)
printing of these patches when using the 'New Patch Report' option.
"KRN",3.6,207,1,10,0)
 
"KRN",3.6,207,1,11,0)
To add |1| as a selected package use the 'Select
"KRN",3.6,207,1,12,0)
Packages for Notification' option on the 'Patch User Menu'.
"KRN",3.6,207,3,0)
^^1^1^3150705.234038
"KRN",3.6,207,3,1,0)
Not used.
"KRN",3.6,207,4,0)
^3.64A^3^3
"KRN",3.6,207,4,1,0)
1
"KRN",3.6,207,4,1,1,0)
^^1^1^2880125^^^^
"KRN",3.6,207,4,1,1,1,0)
Package
"KRN",3.6,207,4,2,0)
2
"KRN",3.6,207,4,2,1,0)
^^1^1^2880125^^
"KRN",3.6,207,4,2,1,1,0)
Prefix
"KRN",3.6,207,4,3,0)
3
"KRN",3.6,207,4,3,1,0)
^^1^1^2951031^^^^
"KRN",3.6,207,4,3,1,1,0)
Short Description
"KRN",3.6,208,-1)
0^7
"KRN",3.6,208,0)
A1AE VERIFIED PATCH^New Released Patch |2|
"KRN",3.6,208,1,0)
^3.61A^11^11^3150702^^
"KRN",3.6,208,1,1,0)
A new patch has been entered for '|1|'.
"KRN",3.6,208,1,2,0)
 
"KRN",3.6,208,1,3,0)
The Patch is '|2|' and its status is 'RELEASED'.
"KRN",3.6,208,1,4,0)
     Patch Subject : |3|
"KRN",3.6,208,1,5,0)
     Patch Priority: |4|
"KRN",3.6,208,1,6,0)
 |7|
"KRN",3.6,208,1,7,0)
 
"KRN",3.6,208,1,8,0)
 |8|
"KRN",3.6,208,1,9,0)
 |9|
"KRN",3.6,208,1,10,0)
 
"KRN",3.6,208,1,11,0)
See 'New Patch Report' for details.
"KRN",3.6,208,3,0)
^3.63^3^3^3150705^^
"KRN",3.6,208,3,1,0)
Sent when patch module user marks patch as VERIFIED in EDIT A 
"KRN",3.6,208,3,2,0)
PATCH [A1AE PHEDIT] or from Release a Patch (and/or edit internal 
"KRN",3.6,208,3,3,0)
comments) [A1AE PHVER].
"KRN",3.6,208,4,0)
^3.64A^9^7
"KRN",3.6,208,4,1,0)
1
"KRN",3.6,208,4,1,1,0)
^^1^1^2870925^
"KRN",3.6,208,4,1,1,1,0)
Package Name
"KRN",3.6,208,4,2,0)
2
"KRN",3.6,208,4,2,1,0)
^^1^1^2870925^
"KRN",3.6,208,4,2,1,1,0)
Package Designation
"KRN",3.6,208,4,3,0)
3
"KRN",3.6,208,4,3,1,0)
^^1^1^2921110^^
"KRN",3.6,208,4,3,1,1,0)
Subject
"KRN",3.6,208,4,4,0)
4
"KRN",3.6,208,4,4,1,0)
^^1^1^2870925^^
"KRN",3.6,208,4,4,1,1,0)
Priority of the patch
"KRN",3.6,208,4,7,0)
7
"KRN",3.6,208,4,7,1,0)
^3.65^1^1^3011017^^^^
"KRN",3.6,208,4,7,1,1,0)
Display category when PATCH FOR A PATCH
"KRN",3.6,208,4,8,0)
8
"KRN",3.6,208,4,8,1,0)
^^1^1^3011017^
"KRN",3.6,208,4,8,1,1,0)
Install by Date
"KRN",3.6,208,4,9,0)
9
"KRN",3.6,208,4,9,1,0)
^3.65^1^1^3021204^^
"KRN",3.6,208,4,9,1,1,0)
Compliance Statement
"KRN",3.6,209,-1)
0^5
"KRN",3.6,209,0)
A1AE RETIRED PATCH^Retired Patch for |1|
"KRN",3.6,209,1,0)
^^5^5^2951031^^^
"KRN",3.6,209,1,1,0)
A patch has been retired for '|1|'.
"KRN",3.6,209,1,2,0)
 
"KRN",3.6,209,1,3,0)
The patch is '|2|' and the subject is '|3|'.
"KRN",3.6,209,1,4,0)
 
"KRN",3.6,209,1,5,0)
Use the 'Display Patch' option for more details.
"KRN",3.6,209,3,0)
^3.63^2^2^3150705^^
"KRN",3.6,209,3,1,0)
Sent when patch module user marks patch as RETIRED in EDIT A PATCH [A1AE 
"KRN",3.6,209,3,2,0)
PHEDIT].
"KRN",3.6,209,4,0)
^3.64A^3^3
"KRN",3.6,209,4,1,0)
1
"KRN",3.6,209,4,1,1,0)
^^1^1^2891211^
"KRN",3.6,209,4,1,1,1,0)
Package Name
"KRN",3.6,209,4,2,0)
2
"KRN",3.6,209,4,2,1,0)
^^1^1^2891211^
"KRN",3.6,209,4,2,1,1,0)
Patch Description
"KRN",3.6,209,4,3,0)
3
"KRN",3.6,209,4,3,1,0)
^^1^1^2951031^^^
"KRN",3.6,209,4,3,1,1,0)
Subject
"KRN",3.6,210,-1)
0^2
"KRN",3.6,210,0)
A1AE COMPLIANCE DATE EDIT^PATCH |2| COMPLIANCE DATE CHANGE
"KRN",3.6,210,1,0)
^^14^14^3070516^
"KRN",3.6,210,1,1,0)
The Compliance Date has been edited for a "|1|" patch.
"KRN",3.6,210,1,2,0)
 
"KRN",3.6,210,1,3,0)
Patch:   |2|
"KRN",3.6,210,1,4,0)
Patch Subject:  |3|
"KRN",3.6,210,1,5,0)
Patch Priority: |4|
"KRN",3.6,210,1,6,0)
|8|
"KRN",3.6,210,1,7,0)
|9|
"KRN",3.6,210,1,8,0)
|10|
"KRN",3.6,210,1,9,0)
|11|
"KRN",3.6,210,1,10,0)
|12|
"KRN",3.6,210,1,11,0)
|13|
"KRN",3.6,210,1,12,0)
|14|
"KRN",3.6,210,1,13,0)
|15|
"KRN",3.6,210,1,14,0)
|16|
"KRN",3.6,210,3,0)
^^1^1^3150705.234148
"KRN",3.6,210,3,1,0)
<Used by missing routine A1AECDE. Not present in our copy of the patch module.>
"KRN",3.6,210,4,0)
^3.64A^16^13
"KRN",3.6,210,4,1,0)
1
"KRN",3.6,210,4,1,1,0)
^^1^1^3040629^
"KRN",3.6,210,4,1,1,1,0)
Package Name
"KRN",3.6,210,4,2,0)
2
"KRN",3.6,210,4,2,1,0)
^^1^1^3040629^
"KRN",3.6,210,4,2,1,1,0)
Package Designation
"KRN",3.6,210,4,3,0)
3
"KRN",3.6,210,4,3,1,0)
^^1^1^3040629^
"KRN",3.6,210,4,3,1,1,0)
Subject
"KRN",3.6,210,4,4,0)
4
"KRN",3.6,210,4,4,1,0)
^^1^1^3040629^
"KRN",3.6,210,4,4,1,1,0)
Priority of patch
"KRN",3.6,210,4,8,0)
8
"KRN",3.6,210,4,9,0)
9
"KRN",3.6,210,4,9,1,0)
^3.65^1^1^3070516^^^^
"KRN",3.6,210,4,9,1,1,0)
Compliance Statement
"KRN",3.6,210,4,10,0)
10
"KRN",3.6,210,4,11,0)
11
"KRN",3.6,210,4,11,1,0)
^^1^1^3070326^
"KRN",3.6,210,4,11,1,1,0)
Compliance Date comments 11-16
"KRN",3.6,210,4,12,0)
12
"KRN",3.6,210,4,13,0)
13
"KRN",3.6,210,4,14,0)
14
"KRN",3.6,210,4,15,0)
15
"KRN",3.6,210,4,16,0)
16
"KRN",3.6,211,-1)
0^6
"KRN",3.6,211,0)
A1AE VERIFIED PACKAGE^New Released Package |2|
"KRN",3.6,211,1,0)
^^4^4^3060601^
"KRN",3.6,211,1,1,0)
A new package '|1|' has been Released.
"KRN",3.6,211,1,2,0)
 
"KRN",3.6,211,1,3,0)
 |8|
"KRN",3.6,211,1,4,0)
 |9|
"KRN",3.6,211,3,0)
^3.63^1^1^3150705^
"KRN",3.6,211,3,1,0)
Not used. 
"KRN",3.6,211,4,0)
^3.64A^6^9
"KRN",3.6,211,4,1,0)
1
"KRN",3.6,211,4,1,1,0)
^3.65^1^1^3060601^^
"KRN",3.6,211,4,1,1,1,0)
Package Name
"KRN",3.6,211,4,2,0)
2
"KRN",3.6,211,4,2,1,0)
^3.65^1^1^3060601^^
"KRN",3.6,211,4,2,1,1,0)
Package Designation
"KRN",3.6,211,4,3,0)
3
"KRN",3.6,211,4,3,1,0)
^3.65^1^1^3060601^^^
"KRN",3.6,211,4,3,1,1,0)
Subject
"KRN",3.6,211,4,4,0)
4
"KRN",3.6,211,4,4,1,0)
^^1^1^3060601^
"KRN",3.6,211,4,4,1,1,0)
Priority of the package
"KRN",3.6,211,4,5,0)
5
"KRN",3.6,211,4,6,0)
6
"KRN",3.6,211,4,7,0)
7
"KRN",3.6,211,4,7,1,0)
^3.65^1^1^3060601^^^^
"KRN",3.6,211,4,7,1,1,0)
Display category when PATCH FOR A PATCH
"KRN",3.6,211,4,8,0)
8
"KRN",3.6,211,4,8,1,0)
^3.65^1^1^3060601^^
"KRN",3.6,211,4,8,1,1,0)
Install by Date
"KRN",3.6,211,4,9,0)
9
"KRN",3.6,211,4,9,1,0)
^3.65^1^1^3060601^^^
"KRN",3.6,211,4,9,1,1,0)
Compliance Statement
"KRN",3.6,212,-1)
0^8
"KRN",3.6,212,0)
A1AE LOAD RELEASED PATCH^Patches imported into the Patch Module^^0
"KRN",3.6,212,1,0)
^^1^1^3140304^
"KRN",3.6,212,1,1,0)
The following patches were loaded by |1| and are ready for review.
"KRN",3.6,212,3,0)
^3.63^3^3^3150705^^^
"KRN",3.6,212,3,1,0)
This bulletin will be sent to members of A1AE LOAD RELEASED PATCH
"KRN",3.6,212,3,2,0)
whenever a new released patch has been imported from Mailman or
"KRN",3.6,212,3,3,0)
the host file system.
"KRN",3.6,212,4,0)
^3.64A^1^1
"KRN",3.6,212,4,1,0)
1
"KRN",3.6,212,4,1,1,0)
^^1^1^3140304^
"KRN",3.6,212,4,1,1,1,0)
The user loading the patches.
"KRN",3.6,213,-1)
0^11
"KRN",3.6,213,0)
A1AE SEC DEVELOPMENT PATCH^New Secondary Development Patch |2|^^0
"KRN",3.6,213,1,0)
^^12^12^3140326^
"KRN",3.6,213,1,1,0)
A new patch has entered secondary development for '|1|'.
"KRN",3.6,213,1,2,0)
 
"KRN",3.6,213,1,3,0)
The Patch is '|2|' and its status is 'SECONDARY DEVELOPMENT'.
"KRN",3.6,213,1,4,0)
     Patch Subject : |3|
"KRN",3.6,213,1,5,0)
     Patch Priority: |4|
"KRN",3.6,213,1,6,0)
 |7|
"KRN",3.6,213,1,7,0)
 
"KRN",3.6,213,1,8,0)
See 'Extended (DIQ) Display of a Patch' for details.
"KRN",3.6,213,1,9,0)
 
"KRN",3.6,213,1,10,0)
A patch message has been sent.
"KRN",3.6,213,1,11,0)
     Number        : |5|
"KRN",3.6,213,1,12,0)
     Subject       : |6|
"KRN",3.6,213,3,0)
^3.63^2^2^3150705^^
"KRN",3.6,213,3,1,0)
Sent when patch module user marks patch as SEC DEVELOPMENT in EDIT A 
"KRN",3.6,213,3,2,0)
PATCH [A1AE PHEDIT].
"KRN",3.6,213,4,0)
^3.64A^7^5
"KRN",3.6,213,4,1,0)
1
"KRN",3.6,213,4,1,1,0)
^^1^1^3140326^
"KRN",3.6,213,4,1,1,1,0)
Package Name
"KRN",3.6,213,4,2,0)
2
"KRN",3.6,213,4,2,1,0)
^^1^1^3140326^
"KRN",3.6,213,4,2,1,1,0)
Patch Designation
"KRN",3.6,213,4,3,0)
3
"KRN",3.6,213,4,3,1,0)
^^1^1^3140326^
"KRN",3.6,213,4,3,1,1,0)
Subject
"KRN",3.6,213,4,4,0)
4
"KRN",3.6,213,4,4,1,0)
^^1^1^3140326^
"KRN",3.6,213,4,4,1,1,0)
Priority of the patch
"KRN",3.6,213,4,7,0)
7
"KRN",3.6,213,4,7,1,0)
^^1^1^3140326^
"KRN",3.6,213,4,7,1,1,0)
display category if PATCH FOR A PATCH
"KRN",3.6,214,-1)
0^10
"KRN",3.6,214,0)
A1AE SEC COMPLETION PATCH^New Secondary Completion Patch |2|^^0
"KRN",3.6,214,1,0)
^^12^12^3140326^
"KRN",3.6,214,1,1,0)
A new patch has been secondarily completed for '|1|'.
"KRN",3.6,214,1,2,0)
 
"KRN",3.6,214,1,3,0)
The Patch is '|2|' and its status is 'SECONDARY COMPLETION'.
"KRN",3.6,214,1,4,0)
     Patch Subject : |3|
"KRN",3.6,214,1,5,0)
     Patch Priority: |4|
"KRN",3.6,214,1,6,0)
 |7|
"KRN",3.6,214,1,7,0)
 
"KRN",3.6,214,1,8,0)
See 'Display a Completed/NotReleased Patch' for details.
"KRN",3.6,214,1,9,0)
 
"KRN",3.6,214,1,10,0)
A patch message has been sent.
"KRN",3.6,214,1,11,0)
     Number        : |5|
"KRN",3.6,214,1,12,0)
     Subject       : |6|
"KRN",3.6,214,3,0)
^3.63^2^2^3150705^^
"KRN",3.6,214,3,1,0)
Sent when patch module user marks patch as SEC COMPLETION in EDIT A 
"KRN",3.6,214,3,2,0)
PATCH [A1AE PHEDIT].
"KRN",3.6,214,4,0)
^3.64A^7^5
"KRN",3.6,214,4,1,0)
1
"KRN",3.6,214,4,1,1,0)
^^1^1^3140326^
"KRN",3.6,214,4,1,1,1,0)
Package Name
"KRN",3.6,214,4,2,0)
2
"KRN",3.6,214,4,2,1,0)
^^1^1^3140326^
"KRN",3.6,214,4,2,1,1,0)
Patch Designation
"KRN",3.6,214,4,3,0)
3
"KRN",3.6,214,4,3,1,0)
^^1^1^3140326^
"KRN",3.6,214,4,3,1,1,0)
Subject
"KRN",3.6,214,4,4,0)
4
"KRN",3.6,214,4,4,1,0)
^^1^1^3140326^
"KRN",3.6,214,4,4,1,1,0)
Priority of the patch
"KRN",3.6,214,4,7,0)
7
"KRN",3.6,214,4,7,1,0)
^^1^1^3140326^
"KRN",3.6,214,4,7,1,1,0)
display category if PATCH FOR A PATCH
"KRN",3.6,215,-1)
0^12
"KRN",3.6,215,0)
A1AE SEC RELEASE PATCH^New Secondary Released Patch |2|^^0
"KRN",3.6,215,1,0)
^^11^11^3140326^
"KRN",3.6,215,1,1,0)
A new patch has been entered for '|1|'.
"KRN",3.6,215,1,2,0)
 
"KRN",3.6,215,1,3,0)
The Patch is '|2|' and its status is 'SECONDARY RELEASED'.
"KRN",3.6,215,1,4,0)
     Patch Subject : |3|
"KRN",3.6,215,1,5,0)
     Patch Priority: |4|
"KRN",3.6,215,1,6,0)
 |7|
"KRN",3.6,215,1,7,0)
 
"KRN",3.6,215,1,8,0)
 |8|
"KRN",3.6,215,1,9,0)
 |9|
"KRN",3.6,215,1,10,0)
 
"KRN",3.6,215,1,11,0)
See 'New Patch Report' for details.
"KRN",3.6,215,3,0)
^3.63^2^2^3150705^^
"KRN",3.6,215,3,1,0)
Sent when patch module user marks patch as SEC RELEASE in EDIT A PATCH 
"KRN",3.6,215,3,2,0)
[A1AE PHEDIT].
"KRN",3.6,215,4,0)
^3.64A^9^7
"KRN",3.6,215,4,1,0)
1
"KRN",3.6,215,4,1,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,1,1,1,0)
Package Name
"KRN",3.6,215,4,2,0)
2
"KRN",3.6,215,4,2,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,2,1,1,0)
Package Designation
"KRN",3.6,215,4,3,0)
3
"KRN",3.6,215,4,3,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,3,1,1,0)
Subject
"KRN",3.6,215,4,4,0)
4
"KRN",3.6,215,4,4,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,4,1,1,0)
Priority of the patch
"KRN",3.6,215,4,7,0)
7
"KRN",3.6,215,4,7,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,7,1,1,0)
Display category when PATCH FOR A PATCH
"KRN",3.6,215,4,8,0)
8
"KRN",3.6,215,4,8,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,8,1,1,0)
Install by Date
"KRN",3.6,215,4,9,0)
9
"KRN",3.6,215,4,9,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,9,1,1,0)
Compliance Statement
"KRN",3.6,216,-1)
0^9
"KRN",3.6,216,0)
A1AE DENIED SEC RELEASE PATCH^New Denied Secondary Release Patch |2|^^0
"KRN",3.6,216,1,0)
^^12^12^3140326^
"KRN",3.6,216,1,1,0)
A new patch has been denied secondary release for '|1|'.
"KRN",3.6,216,1,2,0)
 
"KRN",3.6,216,1,3,0)
The Patch is '|2|' and its status is 'NOT FOR SECONDARY RELEASE'.
"KRN",3.6,216,1,4,0)
     Patch Subject : |3|
"KRN",3.6,216,1,5,0)
     Patch Priority: |4|
"KRN",3.6,216,1,6,0)
 |7|
"KRN",3.6,216,1,7,0)
 
"KRN",3.6,216,1,8,0)
See 'Extended (DIQ) Display of a Patch' for details.
"KRN",3.6,216,1,9,0)
 
"KRN",3.6,216,1,10,0)
A patch message has been sent.
"KRN",3.6,216,1,11,0)
     Number        : |5|
"KRN",3.6,216,1,12,0)
     Subject       : |6|
"KRN",3.6,216,3,0)
^3.63^2^2^3150705^^
"KRN",3.6,216,3,1,0)
Sent when patch module user marks patch as NOT FOR SEC RELEASE in EDIT A 
"KRN",3.6,216,3,2,0)
PATCH [A1AE PHEDIT].
"KRN",3.6,216,4,0)
^3.64A^7^5
"KRN",3.6,216,4,1,0)
1
"KRN",3.6,216,4,1,1,0)
^^1^1^3140326^
"KRN",3.6,216,4,1,1,1,0)
Package Name
"KRN",3.6,216,4,2,0)
2
"KRN",3.6,216,4,2,1,0)
^^1^1^3140326^
"KRN",3.6,216,4,2,1,1,0)
Patch Designation
"KRN",3.6,216,4,3,0)
3
"KRN",3.6,216,4,3,1,0)
^^1^1^3140326^
"KRN",3.6,216,4,3,1,1,0)
Subject
"KRN",3.6,216,4,4,0)
4
"KRN",3.6,216,4,4,1,0)
^^1^1^3140326^
"KRN",3.6,216,4,4,1,1,0)
Priority of the patch
"KRN",3.6,216,4,7,0)
7
"KRN",3.6,216,4,7,1,0)
^^1^1^3140326^
"KRN",3.6,216,4,7,1,1,0)
display category if PATCH FOR A PATCH
"KRN",3.8,308,-1)
0^3
"KRN",3.8,308,0)
A1AE PATCH ERRORS^PU^y^^^^
"KRN",3.8,308,2,0)
^3.801^3^3^3150705^^
"KRN",3.8,308,2,1,0)
To get alerts when there are problems with the messages that are sent to 
"KRN",3.8,308,2,2,0)
the patch module via the HFS checksum server in A1AEHSVR when a KIDS 
"KRN",3.8,308,2,3,0)
build is exported to the file system at a client VISTA instance.
"KRN",3.8,308,3)

"KRN",3.8,309,-1)
0^2
"KRN",3.8,309,0)
A1AE PACKAGE RELEASE^PU^n^^^^
"KRN",3.8,309,2,0)
^3.801^2^2^3150706^^^^
"KRN",3.8,309,2,1,0)
This mail group will get a message when a package or patch is released
"KRN",3.8,309,2,2,0)
thru the NPM.
"KRN",3.8,309,3)

"KRN",3.8,310,-1)
0^1
"KRN",3.8,310,0)
A1AE HFS MESSAGES^PU^y^^^^
"KRN",3.8,310,2,0)
^^4^4^3150705.230144
"KRN",3.8,310,2,1,0)
This mail group gets forwarded messages from the HFS checksum
"KRN",3.8,310,2,2,0)
server in A1AEHSVR so problems can be tracked. The HFS checksum server
"KRN",3.8,310,2,3,0)
receives checksums whenever a user elects to export a patch as an HFS file
"KRN",3.8,310,2,4,0)
rather than sending it via packman to the patch module.
"KRN",3.8,310,3)

"KRN",3.8,311,-1)
0^4
"KRN",3.8,311,0)
A1AE LOAD RELEASED PATCH^PU^^^^^
"KRN",3.8,311,2,0)
^3.801^5^5^3150705^^
"KRN",3.8,311,2,1,0)
When a patch is loaded into the Patch Module using the one of the options 
"KRN",3.8,311,2,2,0)
from A1AE IMPORT MENU, information on the loaded patches is sent to the 
"KRN",3.8,311,2,3,0)
memebers of this mail group.
"KRN",3.8,311,2,4,0)
 
"KRN",3.8,311,2,5,0)
The routine A1AEK2M is responsible for sending these messages.
"KRN",3.8,311,3)

"KRN",3.8,313,-1)
0^6
"KRN",3.8,313,0)
A1AESTRMCHG^PU^^^^^
"KRN",3.8,313,2,0)
^3.801^3^3^3150727^^^^
"KRN",3.8,313,2,1,0)
Mailgroup to receive email message if the site's patch stream is 
"KRN",3.8,313,2,2,0)
changed.  This mailgroup notifies local users AND sends email out through 
"KRN",3.8,313,2,3,0)
the MEMBERS - REMOTE server S.A1AENEWSTRM to notify FORUM.
"KRN",3.8,313,3)

"KRN",3.8,314,-1)
0^5
"KRN",3.8,314,0)
A1AEFMSC^PU^^^^^
"KRN",3.8,314,2,0)
^3.801^2^2^3150705^^^^
"KRN",3.8,314,2,1,0)
FORUM side mail group to receive client site/domain requests to change 
"KRN",3.8,314,2,2,0)
their ACTIVE PATCH STREAM.
"KRN",3.8,314,3)

"KRN",9.2,1276,-1)
0^1
"KRN",9.2,1276,0)
A1AE HELP MENU DEVELOPER^DEVELOPER MENU^3141212.0346^^
"KRN",9.2,1276,1,0)
^9.21^3^3^3150602^^
"KRN",9.2,1276,1,1,0)
This is the main menu for primary and secondary development. The main 
"KRN",9.2,1276,1,2,0)
options most developers will use from this menu are: [ADD] a Patch, [EDIT]
"KRN",9.2,1276,1,3,0)
a Patch, [DISPLAY] a Patch, and [EXTENDED] (DIQ) Display of a Patch.
"KRN",9.2,1276,2,0)
^9.22A^4^4
"KRN",9.2,1276,2,1,0)
ADD^A1AE HELP OPTION ADD PATCH
"KRN",9.2,1276,2,2,0)
EDIT^A1AE HELP OPTION EDIT PATCH
"KRN",9.2,1276,2,3,0)
DISPLAY^A1AE HELP OPTION DISPLAY PATCH
"KRN",9.2,1276,2,4,0)
EXTENDED^A1AE HELP OPTION EXT DISPLAY
"KRN",9.2,1277,-1)
0^3
"KRN",9.2,1277,0)
A1AE HELP MENU PACKAGE^PACKAGE MENU^3141212.0403^^
"KRN",9.2,1277,1,0)
^9.21^7^7^3150602^^^^
"KRN",9.2,1277,1,1,0)
This is the menu for releasing complete new versions of packages. If you 
"KRN",9.2,1277,1,2,0)
are trying to add a package to the patch module, you can do so from the 
"KRN",9.2,1277,1,3,0)
Patch Module [MANAGEMENT] menu. If you are trying to manage a particular 
"KRN",9.2,1277,1,4,0)
package within the Patch Module, please see the [PACKAGE] Management Menu.
"KRN",9.2,1277,1,5,0)
 
"KRN",9.2,1277,1,6,0)
From this menu, you can [ADD], [EDIT], or [DELETE] a package, or perform a
"KRN",9.2,1277,1,7,0)
package [RELEASE].
"KRN",9.2,1277,2,0)
^9.22A^6^6
"KRN",9.2,1277,2,1,0)
ADD^A1AE HELP OPTION ADD PGK REL
"KRN",9.2,1277,2,2,0)
DELETE^A1AE HELP OPTION DEL PGK REL
"KRN",9.2,1277,2,3,0)
EDIT^A1AE HELP OPTION EDIT PGK REL
"KRN",9.2,1277,2,4,0)
MANAGEMENT^A1AE HELP MENU PATCH MGR
"KRN",9.2,1277,2,5,0)
PACKAGE^A1AE HELP MENU PKG MGT
"KRN",9.2,1277,2,6,0)
RELEASE^A1AE HELP OPTION PGK RELEASE
"KRN",9.2,1278,-1)
0^4
"KRN",9.2,1278,0)
A1AE HELP MENU PATCH MGR^PATCH MODULE MANAGEMENT MENU^3141212.0349^^
"KRN",9.2,1278,1,0)
^9.21^8^8^3150602^^
"KRN",9.2,1278,1,1,0)
This menu is for the overall management of the Patch Module on a Forum 
"KRN",9.2,1278,1,2,0)
system. All the options on this menu are locked with security keys; please
"KRN",9.2,1278,1,3,0)
see the Patch Module Technical Manual for a complete list of keys and
"KRN",9.2,1278,1,4,0)
options.
"KRN",9.2,1278,1,5,0)
 
"KRN",9.2,1278,1,6,0)
The Patch Module management team can use this menu to [ADD] a package to 
"KRN",9.2,1278,1,7,0)
the Patch Module, add or edit patch [STREAMS], and perform [KEY]
"KRN",9.2,1278,1,8,0)
allocation for patch functions.
"KRN",9.2,1278,2,0)
^9.22A^3^3
"KRN",9.2,1278,2,1,0)
ADD^A1AE HELP OPTION ADD PACKAGE
"KRN",9.2,1278,2,2,0)
STREAMS^A1AE HELP OPTION PATCH STREAMS
"KRN",9.2,1278,2,3,0)
KEY^A1AE HELP OPTION ALLOCATE KEY
"KRN",9.2,1279,-1)
0^5
"KRN",9.2,1279,0)
A1AE HELP MENU PKG MGT^PACKAGE MANAGEMENT MENU^3141212.0405^^
"KRN",9.2,1279,1,0)
^9.21^5^5^3150602^^^
"KRN",9.2,1279,1,1,0)
This menu contains options that an application or package manager can use 
"KRN",9.2,1279,1,2,0)
to manage the application's use in the Patch Module. From this menu, 
"KRN",9.2,1279,1,3,0)
managers can enter and edit [AUTHORIZED] users and see a list of package 
"KRN",9.2,1279,1,4,0)
[USERS]. Managers with the appropriate security key can also perform [KEY]
"KRN",9.2,1279,1,5,0)
allocation for patch functions
"KRN",9.2,1279,2,0)
^9.22A^3^3
"KRN",9.2,1279,2,1,0)
AUTHORIZED^A1AE HELP OPTION AUTH USERS
"KRN",9.2,1279,2,2,0)
USERS^A1AE HELP OPTION LIST USERS
"KRN",9.2,1279,2,3,0)
KEY^A1AE HELP OPTION ALLOCATE KEY
"KRN",9.2,1280,-1)
0^6
"KRN",9.2,1280,0)
A1AE HELP MENU SEC REPORTS^SECONDARY STATUS REPORTS MENU^3141212.0351^
"KRN",9.2,1280,1,0)
^9.21^4^4^3150602^^
"KRN",9.2,1280,1,1,0)
This menu is for anyone who does secondary development. From this menu, 
"KRN",9.2,1280,1,2,0)
you can see a list of [ALL] patches for a package in secondary 
"KRN",9.2,1280,1,3,0)
development, a list of secondary patches by [DATE], or a [SUMMARY] report 
"KRN",9.2,1280,1,4,0)
of all secondary patches for a package.
"KRN",9.2,1280,2,0)
^9.22A^3^3
"KRN",9.2,1280,2,1,0)
ALL^A1AE HELP OPTION ALL SECONDARY
"KRN",9.2,1280,2,2,0)
DATE^A1AE HELP OPTION SEC BY DATE
"KRN",9.2,1280,2,3,0)
SUMMARY^A1AE HELP OPTION SUMMARY SEC
"KRN",9.2,1281,-1)
0^7
"KRN",9.2,1281,0)
A1AE HELP MENU SUPPORT^SUPPORT MENU^3141212.0352^^
"KRN",9.2,1281,1,0)
^9.21^5^5^3150602^^
"KRN",9.2,1281,1,1,0)
This menu is intended for field support personnel who track user issues 
"KRN",9.2,1281,1,2,0)
and problems. It is also intended for verifiers and releasers. From this 
"KRN",9.2,1281,1,3,0)
menu, all users can view reports of [UNRELEASED] and [RELEASED] patches. 
"KRN",9.2,1281,1,4,0)
Users with the Verifier security key can also [RELEASE] a patch and view a
"KRN",9.2,1281,1,5,0)
report of patches under [DEVELOPMENT].
"KRN",9.2,1281,2,0)
^9.22A^4^4
"KRN",9.2,1281,2,1,0)
UNRELEASED^A1AE HELP OPTION COMPL NOT REL
"KRN",9.2,1281,2,2,0)
RELEASE^A1AE HELP OPTION RELEASE PATCH
"KRN",9.2,1281,2,3,0)
RELEASED^A1AE HELP OPTION RELEASED RPT
"KRN",9.2,1281,2,4,0)
DEVELOPMENT^A1AE HELP OPTION UNDER DEV RPT
"KRN",9.2,1283,-1)
0^9
"KRN",9.2,1283,0)
A1AE HELP MENU VERIFIER^VERIFIER/RELEASER MENU^3141212.0354^
"KRN",9.2,1283,1,0)
^9.21^12^12^3150602^^^^
"KRN",9.2,1283,1,1,0)
This menu is intended for those who verify and release patches. At 
"KRN",9.2,1283,1,2,0)
present, it only includes options for verification and release of 
"KRN",9.2,1283,1,3,0)
primary-development patches. If you are verifying and releasing 
"KRN",9.2,1283,1,4,0)
secondary-development patches, please see the Patch Verifier User Manual 
"KRN",9.2,1283,1,5,0)
for more information.
"KRN",9.2,1283,1,6,0)
 
"KRN",9.2,1283,1,7,0)
From this menu, you can see a [SUMMARY] of completed patches for your 
"KRN",9.2,1283,1,8,0)
assigned packages, [DISPLAY] a single unreleased patch, [FORWARD] an 
"KRN",9.2,1283,1,9,0)
unreleased patch, and [RELEASE] a patch once you have verified it. These 
"KRN",9.2,1283,1,10,0)
are the options most likely to be needed by patch verifiers. There are 
"KRN",9.2,1283,1,11,0)
also reports and other options; please see their specific help frames for 
"KRN",9.2,1283,1,12,0)
more information.
"KRN",9.2,1283,2,0)
^9.22A^4^4
"KRN",9.2,1283,2,1,0)
SUMMARY^A1AE HELP OPTION COMP SUMM PKG
"KRN",9.2,1283,2,2,0)
DISPLAY^A1AE HELP OPTION DSPL NOT REL
"KRN",9.2,1283,2,3,0)
FORWARD^A1AE HELP OPTION FWD NOT REL
"KRN",9.2,1283,2,4,0)
RELEASE^A1AE HELP OPTION RELEASE PATCH
"KRN",9.2,1284,-1)
0^2
"KRN",9.2,1284,0)
A1AE HELP MENU IMPORT^PATCH IMPORT FROM FILESYSTEM MENU^3141212.0413^^
"KRN",9.2,1284,1,0)
^9.21^7^7^3150602^^
"KRN",9.2,1284,1,1,0)
The options on this menu allow you to bring patches from the filesystem 
"KRN",9.2,1284,1,2,0)
into the Patch Module. USE CAUTION. The options on this menu have the
"KRN",9.2,1284,1,3,0)
potential to seriously corrupt your VISTA system. Before proceeding, make
"KRN",9.2,1284,1,4,0)
sure you know which patches have already been imported, which patches you
"KRN",9.2,1284,1,5,0)
need, and what the options on this menu do. You can import patches from a
"KRN",9.2,1284,1,6,0)
[SINGLE] directory, or from a directory [TREE]. This menu should only be
"KRN",9.2,1284,1,7,0)
used by the person in charge of the Patch Module at your facility.
"KRN",9.2,1284,2,0)
^9.22A^2^2
"KRN",9.2,1284,2,2,0)
TREE^A1AE HELP OPTION TREE IMPORT
"KRN",9.2,1285,-1)
0^10
"KRN",9.2,1285,0)
A1AE HELP OPTION ADD PACKAGE^ADD A PACKAGE TO THE PATCH MODULE^3150602.001517^
"KRN",9.2,1285,1,0)
^^36^36^3150602^
"KRN",9.2,1285,1,1,0)
Before a package can be patched, it must first be added to the Patch 
"KRN",9.2,1285,1,2,0)
Module. This option is locked with key A1AE MGR. For complete information
"KRN",9.2,1285,1,3,0)
about how to use this option, please see the Primary Developer User
"KRN",9.2,1285,1,4,0)
Manual.
"KRN",9.2,1285,1,5,0)
 
"KRN",9.2,1285,1,6,0)
When you choose this option, you will be prompted for the package to be 
"KRN",9.2,1285,1,7,0)
added. If you are confident that patches for this package are ready to be
"KRN",9.2,1285,1,8,0)
seen and used by users, set the "User Selection Permitted" flag to Yes.
"KRN",9.2,1285,1,9,0)
 
"KRN",9.2,1285,1,10,0)
For quality-assurance purposes, the "Permit Developer to Complete" flag 
"KRN",9.2,1285,1,11,0)
should always be set to No. This ensures that at least two developers will
"KRN",9.2,1285,1,12,0)
need to work on the patch to complete it.
"KRN",9.2,1285,1,13,0)
 
"KRN",9.2,1285,1,14,0)
The "For Test Site Only?" flag will almost always be set to "No." The only
"KRN",9.2,1285,1,15,0)
exception is when an entirely new package is being developed and only the 
"KRN",9.2,1285,1,16,0)
test sites actually have it installed.
"KRN",9.2,1285,1,17,0)
 
"KRN",9.2,1285,1,18,0)
Generally, the "Performance Measure Flag" field should be left blank.
"KRN",9.2,1285,1,19,0)
 
"KRN",9.2,1285,1,20,0)
Set the "Ask Patch Description Copy" flag to YES.
"KRN",9.2,1285,1,21,0)
 
"KRN",9.2,1285,1,22,0)
Next, you will be asked to select support personnel, meaning all 
"KRN",9.2,1285,1,23,0)
non-developers who will be working on the patch, including any verifiers.
"KRN",9.2,1285,1,24,0)
Support personnel are selected from the NEW PERSON file; you can use the
"KRN",9.2,1285,1,25,0)
usual search options for that file. For each person, you will be asked
"KRN",9.2,1285,1,26,0)
whether they are a verifier. If so, you will be prompted for their domain
"KRN",9.2,1285,1,27,0)
so that patch messages can be sent to them.
"KRN",9.2,1285,1,28,0)
 
"KRN",9.2,1285,1,29,0)
Finally, you will be prompted for development personnel, who are also 
"KRN",9.2,1285,1,30,0)
selected from the NEW PERSON file.
"KRN",9.2,1285,1,31,0)
 
"KRN",9.2,1285,1,32,0)
Anyone added as support personnel is automatically given the A1AE SUPPORT 
"KRN",9.2,1285,1,33,0)
key. Anyone designated as a verifier is automatically given the A1AE PHVER
"KRN",9.2,1285,1,34,0)
key. Anyone added as a developer is automatically given the A1AE DEVELOPER
"KRN",9.2,1285,1,35,0)
key. If you need to change any of these, you can do so using the [KEY]
"KRN",9.2,1285,1,36,0)
Allocation for Patch Functions option.
"KRN",9.2,1285,2,0)
^9.22A^1^1
"KRN",9.2,1285,2,1,0)
KEY^A1AE HELP OPTION ALLOCATE KEY
"KRN",9.2,1286,-1)
0^15
"KRN",9.2,1286,0)
A1AE HELP OPTION ALLOCATE KEY^KEY ALLOCATION FOR PATCH FUNCTIONS^3150602.001745^
"KRN",9.2,1286,1,0)
^^33^33^3150602^
"KRN",9.2,1286,1,1,0)
If you have the A1AE XUSEC key, you can use this option to allocate Patch 
"KRN",9.2,1286,1,2,0)
Module keys to other users. Available keys are:
"KRN",9.2,1286,1,3,0)
 
"KRN",9.2,1286,1,4,0)
A1AE COMPDATE - unlocks the Compliance Date Edit and Compliance Date 
"KRN",9.2,1286,1,5,0)
Print options.
"KRN",9.2,1286,1,6,0)
 
"KRN",9.2,1286,1,7,0)
A1AE DEVELOPER - unlocks the Developer's Menu
"KRN",9.2,1286,1,8,0)
 
"KRN",9.2,1286,1,9,0)
A1AE IMPORT - unlocks the Import Patches from a Single Directory and 
"KRN",9.2,1286,1,10,0)
Import Patches Recursive from a Directory Tree options, and the Patch 
"KRN",9.2,1286,1,11,0)
Import from Filesystem Menu.
"KRN",9.2,1286,1,12,0)
 
"KRN",9.2,1286,1,13,0)
A1AE PHVER - unlocks the Release a Patch and Under Development Patches 
"KRN",9.2,1286,1,14,0)
Report for Releasers options, and the Releaser Menu.
"KRN",9.2,1286,1,15,0)
 
"KRN",9.2,1286,1,16,0)
A1AE PKGEDIT - not currently associated with any options or menus.
"KRN",9.2,1286,1,17,0)
 
"KRN",9.2,1286,1,18,0)
A1AE SCAN MESSAGE - unlocks the Scan Patch for Discrepancies and Content 
"KRN",9.2,1286,1,19,0)
option.
"KRN",9.2,1286,1,20,0)
 
"KRN",9.2,1286,1,21,0)
A1AE SUPPORT - unlocks the Support Menu.
"KRN",9.2,1286,1,22,0)
 
"KRN",9.2,1286,1,23,0)
If you have the A1AE MGR key, you can allocate two additional keys:
"KRN",9.2,1286,1,24,0)
 
"KRN",9.2,1286,1,25,0)
A1AE MGR - unlocks the Add/Edit Patch Steams and Add Package to Patch 
"KRN",9.2,1286,1,26,0)
Module options, and the Patch Module Management Menu.
"KRN",9.2,1286,1,27,0)
 
"KRN",9.2,1286,1,28,0)
A1AE XUSEC - unlocks the Key Allocation for Patch Functions option. Note 
"KRN",9.2,1286,1,29,0)
that a user must also have the A1AE MGR key to allocate the A1AE MGR and 
"KRN",9.2,1286,1,30,0)
A1AE XUSEC keys.
"KRN",9.2,1286,1,31,0)
 
"KRN",9.2,1286,1,32,0)
For information about these menus and options, please see the Patch 
"KRN",9.2,1286,1,33,0)
Module 2.5 Technical Manual.
"KRN",9.2,1287,-1)
0^11
"KRN",9.2,1287,0)
A1AE HELP OPTION ADD PATCH^ADD A PATCH^3150602.002122^
"KRN",9.2,1287,1,0)
^^16^16^3150602^
"KRN",9.2,1287,1,1,0)
Use this option to create a new patch. When you choose the Add a Patch 
"KRN",9.2,1287,1,2,0)
option, you are next prompted for the package and version being patched.
"KRN",9.2,1287,1,3,0)
The system will then add your new patch to the Patch File with the next
"KRN",9.2,1287,1,4,0)
available number in the file. Generally, you will want to accept this
"KRN",9.2,1287,1,5,0)
default. 
"KRN",9.2,1287,1,6,0)
 
"KRN",9.2,1287,1,7,0)
Next, you are asked for the patch subject. Then the system displays the 
"KRN",9.2,1287,1,8,0)
full patch ID, in the following format:
"KRN",9.2,1287,1,9,0)
 
"KRN",9.2,1287,1,10,0)
[namespace]*[version]*[patch number]
"KRN",9.2,1287,1,11,0)
 
"KRN",9.2,1287,1,12,0)
The patch number is assigned by the system and is numberspaced.
"KRN",9.2,1287,1,13,0)
 
"KRN",9.2,1287,1,14,0)
Once the patch number has been assigned, the new patch has been added. The
"KRN",9.2,1287,1,15,0)
system will automatically place you into the option to [EDIT] a patch. For
"KRN",9.2,1287,1,16,0)
more information, please see the Primary Developer User Manual.
"KRN",9.2,1287,2,0)
^9.22A^1^1
"KRN",9.2,1287,2,1,0)
EDIT^A1AE HELP OPTION EDIT PATCH
"KRN",9.2,1288,-1)
0^27
"KRN",9.2,1288,0)
A1AE HELP OPTION EDIT PATCH^EDIT A PATCH^3150602.002228^
"KRN",9.2,1288,1,0)
^^67^67^3150602^
"KRN",9.2,1288,1,1,0)
Use this option to edit a patch once it has been created. After invoking 
"KRN",9.2,1288,1,2,0)
this option, you are prompted for the patch ID; you can also search for 
"KRN",9.2,1288,1,3,0)
the patch using its subject.
"KRN",9.2,1288,1,4,0)
 
"KRN",9.2,1288,1,5,0)
The next prompt asks for the patch subject, giving the current subject as 
"KRN",9.2,1288,1,6,0)
the default. You can change it if you need to, using Replace....With.
"KRN",9.2,1288,1,7,0)
 
"KRN",9.2,1288,1,8,0)
Next, you are prompted for a holding date. This field generally isn.t 
"KRN",9.2,1288,1,9,0)
used, although it is available if needed. It is a way of holding back the 
"KRN",9.2,1288,1,10,0)
release of a patch until a specific date. 
"KRN",9.2,1288,1,11,0)
 
"KRN",9.2,1288,1,12,0)
The next prompt asks about the patch.s priority. The vast majority of 
"KRN",9.2,1288,1,13,0)
patches are issued with Mandatory priority, although some have the more 
"KRN",9.2,1288,1,14,0)
urgent Emergency priority. Other possible priorities include 
"KRN",9.2,1288,1,15,0)
Informational, Patch for a Patch, and Not Urgent.
"KRN",9.2,1288,1,16,0)
 
"KRN",9.2,1288,1,17,0)
The next prompt is for the patch.s category. This is a multiple field, 
"KRN",9.2,1288,1,18,0)
and you can select as many categories as you like to describe your patch.
"KRN",9.2,1288,1,19,0)
 
"KRN",9.2,1288,1,20,0)
The next prompt asks about copying lines from a message into the Patch 
"KRN",9.2,1288,1,21,0)
Description. If you created text in KIDS and emailed to Forum, you can 
"KRN",9.2,1288,1,22,0)
copy it into the patch here. If instead you prefer to copy the 
"KRN",9.2,1288,1,23,0)
description directly from a text file, you can skip this prompt and go 
"KRN",9.2,1288,1,24,0)
straight to the next one.
"KRN",9.2,1288,1,25,0)
 
"KRN",9.2,1288,1,26,0)
After copying lines (if any), you are next prompted to edit the text. 
"KRN",9.2,1288,1,27,0)
This is where you can copy and paste text directly from a file, or you 
"KRN",9.2,1288,1,28,0)
can use this prompt to edit lines you have already copied from email.
"KRN",9.2,1288,1,29,0)
 
"KRN",9.2,1288,1,30,0)
The next prompts asks you to copy lines into the Message Text. This is 
"KRN",9.2,1288,1,31,0)
where the actual code goes, usually copied from a Packman message.
"KRN",9.2,1288,1,32,0)
 
"KRN",9.2,1288,1,33,0)
Next, you have the option to enter a description of routine changes. Most 
"KRN",9.2,1288,1,34,0)
developers do not use this option, since the information can be included 
"KRN",9.2,1288,1,35,0)
in the Patch Description. However, if you want to have a separate 
"KRN",9.2,1288,1,36,0)
description of what specific changes are made in which routines, you have 
"KRN",9.2,1288,1,37,0)
the option to do so here.
"KRN",9.2,1288,1,38,0)
 
"KRN",9.2,1288,1,39,0)
Then you are asked about the checksum. This is a holdover from when 
"KRN",9.2,1288,1,40,0)
checksums had to be calculated manually. These days, KIDS and the Patch 
"KRN",9.2,1288,1,41,0)
Module calculate checksums automatically, and it.s best not to mess with 
"KRN",9.2,1288,1,42,0)
that process. Leave this field blank.
"KRN",9.2,1288,1,43,0)
 
"KRN",9.2,1288,1,44,0)
The next prompt asks about displaying the routine patch list. Choose Yes 
"KRN",9.2,1288,1,45,0)
at this prompt.
"KRN",9.2,1288,1,46,0)
 
"KRN",9.2,1288,1,47,0)
You are then asked about internal comments. These are a way for 
"KRN",9.2,1288,1,48,0)
developers and verifiers to communicate about the patch, and have their 
"KRN",9.2,1288,1,49,0)
comments attached to the patch itself. Internal comments are not 
"KRN",9.2,1288,1,50,0)
displayed in reports or in "Display a Completed/Unverified Patch;" the 
"KRN",9.2,1288,1,51,0)
only way to see them is in "Edit a Patch" or "Extended Display of a 
"KRN",9.2,1288,1,52,0)
Patch."
"KRN",9.2,1288,1,53,0)
 
"KRN",9.2,1288,1,54,0)
The next prompt asks about a patch release check. This field can be used 
"KRN",9.2,1288,1,55,0)
for two related purposes: to list patches that should be verified before 
"KRN",9.2,1288,1,56,0)
your patch is verified, and to list any patches that should be verified 
"KRN",9.2,1288,1,57,0)
at the same time as your patch. For each patch you list, you will be 
"KRN",9.2,1288,1,58,0)
asked whether the patch is required for verification. If the patch you 
"KRN",9.2,1288,1,59,0)
list should be verified before your patch, choose "yes" here. If your 
"KRN",9.2,1288,1,60,0)
patch and the other patch need to be verified at the same time, choose 
"KRN",9.2,1288,1,61,0)
"no."
"KRN",9.2,1288,1,62,0)
 
"KRN",9.2,1288,1,63,0)
The next prompt asks about the patch.s status. When a patch is first 
"KRN",9.2,1288,1,64,0)
created, it is automatically assigned a status of "Under Development."
"KRN",9.2,1288,1,65,0)
 
"KRN",9.2,1288,1,66,0)
For more information about the Edit a Patch Option, please see the Patch 
"KRN",9.2,1288,1,67,0)
Module 2.5 Primary Developers User Manual.
"KRN",9.2,1289,-1)
0^12
"KRN",9.2,1289,0)
A1AE HELP OPTION ADD PGK REL^ADD A PACKAGE RELEASE^3150602.002306^
"KRN",9.2,1289,1,0)
^^9^9^3150602^
"KRN",9.2,1289,1,1,0)
Use this option to create a release for a complete new version of a 
"KRN",9.2,1289,1,2,0)
package. It is similar to the [ADD] a Patch option, and in fact uses the 
"KRN",9.2,1289,1,3,0)
same input template.
"KRN",9.2,1289,1,4,0)
 
"KRN",9.2,1289,1,5,0)
When asked for the version number, enter the version number for the new 
"KRN",9.2,1289,1,6,0)
release.
"KRN",9.2,1289,1,7,0)
 
"KRN",9.2,1289,1,8,0)
Once a package release has been added to the Patch Module, it can be 
"KRN",9.2,1289,1,9,0)
edited and updated using the [EDIT] a Package Release option
"KRN",9.2,1289,2,0)
^9.22A^2^2
"KRN",9.2,1289,2,1,0)
ADD^A1AE HELP OPTION ADD PATCH
"KRN",9.2,1290,-1)
0^29
"KRN",9.2,1290,0)
A1AE HELP OPTION EDIT PKG REL^EDIT A PACKAGE RELEASE^3150602.002502^
"KRN",9.2,1290,1,0)
^^4^4^3150602^
"KRN",9.2,1290,1,1,0)
Use this option to edit or update a package release once it has been 
"KRN",9.2,1290,1,2,0)
added to the Patch Module. When you select this option, you are prompted 
"KRN",9.2,1290,1,3,0)
for the package and version. The remaining prompts are the same as for 
"KRN",9.2,1290,1,4,0)
the [EDIT] a Patch option.
"KRN",9.2,1290,2,0)
^9.22A^1^1
"KRN",9.2,1290,2,1,0)
EDIT^A1AE HELP OPTION EDIT PATCH
"KRN",9.2,1291,-1)
0^13
"KRN",9.2,1291,0)
A1AE HELP OPTION ALL REL DET^ALL RELEASED PATCHES FOR A PACKAGE, DETAIL^3150602.002805^
"KRN",9.2,1291,1,0)
^9.21^3^3^3150602^^^
"KRN",9.2,1291,1,1,0)
This option generates a report of all released patches for a particular 
"KRN",9.2,1291,1,2,0)
package and patch stream. To see more information about a specific patch, 
"KRN",9.2,1291,1,3,0)
use the [DISPLAY] a Patch or [EXTENDED] Display of a Patch options.
"KRN",9.2,1291,2,0)
^9.22A^2^2
"KRN",9.2,1291,2,1,0)
DISPLAY^A1AE HELP OPTION DISPLAY PATCH
"KRN",9.2,1291,2,2,0)
EXTENDED^A1AE HELP OPTION EXT DISPLAY
"KRN",9.2,1292,-1)
0^25
"KRN",9.2,1292,0)
A1AE HELP OPTION DISPLAY PATCH^DISPLAY A PATCH^3150602.002909^
"KRN",9.2,1292,1,0)
^9.21^8^8^3150602^^
"KRN",9.2,1292,1,1,0)
Using this option, you can look up a patch by patch designation, package, 
"KRN",9.2,1292,1,2,0)
patch subject, or routine. The display contains the patch subject, 
"KRN",9.2,1292,1,3,0)
description, category, priority, and status, as well as information about 
"KRN",9.2,1292,1,4,0)
the users who entered and completed the patch and a routine information 
"KRN",9.2,1292,1,5,0)
section showing coding changes.
"KRN",9.2,1292,1,6,0)
 
"KRN",9.2,1292,1,7,0)
If you want to see all available information about a patch, use the 
"KRN",9.2,1292,1,8,0)
[EXTENDED] Display of a Patch option.
"KRN",9.2,1292,2,0)
^9.22A^1^1
"KRN",9.2,1292,2,1,0)
EXTENDED^A1AE HELP OPTION EXT DISPLAY
"KRN",9.2,1293,-1)
0^31
"KRN",9.2,1293,0)
A1AE HELP OPTION EXT DISPLAY^EXTENDED DISPLAY OF A PATCH^3150602.003148^
"KRN",9.2,1293,1,0)
^^5^5^3150602^
"KRN",9.2,1293,1,1,0)
This is the option that lets you see all available information about a 
"KRN",9.2,1293,1,2,0)
patch, including information about who has printed the patch. You may 
"KRN",9.2,1293,1,3,0)
display when a selected user printed the patch or the entire patch with 
"KRN",9.2,1293,1,4,0)
all users who printed it. Note this option prints the fields as they 
"KRN",9.2,1293,1,5,0)
exist in Fileman, and not the way they are displayed in the patch report.
"KRN",9.2,1294,-1)
0^44
"KRN",9.2,1294,0)
A1AE HELP OPTION SEC BY DATE^PATCHES IN A SINGLE SECONDARY STATUS BY DATE^3150602.003447^
"KRN",9.2,1294,1,0)
^^9^9^3150602^
"KRN",9.2,1294,1,1,0)
Use this option to see a summary report of all patches in a given 
"KRN",9.2,1294,1,2,0)
secondary status. 
"KRN",9.2,1294,1,3,0)
 
"KRN",9.2,1294,1,4,0)
When you invoke this option, you are prompted for a secondary status, 
"KRN",9.2,1294,1,5,0)
then a start and end date, and finally a patch stream. The resulting 
"KRN",9.2,1294,1,6,0)
report lists the patch ID, sequence number, subject, status, and routine.
"KRN",9.2,1294,1,7,0)
 
"KRN",9.2,1294,1,8,0)
Please note that if there is no date associated with the status, nothing 
"KRN",9.2,1294,1,9,0)
will print.
"KRN",9.2,1295,-1)
0^14
"KRN",9.2,1295,0)
A1AE HELP OPTION ALL SECONDARY^ALL PATCHES FOR A PACKAGE IN SECONDARY STATUS, DETAIL^3150602.003702^
"KRN",9.2,1295,1,0)
^^7^7^3150602^
"KRN",9.2,1295,1,1,0)
This option generates the same report as the All Released Patches for a 
"KRN",9.2,1295,1,2,0)
Package, [DETAILED] option, except that instead of released patches, it 
"KRN",9.2,1295,1,3,0)
displays patches in a selected secondary status.
"KRN",9.2,1295,1,4,0)
 
"KRN",9.2,1295,1,5,0)
When you invoke this option, you are first prompted for which secondary 
"KRN",9.2,1295,1,6,0)
status you would like to see. Then you are prompted for the patch stream, 
"KRN",9.2,1295,1,7,0)
and then the report is generated.
"KRN",9.2,1295,2,0)
^9.22A^1^1
"KRN",9.2,1296,-1)
0^16
"KRN",9.2,1296,0)
A1AE HELP OPTION AUTH USERS^ENTER/EDIT AUTHORIZED USERS^3150602.003937^
"KRN",9.2,1296,1,0)
^^15^15^3150602^
"KRN",9.2,1296,1,1,0)
Use this option to add or edit users for a particular package in the 
"KRN",9.2,1296,1,2,0)
Patch Module. You can add users as developers, support personnel or 
"KRN",9.2,1296,1,3,0)
verifiers. To be added, users need to be in the NEW PERSON file, and you 
"KRN",9.2,1296,1,4,0)
can look them up using the usual options for that file.
"KRN",9.2,1296,1,5,0)
 
"KRN",9.2,1296,1,6,0)
Users entered as developers are automatically given the AIAE DEVELOPER 
"KRN",9.2,1296,1,7,0)
key.
"KRN",9.2,1296,1,8,0)
 
"KRN",9.2,1296,1,9,0)
Users entered as support personnel are automatically given the A1AE 
"KRN",9.2,1296,1,10,0)
SUPPORT key.
"KRN",9.2,1296,1,11,0)
 
"KRN",9.2,1296,1,12,0)
Users entered as verifiers are automatically given the A1AE PHVER key.
"KRN",9.2,1296,1,13,0)
 
"KRN",9.2,1296,1,14,0)
You can adjust a specific user's keys using the [KEY] Allocation for 
"KRN",9.2,1296,1,15,0)
Patch Functions option.
"KRN",9.2,1296,2,0)
^9.22A^1^1
"KRN",9.2,1296,2,1,0)
KEY^A1AE HELP OPTION ALLOCATE KEY
"KRN",9.2,1297,-1)
0^17
"KRN",9.2,1297,0)
A1AE HELP OPTION COMP DATE DSP^COMPLIANCE DATE DISPLAY^3150602.004202^
"KRN",9.2,1297,1,0)
^9.21^6^6^3150602^^
"KRN",9.2,1297,1,1,0)
This option allows you to view a standard report of compliance dates for 
"KRN",9.2,1297,1,2,0)
selected patches. To view one or more patches in more detail, use the 
"KRN",9.2,1297,1,3,0)
Compliance Date [PRINT] option.
"KRN",9.2,1297,1,4,0)
 
"KRN",9.2,1297,1,5,0)
The compliance date is the date by which a patch is required to be 
"KRN",9.2,1297,1,6,0)
installed. It is not often used outside of VA.
"KRN",9.2,1297,2,0)
^9.22A^1^1
"KRN",9.2,1297,2,1,0)
PRINT^A1AE HELP OPTION COMP DATE PRT
"KRN",9.2,1298,-1)
0^19
"KRN",9.2,1298,0)
A1AE HELP OPTION COMP DATE PRT^COMPLIANCE DATE PRINT^3150602.004255^
"KRN",9.2,1298,1,0)
^^6^6^3150602^
"KRN",9.2,1298,1,1,0)
This option allows you to see the compliance date for one or more 
"KRN",9.2,1298,1,2,0)
specific patches you select. For a list of patch compliance dates, use 
"KRN",9.2,1298,1,3,0)
the Compliance Date [DISPLAY] option.
"KRN",9.2,1298,1,4,0)
 
"KRN",9.2,1298,1,5,0)
The compliance date is the date by which a patch is required to be 
"KRN",9.2,1298,1,6,0)
installed. It is not often used outside of VA.
"KRN",9.2,1298,2,0)
^9.22A^1^1
"KRN",9.2,1298,2,1,0)
DISPLAY^A1AE HELP OPTION COMP DATE DSP
"KRN",9.2,1299,-1)
0^18
"KRN",9.2,1299,0)
A1AE HELP OPTION COMP DATE EDT^COMPLIANCE DATE EDIT^3150602.0046^
"KRN",9.2,1299,1,0)
^^23^23^3150602^
"KRN",9.2,1299,1,1,0)
This option allows you to change a patch's compliance date once the patch 
"KRN",9.2,1299,1,2,0)
has been released. You can also use this option to add a compliance date 
"KRN",9.2,1299,1,3,0)
to a patch that was released without one.  (To enter or change a 
"KRN",9.2,1299,1,4,0)
compliance date on an unreleased patch, use the [EDIT] a Patch option.)
"KRN",9.2,1299,1,5,0)
 
"KRN",9.2,1299,1,6,0)
When you choose the Compliance Date Edit option, you are first prompted 
"KRN",9.2,1299,1,7,0)
to select a patch. You can use the patch ID, or look up the patch by its 
"KRN",9.2,1299,1,8,0)
subject. Next, you are prompted for the new compliance date, and given an 
"KRN",9.2,1299,1,9,0)
opportunity to put in the reason for change.
"KRN",9.2,1299,1,10,0)
 
"KRN",9.2,1299,1,11,0)
The reason for change can be no longer than 5 lines, and each line can be 
"KRN",9.2,1299,1,12,0)
no longer than 256 characters. If you exceed these limits, you are asked 
"KRN",9.2,1299,1,13,0)
to re-enter the text.
"KRN",9.2,1299,1,14,0)
 
"KRN",9.2,1299,1,15,0)
Once the new date and reason text have been entered, the Patch Module 
"KRN",9.2,1299,1,16,0)
automatically sends out a bulletin listing the change.
"KRN",9.2,1299,1,17,0)
 
"KRN",9.2,1299,1,18,0)
NOTE: If the new compliance date is the same as the old date (that is, if 
"KRN",9.2,1299,1,19,0)
you use this option only to put in "reason for change" text), then no 
"KRN",9.2,1299,1,20,0)
bulletin will be sent.
"KRN",9.2,1299,1,21,0)
 
"KRN",9.2,1299,1,22,0)
The compliance date is the date by which a patch is required to be 
"KRN",9.2,1299,1,23,0)
installed. It is not often used outside of VA.
"KRN",9.2,1300,-1)
0^20
"KRN",9.2,1300,0)
A1AE HELP OPTION COMP SUMM PKG^COMPLETED PATCH SUMMARY FOR ASSIGNED PACKAGES^3150602.004702^
"KRN",9.2,1300,1,0)
^9.21^9^9^3150630^^^^
"KRN",9.2,1300,1,1,0)
Use this option to see a snapshot of all the patches that area ready for 
"KRN",9.2,1300,1,2,0)
you to verify. 
"KRN",9.2,1300,1,3,0)
 
"KRN",9.2,1300,1,4,0)
When you choose this option, you are prompted for which patch stream you 
"KRN",9.2,1300,1,5,0)
want to see, and then asked about a device. You can see the report on 
"KRN",9.2,1300,1,6,0)
your screen (.home.), print it out on a printer, or send it to a spooler.
"KRN",9.2,1300,1,7,0)
 
"KRN",9.2,1300,1,8,0)
If you want to take a closer look at a specific patch, use the [DISPLAY] 
"KRN",9.2,1300,1,9,0)
a Completed/Not Released Patch option.
"KRN",9.2,1300,2,0)
^9.22A^2^2
"KRN",9.2,1300,2,2,0)
DISPLAY^A1AE HELP OPTION DSPL NOT REL
"KRN",9.2,1301,-1)
0^26
"KRN",9.2,1301,0)
A1AE HELP OPTION DSPL NOT REL^DISPLAY A COMPLETED/NOT RELEASED PATCH^3150602.004833^
"KRN",9.2,1301,1,0)
^^9^9^3150602^
"KRN",9.2,1301,1,1,0)
This option permits display of a completed/not released patch. Using this 
"KRN",9.2,1301,1,2,0)
option, you can look up a patch by patch designation, package, patch 
"KRN",9.2,1301,1,3,0)
subject, or routine. The display contains the patch subject, description, 
"KRN",9.2,1301,1,4,0)
category, priority, and status, as well as information about the users 
"KRN",9.2,1301,1,5,0)
who entered and completed the patch and a routine information section 
"KRN",9.2,1301,1,6,0)
showing coding changes.
"KRN",9.2,1301,1,7,0)
 
"KRN",9.2,1301,1,8,0)
If you want to see all available information about a patch, use the 
"KRN",9.2,1301,1,9,0)
[EXTENDED] Display of a Patch option.
"KRN",9.2,1301,2,0)
^9.22A^1^1
"KRN",9.2,1301,2,1,0)
EXTENDED^A1AE HELP OPTION EXT DISPLAY
"KRN",9.2,1302,-1)
0^21
"KRN",9.2,1302,0)
A1AE HELP OPTION COMPL NOT REL^COMPLETED/NOT RELEASED PATCHES REPORT^3150602.005345^
"KRN",9.2,1302,1,0)
^9.21^3^3^3150630^^^
"KRN",9.2,1302,1,1,0)
Use this option to see the complete report of patches that have been 
"KRN",9.2,1302,1,2,0)
completed but not released. If you would like to look more closely at a 
"KRN",9.2,1302,1,3,0)
specific patch, use the [DISPLAY] a Completed/Not Released Patch option.
"KRN",9.2,1302,2,0)
^9.22A^1^1
"KRN",9.2,1302,2,1,0)
DISPLAY^A1AE HELP OPTION DSPL NOT REL
"KRN",9.2,1303,-1)
0^22
"KRN",9.2,1303,0)
A1AE HELP OPTION COPY PATCH^COPY A PATCH INTO A NEW PATCH^3150602.005449^
"KRN",9.2,1303,1,0)
^^16^16^3150602^
"KRN",9.2,1303,1,1,0)
This option allows you to copy the contents of a patch into a new patch. 
"KRN",9.2,1303,1,2,0)
The new patch must be for the same package, but can be for a different 
"KRN",9.2,1303,1,3,0)
version. You will be prompted for a patch to copy, then the version 
"KRN",9.2,1303,1,4,0)
number of the new patch being created. The system assigns a patch 
"KRN",9.2,1303,1,5,0)
designation to the new patch, and you are asked if you want to add this 
"KRN",9.2,1303,1,6,0)
patch. If you respond YES, you will be prompted for the subject of the 
"KRN",9.2,1303,1,7,0)
new patch.
"KRN",9.2,1303,1,8,0)
 
"KRN",9.2,1303,1,9,0)
The new patch is automatically assigned a status of "under development". 
"KRN",9.2,1303,1,10,0)
The user entering and date entered are set by the system. The priority, 
"KRN",9.2,1303,1,11,0)
category(s), patch description, and all routine information is copied 
"KRN",9.2,1303,1,12,0)
over from the existing patch into the new patch.
"KRN",9.2,1303,1,13,0)
 
"KRN",9.2,1303,1,14,0)
NOTE: Do NOT use this option to create a new version of a patch for 
"KRN",9.2,1303,1,15,0)
secondary development. That is done automatically when the primary patch 
"KRN",9.2,1303,1,16,0)
is imported into the system.
"KRN",9.2,1304,-1)
0^23
"KRN",9.2,1304,0)
A1AE HELP OPTION DEL NR PATCH^DELETE A NOT RELEASED PATCH^3150602.012954^
"KRN",9.2,1304,1,0)
^^3^3^3150602^
"KRN",9.2,1304,1,1,0)
Use this option to delete a patch before it has been verified and 
"KRN",9.2,1304,1,2,0)
released. Once a patch has been verified and released, it cannot be 
"KRN",9.2,1304,1,3,0)
deleted with this option.
"KRN",9.2,1305,-1)
0^24
"KRN",9.2,1305,0)
A1AE HELP OPTION DEL PGK REL^DELETE A PACKAGE RELEASE^3150602.013045^
"KRN",9.2,1305,1,0)
^^3^3^3150602^
"KRN",9.2,1305,1,1,0)
Use this option to delete a package release before it has been verified 
"KRN",9.2,1305,1,2,0)
and released. Once a package has been verified and released, it cannot be 
"KRN",9.2,1305,1,3,0)
deleted with this option
"KRN",9.2,1306,-1)
0^30
"KRN",9.2,1306,0)
A1AE HELP OPTION EXPORT PATCH^EXPORT PATCH(ES) TO THE FILESYSTEM^3150602.013337^
"KRN",9.2,1306,1,0)
^9.21^16^16^3150602^^
"KRN",9.2,1306,1,1,0)
Use this option to turn one or more patches into a flat file that can be 
"KRN",9.2,1306,1,2,0)
placed on a server and accessed via FTP. This is the preferred method of 
"KRN",9.2,1306,1,3,0)
obtaining patches for sites that do not use Mailman/Packman.
"KRN",9.2,1306,1,4,0)
 
"KRN",9.2,1306,1,5,0)
You will need to know the Patch ID(s) of the patch(es) you want to use, 
"KRN",9.2,1306,1,6,0)
and the full path for the export destination.
"KRN",9.2,1306,1,7,0)
 
"KRN",9.2,1306,1,8,0)
The Patch Module will allow you to select any patch, even patches still 
"KRN",9.2,1306,1,9,0)
under development, so you can export patches for use by testers. Use 
"KRN",9.2,1306,1,10,0)
caution when selecting and exporting patches; unverified patches should 
"KRN",9.2,1306,1,11,0)
not be released to anyone other than testers.
"KRN",9.2,1306,1,12,0)
 
"KRN",9.2,1306,1,13,0)
Note that if you select more than one patch to export, they will 
"KRN",9.2,1306,1,14,0)
automatically be combined into a multi-build. If you have multiple 
"KRN",9.2,1306,1,15,0)
patches and do not want a multi-build, you will need to run this option 
"KRN",9.2,1306,1,16,0)
more than once.
"KRN",9.2,1306,2,0)
^9.22A^^0
"KRN",9.2,1307,-1)
0^32
"KRN",9.2,1307,0)
A1AE HELP OPTION FULL SUMM^FULL SUMMARY BY DATE FOR EVERY PACKAGE^3150602.013533^
"KRN",9.2,1307,1,0)
^^8^8^3150602^
"KRN",9.2,1307,1,1,0)
Use this option to get a quick list of patches in the Patch Module, by 
"KRN",9.2,1307,1,2,0)
package and date.
"KRN",9.2,1307,1,3,0)
 
"KRN",9.2,1307,1,4,0)
When you choose this option, you are first prompted for your patch 
"KRN",9.2,1307,1,5,0)
stream. Next, you can select start and end dates for the range of patches 
"KRN",9.2,1307,1,6,0)
you want to see. The Patch Module responds with a list, sorted 
"KRN",9.2,1307,1,7,0)
alphabetically by designation. The summary list includes the patch 
"KRN",9.2,1307,1,8,0)
designation, patch subject, and the date verified.
"KRN",9.2,1308,-1)
0^33
"KRN",9.2,1308,0)
A1AE HELP OPTION FWD NOT REL^FORWARD A COMPLETED/NOT RELEASED PATCH MESSAGE^3150602.013641^
"KRN",9.2,1308,1,0)
^^4^4^3150602^
"KRN",9.2,1308,1,1,0)
With this option, you can use Mailman to forward a patch that has been 
"KRN",9.2,1308,1,2,0)
completed but not released. Most verifiers use this option to forward a 
"KRN",9.2,1308,1,3,0)
copy of the patch to themselves in order to install it in their baseline 
"KRN",9.2,1308,1,4,0)
environment.
"KRN",9.2,1309,-1)
0^34
"KRN",9.2,1309,0)
A1AE HELP OPTION FWD RELEASED^FORWARD A RELEASED PATCH MESSAGE^3150602.013725^
"KRN",9.2,1309,1,0)
^^9^9^3150602^
"KRN",9.2,1309,1,1,0)
This option allows you to forward a verified, released patch. Use this 
"KRN",9.2,1309,1,2,0)
option to send a released patch to a colleague at another site who needs 
"KRN",9.2,1309,1,3,0)
to install it. You can also use this option to forward released patches 
"KRN",9.2,1309,1,4,0)
to other environments at your site.
"KRN",9.2,1309,1,5,0)
 
"KRN",9.2,1309,1,6,0)
After selecting this option, you are asked to select a patch, and then a 
"KRN",9.2,1309,1,7,0)
recipient. You can only choose from patches that have already been 
"KRN",9.2,1309,1,8,0)
verified and released. To forward a patch before it has been released, 
"KRN",9.2,1309,1,9,0)
use the [FORWARD] a Completed/Not Released Patch option.
"KRN",9.2,1309,2,0)
^9.22A^1^1
"KRN",9.2,1309,2,1,0)
FORWARD^A1AE HELP OPTION FWD NOT REL
"KRN",9.2,1310,-1)
0^35
"KRN",9.2,1310,0)
A1AE HELP OPTION LIST USERS^LIST OF PACKAGE USERS^3150602.013833^
"KRN",9.2,1310,1,0)
^^3^3^3150602^
"KRN",9.2,1310,1,1,0)
This option generates a report of the developers, support personnel, 
"KRN",9.2,1310,1,2,0)
verifiers, and other users with access to a specific package in the Patch 
"KRN",9.2,1310,1,3,0)
Module. 
"KRN",9.2,1311,-1)
0^36
"KRN",9.2,1311,0)
A1AE HELP OPTION PACKMAN MSG^CREATE A PACKMAN MESSAGE^3150602.013922^
"KRN",9.2,1311,1,0)
^^8^8^3150602^
"KRN",9.2,1311,1,1,0)
This option allows you to create a Packman message from a local routine 
"KRN",9.2,1311,1,2,0)
directory. Use this option to get a snapshot of what the routines 
"KRN",9.2,1311,1,3,0)
currently look like on Forum. Since Forum is always kept patched and up- 
"KRN",9.2,1311,1,4,0)
to-date, it is a good reference to use.
"KRN",9.2,1311,1,5,0)
 
"KRN",9.2,1311,1,6,0)
When you choose this option, you are prompted for a subject. This will be 
"KRN",9.2,1311,1,7,0)
the subject of the Mailman message that eventually goes out. Next, you 
"KRN",9.2,1311,1,8,0)
are asked to choose routines, and finally, recipients for the message.
"KRN",9.2,1312,-1)
0^37
"KRN",9.2,1312,0)
A1AE HELP OPTION PATCH STREAMS^ADD/EDIT PATCH STREAMS^3150602.014007^
"KRN",9.2,1312,1,0)
^^5^5^3150602^
"KRN",9.2,1312,1,1,0)
This option, added in version 2.5, allows Patch Module managers to add 
"KRN",9.2,1312,1,2,0)
new patch streams (for example, FOIA and OSEHRA) to Forum, and to edit 
"KRN",9.2,1312,1,3,0)
the attributes of existing patch streams. Managers can add or change the 
"KRN",9.2,1312,1,4,0)
stream's name, domain, and abbreviation, as well as values for the 
"KRN",9.2,1312,1,5,0)
"Primary?" field and the "feeds into stream" field.
"KRN",9.2,1313,-1)
0^38
"KRN",9.2,1313,0)
A1AE HELP OPTION PGK RELEASE^PACKAGE RELEASE (AND/OR EDIT INTERNAL COMMENTS)^3150602.014108^
"KRN",9.2,1313,1,0)
^^12^12^3150602^
"KRN",9.2,1313,1,1,0)
Package verifiers can use this option to release a package (a new version 
"KRN",9.2,1313,1,2,0)
release) once it has been verified. You can also use this option to edit 
"KRN",9.2,1313,1,3,0)
internal comments, without releasing the package.
"KRN",9.2,1313,1,4,0)
 
"KRN",9.2,1313,1,5,0)
After selecting the package to be released, you are first given the 
"KRN",9.2,1313,1,6,0)
opportunity to edit internal comments, using a word-processing tool. Once 
"KRN",9.2,1313,1,7,0)
the internal comments are complete, the Patch Module asks if you want to 
"KRN",9.2,1313,1,8,0)
continue.
"KRN",9.2,1313,1,9,0)
 
"KRN",9.2,1313,1,10,0)
If all you wanted to do was edit the internal comments, answer "No" to 
"KRN",9.2,1313,1,11,0)
this prompt, and you will exit to the menu. To proceed with verification 
"KRN",9.2,1313,1,12,0)
and release, answer "Yes" to this prompt.
"KRN",9.2,1314,-1)
0^39
"KRN",9.2,1314,0)
A1AE HELP OPTION PKG NOTIFY^SELECT PACKAGES FOR NOTIFICATION^3150602.014213^
"KRN",9.2,1314,1,0)
^^19^19^3150602^
"KRN",9.2,1314,1,1,0)
Use this option to receive automatic Mailman notification of new patches, 
"KRN",9.2,1314,1,2,0)
for whichever packages you select. The notifications follow a standard 
"KRN",9.2,1314,1,3,0)
format, and are sent automatically when a new patch is released. Please 
"KRN",9.2,1314,1,4,0)
note that the notification is not the same thing as the actual patch; you 
"KRN",9.2,1314,1,5,0)
can sign up to receive the notification whether or not you are receiving 
"KRN",9.2,1314,1,6,0)
the patch.
"KRN",9.2,1314,1,7,0)
 
"KRN",9.2,1314,1,8,0)
Once you choose this option, you will be asked to select a package. If 
"KRN",9.2,1314,1,9,0)
you want to receive notifications from multiple packages, you can enter 
"KRN",9.2,1314,1,10,0)
them one at a time, or enter ALL to select all packages. If you enter 
"KRN",9.2,1314,1,11,0)
ALL, the Patch Module asks if you are sure, then adds you to all 
"KRN",9.2,1314,1,12,0)
available package notifications. 
"KRN",9.2,1314,1,13,0)
 
"KRN",9.2,1314,1,14,0)
You can also use this option to stop receiving notifications from a 
"KRN",9.2,1314,1,15,0)
particular package. At the "Select PACKAGE" prompt, enter a minus sign 
"KRN",9.2,1314,1,16,0)
before the name of a package (For example, -KERNEL) to remove that 
"KRN",9.2,1314,1,17,0)
package from your notifications. Therefore, if you want to receive 
"KRN",9.2,1314,1,18,0)
notifications for all but a few packages, it is probably faster to choose 
"KRN",9.2,1314,1,19,0)
ALL, and then remove the ones that you don't want.
"KRN",9.2,1315,-1)
0^40
"KRN",9.2,1315,0)
A1AE HELP OPTION REL SUMM RPT^RELEASED PATCH SUMMARY REPORT BY DATE^3150602.014309^
"KRN",9.2,1315,1,0)
^^3^3^3150630^
"KRN",9.2,1315,1,1,0)
This print option generates a report of verified patches for a select 
"KRN",9.2,1315,1,2,0)
package, or all selected packages for a specified date range. The report 
"KRN",9.2,1315,1,3,0)
contains the Patch Designation, Subject, Date Completed, and Priority.
"KRN",9.2,1316,-1)
0^41
"KRN",9.2,1316,0)
A1AE HELP OPTION RELEASE PATCH^RELEASE A PATCH (AND/OR EDIT INTERNAL COMMENTS)^3150602.01434^
"KRN",9.2,1316,1,0)
^^12^12^3150602^
"KRN",9.2,1316,1,1,0)
Patch verifiers can use this option to release a patch once it has been 
"KRN",9.2,1316,1,2,0)
verified. You can also use this option to edit internal comments, without 
"KRN",9.2,1316,1,3,0)
releasing the patch.
"KRN",9.2,1316,1,4,0)
 
"KRN",9.2,1316,1,5,0)
After selecting the patch to be released, you are first given the 
"KRN",9.2,1316,1,6,0)
opportunity to edit internal comments, using a word-processing tool. Once 
"KRN",9.2,1316,1,7,0)
the internal comments are complete, the Patch Module asks if you want to 
"KRN",9.2,1316,1,8,0)
continue.
"KRN",9.2,1316,1,9,0)
 
"KRN",9.2,1316,1,10,0)
If all you wanted to do was edit the internal comments, answer "No" to 
"KRN",9.2,1316,1,11,0)
this prompt, and you will exit to the menu. To proceed with verification 
"KRN",9.2,1316,1,12,0)
and release, answer "Yes" to this prompt.
"KRN",9.2,1317,-1)
0^42
"KRN",9.2,1317,0)
A1AE HELP OPTION RELEASED RPT^RELEASED PATCH REPORT^3150602.014431^
"KRN",9.2,1317,1,0)
^^8^8^3150630^
"KRN",9.2,1317,1,1,0)
This print option generates a report of all verified patches for a 
"KRN",9.2,1317,1,2,0)
selected package and version.  You can sort the report by Patch 
"KRN",9.2,1317,1,3,0)
Designation, Category, or Priority.
"KRN",9.2,1317,1,4,0)
 
"KRN",9.2,1317,1,5,0)
The report contains detailed information about each patch; including the 
"KRN",9.2,1317,1,6,0)
Patch Subject, Description, Category, Priority, and Status, as well as 
"KRN",9.2,1317,1,7,0)
information about users who entered, completed, and/or verified the 
"KRN",9.2,1317,1,8,0)
patch, plus any Routine information.
"KRN",9.2,1318,-1)
0^43
"KRN",9.2,1318,0)
A1AE HELP OPTION RT OVERLAP^ROUTINES THAT OVERLAP IN PATCHES^3150602.014502^
"KRN",9.2,1318,1,0)
^^5^5^3150602^
"KRN",9.2,1318,1,1,0)
Use this option to have the Patch Module automatically check a specific 
"KRN",9.2,1318,1,2,0)
patch for routines that are also affected by other patches. When you 
"KRN",9.2,1318,1,3,0)
invoke this option, you are prompted to select a patch. The Patch Module 
"KRN",9.2,1318,1,4,0)
then returns a list of patches that affect any of the routines in the 
"KRN",9.2,1318,1,5,0)
patch you selected, whether those patches have been released or not.
"KRN",9.2,1319,-1)
0^45
"KRN",9.2,1319,0)
A1AE HELP OPTION SINGLE IMPORT^IMPORT PATCHES IN A SINGLE DIRECTORY^3150602.0146^
"KRN",9.2,1319,1,0)
^9.21^6^6^3150602^^
"KRN",9.2,1319,1,1,0)
Use this option to import patches from a single directory. This option 
"KRN",9.2,1319,1,2,0)
give you greater control over which patches get imported, but may take a 
"KRN",9.2,1319,1,3,0)
while if you need patches from more than one directory. 
"KRN",9.2,1319,1,4,0)
 
"KRN",9.2,1319,1,5,0)
If you need patches from an entire directory tree, use the [RECURSIVE] 
"KRN",9.2,1319,1,6,0)
import option.
"KRN",9.2,1319,2,0)
^9.22A^1^1
"KRN",9.2,1319,2,1,0)
RECURSIVE^A1AE HELP OPTION TREE IMPORT
"KRN",9.2,1320,-1)
0^48
"KRN",9.2,1320,0)
A1AE HELP OPTION TREE IMPORT^IMPORT PATCHES RECURSIVE FROM A DIRECTORY TREE^3150602.014751^
"KRN",9.2,1320,1,0)
^9.21^6^6^3150602^^
"KRN",9.2,1320,1,1,0)
Use this option to import an patches from an entire directory tree. USE 
"KRN",9.2,1320,1,2,0)
CAUTION when invoking this option; if you accidentally import patches 
"KRN",9.2,1320,1,3,0)
more than once it could cause system errors. 
"KRN",9.2,1320,1,4,0)
 
"KRN",9.2,1320,1,5,0)
If you only want patches from a single directory, use the [SINGLE] 
"KRN",9.2,1320,1,6,0)
Directory Import option
"KRN",9.2,1320,2,0)
^9.22A^1^1
"KRN",9.2,1320,2,1,0)
SINGLE^A1AE HELP OPTION SINGLE IMPORT
"KRN",9.2,1321,-1)
0^47
"KRN",9.2,1321,0)
A1AE HELP OPTION SUMMARY SEC^SUMMARY REPORT OF ALL PATCHES FOR A PACKAGE (SEC)^3150602.014951^
"KRN",9.2,1321,1,0)
^9.21^12^12^3150602^^^
"KRN",9.2,1321,1,1,0)
Use this option to display a summary report of all patches in secondary 
"KRN",9.2,1321,1,2,0)
development, for a selected package and version. This option is very 
"KRN",9.2,1321,1,3,0)
similar to the Summary Report of [ALL] Patches for a Package option.
"KRN",9.2,1321,1,4,0)
 
"KRN",9.2,1321,1,5,0)
When you select this option, you are prompted for one or more secondary 
"KRN",9.2,1321,1,6,0)
statuses you want to see. 
"KRN",9.2,1321,1,7,0)
Next, you are prompted for the package and version, and then the patch 
"KRN",9.2,1321,1,8,0)
stream. You can choose to see patches from all available streams if you 
"KRN",9.2,1321,1,9,0)
prefer.
"KRN",9.2,1321,1,10,0)
 
"KRN",9.2,1321,1,11,0)
The resulting report shows the patch ID, sequence number, subject, 
"KRN",9.2,1321,1,12,0)
status, and the affected routines.
"KRN",9.2,1321,2,0)
^9.22A^1^1
"KRN",9.2,1321,2,1,0)
ALL^A1AE HELP OPTION SUMMARY ALL
"KRN",9.2,1322,-1)
0^46
"KRN",9.2,1322,0)
A1AE HELP OPTION SUMMARY ALL^SUMMARY REPORT OF ALL PATCHES FOR A PACKAGE^3150602.015111^
"KRN",9.2,1322,1,0)
^^12^12^3150602^
"KRN",9.2,1322,1,1,0)
Use this option to display a summary report of all patches for a selected 
"KRN",9.2,1322,1,2,0)
package and version.
"KRN",9.2,1322,1,3,0)
 
"KRN",9.2,1322,1,4,0)
When you select this option, you are prompted for the package and 
"KRN",9.2,1322,1,5,0)
version. Next, you are prompted for the patch stream. You can choose to 
"KRN",9.2,1322,1,6,0)
see patches from all available streams if you prefer.
"KRN",9.2,1322,1,7,0)
 
"KRN",9.2,1322,1,8,0)
The resulting report shows the patch ID, sequence number, subject, 
"KRN",9.2,1322,1,9,0)
status, and the affected routines.
"KRN",9.2,1322,1,10,0)
 
"KRN",9.2,1322,1,11,0)
There is a similar option that allows you to see this report for patches 
"KRN",9.2,1322,1,12,0)
in [SECONDARY] development
"KRN",9.2,1322,2,0)
^9.22A^1^1
"KRN",9.2,1322,2,1,0)
SECONDARY^A1AE HELP OPTION SUMMARY SEC
"KRN",9.2,1323,-1)
0^49
"KRN",9.2,1323,0)
A1AE HELP OPTION UNDER DEV RPT^UNDER DEVELOPMENT PATCHES REPORT^3150602.01551^
"KRN",9.2,1323,1,0)
^^8^8^3150602^
"KRN",9.2,1323,1,1,0)
This print option generates a report of under development patches for a 
"KRN",9.2,1323,1,2,0)
selected package and version. You can sort the report by patch 
"KRN",9.2,1323,1,3,0)
designation, category, or priority. The report contains detailed 
"KRN",9.2,1323,1,4,0)
information about each patch including the patch subject, description, 
"KRN",9.2,1323,1,5,0)
category, priority, and status; information about the users who entered 
"KRN",9.2,1323,1,6,0)
the patch and completed the patch; and a routine information section 
"KRN",9.2,1323,1,7,0)
showing coding changes. To see a particular patch in more detail, use the 
"KRN",9.2,1323,1,8,0)
[EXTENDED] Display of a Patch option.
"KRN",9.2,1323,2,0)
^9.22A^1^1
"KRN",9.2,1323,2,1,0)
EXTENDED^A1AE HELP OPTION EXT DISPLAY
"KRN",9.2,1324,-1)
0^28
"KRN",9.2,1324,0)
A1AE HELP OPTION EDIT PGK REL^EDIT A PACKAGE RELEASE^3150602.020216^
"KRN",9.2,1324,1,0)
^^4^4^3150602^
"KRN",9.2,1324,1,1,0)
Use this option to edit or update a package release once it has been 
"KRN",9.2,1324,1,2,0)
added to the Patch Module. When you select this option, you are prompted 
"KRN",9.2,1324,1,3,0)
for the package and version. The remaining prompts are the same as for 
"KRN",9.2,1324,1,4,0)
the [EDIT] a Patch option.
"KRN",9.2,1324,2,0)
^9.22A^1^1
"KRN",9.2,1324,2,1,0)
EDIT^A1AE HELP OPTION EDIT PATCH
"KRN",9.2,1325,-1)
0^8
"KRN",9.2,1325,0)
A1AE HELP MENU USER^PATCH MODULE USER MENU^3150603.004315^
"KRN",9.2,1325,1,0)
^^9^9^3150603^
"KRN",9.2,1325,1,1,0)
This is the basic standard menu for the Patch Module. If you are a Patch 
"KRN",9.2,1325,1,2,0)
Subscriber, this the only menu you have. Other roles should have access 
"KRN",9.2,1325,1,3,0)
to other menus; please see the appropriate Patch Module User Manual for 
"KRN",9.2,1325,1,4,0)
details.
"KRN",9.2,1325,1,5,0)
 
"KRN",9.2,1325,1,6,0)
You can reach many options from this menu, but the most common options 
"KRN",9.2,1325,1,7,0)
let you [DISPLAY] a patch, see a released patch summary [REPORT], see a 
"KRN",9.2,1325,1,8,0)
full [SUMMARY] by date, or select [PACKAGES] to receive notifications 
"KRN",9.2,1325,1,9,0)
about.
"KRN",9.2,1325,2,0)
^9.22A^4^4
"KRN",9.2,1325,2,1,0)
DISPLAY^A1AE HELP OPTION DISPLAY PATCH
"KRN",9.2,1325,2,2,0)
REPORT^A1AE HELP OPTION REL SUMM RPT
"KRN",9.2,1325,2,3,0)
SUMMARY^A1AE HELP OPTION FULL SUMM
"KRN",9.2,1325,2,4,0)
PACKAGES^A1AE HELP OPTION PKG NOTIFY
"KRN",9.2,1326,-1)
0^50
"KRN",9.2,1326,0)
A1AE HELP OPTION ALL REL SUMM^ALL RELEASED P'S FOR A PACKAGE, SUMMARY W/ROUTINES^3150630.202528^
"KRN",9.2,1326,1,0)
^^4^4^3150630^
"KRN",9.2,1326,1,1,0)
Use this option to display a summary report of all patches for a selected 
"KRN",9.2,1326,1,2,0)
package and version 
"KRN",9.2,1326,1,3,0)
 
"KRN",9.2,1326,1,4,0)
The report contains the Patch Designation, Subject, Status, and Routines.
"KRN",9.2,1326,2,0)
^9.22A^1^1
"KRN",9.2,1327,-1)
0^51
"KRN",9.2,1327,0)
A1AE HELP OPTION COMPL LISTING^COMPLETED/NOT RELEASED LISTING^3150630.203331^
"KRN",9.2,1327,1,0)
^^7^7^3150630^
"KRN",9.2,1327,1,1,0)
Use this option to display a completed patch for any package in the patch 
"KRN",9.2,1327,1,2,0)
file.
"KRN",9.2,1327,1,3,0)
When you choose this option, you are asked to select a "Completed/Not 
"KRN",9.2,1327,1,4,0)
Released" patch. The resulting display contains the Patch Subject, 
"KRN",9.2,1327,1,5,0)
Description, Category, Priority, and Status, as well as information about 
"KRN",9.2,1327,1,6,0)
the users who entered, completed, and verified the patch. There is also a 
"KRN",9.2,1327,1,7,0)
section for coding changes in the Routine Section of the display.
"KRN",9.2,1328,-1)
0^52
"KRN",9.2,1328,0)
A1AE HELP OPTION COMPL SUM RPT^COMPLETED PATCH SUMMARY REPORT BY DATE^3150630.203507^
"KRN",9.2,1328,1,0)
^^3^3^3150630^
"KRN",9.2,1328,1,1,0)
This print option generates a report of completed patches for a select 
"KRN",9.2,1328,1,2,0)
package, or all selected packages for a specified date range. The report 
"KRN",9.2,1328,1,3,0)
contains the Patch Designation, Subject, Date Completed, and Priority
"KRN",9.2,1329,-1)
0^53
"KRN",9.2,1329,0)
A1AE HELP OPTION DET RPT REL^DETAILED REPORT OF RELEASED PATCHES BY DATE^3150630.203605^
"KRN",9.2,1329,1,0)
^9.21^7^7^3150630^^
"KRN",9.2,1329,1,1,0)
This print option generates a detailed report of verified patches for a 
"KRN",9.2,1329,1,2,0)
select package, or all selected packages for a specified date range. The 
"KRN",9.2,1329,1,3,0)
report contains detailed information about each patch including the Patch 
"KRN",9.2,1329,1,4,0)
Subject, Description, Category, Priority, and Status, as well as 
"KRN",9.2,1329,1,5,0)
information about the users who entered, completed, and verified the 
"KRN",9.2,1329,1,6,0)
patch. There is also a section for coding changes in the Routine Section 
"KRN",9.2,1329,1,7,0)
of the report
"KRN",9.2,1329,2,0)
^9.22A^^0
"KRN",9.2,1330,-1)
0^54
"KRN",9.2,1330,0)
A1AE HELP OPTION DOCUMENTATION^PATCH OPTIONS DOCUMENTATION^3150630.203653^
"KRN",9.2,1330,1,0)
^9.21^2^2^3150630^^
"KRN",9.2,1330,1,1,0)
This print option generates a report of all the options available for 
"KRN",9.2,1330,1,2,0)
recording, printing, and maintaining patch information
"KRN",9.2,1331,-1)
0^55
"KRN",9.2,1331,0)
A1AE HELP OPTION NEW NUMBER^DISPLAY NUMBER OF NEW PATCHES^3150630.203741^
"KRN",9.2,1331,1,0)
^^12^12^3150630^
"KRN",9.2,1331,1,1,0)
Use this option to see how many new patches exist for your selected 
"KRN",9.2,1331,1,2,0)
packages. This display includes each package name, the number of new 
"KRN",9.2,1331,1,3,0)
patches, and the date any patches were last printed for the package.
"KRN",9.2,1331,1,4,0)
 
"KRN",9.2,1331,1,5,0)
A patch is new if it has not been printed by the user and it has a status 
"KRN",9.2,1331,1,6,0)
of "verified." Once a patch has been printed it will no longer be counted 
"KRN",9.2,1331,1,7,0)
on this summary display.
"KRN",9.2,1331,1,8,0)
 
"KRN",9.2,1331,1,9,0)
If you are seeing a lot of old verified patches that are no longer 
"KRN",9.2,1331,1,10,0)
relevant to you, you can use the [SET] All Patches for Selected Packages 
"KRN",9.2,1331,1,11,0)
as Printed option to change the "printed" status of the old patches, 
"KRN",9.2,1331,1,12,0)
rather than manually printing them one by one.
"KRN",9.2,1331,2,0)
^9.22A^1^1
"KRN",9.2,1332,-1)
0^64
"KRN",9.2,1332,0)
A1AE HELP OPTION UNDER DEV VER^UNDER DEVELOPMENT PATCHES REPORT FOR RELEASERS^3150630.203948^
"KRN",9.2,1332,1,0)
^^14^14^3150630^
"KRN",9.2,1332,1,1,0)
This print option generates a report of "Under Development" patches for a 
"KRN",9.2,1332,1,2,0)
selected package and version. You can the report by Patch Designation, 
"KRN",9.2,1332,1,3,0)
Category, or Priority.
"KRN",9.2,1332,1,4,0)
 
"KRN",9.2,1332,1,5,0)
The report contains detailed information about each patch including the 
"KRN",9.2,1332,1,6,0)
Patch Subject, Description, Category, Priority, and Status, as well as 
"KRN",9.2,1332,1,7,0)
information about users who entered, completed, and/or verified the 
"KRN",9.2,1332,1,8,0)
patch, plus routine information.
"KRN",9.2,1332,1,9,0)
 
"KRN",9.2,1332,1,10,0)
 This option is the same as the Under Development Patches [REPORT] option 
"KRN",9.2,1332,1,11,0)
except that it requires
"KRN",9.2,1332,1,12,0)
 the A1AE PHVER key. Verifiers can use this option to help the developer 
"KRN",9.2,1332,1,13,0)
to avoid errors before the developer changes the status to 
"KRN",9.2,1332,1,14,0)
"completed/unverified."
"KRN",9.2,1332,2,0)
^9.22A^1^1
"KRN",9.2,1333,-1)
0^63
"KRN",9.2,1333,0)
A1AE HELP OPTION UNDER DEV LST^UNDER DEVELOPMENT PATCH LISTING^3150630.210933^
"KRN",9.2,1333,1,0)
^^6^6^3150630^
"KRN",9.2,1333,1,1,0)
Use this option to display any patch with a status of "Under Development."
"KRN",9.2,1333,1,2,0)
 
"KRN",9.2,1333,1,3,0)
The display contains the Patch Subject, Description, Category, Priority, 
"KRN",9.2,1333,1,4,0)
and Status, as well as contains information about the users who entered, 
"KRN",9.2,1333,1,5,0)
completed, and verified the patch. There is also a section for coding 
"KRN",9.2,1333,1,6,0)
changes in the Routine Section of the display
"KRN",9.2,1334,-1)
0^62
"KRN",9.2,1334,0)
A1AE HELP OPTION TEST SCAN^SCAN PATCH FOR DISCREPANCIES AND CONTENTS^3150630.211101^
"KRN",9.2,1334,1,0)
^^2^2^3150630^
"KRN",9.2,1334,1,1,0)
This option allows you to manually run the patch scanner (inventorier and 
"KRN",9.2,1334,1,2,0)
checksum verifier). Use this option for testing prior to general release.
"KRN",9.2,1335,-1)
0^61
"KRN",9.2,1335,0)
A1AE HELP OPTION SHOW RELAT^SHOW A PATCH'S RELATIONSHIPS^3150630.211151^
"KRN",9.2,1335,1,0)
^^2^2^3150630^
"KRN",9.2,1335,1,1,0)
Use this option to show the derivation source and dependencies of a 
"KRN",9.2,1335,1,2,0)
specific patch
"KRN",9.2,1336,-1)
0^60
"KRN",9.2,1336,0)
A1AE HELP OPTION SET PRINTED^SET ALL PATCHES FOR SELECTED PACKAGES AS PRINTED^3150630.211314^
"KRN",9.2,1336,1,0)
^^5^5^3150630^
"KRN",9.2,1336,1,1,0)
Use this option to update the "printed" status of all patches for all 
"KRN",9.2,1336,1,2,0)
selected packages. This can assist you in using two report options:  
"KRN",9.2,1336,1,3,0)
Display [NUMBER] of New Patches and New Patch [REPORT]. After you run 
"KRN",9.2,1336,1,4,0)
this option on your packages, these reports will work as intended to show 
"KRN",9.2,1336,1,5,0)
only new verified patches.
"KRN",9.2,1336,2,0)
^9.22A^2^2
"KRN",9.2,1336,2,1,0)
NUMBER^A1AE HELP OPTION NEW NUMBER
"KRN",9.2,1337,-1)
0^59
"KRN",9.2,1337,0)
A1AE HELP OPTION ROUTINE INQ^ROUTINE INQUIRY^3150630.211534^
"KRN",9.2,1337,1,0)
^^2^2^3150630^
"KRN",9.2,1337,1,1,0)
Use this option to query the routine file to find out the current and 
"KRN",9.2,1337,1,2,0)
past checksums
"KRN",9.2,1338,-1)
0^58
"KRN",9.2,1338,0)
A1AE HELP OPTION REL SUMMARY^RELEASE SUMMARY^3150630.211806^
"KRN",9.2,1338,1,0)
^9.21^2^2^3150630^^
"KRN",9.2,1338,1,1,0)
Use this option to display the patch ID, sequence nubbier, date of 
"KRN",9.2,1338,1,2,0)
release, compliance date, and status of patches in a selected date range.
"KRN",9.2,1339,-1)
0^57
"KRN",9.2,1339,0)
A1AE HELP OPTION REL DETAIL^RELEASED PATCHES BY DATE DETAILED REPORT^3150630.213007^
"KRN",9.2,1339,1,0)
^^7^7^3150630^
"KRN",9.2,1339,1,1,0)
Use this option to see a detailed report of verified patches for a select 
"KRN",9.2,1339,1,2,0)
package, or all selected packages for a specified date range. The report 
"KRN",9.2,1339,1,3,0)
contains detailed information about each patch including the Patch 
"KRN",9.2,1339,1,4,0)
Subject, Description, Category, Priority, and Status, as well ass 
"KRN",9.2,1339,1,5,0)
information about the users who entered, completed, and verified the 
"KRN",9.2,1339,1,6,0)
patch. There is also a section for coding changes in the Routine Section 
"KRN",9.2,1339,1,7,0)
of the report.
"KRN",9.2,1340,-1)
0^56
"KRN",9.2,1340,0)
A1AE HELP OPTION NEW PATCHES^NEW PATCH REPORT^3150630.213056^
"KRN",9.2,1340,1,0)
^9.21^18^18^3150630^^
"KRN",9.2,1340,1,1,0)
This print option generates a report of new patches for any selectable 
"KRN",9.2,1340,1,2,0)
package in the patch file, or all your selected packages.
"KRN",9.2,1340,1,3,0)
 
"KRN",9.2,1340,1,4,0)
A patch is new if it has not been printed by the user and it has a status 
"KRN",9.2,1340,1,5,0)
of "verified." Once a new patch has been printed it is no longer 
"KRN",9.2,1340,1,6,0)
available under this option, but can be viewed via any of the other print 
"KRN",9.2,1340,1,7,0)
options for verified patches.
"KRN",9.2,1340,1,8,0)
 
"KRN",9.2,1340,1,9,0)
The report contains detailed information about each patch including the 
"KRN",9.2,1340,1,10,0)
Patch Subject, Description, Category, Priority, and Status, as well as 
"KRN",9.2,1340,1,11,0)
information about the users who entered, completed, and verified the 
"KRN",9.2,1340,1,12,0)
patch. There is also a section for coding changes in the Routine Section 
"KRN",9.2,1340,1,13,0)
of the report.
"KRN",9.2,1340,1,14,0)
 
"KRN",9.2,1340,1,15,0)
If you are seeing a lot of old verified patches that are no longer 
"KRN",9.2,1340,1,16,0)
relevant to you, you can use the [SET] All Patches for Selected Packages 
"KRN",9.2,1340,1,17,0)
as Printed option to change the "printed" status of the old patches, 
"KRN",9.2,1340,1,18,0)
rather than manually printing them one by one.
"KRN",9.2,1340,2,0)
^9.22A^1^1
"KRN",9.2,1341,-1)
0^65
"KRN",9.2,1341,0)
A1AE CHNG SITE SUBSCR^A1AE CHANGE SITE SUBSCRIPTION^3150701.0152^
"KRN",9.2,1341,1,0)
^^3^3^3150701^
"KRN",9.2,1341,1,1,0)
This option allows a client site to attempt to edit their DCHP PATCH 
"KRN",9.2,1341,1,2,0)
SUBSCRIPTION [#11007.1] file to change their Patch Subscription. The edit
"KRN",9.2,1341,1,3,0)
will be interrupted, however, a message sent to Forum with the request.
"KRN",9.2,1342,-1)
0^66
"KRN",9.2,1342,0)
A1AE EDIT PATCH STRM HX^A1AE EDIT PATCH STREAM HISTORY^3150701.015516^
"KRN",9.2,1342,1,0)
^^3^3^3150701^
"KRN",9.2,1342,1,1,0)
This option allows editing of the PATCH STREAM HISTORY [#11007.2] file by 
"KRN",9.2,1342,1,2,0)
Forum personnel in order to approve/disapprove a request by a client to 
"KRN",9.2,1342,1,3,0)
change their Patch Stream.
"KRN",19,11468,-1)
0^63
"KRN",19,11468,0)
A1AE USER^Patch User Menu^^M^^^A1AE HELP MENU USER^^^^^^y
"KRN",19,11468,1,0)
^19.06^3^3^3150705^^^^
"KRN",19,11468,1,1,0)
This is the main menu for the Patch/Problem options. All users
"KRN",19,11468,1,2,0)
enter the patch module through this menu. However, depending on
"KRN",19,11468,1,3,0)
what keys the user holds, some options will or will not appear.
"KRN",19,11468,10,0)
^19.01IP^26^26
"KRN",19,11468,10,1,0)
11469^
"KRN",19,11468,10,1,"^")
A1AE PKGSEL
"KRN",19,11468,10,2,0)
11470^
"KRN",19,11468,10,2,"^")
A1AE PRTNEWPH
"KRN",19,11468,10,6,0)
11486^DP
"KRN",19,11468,10,6,"^")
A1AE PRTPHD
"KRN",19,11468,10,7,0)
11488^AD
"KRN",19,11468,10,7,"^")
A1AE PRTPHA
"KRN",19,11468,10,8,0)
11479^E
"KRN",19,11468,10,8,"^")
A1AE DEVELOPER
"KRN",19,11468,10,9,0)
11501^VER
"KRN",19,11468,10,9,"^")
A1AE VERIFIER
"KRN",19,11468,10,10,0)
11492^
"KRN",19,11468,10,10,"^")
A1AE MGR
"KRN",19,11468,10,11,0)
11496^
"KRN",19,11468,10,11,"^")
A1AE PATCHDOC
"KRN",19,11468,10,12,0)
11502^RPSR
"KRN",19,11468,10,12,"^")
A1AE PRTCOMSUMDT
"KRN",19,11468,10,13,0)
11503^RPDR
"KRN",19,11468,10,13,"^")
A1AE PRTCOMDETDT
"KRN",19,11468,10,14,0)
11505^DNNP
"KRN",19,11468,10,14,"^")
A1AE PRTNEWPHNUM
"KRN",19,11468,10,15,0)
11507^
"KRN",19,11468,10,15,"^")
A1AE FORWARD
"KRN",19,11468,10,16,0)
11509^
"KRN",19,11468,10,16,"^")
A1AE PKGPRT
"KRN",19,11468,10,19,0)
11519^SUMM
"KRN",19,11468,10,19,"^")
A1AE PRTPHS ORG
"KRN",19,11468,10,20,0)
11520^FSBD
"KRN",19,11468,10,20,"^")
A1AE FULL SUMMARY BY DATE
"KRN",19,11468,10,21,0)
11521
"KRN",19,11468,10,21,"^")
A1AE RELEASE SUMMARY
"KRN",19,11468,10,22,0)
11526
"KRN",19,11468,10,22,"^")
A1AE PRTUDP
"KRN",19,11468,10,23,0)
11527
"KRN",19,11468,10,23,"^")
A1AE PRTCNRP
"KRN",19,11468,10,24,0)
11515
"KRN",19,11468,10,24,"^")
A1AE ROUTINE INQUIRE
"KRN",19,11468,10,25,0)
11547
"KRN",19,11468,10,25,"^")
A1AE IMPORT MENU
"KRN",19,11468,10,26,0)
11553^SEC
"KRN",19,11468,10,26,"^")
A1AE SEC REPORTS
"KRN",19,11468,15)

"KRN",19,11468,20)

"KRN",19,11468,99)
63733,78753
"KRN",19,11468,99.1)
61956,81227
"KRN",19,11468,"U")
PATCH USER MENU
"KRN",19,11469,-1)
0^34
"KRN",19,11469,0)
A1AE PKGSEL^Select Packages for Notification^^R^^^A1AE HELP OPTION PKG NOTIFY^^^^^
"KRN",19,11469,1,0)
^19.06^15^15^3150705^^^^
"KRN",19,11469,1,1,0)
This option permits the user to choose which packages they want
"KRN",19,11469,1,2,0)
to receive automatic notification of new patches via mailman.
"KRN",19,11469,1,3,0)
 
"KRN",19,11469,1,4,0)
Once the user selects a package s/he will be shown the number of
"KRN",19,11469,1,5,0)
new patches associated with the package(s) when s/he signs into the
"KRN",19,11469,1,6,0)
patch module and these new patches will automatically be available
"KRN",19,11469,1,7,0)
via the 'New Patch Report' option.
"KRN",19,11469,1,8,0)
 
"KRN",19,11469,1,9,0)
Packages may be entered individually, or the user can enter
"KRN",19,11469,1,10,0)
'ALL' to receive patches for all user selectable packages.
"KRN",19,11469,1,11,0)
 
"KRN",19,11469,1,12,0)
The user may also stop notification of patches for a particular
"KRN",19,11469,1,13,0)
package via this option by selecting the package and responding
"KRN",19,11469,1,14,0)
'Yes' to stop notification. The user can also enter at the package
"KRN",19,11469,1,15,0)
prompt, a '-'PACKAGE NAME to stop notification.
"KRN",19,11469,25)
2^A1AEAU
"KRN",19,11469,99.1)
60575,39996
"KRN",19,11469,"U")
SELECT PACKAGES FOR NOTIFICATI
"KRN",19,11470,-1)
0^46
"KRN",19,11470,0)
A1AE PRTNEWPH^New Patch Report^^R^^^A1AE HELP OPTION NEW PATCHES^^^^^
"KRN",19,11470,1,0)
^19.06^13^13^3150705^^^^
"KRN",19,11470,1,1,0)
This print option generates a report of 'new' patches for any selectable
"KRN",19,11470,1,2,0)
package in the patch file, or all your selected packages.
"KRN",19,11470,1,3,0)
 
"KRN",19,11470,1,4,0)
A patch is 'new' if it has not been printed by the user and it has a status
"KRN",19,11470,1,5,0)
of 'verified'. Once a 'new' patch has been printed it is no longer available
"KRN",19,11470,1,6,0)
under this option, but can be viewed via any of the other print options
"KRN",19,11470,1,7,0)
for verified patches.
"KRN",19,11470,1,8,0)
 
"KRN",19,11470,1,9,0)
The report contains detailed information about each patch including
"KRN",19,11470,1,10,0)
the Patch Subject, Description, Category, Priority and Status. The
"KRN",19,11470,1,11,0)
report also contains information about the users who entered the
"KRN",19,11470,1,12,0)
patch, completed the patch and verified the patch. There is also
"KRN",19,11470,1,13,0)
a section for coding changes in the Routine Section of the report.
"KRN",19,11470,25)
PRTNEW^A1AEVP
"KRN",19,11470,99.1)
59214,39995
"KRN",19,11470,"U")
NEW PATCH REPORT
"KRN",19,11471,-1)
0^55
"KRN",19,11471,0)
A1AE PRTVRPH^Released Patch Report^^R^^^A1AE HELP OPTION RELEASED RPT^^^^^
"KRN",19,11471,1,0)
^19.06^12^12^3150705^^^^
"KRN",19,11471,1,1,0)
This print option generates a report of all 'verified' patches
"KRN",19,11471,1,2,0)
for a selected package and version. The user must be an authorized
"KRN",19,11471,1,3,0)
developer or support person of the package.
"KRN",19,11471,1,4,0)
 
"KRN",19,11471,1,5,0)
The user has the option of sorting the report by one of the
"KRN",19,11471,1,6,0)
following fields: Patch Designation, Category or Priority.
"KRN",19,11471,1,7,0)
 
"KRN",19,11471,1,8,0)
The report contains detailed information about each patch;
"KRN",19,11471,1,9,0)
including the Patch Subject, Description, Category, Priority
"KRN",19,11471,1,10,0)
and Status. The report also contains information about users
"KRN",19,11471,1,11,0)
who entered the patch and completed and/or verified the patch,
"KRN",19,11471,1,12,0)
and any Routine information.
"KRN",19,11471,25)
4^A1AEPH2
"KRN",19,11471,"U")
RELEASED PATCH REPORT
"KRN",19,11472,-1)
0^61
"KRN",19,11472,0)
A1AE SUPPORT^Support Menu^^M^^A1AE SUPPORT^A1AE HELP MENU SUPPORT^^^^^
"KRN",19,11472,1,0)
^19.06^6^6^3150705^^^^
"KRN",19,11472,1,1,0)
This menu provides the holder of the A1AE SUPPORT key with
"KRN",19,11472,1,2,0)
the following print options: Verified Patch Report and
"KRN",19,11472,1,3,0)
Completed/Unverified Patch Report.
"KRN",19,11472,1,4,0)
 
"KRN",19,11472,1,5,0)
This menu also permits the holder of the A1AE PHVER key
"KRN",19,11472,1,6,0)
to see the 'Verifiy a Patch' option.
"KRN",19,11472,10,0)
^19.01PI^8^8
"KRN",19,11472,10,3,0)
11471^
"KRN",19,11472,10,3,"^")
A1AE PRTVRPH
"KRN",19,11472,10,4,0)
11473^
"KRN",19,11472,10,4,"^")
A1AE PRTCOMPH
"KRN",19,11472,10,5,0)
11497^
"KRN",19,11472,10,5,"^")
A1AE PRTUDVPH VER
"KRN",19,11472,10,7,0)
11474^
"KRN",19,11472,10,7,"^")
A1AE PBPROBLEM
"KRN",19,11472,10,8,0)
11489^
"KRN",19,11472,10,8,"^")
A1AE PHVER
"KRN",19,11472,15)

"KRN",19,11472,20)

"KRN",19,11472,99)
63733,78585
"KRN",19,11472,99.1)
61956,81227
"KRN",19,11472,"U")
SUPPORT MENU
"KRN",19,11473,-1)
0^41
"KRN",19,11473,0)
A1AE PRTCOMPH^Completed/NotReleased Patches Report^^R^^^A1AE HELP OPTION COMPL NOT REL^^^^^
"KRN",19,11473,1,0)
^19.06^12^12^3150705^^
"KRN",19,11473,1,1,0)
This print option generates a report of 'completed/unverified'
"KRN",19,11473,1,2,0)
patches for a selected package and version. The user must be an
"KRN",19,11473,1,3,0)
authorized developer or verifier of the package to use this option.
"KRN",19,11473,1,4,0)
 
"KRN",19,11473,1,5,0)
The user has the option of sorting the report by one of the following
"KRN",19,11473,1,6,0)
fields: Patch Designation, Category or Priority.
"KRN",19,11473,1,7,0)
 
"KRN",19,11473,1,8,0)
The report contains detailed information about each patch including the
"KRN",19,11473,1,9,0)
Patch Subject, Description, Category, Priority and Status. The report also
"KRN",19,11473,1,10,0)
contains information about the users who entered the patch and completed
"KRN",19,11473,1,11,0)
the patch. There is also a section for coding changes in the Routine
"KRN",19,11473,1,12,0)
Section of the report.
"KRN",19,11473,25)
1^A1AEPH2
"KRN",19,11473,"U")
COMPLETED/NOTRELEASED PATCHES 
"KRN",19,11474,-1)
0^19
"KRN",19,11474,0)
A1AE PBPROBLEM^Problem Menu^NOT AVAILABLE^M^^OBSOLETE^^^^^^
"KRN",19,11474,1,0)
^^1^1^3150705.230746
"KRN",19,11474,1,1,0)
Not used.
"KRN",19,11474,10,0)
^19.01PI^3^3
"KRN",19,11474,10,1,0)
11475^
"KRN",19,11474,10,1,"^")
A1AE PBADD
"KRN",19,11474,10,2,0)
11476^
"KRN",19,11474,10,2,"^")
A1AE PBDEL
"KRN",19,11474,10,3,0)
11477^
"KRN",19,11474,10,3,"^")
A1AE PBEDIT
"KRN",19,11474,99)
63295,3145
"KRN",19,11474,"U")
PROBLEM MENU
"KRN",19,11475,-1)
0^16
"KRN",19,11475,0)
A1AE PBADD^Add a New Problem^^R^^^^^^^^
"KRN",19,11475,1,0)
^^1^1^3150705.230713
"KRN",19,11475,1,1,0)
Not used.
"KRN",19,11475,25)
1^A1AEPB1
"KRN",19,11475,"U")
ADD A NEW PROBLEM
"KRN",19,11476,-1)
0^17
"KRN",19,11476,0)
A1AE PBDEL^Delete a Problem^^R^^^^^^^^
"KRN",19,11476,1,0)
^^1^1^3150705.230725
"KRN",19,11476,1,1,0)
Not used.
"KRN",19,11476,25)
2^A1AEPB1
"KRN",19,11476,"U")
DELETE A PROBLEM
"KRN",19,11477,-1)
0^18
"KRN",19,11477,0)
A1AE PBEDIT^Edit a Problem^^R^^^^^^^^
"KRN",19,11477,1,0)
^^1^1^3150705.230737
"KRN",19,11477,1,1,0)
Not used.
"KRN",19,11477,25)
3^A1AEPB1
"KRN",19,11477,"U")
EDIT A PROBLEM
"KRN",19,11479,-1)
0^8
"KRN",19,11479,0)
A1AE DEVELOPER^Developer's Menu^^M^^A1AE DEVELOPER^A1AE HELP MENU DEVELOPER^^^^^^y^1^1
"KRN",19,11479,1,0)
^19.06^14^14^3150705^^^^
"KRN",19,11479,1,1,0)
This menu permits the holder of the A1AE DEVELOPER key who is an
"KRN",19,11479,1,2,0)
authorized developer, to add/edit patches. Also using the 'Package
"KRN",19,11479,1,3,0)
Management' option developer's can indicate other Development,
"KRN",19,11479,1,4,0)
Support Personnel and Verifiers associated with the package.
"KRN",19,11479,1,5,0)
 
"KRN",19,11479,1,6,0)
Using the 'Delete an Unverified Patch' option, developers can delete
"KRN",19,11479,1,7,0)
patches which have a status of 'Under Development' or 'Completed/
"KRN",19,11479,1,8,0)
unverified'. Using the 'Copy a patch into a new patch' option,
"KRN",19,11479,1,9,0)
developers can copy existing patches into new patches under the
"KRN",19,11479,1,10,0)
same or a different version.
"KRN",19,11479,1,11,0)
 
"KRN",19,11479,1,12,0)
The menu also provides the following print options: Extended Display
"KRN",19,11479,1,13,0)
of a Patch, Display a Completed/Unverified Patch, Completed/
"KRN",19,11479,1,14,0)
Unverified Patch Report and Under Development Patch Report.
"KRN",19,11479,10,0)
^19.01IP^25^25
"KRN",19,11479,10,1,0)
11481^
"KRN",19,11479,10,1,"^")
A1AE PHADD
"KRN",19,11479,10,9,0)
11482^
"KRN",19,11479,10,9,"^")
A1AE PHDEL
"KRN",19,11479,10,11,0)
11495^
"KRN",19,11479,10,11,"^")
A1AE PHEXTEND
"KRN",19,11479,10,12,0)
11483^
"KRN",19,11479,10,12,"^")
A1AE PHEDIT
"KRN",19,11479,10,13,0)
11500^
"KRN",19,11479,10,13,"^")
A1AE DISCOMPH
"KRN",19,11479,10,14,0)
11473^
"KRN",19,11479,10,14,"^")
A1AE PRTCOMPH
"KRN",19,11479,10,15,0)
11484^
"KRN",19,11479,10,15,"^")
A1AE PRTUDVPH
"KRN",19,11479,10,16,0)
11491^
"KRN",19,11479,10,16,"^")
A1AE PKGMGT
"KRN",19,11479,10,17,0)
11498^
"KRN",19,11479,10,17,"^")
A1AE COPY PATCH
"KRN",19,11479,10,18,0)
11506^
"KRN",19,11479,10,18,"^")
A1AE DEV CREATE
"KRN",19,11479,10,19,0)
11508^
"KRN",19,11479,10,19,"^")
A1AE DEV FORWARD
"KRN",19,11479,10,20,0)
11486^DP
"KRN",19,11479,10,20,"^")
A1AE PRTPHD
"KRN",19,11479,10,21,0)
11516^TS
"KRN",19,11479,10,21,"^")
A1AE TEST SCANNER
"KRN",19,11479,10,22,0)
11524
"KRN",19,11479,10,22,"^")
A1AE ROUTINES THAT OVERLAP
"KRN",19,11479,10,23,0)
11532
"KRN",19,11479,10,23,"^")
A1AE PKMENU
"KRN",19,11479,10,24,0)
11515^IN
"KRN",19,11479,10,24,"^")
A1AE ROUTINE INQUIRE
"KRN",19,11479,10,25,0)
11551
"KRN",19,11479,10,25,"^")
A1AE SHOW PATCH RELATIONSHIPS
"KRN",19,11479,15)
Q  ;S X=$ZC(%DELLOG,"EDTSYS","PROCESS")
"KRN",19,11479,20)
Q  ;S X=$ZC(%CRELOG,"EDTSYS","SYS$COMMON:[SYSMGR]A1AE.EDT","PROCESS")
"KRN",19,11479,99)
63733,78711
"KRN",19,11479,99.1)
63760,1201
"KRN",19,11479,"U")
DEVELOPER'S MENU
"KRN",19,11480,-1)
0^21
"KRN",19,11480,0)
A1AE PBRESREV^Resolve/Review a Problem^^R^^A1AE DEVELOPER^^^^^^
"KRN",19,11480,1,0)
^^1^1^3150705.230808
"KRN",19,11480,1,1,0)
Not used.
"KRN",19,11480,25)
4^A1AEPB1
"KRN",19,11480,"U")
RESOLVE/REVIEW A PROBLEM
"KRN",19,11481,-1)
0^22
"KRN",19,11481,0)
A1AE PHADD^Add a Patch^^R^^^A1AE HELP OPTION ADD PATCH^^^^^
"KRN",19,11481,1,0)
13^19.06^30^30^3150705^^^^
"KRN",19,11481,1,1,0)
This function permits authorized developers of a package to
"KRN",19,11481,1,2,0)
add a new patch to a specific version of the package.
"KRN",19,11481,1,3,0)
 
"KRN",19,11481,1,4,0)
Patches are unique by their designation which has the following
"KRN",19,11481,1,5,0)
format:
"KRN",19,11481,1,6,0)
 
"KRN",19,11481,1,7,0)
    Package Namespace*Version Number*System assigned patch Number
"KRN",19,11481,1,8,0)
 
"KRN",19,11481,1,9,0)
An asterisk is used as the delimiter between the field values.
"KRN",19,11481,1,10,0)
 
"KRN",19,11481,1,11,0)
When a new patch is added a 'PATCH SUBJECT' must be entered.
"KRN",19,11481,1,12,0)
This field has two cross-references that can be used for look-up.
"KRN",19,11481,1,13,0)
One is a regular cross-reference and the other is a key word in
"KRN",19,11481,1,14,0)
context cross-reference.
"KRN",19,11481,1,15,0)
 
"KRN",19,11481,1,16,0)
When the patch is added the system assigns it a patch status of
"KRN",19,11481,1,17,0)
'under development', and stores the user entering the patch
"KRN",19,11481,1,18,0)
and the date the patch is entered. Once you have entered
"KRN",19,11481,1,19,0)
the patch another developer must change the status to
"KRN",19,11481,1,20,0)
'completed/unverified'. Once the status is changed to
"KRN",19,11481,1,21,0)
'completed/unverified' a bulletin is sent to the verifiers
"KRN",19,11481,1,22,0)
of the package notifying them a patch is ready for verification.
"KRN",19,11481,1,23,0)
 
"KRN",19,11481,1,24,0)
When a routine name is entered, and if the routine is available,
"KRN",19,11481,1,25,0)
you are able to copy routine lines into the routine description.
"KRN",19,11481,1,26,0)
The system prompts you 'Do you want to copy routine lines into
"KRN",19,11481,1,27,0)
the routine description?'. You then select a range of lines to
"KRN",19,11481,1,28,0)
copy, and if a description already exists, you will be asked
"KRN",19,11481,1,29,0)
where in the description to insert the program lines; otherwise
"KRN",19,11481,1,30,0)
they are automatically inserted.
"KRN",19,11481,25)
1^A1AEPH1
"KRN",19,11481,99.1)
55493,42067
"KRN",19,11481,"U")
ADD A PATCH
"KRN",19,11482,-1)
0^23
"KRN",19,11482,0)
A1AE PHDEL^Delete a Patch^^R^^^A1AE HELP OPTION DEL NR PATCH^^^^^
"KRN",19,11482,1,0)
^19.06^13^13^3150705^^^
"KRN",19,11482,1,1,0)
This function permits authorized developers of a package to delete
"KRN",19,11482,1,2,0)
an incorrect patch which has a status of 'under development' or
"KRN",19,11482,1,3,0)
'completed/unverified'. Only these types of patches may be deleted
"KRN",19,11482,1,4,0)
since only the developer(s) and verifier(s) are aware of the patch.
"KRN",19,11482,1,5,0)
The system assigned patch number will then be re-assigned to the next
"KRN",19,11482,1,6,0)
patch.
"KRN",19,11482,1,7,0)
 
"KRN",19,11482,1,8,0)
When a patch has a status of 'verified' or 'entered in error'
"KRN",19,11482,1,9,0)
the patch can not be deleted, since users have been notified of the
"KRN",19,11482,1,10,0)
patch. If there is an error to a verified patch then the developer
"KRN",19,11482,1,11,0)
must change the status of the patch to 'entered in error' via
"KRN",19,11482,1,12,0)
the edit function. If the status is changed to 'entered in error'
"KRN",19,11482,1,13,0)
a message is sent to the users who printed the patch.
"KRN",19,11482,25)
OPTION^A1AEPHD
"KRN",19,11482,99.1)
59214,39995
"KRN",19,11482,"U")
DELETE A PATCH
"KRN",19,11483,-1)
0^24
"KRN",19,11483,0)
A1AE PHEDIT^Edit a Patch^^R^^^A1AE HELP OPTION EDIT PATCH^^^^^
"KRN",19,11483,1,0)
^19.06^56^56^3150705^^^^
"KRN",19,11483,1,1,0)
This function permits authorized developers of a package to
"KRN",19,11483,1,2,0)
edit a patch.
"KRN",19,11483,1,3,0)
 
"KRN",19,11483,1,4,0)
Which fields may be edited are dependent on the value of the
"KRN",19,11483,1,5,0)
status field:
"KRN",19,11483,1,6,0)
 
"KRN",19,11483,1,7,0)
   Value of Status field    Fields which can be edited
"KRN",19,11483,1,8,0)
   ---------------------    --------------------------
"KRN",19,11483,1,9,0)
   'under development'       PATCH SUBJECT
"KRN",19,11483,1,10,0)
                             PRIORITY
"KRN",19,11483,1,11,0)
                             CATEGORY OF PATCH
"KRN",19,11483,1,12,0)
                             PATCH DESCRIPTION
"KRN",19,11483,1,13,0)
                             ROUTINE NAME
"KRN",19,11483,1,14,0)
                             DESCRIPTION OF ROUTINE CHANGES
"KRN",19,11483,1,15,0)
                             STATUS OF PATCH
"KRN",19,11483,1,16,0)
                             (Valid next status: 'completed/unverified'
"KRN",19,11483,1,17,0)
                               NOTE: When the completed/unverified
"KRN",19,11483,1,18,0)
                                     status is assigned a bulletin
"KRN",19,11483,1,19,0)
                                     is sent to the verifier(s) of
"KRN",19,11483,1,20,0)
                                     the package, notifying them
"KRN",19,11483,1,21,0)
                                     the patch is ready for
"KRN",19,11483,1,22,0)
                                     verification.)
"KRN",19,11483,1,23,0)
 
"KRN",19,11483,1,24,0)
   'completed/unverified'    PATCH SUBJECT
"KRN",19,11483,1,25,0)
                             PRIORITY
"KRN",19,11483,1,26,0)
                             CATEGORY OF PATCH
"KRN",19,11483,1,27,0)
                             PATCH DESCRIPTION
"KRN",19,11483,1,28,0)
                             ROUTINE NAME
"KRN",19,11483,1,29,0)
                             DESCRIPTION OF ROUTINE CHANGES
"KRN",19,11483,1,30,0)
                             STATUS OF PATCH
"KRN",19,11483,1,31,0)
                             (Valid next status: 'verified')
"KRN",19,11483,1,32,0)
                               NOTE: When the verified status
"KRN",19,11483,1,33,0)
                                     is assigned a bulletin is sent
"KRN",19,11483,1,34,0)
                                     to all of the select users of
"KRN",19,11483,1,35,0)
                                     the package, notifying them
"KRN",19,11483,1,36,0)
                                     there is a new patch.)
"KRN",19,11483,1,37,0)
 
"KRN",19,11483,1,38,0)
   'verified'                STATUS OF PATCH
"KRN",19,11483,1,39,0)
                             (Valid status change: 'entered in error')
"KRN",19,11483,1,40,0)
                               NOTE: When the entered in error
"KRN",19,11483,1,41,0)
                                     status is assigned a bulletin
"KRN",19,11483,1,42,0)
                                     is sent users who have printed
"KRN",19,11483,1,43,0)
                                     the patch, notifying them
"KRN",19,11483,1,44,0)
                                     the patch is incorrect.)
"KRN",19,11483,1,45,0)
 
"KRN",19,11483,1,46,0)
   'entered in error'        ENTERED IN ERROR DESCRIPTION; to enter
"KRN",19,11483,1,47,0)
                             why the patch is in error and where the
"KRN",19,11483,1,48,0)
                             correct patch can be found.
"KRN",19,11483,1,49,0)
 
"KRN",19,11483,1,50,0)
When looking up a patch, the values for the following fields can be
"KRN",19,11483,1,51,0)
entered as the look-up value:
"KRN",19,11483,1,52,0)
 
"KRN",19,11483,1,53,0)
   Patch Designation, Package, Patch Subject and Routine Name
"KRN",19,11483,1,54,0)
 
"KRN",19,11483,1,55,0)
There is also a key word in context cross-reference on the subject
"KRN",19,11483,1,56,0)
field that can be used.
"KRN",19,11483,25)
3^A1AEPH1
"KRN",19,11483,99)
57776,56668
"KRN",19,11483,"U")
EDIT A PATCH
"KRN",19,11484,-1)
0^53
"KRN",19,11484,0)
A1AE PRTUDVPH^Under Development Patches Report^^R^^^A1AE HELP OPTION UNDER DEV RPT^^^^^
"KRN",19,11484,1,0)
^19.06^12^12^3150705^^^^
"KRN",19,11484,1,1,0)
This print option generates a report of 'under development' patches
"KRN",19,11484,1,2,0)
for a selected package and version. The user must be an authorized
"KRN",19,11484,1,3,0)
developer of the package to use this option.
"KRN",19,11484,1,4,0)
 
"KRN",19,11484,1,5,0)
The user has the option of sorting the report by one of the following
"KRN",19,11484,1,6,0)
fields: Patch Designation, Category or Priority.
"KRN",19,11484,1,7,0)
 
"KRN",19,11484,1,8,0)
The report contains detailed information about each patch; including
"KRN",19,11484,1,9,0)
the Patch Subject, Description, Category, Priority and Status. The
"KRN",19,11484,1,10,0)
report also contains information about users who entered the patch.
"KRN",19,11484,1,11,0)
There is also a section for coding changes in the Routine Section of
"KRN",19,11484,1,12,0)
the patch.
"KRN",19,11484,25)
3^A1AEPH2
"KRN",19,11484,99.1)
60271,38557
"KRN",19,11484,"U")
UNDER DEVELOPMENT PATCHES REPO
"KRN",19,11485,-1)
0^50
"KRN",19,11485,0)
A1AE PRTPHS^All Released P's for a Package, Summary w/Routines^^R^^^A1AE HELP OPTION ALL REL SUMM^^^^^
"KRN",19,11485,1,0)
^19.06^4^4^3150705^^^^
"KRN",19,11485,1,1,0)
This option permits the user to display a summary report of
"KRN",19,11485,1,2,0)
all patches for a selected package and version.
"KRN",19,11485,1,3,0)
 
"KRN",19,11485,1,4,0)
The report contains the Patch Designation, Subject, Status, and Routines.
"KRN",19,11485,25)
5^A1AEPH2
"KRN",19,11485,99)
55480,45206
"KRN",19,11485,99.1)
59214,39995
"KRN",19,11485,"U")
ALL RELEASED P'S FOR A PACKAGE
"KRN",19,11486,-1)
0^49
"KRN",19,11486,0)
A1AE PRTPHD^Display a Patch^^R^^^A1AE HELP OPTION DISPLAY PATCH^^^^^
"KRN",19,11486,1,0)
^19.06^23^23^3150705^^^^
"KRN",19,11486,1,1,0)
This option permits the user to display a 'verified' or 'entered in 
"KRN",19,11486,1,2,0)
error' patch for any package in the patch file. A new patch which
"KRN",19,11486,1,3,0)
is displayed, but not printed, will still appear as new until it
"KRN",19,11486,1,4,0)
is printed.
"KRN",19,11486,1,5,0)
 
"KRN",19,11486,1,6,0)
When looking for a patch, the values for the following fields can be
"KRN",19,11486,1,7,0)
entered as the look-up value:
"KRN",19,11486,1,8,0)
 
"KRN",19,11486,1,9,0)
   Patch Designation, Package, Patch Subject and Routine
"KRN",19,11486,1,10,0)
 
"KRN",19,11486,1,11,0)
There is also key word in context cross-reference on the subject field
"KRN",19,11486,1,12,0)
that can be used.
"KRN",19,11486,1,13,0)
 
"KRN",19,11486,1,14,0)
If a patch has the status of 'verified' the display contains
"KRN",19,11486,1,15,0)
the Patch Subject, Description, Category, Priority and Status. The
"KRN",19,11486,1,16,0)
display also contains information about the users who entered the
"KRN",19,11486,1,17,0)
patch, completed the patch and verified the patch. There is also
"KRN",19,11486,1,18,0)
a section for coding changes in the Routine Section of the display.
"KRN",19,11486,1,19,0)
 
"KRN",19,11486,1,20,0)
NOTE:
"KRN",19,11486,1,21,0)
If a patch has the status of 'entered in error' only the Patch
"KRN",19,11486,1,22,0)
Designation, Status, Package, Priority, Subject and Entered in Error
"KRN",19,11486,1,23,0)
Description fields are displayed.
"KRN",19,11486,25)
6^A1AEPH2
"KRN",19,11486,99.1)
61807,40965
"KRN",19,11486,"U")
DISPLAY A PATCH
"KRN",19,11487,-1)
0^30
"KRN",19,11487,0)
A1AE PKGEDIT^Enter/Edit Authorized Users^^R^^^A1AE HELP OPTION AUTH USERS^^^^^
"KRN",19,11487,1,0)
^19.06^25^25^3150705^^^^
"KRN",19,11487,1,1,0)
This function permits authorized developers of a package to
"KRN",19,11487,1,2,0)
add development, support personnel, and verifiers.
"KRN",19,11487,1,3,0)
 
"KRN",19,11487,1,4,0)
When entering users the following three keys are automatically
"KRN",19,11487,1,5,0)
allocated to the user when they are entered as a developer, support
"KRN",19,11487,1,6,0)
person or verifier:
"KRN",19,11487,1,7,0)
    A1AE DEVELOPER, A1AE SUPPORT and A1AE PHVER
"KRN",19,11487,1,8,0)
 
"KRN",19,11487,1,9,0)
These keys may be manually allocated/deallocated using the 'Key
"KRN",19,11487,1,10,0)
Allocation for Patch Functions' option.
"KRN",19,11487,1,11,0)
 
"KRN",19,11487,1,12,0)
For authorized developers to receive the 'Developer's Menu'
"KRN",19,11487,1,13,0)
they must be given the A1AE DEVELOPER key, and for verifiers
"KRN",19,11487,1,14,0)
to receive the 'Verifier Menu' they must be given the
"KRN",19,11487,1,15,0)
A1AE PHVER key.
"KRN",19,11487,1,16,0)
 
"KRN",19,11487,1,17,0)
If the support person is also a verifier of the package, then a  
"KRN",19,11487,1,18,0)
'V' should be entered at the verifier prompt. 
"KRN",19,11487,1,19,0)
 
"KRN",19,11487,1,20,0)
The developer can also specify whether or not user selection
"KRN",19,11487,1,21,0)
of a package is permitted. If selection is permitted any user
"KRN",19,11487,1,22,0)
can select this package via the 'Select Packages for Notification'
"KRN",19,11487,1,23,0)
option. This selection causes 1) automatic notification of patches
"KRN",19,11487,1,24,0)
via mailman, and 2) printing of new patches for this package
"KRN",19,11487,1,25,0)
whenever the user enters the 'New Patch Report' option.
"KRN",19,11487,25)
1^A1AEAU
"KRN",19,11487,"U")
ENTER/EDIT AUTHORIZED USERS
"KRN",19,11488,-1)
0^48
"KRN",19,11488,0)
A1AE PRTPHA^All Released Patches for a Package, Detailed^^R^^^A1AE HELP OPTION ALL REL DET^^^^^
"KRN",19,11488,1,0)
^19.06^11^11^3150705^^^^
"KRN",19,11488,1,1,0)
This print option generates a report of all 'verified' patches for a
"KRN",19,11488,1,2,0)
selected package and version.
"KRN",19,11488,1,3,0)
 
"KRN",19,11488,1,4,0)
The user has the option of sorting the report by one of the following
"KRN",19,11488,1,5,0)
fields: Patch Designation, Status, Category or Priority.
"KRN",19,11488,1,6,0)
 
"KRN",19,11488,1,7,0)
The report contains detailed information about each patch including
"KRN",19,11488,1,8,0)
the Patch Subject, Description, Category, Priority and Status. The
"KRN",19,11488,1,9,0)
report also contains information about users who entered the patch,
"KRN",19,11488,1,10,0)
completed the patch and verified the patch. There is also a section
"KRN",19,11488,1,11,0)
for coding changes in the Routine Section of the report.
"KRN",19,11488,25)
7^A1AEPH2
"KRN",19,11488,"U")
ALL RELEASED PATCHES FOR A PAC
"KRN",19,11489,-1)
0^26
"KRN",19,11489,0)
A1AE PHVER^Release a Patch (and/or edit internal comments)^^R^^A1AE PHVER^A1AE HELP OPTION RELEASE PATCH^^^^^
"KRN",19,11489,1,0)
^19.06^8^8^3150705^^^^
"KRN",19,11489,1,1,0)
Using this option, authorized verifiers of a package can change
"KRN",19,11489,1,2,0)
the status of a 'completed/unverified' patch to the 'verified'
"KRN",19,11489,1,3,0)
status.
"KRN",19,11489,1,4,0)
 
"KRN",19,11489,1,5,0)
When the verifier changes the status of a patch to verified a
"KRN",19,11489,1,6,0)
bulletin is sent to user(s) who have requested notification of
"KRN",19,11489,1,7,0)
patches for the package. The patch is then available to
"KRN",19,11489,1,8,0)
all patch users.
"KRN",19,11489,25)
4^A1AEPH1
"KRN",19,11489,99.1)
59214,39995
"KRN",19,11489,"U")
RELEASE A PATCH (AND/OR EDIT I
"KRN",19,11490,-1)
0^65
"KRN",19,11490,0)
A1AE XUSEC^Key Allocation for Patch Functions^^R^^A1AE XUSEC^A1AE HELP OPTION ALLOCATE KEY^^^^^
"KRN",19,11490,1,0)
^19.06^37^37^3150705^^^^
"KRN",19,11490,1,1,0)
  This function allows the package developers and the patch module
"KRN",19,11490,1,2,0)
coordinator to allocate patch module keys to other users. When
"KRN",19,11490,1,3,0)
a holder of a patch key is edited, the user is told what other
"KRN",19,11490,1,4,0)
packages the user may need the key for. The user is then asked
"KRN",19,11490,1,5,0)
if s/he wants to delete the holder.
"KRN",19,11490,1,6,0)
 
"KRN",19,11490,1,7,0)
  The keys available are the following:
"KRN",19,11490,1,8,0)
 
"KRN",19,11490,1,9,0)
      1) A1AE PHVER      - This key allows the user to have access to the
"KRN",19,11490,1,10,0)
                           'Verifier Menu' of the 'Patch User Menu'.
"KRN",19,11490,1,11,0)
   
"KRN",19,11490,1,12,0)
      2) A1AE DEVELOPER  - This key allows the user to have access to
"KRN",19,11490,1,13,0)
                           the 'Developer's Menu' of the patch user menu
"KRN",19,11490,1,14,0)
 
"KRN",19,11490,1,15,0)
      3) A1AE XUSEC      - This key allows the user, usually a developer,
"KRN",19,11490,1,16,0)
                           to have access to the 'Key Allocation of Patch
"KRN",19,11490,1,17,0)
                           Functions' option of the 'Package Management'
"KRN",19,11490,1,18,0)
                           menu. If a user has this key then through the
"KRN",19,11490,1,19,0)
                           key allocation option, s/he can give out only
"KRN",19,11490,1,20,0)
                           the following keys:
"KRN",19,11490,1,21,0)
                                       A1AE SUPPORT
"KRN",19,11490,1,22,0)
                                       A1AE DEVELOPER
"KRN",19,11490,1,23,0)
                                       A1AE PHVER
"KRN",19,11490,1,24,0)
 
"KRN",19,11490,1,25,0)
      4) A1AE SUPPORT    - This key use to allow the holder access to the
"KRN",19,11490,1,26,0)
                           'Support Menu' of the 'Patch User Menu'.
"KRN",19,11490,1,27,0)
                           This menu has been removed in Version 2.0
"KRN",19,11490,1,28,0)
                           of the Patch Module. This key is being left
"KRN",19,11490,1,29,0)
                           in the module for future enhancements.
"KRN",19,11490,1,30,0)
 
"KRN",19,11490,1,31,0)
      5) A1AE MGR        - This key allows the user to have access to the 
"KRN",19,11490,1,32,0)
                           'Patch Module Management' menu of the 'Patch
"KRN",19,11490,1,33,0)
                           User Menu'.
"KRN",19,11490,1,34,0)
   
"KRN",19,11490,1,35,0)
                           Also, the user will be able to allocate all
"KRN",19,11490,1,36,0)
                           A1AE keys through the 'Key Allocation for
"KRN",19,11490,1,37,0)
                           Patch Functions'.
"KRN",19,11490,25)
6^A1AEAU
"KRN",19,11490,"U")
KEY ALLOCATION FOR PATCH FUNCT
"KRN",19,11491,-1)
0^32
"KRN",19,11491,0)
A1AE PKGMGT^Package Management^^M^^^A1AE HELP MENU PKG MGT^^^^^
"KRN",19,11491,1,0)
^19.06^10^10^3150705^^^^
"KRN",19,11491,1,1,0)
This menu permits a developer of a package to maintain
"KRN",19,11491,1,2,0)
the authorized developers, support personnel and verifiers
"KRN",19,11491,1,3,0)
associated with the package.
"KRN",19,11491,1,4,0)
 
"KRN",19,11491,1,5,0)
This menu also permits holders of the A1AE XUSEC key to allocate
"KRN",19,11491,1,6,0)
other patch keys.
"KRN",19,11491,1,7,0)
 
"KRN",19,11491,1,8,0)
This menu also contains a print option to generate a report
"KRN",19,11491,1,9,0)
of the developers, support personnel, verifiers and any selected 
"KRN",19,11491,1,10,0)
users associated with the package.
"KRN",19,11491,10,0)
^19.01IP^3^3
"KRN",19,11491,10,1,0)
11487^
"KRN",19,11491,10,1,"^")
A1AE PKGEDIT
"KRN",19,11491,10,2,0)
11490^
"KRN",19,11491,10,2,"^")
A1AE XUSEC
"KRN",19,11491,10,3,0)
11494^
"KRN",19,11491,10,3,"^")
A1AE PKGLIST
"KRN",19,11491,99)
63706,6704
"KRN",19,11491,99.1)
61956,81227
"KRN",19,11491,"U")
PACKAGE MANAGEMENT
"KRN",19,11492,-1)
0^13
"KRN",19,11492,0)
A1AE MGR^Patch Module Management^^M^^A1AE MGR^A1AE HELP MENU PATCH MGR^^^^^^y
"KRN",19,11492,1,0)
^19.06^4^4^3150705^^^^
"KRN",19,11492,1,1,0)
This menu permits the Holder of the A1AE MGR key to Add/Edit Packages, 
"KRN",19,11492,1,2,0)
developers, support and verify personnel in the DHCP PATCH/PROBLEM
"KRN",19,11492,1,3,0)
file (#11007). It also permits the user to allocate patch function
"KRN",19,11492,1,4,0)
keys.
"KRN",19,11492,10,0)
^19.01IP^6^6
"KRN",19,11492,10,1,0)
11490^
"KRN",19,11492,10,1,"^")
A1AE XUSEC
"KRN",19,11492,10,2,0)
11493^
"KRN",19,11492,10,2,"^")
A1AE MGRADD
"KRN",19,11492,10,3,0)
11468^U
"KRN",19,11492,10,3,"^")
A1AE USER
"KRN",19,11492,10,4,0)
11479^D
"KRN",19,11492,10,4,"^")
A1AE DEVELOPER
"KRN",19,11492,10,5,0)
11550
"KRN",19,11492,10,5,"^")
A1AE ADD/EDIT PATCH STREAMS
"KRN",19,11492,25)

"KRN",19,11492,99)
63736,84787
"KRN",19,11492,99.1)
63760,1201
"KRN",19,11492,"U")
PATCH MODULE MANAGEMENT
"KRN",19,11493,-1)
0^14
"KRN",19,11493,0)
A1AE MGRADD^Add Package to Patch Module^^R^^A1AE MGR^A1AE HELP OPTION ADD PACKAGE^^^^^
"KRN",19,11493,1,0)
^19.06^8^8^3150705^^^^
"KRN",19,11493,1,1,0)
This function permits holders of the A1AE MGR key to add packages
"KRN",19,11493,1,2,0)
to the DHCP PATCH/PROBLEM PACKAGE file (#11007). When a package is
"KRN",19,11493,1,3,0)
added the USER SELECTION field is set to 'No' by the system. The
"KRN",19,11493,1,4,0)
developer of the package which is being added can then change
"KRN",19,11493,1,5,0)
this field to 'Yes' to permit users to select the package, or the
"KRN",19,11493,1,6,0)
user entering the package can enter 'Yes' to permit users to
"KRN",19,11493,1,7,0)
select this package for automatic notification and printing of
"KRN",19,11493,1,8,0)
patches.
"KRN",19,11493,25)
3^A1AEAU
"KRN",19,11493,99.1)
55442,81811
"KRN",19,11493,"U")
ADD PACKAGE TO PATCH MODULE
"KRN",19,11494,-1)
0^31
"KRN",19,11494,0)
A1AE PKGLIST^List of Package Users^^R^^^A1AE HELP OPTION LIST USERS^^^^^
"KRN",19,11494,1,0)
^19.06^6^6^3150705^^^^
"KRN",19,11494,1,1,0)
This function generates a report of user information about a
"KRN",19,11494,1,2,0)
selected package. The user must be an authorized developer of the
"KRN",19,11494,1,3,0)
package to use this option.
"KRN",19,11494,1,4,0)
 
"KRN",19,11494,1,5,0)
The report contains the developers, support personnel and any selected
"KRN",19,11494,1,6,0)
users associated with the package.
"KRN",19,11494,25)
4^A1AEAU
"KRN",19,11494,"U")
LIST OF PACKAGE USERS
"KRN",19,11495,-1)
0^25
"KRN",19,11495,0)
A1AE PHEXTEND^Extended (DIQ) Display of a Patch^^R^^^A1AE HELP OPTION EXT DISPLAY^^^^^^^1
"KRN",19,11495,1,0)
^19.06^8^8^3150705^^
"KRN",19,11495,1,1,0)
This option allows the developer to view an extended display of a
"KRN",19,11495,1,2,0)
patch. Information regarding who has printed the patch is available
"KRN",19,11495,1,3,0)
through this option. You may display when a selected user printed
"KRN",19,11495,1,4,0)
or the entire patch and all users who printed it. Note this option
"KRN",19,11495,1,5,0)
prints the fields as they exist in Fileman NOT the way they are
"KRN",19,11495,1,6,0)
displayed in the patch report; the Display a Patch option now can be 
"KRN",19,11495,1,7,0)
used to display Under Development patches for which the user is a 
"KRN",19,11495,1,8,0)
package developer.
"KRN",19,11495,20)
W !!,"The Display a Patch option can now (DIP) print any patch this option can.",!
"KRN",19,11495,25)
8^A1AEPH2
"KRN",19,11495,99.1)
54368,48022
"KRN",19,11495,"U")
EXTENDED (DIQ) DISPLAY OF A PA
"KRN",19,11496,-1)
0^15
"KRN",19,11496,0)
A1AE PATCHDOC^Patch Options Documentation^^R^^^A1AE HELP OPTION DOCUMENTATION^^^^^
"KRN",19,11496,1,0)
^19.06^2^2^3150705^^^^
"KRN",19,11496,1,1,0)
This print option generates a report of all the options available
"KRN",19,11496,1,2,0)
for recording, printing and maintaining patch information.
"KRN",19,11496,25)
5^A1AEAU
"KRN",19,11496,"U")
PATCH OPTIONS DOCUMENTATION
"KRN",19,11497,-1)
0^54
"KRN",19,11497,0)
A1AE PRTUDVPH VER^Under Development Patches Report for Releasers^^R^^A1AE PHVER^A1AE HELP OPTION UNDER DEV VER^^^^^
"KRN",19,11497,1,0)
^19.06^17^17^3150705^^^^
"KRN",19,11497,1,1,0)
This print option generates a report of 'under development' patches for a
"KRN",19,11497,1,2,0)
selected package and version. The user must be an authorized verifier of
"KRN",19,11497,1,3,0)
the package and must have the A1AE PHVER security key to have the option
"KRN",19,11497,1,4,0)
appear on the the support menu.
"KRN",19,11497,1,5,0)
 
"KRN",19,11497,1,6,0)
The user has the option of sorting the report by one of the following
"KRN",19,11497,1,7,0)
fields: Patch Designation, Category or Priority.
"KRN",19,11497,1,8,0)
 
"KRN",19,11497,1,9,0)
The report contains detailed information about each patch including the
"KRN",19,11497,1,10,0)
Patch Subject, Description, Category, Priority and Status. The report also
"KRN",19,11497,1,11,0)
contains information about users who have entered the patch and completed
"KRN",19,11497,1,12,0)
and/or verified the patch and routine information.
"KRN",19,11497,1,13,0)
 
"KRN",19,11497,1,14,0)
This option is the same as the A1AE PRTUDVPH option except that it requires
"KRN",19,11497,1,15,0)
the A1AE PHVER key. It should be used by the verifier to help the developer
"KRN",19,11497,1,16,0)
to avoid typos before the developer changes the status to
"KRN",19,11497,1,17,0)
'completed/unverified'.
"KRN",19,11497,25)
3^A1AEPH2
"KRN",19,11497,"U")
UNDER DEVELOPMENT PATCHES REPO
"KRN",19,11498,-1)
0^5
"KRN",19,11498,0)
A1AE COPY PATCH^Copy a patch into a new patch^^R^^^A1AE HELP OPTION COPY PATCH^^^^^
"KRN",19,11498,1,0)
^^14^14^3150705.230437
"KRN",19,11498,1,1,0)
This function permits authorized developers of a package to copy
"KRN",19,11498,1,2,0)
information from an existing patch into a new patch. The new patch
"KRN",19,11498,1,3,0)
which is added must be for the same package, but can be for a different
"KRN",19,11498,1,4,0)
version.
"KRN",19,11498,1,5,0)
 
"KRN",19,11498,1,6,0)
First you will be prompted for a patch to copy, then the version
"KRN",19,11498,1,7,0)
number of the new patch being created. The system assigns a patch
"KRN",19,11498,1,8,0)
designation to the new patch and you are asked if you want to add
"KRN",19,11498,1,9,0)
this patch. If you respond 'Yes' you will be prompted for the
"KRN",19,11498,1,10,0)
Subject of the new patch. The new patch is automatically assigned
"KRN",19,11498,1,11,0)
a status of Under Development and as always the user entering and 
"KRN",19,11498,1,12,0)
date entered is set by the system. The Priority, Category(s), Patch
"KRN",19,11498,1,13,0)
Description and all Routine information is copied over from the
"KRN",19,11498,1,14,0)
existing patch into the new patch.
"KRN",19,11498,25)
5^A1AEPH1
"KRN",19,11498,"U")
COPY A PATCH INTO A NEW PATCH
"KRN",19,11499,-1)
0^42
"KRN",19,11499,0)
A1AE PRTCOMPHDTE^Completed Patch Summary Report by Date^^P^^^A1AE HELP OPTION COMPL SUM RPT^^^^^PATCH MODULE^y
"KRN",19,11499,1,0)
^19.06^4^4^3150705^^
"KRN",19,11499,1,1,0)
This print option generates a report of completed patches for a
"KRN",19,11499,1,2,0)
select package, or all selected packages for a specified date
"KRN",19,11499,1,3,0)
range. The report contains the Patch Designation, Subject, Date
"KRN",19,11499,1,4,0)
Completed, and Priority.
"KRN",19,11499,60)
A1AE(11005,
"KRN",19,11499,61)
1
"KRN",19,11499,62)
0
"KRN",19,11499,63)
[A1AE VERIFIED PATCH SUMMARY]
"KRN",19,11499,64)
[A1AE COM PATCH BY STRM BY DT]
"KRN",19,11499,68)
1
"KRN",19,11499,"U")
COMPLETED PATCH SUMMARY REPORT
"KRN",19,11500,-1)
0^9
"KRN",19,11500,0)
A1AE DISCOMPH^Display a Completed/NotReleased Patch^^R^^^A1AE HELP OPTION DSPL NOT REL^^^^^
"KRN",19,11500,1,0)
^19.06^16^16^3150705^^^^
"KRN",19,11500,1,1,0)
This option permits display of a 'completed/unverified' patch.
"KRN",19,11500,1,2,0)
The user must be an authorized developer or verifier to use this
"KRN",19,11500,1,3,0)
option.
"KRN",19,11500,1,4,0)
 
"KRN",19,11500,1,5,0)
When looking for a patch, the values for the following fields can be
"KRN",19,11500,1,6,0)
entered as the look-up value:
"KRN",19,11500,1,7,0)
 
"KRN",19,11500,1,8,0)
   Patch Designation, Package, Patch Subject and Routine
"KRN",19,11500,1,9,0)
 
"KRN",19,11500,1,10,0)
There is also a key word in context cross-reference on the subject
"KRN",19,11500,1,11,0)
field that can be used.
"KRN",19,11500,1,12,0)
 
"KRN",19,11500,1,13,0)
The display contains the Patch Subject, Description, Category, Priority
"KRN",19,11500,1,14,0)
and Status. The display also contains information about the users
"KRN",19,11500,1,15,0)
who entered the patch and completed the patch. There is also a section
"KRN",19,11500,1,16,0)
for coding changes in the Routine Section of the display.
"KRN",19,11500,25)
4^A1AEPH2
"KRN",19,11500,"U")
DISPLAY A COMPLETED/NOTRELEASE
"KRN",19,11501,-1)
0^64
"KRN",19,11501,0)
A1AE VERIFIER^Releaser Menu^^M^^A1AE PHVER^A1AE HELP MENU VERIFIER^^^^^^y
"KRN",19,11501,1,0)
^19.06^3^3^3150705^^^^
"KRN",19,11501,1,1,0)
This menu provides the holder of the A1AE PHVER key with
"KRN",19,11501,1,2,0)
the options needed to verify, display and print Completed/
"KRN",19,11501,1,3,0)
unverified patches for packages which s/he is a verifier.
"KRN",19,11501,10,0)
^19.01IP^26^26
"KRN",19,11501,10,15,0)
11531
"KRN",19,11501,10,15,"^")
A1AE PKVER
"KRN",19,11501,10,16,0)
11522^CDE
"KRN",19,11501,10,16,"^")
A1AE COMPLIANCE EDIT
"KRN",19,11501,10,17,0)
11489
"KRN",19,11501,10,17,"^")
A1AE PHVER
"KRN",19,11501,10,18,0)
11524
"KRN",19,11501,10,18,"^")
A1AE ROUTINES THAT OVERLAP
"KRN",19,11501,10,19,0)
11500
"KRN",19,11501,10,19,"^")
A1AE DISCOMPH
"KRN",19,11501,10,20,0)
11473
"KRN",19,11501,10,20,"^")
A1AE PRTCOMPH
"KRN",19,11501,10,21,0)
11508
"KRN",19,11501,10,21,"^")
A1AE DEV FORWARD
"KRN",19,11501,10,22,0)
11510
"KRN",19,11501,10,22,"^")
A1AE PRTCOMPHVER
"KRN",19,11501,10,23,0)
11514^
"KRN",19,11501,10,23,"^")
A1AE COMPLIANCE DISPLAY
"KRN",19,11501,10,24,0)
11546
"KRN",19,11501,10,24,"^")
A1AE EXPORT PATCH TO HFS
"KRN",19,11501,10,25,0)
11513
"KRN",19,11501,10,25,"^")
A1AE COMPLIANCE COMMENT PRT
"KRN",19,11501,10,26,0)
11499
"KRN",19,11501,10,26,"^")
A1AE PRTCOMPHDTE
"KRN",19,11501,15)

"KRN",19,11501,20)

"KRN",19,11501,99)
63733,78097
"KRN",19,11501,99.1)
61412,81006
"KRN",19,11501,"U")
RELEASER MENU
"KRN",19,11502,-1)
0^44
"KRN",19,11502,0)
A1AE PRTCOMSUMDT^Released Patch Summary Report by Date^^R^^^XQUIT MESSAGE^^^^^
"KRN",19,11502,1,0)
^19.06^4^4^3150705^^^^
"KRN",19,11502,1,1,0)
This print option generates a report of 'verified' patches for a
"KRN",19,11502,1,2,0)
select package, or all selected packages for a specified date
"KRN",19,11502,1,3,0)
range. The report contains the Patch Designation, Subject, Date
"KRN",19,11502,1,4,0)
Completed, and Priority.
"KRN",19,11502,25)
9^A1AEPH2
"KRN",19,11502,"U")
RELEASED PATCH SUMMARY REPORT 
"KRN",19,11503,-1)
0^40
"KRN",19,11503,0)
A1AE PRTCOMDETDT^Released Patches by Date Detailed Report^^R^^^A1AE HELP OPTION REL DETAIL^^^^^
"KRN",19,11503,1,0)
^19.06^8^8^3150705^^^^
"KRN",19,11503,1,1,0)
This print option generates a detailed report of 'verified' patches
"KRN",19,11503,1,2,0)
for a select package, or all selected packages for a specified date
"KRN",19,11503,1,3,0)
range. The report contains detailed information about each patch
"KRN",19,11503,1,4,0)
including the Patch Subject, Description, Category, Priority and
"KRN",19,11503,1,5,0)
Status. The report also contains information about the users who
"KRN",19,11503,1,6,0)
entered the patch, completed the patch and verified the patch. There
"KRN",19,11503,1,7,0)
is also a section for coding changes in the Routine Section of the
"KRN",19,11503,1,8,0)
report.
"KRN",19,11503,25)
10^A1AEPH2
"KRN",19,11503,"U")
RELEASED PATCHES BY DATE DETAI
"KRN",19,11505,-1)
0^47
"KRN",19,11505,0)
A1AE PRTNEWPHNUM^Display Number of New Patches^^R^^^A1AE HELP OPTION NEW NUMBER^^^^^
"KRN",19,11505,1,0)
^19.06^8^8^3150705^^^^
"KRN",19,11505,1,1,0)
This option displays a summary of the number of new
"KRN",19,11505,1,2,0)
patches for your selected packages. This display includes
"KRN",19,11505,1,3,0)
the package name, number of new patches and date any
"KRN",19,11505,1,4,0)
patches were last printed for the package.
"KRN",19,11505,1,5,0)
 
"KRN",19,11505,1,6,0)
A patch is 'new' if it has not been printed by the user and
"KRN",19,11505,1,7,0)
it has a status of 'verified'. Once a 'new' patch has been
"KRN",19,11505,1,8,0)
printed it will no longer be counted on this summary display.
"KRN",19,11505,25)
DSPNEW^A1AEVP
"KRN",19,11505,"U")
DISPLAY NUMBER OF NEW PATCHES
"KRN",19,11506,-1)
0^6
"KRN",19,11506,0)
A1AE DEV CREATE^Create a packman message^^R^^^A1AE HELP OPTION PACKMAN MSG^^^^^
"KRN",19,11506,1,0)
^19.06^2^2^3150705^^
"KRN",19,11506,1,1,0)
This option allows a developer to create a input packman message
"KRN",19,11506,1,2,0)
from the local routine directory if the routines, version are present
"KRN",19,11506,20)

"KRN",19,11506,25)
6^A1AEPH1
"KRN",19,11506,"U")
CREATE A PACKMAN MESSAGE
"KRN",19,11507,-1)
0^10
"KRN",19,11507,0)
A1AE FORWARD^Forward a Released Patch message^^R^^^A1AE HELP OPTION FWD RELEASED^^^^^
"KRN",19,11507,1,0)
^19.06^1^1^3150705^^^^
"KRN",19,11507,1,1,0)
This option allows a user to forward a verified patch message.
"KRN",19,11507,20)

"KRN",19,11507,25)
8^A1AEPH1
"KRN",19,11507,"U")
FORWARD A RELEASED PATCH MESSA
"KRN",19,11508,-1)
0^7
"KRN",19,11508,0)
A1AE DEV FORWARD^Forward a Completed/NotReleased Patch Message^^R^^^A1AE HELP OPTION FWD NOT REL^^^^^
"KRN",19,11508,1,0)
^19.06^2^2^3150705^^^^
"KRN",19,11508,1,1,0)
This allows a developer or verifier to forward a 'Complete/unverified'
"KRN",19,11508,1,2,0)
Patch Message.
"KRN",19,11508,20)

"KRN",19,11508,25)
7^A1AEPH1
"KRN",19,11508,99.1)
59793,42354
"KRN",19,11508,"U")
FORWARD A COMPLETED/NOTRELEASE
"KRN",19,11509,-1)
0^33
"KRN",19,11509,0)
A1AE PKGPRT^Set All patches for selected Packages as Printed^^R^^^A1AE HELP OPTION SET PRINTED^^^^^
"KRN",19,11509,1,0)
^19.06^6^6^3150705^^^
"KRN",19,11509,1,1,0)
This option allows a new user of the Patch Module to update the
"KRN",19,11509,1,2,0)
printed status of all patches for all selected packages.  This 
"KRN",19,11509,1,3,0)
option is used so that patches that were verified previous to 
"KRN",19,11509,1,4,0)
the selection of package by the user no longer appear on 'new'
"KRN",19,11509,1,5,0)
patch displays.  The patches may still be viewed and printed with
"KRN",19,11509,1,6,0)
other options.
"KRN",19,11509,25)
12^A1AEPH2
"KRN",19,11509,"U")
SET ALL PATCHES FOR SELECTED P
"KRN",19,11510,-1)
0^43
"KRN",19,11510,0)
A1AE PRTCOMPHVER^Completed Patch Summary for Assigned Packages^^R^^^A1AE HELP OPTION COMP SUMM PKG^^^^^
"KRN",19,11510,1,0)
^19.06^2^2^3150705^^^
"KRN",19,11510,1,1,0)
This prints a summary report for all complete/unverified patches in
"KRN",19,11510,1,2,0)
all assigned Packages.
"KRN",19,11510,25)
13^A1AEPH2
"KRN",19,11510,"U")
COMPLETED PATCH SUMMARY FOR AS
"KRN",19,11511,-1)
0^60
"KRN",19,11511,0)
A1AE SERVER VERIFIED^Serve and preserve verified messages^^S^^^^^^^^^y
"KRN",19,11511,1,0)
^^4^4^3150705.233622
"KRN",19,11511,1,1,0)
Whenever a package or patch is released, this is a server mailman option
"KRN",19,11511,1,2,0)
that is invoked which is actually a no-op with the exception in that it saves 
"KRN",19,11511,1,3,0)
the sent verification message in the server basket, which is located under 
"KRN",19,11511,1,4,0)
the Postmaster's account. That is its only use.
"KRN",19,11511,220)
^Q^^^Y^N^^^
"KRN",19,11511,"U")
SERVE AND PRESERVE VERIFIED ME
"KRN",19,11512,-1)
0^1
"KRN",19,11512,0)
A1AE AUTHORIZED DOMAINS^Authorized Domains^^E^^^^^^^^PATCH MODULE^n
"KRN",19,11512,1,0)
^19.06^2^2^3150705^^
"KRN",19,11512,1,1,0)
This option allow the editing of the Authorized Domains multipule in the 
"KRN",19,11512,1,2,0)
package file.
"KRN",19,11512,30)
DIC(9.4,
"KRN",19,11512,31)
AEMQ
"KRN",19,11512,50)
DIC(9.4,
"KRN",19,11512,51)
25
"KRN",19,11512,99.1)
60381,62941
"KRN",19,11512,"U")
AUTHORIZED DOMAINS
"KRN",19,11513,-1)
0^2
"KRN",19,11513,0)
A1AE COMPLIANCE COMMENT PRT^Compliance Date Print^^I^^A1AE COMPDATE^A1AE HELP OPTION COMP DATE PRT^^^^^PATCH MODULE
"KRN",19,11513,1,0)
^19.06^2^2^3150705^^^^
"KRN",19,11513,1,1,0)
The option is used to display the Compliance Date information including 
"KRN",19,11513,1,2,0)
any Compliance Date comments.
"KRN",19,11513,30)
A1AE(11005,
"KRN",19,11513,31)
AEMQ
"KRN",19,11513,63)
[A1AE PATCH COMPL/COMMENT RPT]
"KRN",19,11513,80)
A1AE(11005,
"KRN",19,11513,99.1)
60705,56451
"KRN",19,11513,"U")
COMPLIANCE DATE PRINT
"KRN",19,11514,-1)
0^3
"KRN",19,11514,0)
A1AE COMPLIANCE DISPLAY^Compliance Date Display^^P^^^A1AE HELP OPTION COMP DATE DSP^^^^^PATCH MODULE
"KRN",19,11514,1,0)
^19.06^3^3^3150705^^^
"KRN",19,11514,1,1,0)
This report will display Compliance Date data sorted by date verified.  If
"KRN",19,11514,1,2,0)
the Compliance Date contains any text in the "Reason for Change: field 
"KRN",19,11514,1,3,0)
this data is also displayed.
"KRN",19,11514,60)
A1AE(11005,
"KRN",19,11514,62)
0
"KRN",19,11514,63)
[A1AE PATCH COMPL/COMMENT RPT]
"KRN",19,11514,64)
[A1AE PATCH COMPL/COMM SORT]
"KRN",19,11514,65)

"KRN",19,11514,66)

"KRN",19,11514,"U")
COMPLIANCE DATE DISPLAY
"KRN",19,11515,-1)
0^57
"KRN",19,11515,0)
A1AE ROUTINE INQUIRE^Routine Inquire^^I^^^A1AE HELP OPTION ROUTINE INQ^^^^^PATCH MODULE^y
"KRN",19,11515,1,0)
^19.06^2^2^3150705^^
"KRN",19,11515,1,1,0)
This option allows a inquire to the routine file to find out the current 
"KRN",19,11515,1,2,0)
and past checksums.
"KRN",19,11515,30)
DIC(9.8,
"KRN",19,11515,31)
AEMQ
"KRN",19,11515,63)
[A1AE RTN CHECKSUM]
"KRN",19,11515,70)
HOME
"KRN",19,11515,80)
DIC(9.8,
"KRN",19,11515,83)
Y
"KRN",19,11515,"U")
ROUTINE INQUIRE
"KRN",19,11516,-1)
0^62
"KRN",19,11516,0)
A1AE TEST SCANNER^Scan Patch for Discrepancies and Contents^^R^^A1AE SCAN MESSAGE^A1AE HELP OPTION TEST SCAN^^^^^PATCH MODULE
"KRN",19,11516,1,0)
^19.06^2^2^3150705^^
"KRN",19,11516,1,1,0)
Enables manual running of patch scanner (inventorier and checksum
"KRN",19,11516,1,2,0)
verifier), e.g. for testing prior to general release.
"KRN",19,11516,25)
A1AECOM
"KRN",19,11516,"U")
SCAN PATCH FOR DISCREPANCIES A
"KRN",19,11517,-1)
0^45
"KRN",19,11517,0)
A1AE PRTDETDT ORG^Detailed Report of Released Patches by Date^^R^^^A1AE HELP OPTION DET RPT REL^^^^^
"KRN",19,11517,1,0)
^19.06^8^8^3150705^^^^
"KRN",19,11517,1,1,0)
This print option generates a detailed report of 'verified' patches
"KRN",19,11517,1,2,0)
for a select package, or all selected packages for a specified date
"KRN",19,11517,1,3,0)
range. The report contains detailed information about each patch
"KRN",19,11517,1,4,0)
including the Patch Subject, Description, Category, Priority and
"KRN",19,11517,1,5,0)
Status. The report also contains information about the users who
"KRN",19,11517,1,6,0)
entered the patch, completed the patch and verified the patch. There
"KRN",19,11517,1,7,0)
is also a section for coding changes in the Routine Section of the
"KRN",19,11517,1,8,0)
report.
"KRN",19,11517,25)
10^A1AEPH2
"KRN",19,11517,"U")
DETAILED REPORT OF RELEASED PA
"KRN",19,11518,-1)
0^38
"KRN",19,11518,0)
A1AE PRT SUM DT ORG^Released Patch Summary Report by Date^^R^^^A1AE HELP OPTION REL SUMM RPT^^^^^
"KRN",19,11518,1,0)
^19.06^4^4^3150705^^^^
"KRN",19,11518,1,1,0)
This print option generates a report of 'verified' patches for a
"KRN",19,11518,1,2,0)
select package, or all selected packages for a specified date
"KRN",19,11518,1,3,0)
range. The report contains the Patch Designation, Subject, Date
"KRN",19,11518,1,4,0)
Completed, and Priority.
"KRN",19,11518,25)
9^A1AEPH2
"KRN",19,11518,"U")
RELEASED PATCH SUMMARY REPORT 
"KRN",19,11519,-1)
0^51
"KRN",19,11519,0)
A1AE PRTPHS ORG^Summary Report of All Patches for a Package^^R^^^A1AE HELP OPTION SUMMARY ALL^^^^^
"KRN",19,11519,1,0)
^19.06^4^4^3150705^^^^
"KRN",19,11519,1,1,0)
This option permits the user to display a summary report of
"KRN",19,11519,1,2,0)
all patches for a selected package and version.
"KRN",19,11519,1,3,0)
 
"KRN",19,11519,1,4,0)
The report contains the Patch Designation, Subject, Status, and Routines.
"KRN",19,11519,25)
5^A1AEPH2
"KRN",19,11519,99)
55480,45206
"KRN",19,11519,99.1)
55442,81811
"KRN",19,11519,"U")
SUMMARY REPORT OF ALL PATCHES 
"KRN",19,11520,-1)
0^11
"KRN",19,11520,0)
A1AE FULL SUMMARY BY DATE^Full Summary by Date for Every Package^^P^^^A1AE HELP OPTION FULL SUMM^^^^^
"KRN",19,11520,1,0)
^19.06^3^3^3150705^^
"KRN",19,11520,1,1,0)
This print option generates a report of 'verified' patches for all 
"KRN",19,11520,1,2,0)
packages, not just for users selected packages, for a specified date
"KRN",19,11520,1,3,0)
range. 
"KRN",19,11520,60)
A1AE(11005,
"KRN",19,11520,62)
0
"KRN",19,11520,63)
[A1AE FULL SUMMARY BY DATE]
"KRN",19,11520,64)
[A1AE FULL SUMARY SORT]
"KRN",19,11520,65)

"KRN",19,11520,66)

"KRN",19,11520,"U")
FULL SUMMARY BY DATE FOR EVERY
"KRN",19,11521,-1)
0^56
"KRN",19,11521,0)
A1AE RELEASE SUMMARY^Release Summary^^P^^^A1AE HELP OPTION REL SUMMARY^^^^^PATCH MODULE
"KRN",19,11521,1,0)
^19.06^2^2^3150705^^^^
"KRN",19,11521,1,1,0)
For a selected date range, displays the patch, sequence, date of release,
"KRN",19,11521,1,2,0)
compliance date and status (mandatory, emergency).
"KRN",19,11521,60)
A1AE(11005.1,
"KRN",19,11521,62)
0
"KRN",19,11521,63)
[DBA PATCH RELEASE SUMMARY]
"KRN",19,11521,64)
[DBA PATCH RELEASE SUMMARY]
"KRN",19,11521,65)
?,
"KRN",19,11521,66)
?,
"KRN",19,11521,"U")
RELEASE SUMMARY
"KRN",19,11522,-1)
0^4
"KRN",19,11522,0)
A1AE COMPLIANCE EDIT^Compliance Date Edit^^E^^A1AE COMPDATE^A1AE HELP OPTION COMP DATE EDT^^^^^PATCH MODULE
"KRN",19,11522,1,0)
^19.06^2^2^3150705^^^^
"KRN",19,11522,1,1,0)
The option is used to edit the Compliance Date on already released 
"KRN",19,11522,1,2,0)
patches.
"KRN",19,11522,30)
A1AE(11005,
"KRN",19,11522,31)
AEMQ
"KRN",19,11522,50)
A1AE(11005,
"KRN",19,11522,51)
[A1AE COMP DATE]
"KRN",19,11522,99.1)
60235,29929
"KRN",19,11522,"U")
COMPLIANCE DATE EDIT
"KRN",19,11524,-1)
0^59
"KRN",19,11524,0)
A1AE ROUTINES THAT OVERLAP^Routines that overlap in patches^^R^^^A1AE HELP OPTION RT OVERLAP^^^^^
"KRN",19,11524,1,0)
^19.06^2^2^3150705^^
"KRN",19,11524,1,1,0)
Given a selected patch that is entered or completed but not yet
"KRN",19,11524,1,2,0)
verified/released, routines that overlap with other patches are listed.
"KRN",19,11524,25)
A1AERCON
"KRN",19,11524,"U")
ROUTINES THAT OVERLAP IN PATCH
"KRN",19,11525,-1)
0^12
"KRN",19,11525,0)
A1AE HFS CHKSUM SVR^HFS CHECKSUM MSG SERVER^^S^^^^^^^^PATCH MODULE^y
"KRN",19,11525,1,0)
^19.06^2^2^3150705^^^
"KRN",19,11525,1,1,0)
This option is the server to proccess HFS transport messages with the 
"KRN",19,11525,1,2,0)
Routine checksums.
"KRN",19,11525,25)
EN^A1AEHSVR
"KRN",19,11525,220)
^R^^N^Y^N^0^^7
"KRN",19,11525,"U")
HFS CHECKSUM MSG SERVER
"KRN",19,11526,-1)
0^52
"KRN",19,11526,0)
A1AE PRTUDP^Under Development Patch Listing^^R^^^A1AE HELP OPTION UNDER DEV LST^^^^^
"KRN",19,11526,1,0)
^19.06^8^8^3150705^^
"KRN",19,11526,1,1,0)
This option permits the user to display a 'UNDER DEVELOPMENT' patch for 
"KRN",19,11526,1,2,0)
any package in the patch file. 
"KRN",19,11526,1,3,0)
  
"KRN",19,11526,1,4,0)
If a patch has the status of 'under development' the display contains the
"KRN",19,11526,1,5,0)
Patch Subject, Description, Category, Priority and Status. The display
"KRN",19,11526,1,6,0)
also contains information about the users who entered the patch, completed
"KRN",19,11526,1,7,0)
the patch and verified the patch. There is also a section for coding
"KRN",19,11526,1,8,0)
changes in the Routine Section of the display.
"KRN",19,11526,25)
UD^A1AEPH2
"KRN",19,11526,"U")
UNDER DEVELOPMENT PATCH LISTIN
"KRN",19,11527,-1)
0^39
"KRN",19,11527,0)
A1AE PRTCNRP^Completed/Not Released Listing^^R^^^A1AE HELP OPTION COMPL LISTING^^^^^
"KRN",19,11527,1,0)
^19.06^8^8^3150705^^
"KRN",19,11527,1,1,0)
This option permits the user to display a 'Completed/Not Released" patch 
"KRN",19,11527,1,2,0)
for any package in the patch file. 
"KRN",19,11527,1,3,0)
  
"KRN",19,11527,1,4,0)
If a patch has the status of 'Completed/Not Released' the display contains
"KRN",19,11527,1,5,0)
the Patch Subject, Description, Category, Priority and Status. The display
"KRN",19,11527,1,6,0)
also contains information about the users who entered the patch, completed
"KRN",19,11527,1,7,0)
the patch and verified the patch. There is also a section for coding
"KRN",19,11527,1,8,0)
changes in the Routine Section of the display.
"KRN",19,11527,25)
CNR^A1AEPH2
"KRN",19,11527,"U")
COMPLETED/NOT RELEASED LISTING
"KRN",19,11528,-1)
0^27
"KRN",19,11528,0)
A1AE PKADD^Add a Package Release^^R^^^A1AE HELP OPTION ADD PGK REL^^^^^^y
"KRN",19,11528,1,0)
^^1^1^3150705.231048
"KRN",19,11528,1,1,0)
This option creates a release for a complete new version of a package.
"KRN",19,11528,25)
1^A1AEPK
"KRN",19,11528,"U")
ADD A PACKAGE RELEASE
"KRN",19,11529,-1)
0^28
"KRN",19,11529,0)
A1AE PKDEL^Delete a Package Release^^R^^^A1AE HELP OPTION DEL PGK REL^^^^^^y
"KRN",19,11529,1,0)
^^2^2^3150705.231152
"KRN",19,11529,1,1,0)
Use this option to delete a package release before it has been
"KRN",19,11529,1,2,0)
verified and released.
"KRN",19,11529,25)
2^A1AEPK
"KRN",19,11529,"U")
DELETE A PACKAGE RELEASE
"KRN",19,11530,-1)
0^29
"KRN",19,11530,0)
A1AE PKEDIT^Edit a Package Release^^R^^^A1AE HELP OPTION EDIT PGK REL^^^^^^y
"KRN",19,11530,1,0)
^^2^2^3150705.233105
"KRN",19,11530,1,1,0)
Use this option to edit or update a package release once it has been 
"KRN",19,11530,1,2,0)
added to the Patch Module.
"KRN",19,11530,25)
3^A1AEPK
"KRN",19,11530,"U")
EDIT A PACKAGE RELEASE
"KRN",19,11531,-1)
0^36
"KRN",19,11531,0)
A1AE PKVER^Package Release (and/or edit internal comments)^^R^^^A1AE HELP OPTION PGK RELEASE^^^^^^y
"KRN",19,11531,1,0)
^19.06^2^2^3150705^
"KRN",19,11531,1,1,0)
Package verifiers can use this option to release a package (a new
"KRN",19,11531,1,2,0)
version release) once it has been verified.
"KRN",19,11531,25)
4^A1AEPK
"KRN",19,11531,"U")
PACKAGE RELEASE (AND/OR EDIT I
"KRN",19,11532,-1)
0^35
"KRN",19,11532,0)
A1AE PKMENU^Package Menu^^M^^^A1AE HELP MENU PACKAGE^^^^^^y
"KRN",19,11532,1,0)
^19.06^2^2^3150705^^^
"KRN",19,11532,1,1,0)
This option holds the option for ADD, EDIT, DELETE and VERIFY a new 
"KRN",19,11532,1,2,0)
package.
"KRN",19,11532,10,0)
^19.01IP^4^4
"KRN",19,11532,10,1,0)
11528^^1
"KRN",19,11532,10,1,"^")
A1AE PKADD
"KRN",19,11532,10,2,0)
11530^^2
"KRN",19,11532,10,2,"^")
A1AE PKEDIT
"KRN",19,11532,10,3,0)
11529^^3
"KRN",19,11532,10,3,"^")
A1AE PKDEL
"KRN",19,11532,10,4,0)
11531^^4
"KRN",19,11532,10,4,"^")
A1AE PKVER
"KRN",19,11532,99)
63706,6791
"KRN",19,11532,"U")
PACKAGE MENU
"KRN",19,11545,-1)
0^66
"KRN",19,11545,0)
A1AE LOAD RELEASED PATCH^Load Released Patch into Patch Module^^S^^^^^^^^PATCH MODULE
"KRN",19,11545,1,0)
^19.06^3^3^3150705^^^^
"KRN",19,11545,1,1,0)
This is a server option (i.e. triggered by a mail message from Mailman) 
"KRN",19,11545,1,2,0)
to receive patches from VA Forum and automatically add them to this Forum 
"KRN",19,11545,1,3,0)
system into file 11005.
"KRN",19,11545,25)
EN^A1AEPSVR
"KRN",19,11545,220)
^R^^N^Y^N^0^^7
"KRN",19,11545,"U")
LOAD RELEASED PATCH INTO PATCH
"KRN",19,11546,-1)
0^67
"KRN",19,11546,0)
A1AE EXPORT PATCH TO HFS^Export Patch(es) to the Filesystem^^R^^^A1AE HELP OPTION EXPORT PATCH^^^^^PATCH MODULE^y
"KRN",19,11546,1,0)
^19.06^4^4^3150705^^^
"KRN",19,11546,1,1,0)
Permits a user (given proper access to the patch(es)) to export patches 
"KRN",19,11546,1,2,0)
to the file system. If more than one patch is selected, a Multibuild is 
"KRN",19,11546,1,3,0)
created in the exact same style that the Transport a Distribution option 
"KRN",19,11546,1,4,0)
in KIDS performs that operation.
"KRN",19,11546,25)
EN^A1AEM2K
"KRN",19,11546,"U")
EXPORT PATCH(ES) TO THE FILESY
"KRN",19,11547,-1)
0^68
"KRN",19,11547,0)
A1AE IMPORT MENU^Patch Import from Filesystem Menu^^M^^A1AE IMPORT^A1AE HELP MENU IMPORT^^^^^^y
"KRN",19,11547,1,0)
^19.06^2^2^3150705^^^
"KRN",19,11547,1,1,0)
This menu contains all options having to deal with importing patches 
"KRN",19,11547,1,2,0)
from the file system.
"KRN",19,11547,10,0)
^19.01IP^2^2
"KRN",19,11547,10,1,0)
11548^S^1
"KRN",19,11547,10,1,"^")
A1AE IMPORT SINGLE DIR
"KRN",19,11547,10,2,0)
11549^M^2
"KRN",19,11547,10,2,"^")
A1AE IMPORT RECURSIVE
"KRN",19,11547,99)
63706,7072
"KRN",19,11547,"U")
PATCH IMPORT FROM FILESYSTEM M
"KRN",19,11548,-1)
0^70
"KRN",19,11548,0)
A1AE IMPORT SINGLE DIR^Import Patches in a Single Directory^^R^^A1AE IMPORT^A1AE HELP OPTION SINGLE IMPORT^^^^^^y
"KRN",19,11548,1,0)
^19.06^1^1^3150705^^^
"KRN",19,11548,1,1,0)
Use this option to import patches (.TXT files) from a single directory.
"KRN",19,11548,25)
SD^A1AEK2M
"KRN",19,11548,"U")
IMPORT PATCHES IN A SINGLE DIR
"KRN",19,11549,-1)
0^69
"KRN",19,11549,0)
A1AE IMPORT RECURSIVE^Import Patches recursive from a Directory Tree^^R^^A1AE IMPORT^A1AE HELP OPTION TREE IMPORT^^^^^^y
"KRN",19,11549,1,0)
^19.06^2^2^3150705^^
"KRN",19,11549,1,1,0)
This option allows you to load .TXT files for patches no matter where 
"KRN",19,11549,1,2,0)
they are located as long as you specify a parent directory to start from.
"KRN",19,11549,25)
RECURSE^A1AEK2M
"KRN",19,11549,"U")
IMPORT PATCHES RECURSIVE FROM 
"KRN",19,11550,-1)
0^77
"KRN",19,11550,0)
A1AE ADD/EDIT PATCH STREAMS^Add/Edit Patch Streams^^E^^A1AE MGR^A1AE HELP OPTION PATCH STREAMS^^^^^PATCH MODULE
"KRN",19,11550,1,0)
^19.06^3^3^3150705^^^^
"KRN",19,11550,1,1,0)
This option allows you to create new patch streams and modify the 
"KRN",19,11550,1,2,0)
primary patch stream. Be careful with this as this will change the patch
"KRN",19,11550,1,3,0)
numbers coming out of the package.
"KRN",19,11550,30)
A1AE(11007.1,
"KRN",19,11550,31)
AEMQ
"KRN",19,11550,50)
A1AE(11007.1,
"KRN",19,11550,51)
.01:.05
"KRN",19,11550,"U")
ADD/EDIT PATCH STREAMS
"KRN",19,11551,-1)
0^71
"KRN",19,11551,0)
A1AE SHOW PATCH RELATIONSHIPS^Show a Patch's Relationships^^I^^^A1AE HELP OPTION SHOW RELAT^^^^^^y
"KRN",19,11551,1,0)
^19.06^2^2^3150705^^
"KRN",19,11551,1,1,0)
This inquire type option shows the deriviation source of a patch and 
"KRN",19,11551,1,2,0)
shows patch dependencies.
"KRN",19,11551,30)
A1AE(11005,
"KRN",19,11551,31)
AEMQ
"KRN",19,11551,63)
[A1AE PATCH RELATIONSHIPS]
"KRN",19,11551,70)
HOME
"KRN",19,11551,80)
A1AE(11005,
"KRN",19,11551,83)
Y
"KRN",19,11551,"U")
SHOW A PATCH'S RELATIONSHIPS
"KRN",19,11552,-1)
0^73
"KRN",19,11552,0)
A1AE PRTPHS SEC^Summary Report of All Patches for a Package (Sec)^^R^^^A1AE HELP OPTION SUMMARY SEC^^^^^PATCH MODULE^y
"KRN",19,11552,1,0)
^19.06^2^2^3150705^^
"KRN",19,11552,1,1,0)
This is the same as the original summary report, but it allows you to 
"KRN",19,11552,1,2,0)
select secondary statuses.
"KRN",19,11552,25)
SEC^A1AEPH2
"KRN",19,11552,"U")
SUMMARY REPORT OF ALL PATCHES 
"KRN",19,11553,-1)
0^74
"KRN",19,11553,0)
A1AE SEC REPORTS^Secondard Statuses Reports^^M^^^A1AE HELP MENU SEC REPORTS^^^^^^y
"KRN",19,11553,1,0)
^^1^1^3150705.233229
"KRN",19,11553,1,1,0)
This menu contains a list of secondard status reports.
"KRN",19,11553,10,0)
^19.01IP^3^3
"KRN",19,11553,10,1,0)
11552
"KRN",19,11553,10,1,"^")
A1AE PRTPHS SEC
"KRN",19,11553,10,2,0)
11554
"KRN",19,11553,10,2,"^")
A1AE PRT BY SEC ST BY DATE SUM
"KRN",19,11553,10,3,0)
11555
"KRN",19,11553,10,3,"^")
A1AE PRTPHA SEC
"KRN",19,11553,99)
63706,7045
"KRN",19,11553,"U")
SECONDARD STATUSES REPORTS
"KRN",19,11554,-1)
0^72
"KRN",19,11554,0)
A1AE PRT BY SEC ST BY DATE SUM^Patches in a single Secondary Status by Date^^R^^^A1AE HELP OPTION SEC BY DATE^^^^^PATCH MODULE^y
"KRN",19,11554,1,0)
^19.06^3^3^3150705^^
"KRN",19,11554,1,1,0)
Print a summary of patches in a selected secondary status by the date of 
"KRN",19,11554,1,2,0)
that status. Please note that if there is no date associated with the 
"KRN",19,11554,1,3,0)
status, nothing will print.
"KRN",19,11554,25)
SECDT^A1AEPH2
"KRN",19,11554,"U")
PATCHES IN A SINGLE SECONDARY 
"KRN",19,11555,-1)
0^75
"KRN",19,11555,0)
A1AE PRTPHA SEC^All Patches for a Package in a Sec Status, Detail^^R^^^A1AE HELP OPTION ALL SECONDARY^^^^^^y
"KRN",19,11555,1,0)
^19.06^3^3^3150705^^
"KRN",19,11555,1,1,0)
This report will print the full patch descriptions for all patches in a 
"KRN",19,11555,1,2,0)
selected package/version combo. You must be a user of this package to be 
"KRN",19,11555,1,3,0)
able to select the package for the report.
"KRN",19,11555,25)
SECDET^A1AEPH2
"KRN",19,11555,"U")
ALL PATCHES FOR A PACKAGE IN A
"KRN",19,11556,-1)
0^78
"KRN",19,11556,0)
A1AE CHANGE SITE SUBSCRIPTION^CHANGE SITE PATCH SUBSCRIPTION^^E^^A1AE MGR^A1AE CHNG SITE SUBSCR^^^^^PATCH MODULE
"KRN",19,11556,1,0)
^19.06^1^1^3150705^^
"KRN",19,11556,1,1,0)
Option to allow site to change their patch subscription. 
"KRN",19,11556,30)
A1AE(11007.1,
"KRN",19,11556,31)
AEMQ
"KRN",19,11556,50)
A1AE(11007.1,
"KRN",19,11556,51)
[A1AE CHANGE SITE SUBSCRIPTION]
"KRN",19,11556,"U")
CHANGE SITE PATCH SUBSCRIPTION
"KRN",19,11557,-1)
0^79
"KRN",19,11557,0)
A1AENEWSTRM^A1AE New Stream Request^^S^^^^^^^^
"KRN",19,11557,1,0)
^19.06^6^6^3150705^^^^
"KRN",19,11557,1,1,0)
This is the server that will 1) forward requests for a change in patch 
"KRN",19,11557,1,2,0)
stream to the appropriate recipient(s) at forum, 2) will receive the 
"KRN",19,11557,1,3,0)
confirmation from Forum email authorizing automated editing of the site's 
"KRN",19,11557,1,4,0)
patch stream, 3) will return a confirmation of stream change to Forum 
"KRN",19,11557,1,5,0)
after successful editing of SEQUENCE, or, and error message relating 
"KRN",19,11557,1,6,0)
failure of the site to convert to the new patch stream.
"KRN",19,11557,25)
PRCSMAIL^A1AEK2
"KRN",19,11557,220)
^R^^N^Y^N
"KRN",19,11557,"U")
A1AE NEW STREAM REQUEST
"KRN",19,11558,-1)
0^76
"KRN",19,11558,0)
A1AEFMSC^A1AE FORUM RECEIVES CHNG STREAM REQUEST^^S^^^^^^^^
"KRN",19,11558,1,0)
^19.06^5^5^3150705^^
"KRN",19,11558,1,1,0)
This is the server that will 1) receive requests for a change in patch
"KRN",19,11558,1,2,0)
stream from a site/domain, 2) send back to the requesting site/domain an 
"KRN",19,11558,1,3,0)
approval or disapproval notification, 3) accept requestor's email 
"KRN",19,11558,1,4,0)
documenting the change's success or failure, and, 4) sends the requestor 
"KRN",19,11558,1,5,0)
final confirmation of the change event.
"KRN",19,11558,25)
PRCSMAIL^A1AEK3
"KRN",19,11558,220)
^R^^N^Y^N
"KRN",19,11558,"U")
A1AE FORUM RECEIVES CHNG STREA
"KRN",19,11563,-1)
1^20
"KRN",19,11563,0)
A1AE PBPRT
"KRN",19.1,560,-1)
0^4
"KRN",19.1,560,0)
A1AE PHVER
"KRN",19.1,560,1,0)
^19.11^8^8^3150705^
"KRN",19.1,560,1,1,0)
The patch verifier needs this this key in order to have verification options 
"KRN",19.1,560,1,2,0)
show up on the Support Menu. It also unlocks the Releaser Menu.
"KRN",19.1,560,1,3,0)

"KRN",19.1,560,1,4,0)
This key unlocks the following options:
"KRN",19.1,560,1,5,0)

"KRN",19.1,560,1,6,0)
A1AE PHVER Release a Patch (and/or edit internal comments)
"KRN",19.1,560,1,7,0)
A1AE PRTUDVPH VER Under Development Patches Report for Releasers
"KRN",19.1,560,1,8,0)
A1AE VERIFIER Releaser Menu
"KRN",19.1,560,2,0)
^19.12PA^^
"KRN",19.1,561,-1)
0^2
"KRN",19.1,561,0)
A1AE DEVELOPER
"KRN",19.1,561,1,0)
^^5^5^3150705.220436
"KRN",19.1,561,1,1,0)
This key gives the user access to the developer's menu.
"KRN",19.1,561,1,2,0)

"KRN",19.1,561,1,3,0)
This key unlocks the following options:
"KRN",19.1,561,1,4,0)

"KRN",19.1,561,1,5,0)
A1AE DEVELOPER Developer's Menu
"KRN",19.1,561,2,0)
^19.12PA^^
"KRN",19.1,562,-1)
0^7
"KRN",19.1,562,0)
A1AE SUPPORT
"KRN",19.1,562,1,0)
^^4^4^3150705.221424
"KRN",19.1,562,1,1,0)
This key gives the user access the the support personnel menu.
"KRN",19.1,562,1,2,0)

"KRN",19.1,562,1,3,0)
This key unlocks the following options:
"KRN",19.1,562,1,4,0)
A1AE SUPPORT Support Menu
"KRN",19.1,562,2,0)
^19.12PA^^
"KRN",19.1,563,-1)
0^8
"KRN",19.1,563,0)
A1AE XUSEC
"KRN",19.1,563,1,0)
^^5^5^3150705.221505
"KRN",19.1,563,1,1,0)
This key should be given to the Patch Module manager, and to any application 
"KRN",19.1,563,1,2,0)
managers experienced enough to use it.
"KRN",19.1,563,1,3,0)

"KRN",19.1,563,1,4,0)
This key unlocks the following options:
"KRN",19.1,563,1,5,0)
A1AE XUSEC Key Allocation for Patch Functions
"KRN",19.1,563,2,0)
^19.12PA^^
"KRN",19.1,564,-1)
0^3
"KRN",19.1,564,0)
A1AE MGR
"KRN",19.1,564,1,0)
^^12^12^3150705.221027
"KRN",19.1,564,1,1,0)
This key gives the user access to the 'Patch Module Management' option.
"KRN",19.1,564,1,2,0)

"KRN",19.1,564,1,3,0)
This key gives the user access to the Patch Module Management option. 
"KRN",19.1,564,1,4,0)
This key should only be given to the Patch Module manager.
"KRN",19.1,564,1,5,0)

"KRN",19.1,564,1,6,0)
This key unlocks the following options:
"KRN",19.1,564,1,7,0)
A1AE ADD/EDIT PATCH STREAMS Add/Edit Patch Streams
"KRN",19.1,564,1,8,0)
A1AE MGR Patch Module Management
"KRN",19.1,564,1,9,0)
A1AE MGRADD Add Package to Patch Module
"KRN",19.1,564,1,10,0)
 
"KRN",19.1,564,1,11,0)
On the Patch Client, this menu option protects the option [A1AE CHANGE 
"KRN",19.1,564,1,12,0)
SITE SUBSCRIPTION], which allows a SITE to switch streams.
"KRN",19.1,564,3,0)
^19.13P
"KRN",19.1,565,-1)
0^5
"KRN",19.1,565,0)
A1AE PKGEDIT
"KRN",19.1,565,1,0)
^^1^1^3150705^
"KRN",19.1,565,1,1,0)
This key is not currently associated with any options.
"KRN",19.1,566,-1)
0^6
"KRN",19.1,566,0)
A1AE SCAN MESSAGE^Enables option to A1AECOM
"KRN",19.1,566,1,0)
^19.11^2^2^3150705^^
"KRN",19.1,566,1,1,0)
This key is for those testing the A1AE*2.2*7 patch's inventorier and
"KRN",19.1,566,1,2,0)
checksum verifier.
"KRN",19.1,567,-1)
0^1
"KRN",19.1,567,0)
A1AE COMPDATE
"KRN",19.1,567,1,0)
^19.11^7^7^3150705^
"KRN",19.1,567,1,1,0)
The NVS Managers will need this key to change a patch compliance date.
"KRN",19.1,567,1,2,0)
At the present time, the patch compliance date isn't used outside of VA, 
"KRN",19.1,567,1,3,0)
though it is available to other organizations should they choose to use it.
"KRN",19.1,567,1,4,0)

"KRN",19.1,567,1,5,0)
This key unlocks the following options:
"KRN",19.1,567,1,6,0)
A1AE COMPLIANCE EDIT Compliance Date Edit
"KRN",19.1,567,1,7,0)
A1AE COMPLIANCE COMMENT PRT Compliance Date Print
"KRN",19.1,568,-1)
0^9
"KRN",19.1,568,0)
A1AE IMPORT^Patch import capability key
"KRN",19.1,568,1,0)
^^11^11^3150705.220919
"KRN",19.1,568,1,1,0)
The patch module checks this key to see if a user is allowed to load an 
"KRN",19.1,568,1,2,0)
entire patch directly into the patch module automatically. Patches can be 
"KRN",19.1,568,1,3,0)
loaded from the file system or sent as a mail message from the VA Forum. This 
"KRN",19.1,568,1,4,0)
key should only be given to the Patch Module manager, and only temporarily 
"KRN",19.1,568,1,5,0)
when actual importing needs to be done. It should be removed again once the 
"KRN",19.1,568,1,6,0)
import is complete, to avoid accidental system corruption.
"KRN",19.1,568,1,7,0)

"KRN",19.1,568,1,8,0)
This key unlocks the following options:
"KRN",19.1,568,1,9,0)
A1AE IMPORT MENU Patch Import from Filesystem Menu
"KRN",19.1,568,1,10,0)
A1AE IMPORT SINGLE DIR Import Patches from a Single Directory
"KRN",19.1,568,1,11,0)
A1AE IMPORT RECURSIVE Import Patches Recursive from a Directory Tree
"MBREQ")
0
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",221,-1)
1^1
"PKG",221,0)
PATCH MODULE^A1AE^Record Patches for packages in Patch (/Problem) Package file
"PKG",221,1,0)
^9.41A^6^6^3100111^^^^
"PKG",221,1,1,0)
This package keeps track of patches for any package which is in the Patch/
"PKG",221,1,2,0)
Problem Package file(#11007). Authorized package developers enter the
"PKG",221,1,3,0)
patches, and patch users may select which packages they want to view
"PKG",221,1,4,0)
patches for. When patches reach various development statuses bulletins
"PKG",221,1,5,0)
are sent notifying selected users. The patches are stored in the Patch
"PKG",221,1,6,0)
file(#11005).
"PKG",221,5)
OAKLAND
"PKG",221,7)
^^I
"PKG",221,22,0)
^9.49I^1^1
"PKG",221,22,1,0)
2.5^3150727
"PKG",221,22,1,1,0)
^^2^2^3150727
"PKG",221,22,1,1,1,0)
The PATCH Module from FORUM.VA.GOV modified to handle OSEHRA Community 
"PKG",221,22,1,1,2,0)
requirements.
"PKG",221,22,1,"PAH",0)
^9.4901^^0
"PKG",221,"DEV")
FORT/OAKLAND OIFO
"PKG",221,"VERSION")
2.5
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
86
"RTN","A1AE2POS")
0^^B155874348
"RTN","A1AE2POS",1,0)
A1AE2POS ;ven/lgc,jli-post installs for A1AE pkg ;2015-07-27  10:34 PM
"RTN","A1AE2POS",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AE2POS",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AE2POS",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AE2POS",5,0)
 ;
"RTN","A1AE2POS",6,0)
 ;
"RTN","A1AE2POS",7,0)
 ;primary change history
"RTN","A1AE2POS",8,0)
 ;2014-08-26: version 2.4, released
"RTN","A1AE2POS",9,0)
 ;
"RTN","A1AE2POS",10,0)
 ;
"RTN","A1AE2POS",11,0)
 ; CHANGE: (VEN/LGC) 8/27/2014
"RTN","A1AE2POS",12,0)
 ;        Brought Post Install A1AEPST for DHCP PATCH STREAM
"RTN","A1AE2POS",13,0)
 ;        [#11007.1] to build the PAT multiple in the
"RTN","A1AE2POS",14,0)
 ;        BUILD [#9.6] and INSTALL [#9.7] over from
"RTN","A1AE2POS",15,0)
 ;        A1AEUTL with decision to keep post installs
"RTN","A1AE2POS",16,0)
 ;        in the A1AE2POS routine
"RTN","A1AE2POS",17,0)
 ;
"RTN","A1AE2POS",18,0)
 ; CHANGE: (VEN/LGC) 10/14/2014
"RTN","A1AE2POS",19,0)
 ;        Additional code to check for existence
"RTN","A1AE2POS",20,0)
 ;        of DHCP PATCH STREAM [#11007.1] file
"RTN","A1AE2POS",21,0)
 ;        and expected entries.
"RTN","A1AE2POS",22,0)
 ;
"RTN","A1AE2POS",23,0)
 ; CHANGE: (VEN/LGC) 10/15/2014  A1AEP0
"RTN","A1AE2POS",24,0)
 ;        Additional code to kill all entries in
"RTN","A1AE2POS",25,0)
 ;        file 11007.1 and re-build with correct
"RTN","A1AE2POS",26,0)
 ;        FOIA VISTA and OSEHRA VISTA entries
"RTN","A1AE2POS",27,0)
 ;
"RTN","A1AE2POS",28,0)
 ; POST INSTALL entry A1AEP0
"RTN","A1AE2POS",29,0)
 ;                Delete any entries in DHCP PATCH STREAM
"RTN","A1AE2POS",30,0)
 ;                [#11007.1] file and rebuild with correctlyFOIA VISTA
"RTN","A1AE2POS",31,0)
 ;                entered FOIA VISTA and OSEHRA VISTA.
"RTN","A1AE2POS",32,0)
 ;
"RTN","A1AE2POS",33,0)
 ;
"RTN","A1AE2POS",34,0)
 ; POST INSTALL entry A1AEP1
"RTN","A1AE2POS",35,0)
 ;                Following DHCP PATCH STREAM [#11007.1] KIDS
"RTN","A1AE2POS",36,0)
 ;                install, Set all PRIMARY? to NO, then
"RTN","A1AE2POS",37,0)
 ;                correct one to yes if FORUM site.  Set
"RTN","A1AE2POS",38,0)
 ;                all SUBSCRIPTION to No, then set FOIA VISTA
"RTN","A1AE2POS",39,0)
 ;                to YES.  Then ask installer whether they
"RTN","A1AE2POS",40,0)
 ;                wish to change their site's SUBSCRIPTION.
"RTN","A1AE2POS",41,0)
 ;
"RTN","A1AE2POS",42,0)
 ; POST INSTALL entry A1AEP2
"RTN","A1AE2POS",43,0)
 ;                Following update/install of [#11005]
"RTN","A1AE2POS",44,0)
 ;                DHCP PATCHES file this updates the
"RTN","A1AE2POS",45,0)
 ;                PAT multiples in BUILD [#9.6] and
"RTN","A1AE2POS",46,0)
 ;                INSTALL [#9.7] files
"RTN","A1AE2POS",47,0)
 ;
"RTN","A1AE2POS",48,0)
 ; XXX TODO (VEN/SMH) XXX: A1AEP2 is not invoked anywhere. This is supposed to
"RTN","A1AE2POS",49,0)
 ;               be part of the PATCH CLIENT, but the patch client
"RTN","A1AE2POS",50,0)
 ;               has NO CODE to perform the same update upon the 
"RTN","A1AE2POS",51,0)
 ;               installation of a KIDS build!
"RTN","A1AE2POS",52,0)
 ;
"RTN","A1AE2POS",53,0)
 ; POST INSTALL - Following DHCP PATCH STREAM [#11007.1] KIDS
"RTN","A1AE2POS",54,0)
 ;                install, Set all PRIMARY? to NO, then
"RTN","A1AE2POS",55,0)
 ;                correct one to yes if FORUM site.  Set
"RTN","A1AE2POS",56,0)
 ;                all SUBSCRIPTION to No, then set FOIA VISTA
"RTN","A1AE2POS",57,0)
 ;                to YES.  Then ask installer whether they
"RTN","A1AE2POS",58,0)
 ;                wish to change their site's SUBSCRIPTION.
"RTN","A1AE2POS",59,0)
 ;
"RTN","A1AE2POS",60,0)
JLIINSTL ; JLI - Post Install update data dictionary nodes for Pre Lookup Transforms and A1AESEQ
"RTN","A1AE2POS",61,0)
 I '$D(^DD(9.49,.01,7.5)) S ^DD(9.49,.01,7.5)="D PLU949^A1AEDD1"
"RTN","A1AE2POS",62,0)
 I '$D(^DD(9.6,.01,7.5)) S ^DD(9.6,.01,7.5)="D PLU96^A1AEDD1"
"RTN","A1AE2POS",63,0)
 I '$D(^DD(9.7,.01,7.5)) S ^DD(9.7,.01,7.5)="D PLU97^A1AEDD1"
"RTN","A1AE2POS",64,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(A1AEFILE)) S A1AEFILE=11004
"RTN","A1AE2POS",65,0)
 D SETSEQ ; set DD nodes for A1AESEQ cross reference for file 9.4 and build
"RTN","A1AE2POS",66,0)
 D UPDATSEQ ; update PACKAGE file for patches with SEQ number and inf only
"RTN","A1AE2POS",67,0)
 ;
"RTN","A1AE2POS",68,0)
A1AEP1 ;
"RTN","A1AE2POS",69,0)
 I '$D(^A1AE(11007.1)) D  Q
"RTN","A1AE2POS",70,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",71,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] not installed")
"RTN","A1AE2POS",72,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",73,0)
 ;
"RTN","A1AE2POS",74,0)
 ; Kill any existing entries and rebuild
"RTN","A1AE2POS",75,0)
 ;
"RTN","A1AE2POS",76,0)
 I '$$CLRFILE D  Q
"RTN","A1AE2POS",77,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",78,0)
 . D MES^XPDUTL("Unable to clear DHCP PATCH STREAM [#11007.1]")
"RTN","A1AE2POS",79,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",80,0)
 ;
"RTN","A1AE2POS",81,0)
 I '$$LOADFILE D  Q
"RTN","A1AE2POS",82,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",83,0)
 . D MES^XPDUTL("Unable to build DHCP PATCH STREAM [#11007.1]")
"RTN","A1AE2POS",84,0)
 . D MES^XPDUTL(" with FOIA VISTA and OSEHRA VISTA entries.")
"RTN","A1AE2POS",85,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",86,0)
 ;
"RTN","A1AE2POS",87,0)
A1AEP1R ;
"RTN","A1AE2POS",88,0)
 I $$GET1^DIQ(11007.1,1,.01)'="FOIA VISTA" D  Q
"RTN","A1AE2POS",89,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",90,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] is incomplete")
"RTN","A1AE2POS",91,0)
 . D MES^XPDUTL(" Missing FOIA VISTA entry.")
"RTN","A1AE2POS",92,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",93,0)
 ;
"RTN","A1AE2POS",94,0)
 I $$GET1^DIQ(11007.1,10001,.01)'="OSEHRA VISTA" D  Q
"RTN","A1AE2POS",95,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",96,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] is incomplete")
"RTN","A1AE2POS",97,0)
 . D MES^XPDUTL(" Missing OSEHRA VISTA entry.")
"RTN","A1AE2POS",98,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",99,0)
 ;
"RTN","A1AE2POS",100,0)
 I $$GET1^DIQ(11007.1,1,.001)'=1 D  Q
"RTN","A1AE2POS",101,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",102,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] is CORRUPTED")
"RTN","A1AE2POS",103,0)
 . D MES^XPDUTL(" FOIA VISTA entry .001 not 1.")
"RTN","A1AE2POS",104,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",105,0)
 ;
"RTN","A1AE2POS",106,0)
 I $$GET1^DIQ(11007.1,10001,.001)'=10001 D  Q
"RTN","A1AE2POS",107,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",108,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] is CORRUPTED")
"RTN","A1AE2POS",109,0)
 . D MES^XPDUTL(" OSEHRA VISTA entry .001 not 10001")
"RTN","A1AE2POS",110,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",111,0)
 ;
"RTN","A1AE2POS",112,0)
 D MAILGRP
"RTN","A1AE2POS",113,0)
 ;
"RTN","A1AE2POS",114,0)
 ; VEN/SMH - I commented all of these calls out.
"RTN","A1AE2POS",115,0)
 ; If $G(^DD(9.6,19,0))'["PATCH^9.619PA^^PAT;0" D  Q
"RTN","A1AE2POS",116,0)
 ; . D BMES^XPDUTL(2)
"RTN","A1AE2POS",117,0)
 ; . D MES^XPDUTL("PATCH multiple [#19] not found in BUILD file")
"RTN","A1AE2POS",118,0)
 ; . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",119,0)
 ;
"RTN","A1AE2POS",120,0)
 ; I $G(^DD(9.7,19,0))'["PATCH^9.719PA^^PAT;0" D  Q
"RTN","A1AE2POS",121,0)
 ; . D BMES^XPDUTL(2)
"RTN","A1AE2POS",122,0)
 ; . D MES^XPDUTL("PATCH multiple [#19] not found in INSTALL file")
"RTN","A1AE2POS",123,0)
 ; . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",124,0)
 ;
"RTN","A1AE2POS",125,0)
 ; I '$D(^DD(A1AEFILE,0)) D  Q
"RTN","A1AE2POS",126,0)
 ; . D BMES^XPDUTL(2)
"RTN","A1AE2POS",127,0)
 ; . D MES^XPDUTL("Do not find DD for DHCP PATCHES [#"_A1AEFILE_"] file")
"RTN","A1AE2POS",128,0)
 ; . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",129,0)
 ;
"RTN","A1AE2POS",130,0)
 ; Set all PRIMARY? [#.02] in 11007.1 to 0 [NO]
"RTN","A1AE2POS",131,0)
 ; D A1AEP1A
"RTN","A1AE2POS",132,0)
 ;
"RTN","A1AE2POS",133,0)
 ; Set PRIMARY? to YES if the FORUM DOMAIN [#.07] entry
"RTN","A1AE2POS",134,0)
 ;    for this DHCP PATCH STREAM entry matches the
"RTN","A1AE2POS",135,0)
 ;    NAME of the first entry in the MAILMAN PARAMTERS
"RTN","A1AE2POS",136,0)
 ;    [#4.3] file.
"RTN","A1AE2POS",137,0)
 ; D A1AEP1B
"RTN","A1AE2POS",138,0)
 ;
"RTN","A1AE2POS",139,0)
 ; Set SUBSCRIPTION [#.06] in 11007.1 to 0 for
"RTN","A1AE2POS",140,0)
 ;    every site. Then set FOIA VISTA SUBSCRIPTION to 1
"RTN","A1AE2POS",141,0)
 ; D A1AEP1C
"RTN","A1AE2POS",142,0)
 ;
"RTN","A1AE2POS",143,0)
 ; Finally display SUBSCRIPTION to installer and ask if they
"RTN","A1AE2POS",144,0)
 ;    wish to switch to another PATCH SEQUENCE.
"RTN","A1AE2POS",145,0)
 ; D A1AEP1D
"RTN","A1AE2POS",146,0)
 QUIT
"RTN","A1AE2POS",147,0)
 ;
"RTN","A1AE2POS",148,0)
 ; Set all PRIMARY? [#.02] in 11007.1 to 0 [NO]
"RTN","A1AE2POS",149,0)
 ; WAS A1AEP0
"RTN","A1AE2POS",150,0)
A1AEP1A N DIK,DA
"RTN","A1AE2POS",151,0)
 S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AE2POS",152,0)
 D ENALL2^DIK
"RTN","A1AE2POS",153,0)
 N A1AEI
"RTN","A1AE2POS",154,0)
 F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AE2POS",155,0)
 . S $P(^A1AE(11007.1,A1AEI,0),U,2)=0
"RTN","A1AE2POS",156,0)
 D ENALL^DIK
"RTN","A1AE2POS",157,0)
 Q
"RTN","A1AE2POS",158,0)
 ;
"RTN","A1AE2POS",159,0)
 ;
"RTN","A1AE2POS",160,0)
 ; Now Set PRIMARY? to YES if the FORUM DOMAIN [#.07] entry
"RTN","A1AE2POS",161,0)
 ;    for this DHCP PATCH STREAM entry matches the
"RTN","A1AE2POS",162,0)
 ;    NAME of the first entry in the MAILMAN PARAMTERS
"RTN","A1AE2POS",163,0)
 ;    [#4.3] file.
"RTN","A1AE2POS",164,0)
 ; WAS A1AESP
"RTN","A1AE2POS",165,0)
A1AEP1B F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AE2POS",166,0)
 .  I $O(^A1AE(11007.1,"AFORUM",""))=$$GET1^DIQ(4.3,"1,",.01) D
"RTN","A1AE2POS",167,0)
 .. N A1AEFDA,DIERR
"RTN","A1AE2POS",168,0)
 .. S A1AEFDA(3,11007.1,A1AEI_",",.02)=1
"RTN","A1AE2POS",169,0)
 .. D UPDATE^DIE("","A1AEFDA(3)")
"RTN","A1AE2POS",170,0)
 Q
"RTN","A1AE2POS",171,0)
 ;
"RTN","A1AE2POS",172,0)
 ;
"RTN","A1AE2POS",173,0)
 ; Set SUBSCRIPTION [#.06] in 11007.1 to 0 for
"RTN","A1AE2POS",174,0)
 ;    every site. Then set FOIA VISTA SUBSCRIPTION to 1
"RTN","A1AE2POS",175,0)
 ; WAS A1AES0
"RTN","A1AE2POS",176,0)
A1AEP1C N DIK,DA
"RTN","A1AE2POS",177,0)
 S DIK(1)=".06",DIK="^A1AE(11007.1,"
"RTN","A1AE2POS",178,0)
 D ENALL2^DIK
"RTN","A1AE2POS",179,0)
 N A1AEI
"RTN","A1AE2POS",180,0)
 F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AE2POS",181,0)
 . S $P(^A1AE(11007.1,A1AEI,0),U,6)=0
"RTN","A1AE2POS",182,0)
 S A1AEI=$O(^A1AE(11007.1,"B","FOIA VISTA",0))
"RTN","A1AE2POS",183,0)
 S:A1AEI $P(^A1AE(11007.1,A1AEI,0),U,6)=1
"RTN","A1AE2POS",184,0)
 D ENALL^DIK
"RTN","A1AE2POS",185,0)
 Q
"RTN","A1AE2POS",186,0)
 ;
"RTN","A1AE2POS",187,0)
 ; Now display SUBSCRIPTION to installer and ask if they
"RTN","A1AE2POS",188,0)
 ;    wish to switch to another PATCH SEQUENCE.
"RTN","A1AE2POS",189,0)
A1AEP1D ; WAS A1AEASK
"RTN","A1AE2POS",190,0)
 D BMES^XPDUTL(2)
"RTN","A1AE2POS",191,0)
 D MES^XPDUTL("Your Patch Stream SUBSCRIPTION is currently")
"RTN","A1AE2POS",192,0)
 D MES^XPDUTL(" set to FOIA VISTA.")
"RTN","A1AE2POS",193,0)
 D BMES^XPDUTL(1)
"RTN","A1AE2POS",194,0)
 D MES^XPDUTL("There is an option A1AE CHANGE SITE SUBSCRIPTION")
"RTN","A1AE2POS",195,0)
 D MES^XPDUTL(" which will let you move your Site to")
"RTN","A1AE2POS",196,0)
 D MES^XPDUTL(" another SUBSCRIPTION in the future")
"RTN","A1AE2POS",197,0)
 D MES^XPDUTL("HOWEVER you may change your SUBSCRIPTION now.")
"RTN","A1AE2POS",198,0)
 D BMES^XPDUTL(1)
"RTN","A1AE2POS",199,0)
 D MES^XPDUTL("Would you like to change your SUBSCRIPTION now?")
"RTN","A1AE2POS",200,0)
 N DIR,Y
"RTN","A1AE2POS",201,0)
 S DIR("A")="    ? ",DIR(0)="Y",DIR("B")="NO"
"RTN","A1AE2POS",202,0)
 D ^DIR
"RTN","A1AE2POS",203,0)
 I 'Y D  G A1AEEXPS
"RTN","A1AE2POS",204,0)
 .  D MES^XPDUTL("OK.  Will not change SUBSCRIPTION now") Q
"RTN","A1AE2POS",205,0)
 ;
"RTN","A1AE2POS",206,0)
 D MES^XPDUTL("YES.  Change SUBSCRIPTION now.")
"RTN","A1AE2POS",207,0)
 ;
"RTN","A1AE2POS",208,0)
 ; Give list of choices (1 and 10001 are only choices now)
"RTN","A1AE2POS",209,0)
 ; Drop them into EDIT of that entry.  Force SUBSCRIPTION
"RTN","A1AE2POS",210,0)
 ;  to 1?  This fills in SUBSCRIPTION DATE and OFFICAL
"RTN","A1AE2POS",211,0)
 ;  then hand them off to fill in comments
"RTN","A1AE2POS",212,0)
 K DIR S DIR(0)="P^11007.1" D ^DIR
"RTN","A1AE2POS",213,0)
 I 'Y D  G A1AEEXPS
"RTN","A1AE2POS",214,0)
 . D BMES^XPDUTL(1)
"RTN","A1AE2POS",215,0)
 . D MES^XPDUTL("No SUBSCRIPTION selected")
"RTN","A1AE2POS",216,0)
 . D MES^XPDUTL("  The SUBSCRIPTION may be changed at any time using")
"RTN","A1AE2POS",217,0)
 . D MES^XPDUTL("  the Option A1AE CHANGE SITE SUBSCRIPTION.")
"RTN","A1AE2POS",218,0)
 ;
"RTN","A1AE2POS",219,0)
 ; OK Y=DA for entry allow them to edit.  How to use DIE
"RTN","A1AE2POS",220,0)
 ;   call and A1AE CHANGE SITE SUBSCRIPTION?
"RTN","A1AE2POS",221,0)
 N DIE,DR
"RTN","A1AE2POS",222,0)
 S DA=+Y
"RTN","A1AE2POS",223,0)
 S DIE="^A1AE(11007.1,",DR="[A1AE CHANGE SITE SUBSCRIPTION]"
"RTN","A1AE2POS",224,0)
 D ^DIE
"RTN","A1AE2POS",225,0)
 ;
"RTN","A1AE2POS",226,0)
A1AEEXPS Q
"RTN","A1AE2POS",227,0)
 ;
"RTN","A1AE2POS",228,0)
 ;
"RTN","A1AE2POS",229,0)
 ;
"RTN","A1AE2POS",230,0)
 ; POST INSTALL - Following update/install of [#11005]
"RTN","A1AE2POS",231,0)
 ;                DHCP PATCHES file this updates the
"RTN","A1AE2POS",232,0)
 ;                PAT multiples in BUILD [#9.6] and
"RTN","A1AE2POS",233,0)
 ;                INSTALL [#9.7] files
"RTN","A1AE2POS",234,0)
 ; LOGIC
"RTN","A1AE2POS",235,0)
 ; Run down the BUILD [#9.6] file
"RTN","A1AE2POS",236,0)
 ;   Save the PATCH DESIGNATION in the PMARR array
"RTN","A1AE2POS",237,0)
 ;     If there is an entry in the DHCP PATCHES [#11005]
"RTN","A1AE2POS",238,0)
 ;     file, add this pointer to the PAT multiple
"RTN","A1AE2POS",239,0)
 ;     in the BUILD entry and the corresponding INSTALL entry
"RTN","A1AE2POS",240,0)
 ;   Check for MULTIPLE BUILD entries in the BUILD
"RTN","A1AE2POS",241,0)
 ;   Check recursively for MULTIPLE BUILDs in these
"RTN","A1AE2POS",242,0)
 ;   Update the BUILD PAT multiple with any DHCP PATCHES
"RTN","A1AE2POS",243,0)
 ;     entries found matching
"RTN","A1AE2POS",244,0)
 ;
"RTN","A1AE2POS",245,0)
A1AEP2 N BN,KIEN,MIEN,PM S KIEN=0
"RTN","A1AE2POS",246,0)
 K BMARR
"RTN","A1AE2POS",247,0)
 F  S KIEN=$O(^XPD(9.6,KIEN)) Q:'KIEN  D
"RTN","A1AE2POS",248,0)
 .  S BN=$P($G(^XPD(9.6,KIEN,0)),"^")
"RTN","A1AE2POS",249,0)
 .  K BMARR D A1AEP2A(BN,.BMARR,KIEN)
"RTN","A1AE2POS",250,0)
 Q
"RTN","A1AE2POS",251,0)
 ; BMARR array contains BUILD NAME (NAME [#.01])
"RTN","A1AE2POS",252,0)
 ;  of this entry in 9.6 AND of any MULTIPLE BUILD
"RTN","A1AE2POS",253,0)
 ;  descendants
"RTN","A1AE2POS",254,0)
 ; As each descendant is identified, check to see if
"RTN","A1AE2POS",255,0)
 ;  there is a matching name in DHCP PATCHES
"RTN","A1AE2POS",256,0)
 ;  If so, add to PAT multiple for parent (KIEN)
"RTN","A1AE2POS",257,0)
A1AEP2A(BUILD,BMARR,KIEN) ;
"RTN","A1AE2POS",258,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) ; do we have an IEN?
"RTN","A1AE2POS",259,0)
 Q:'BIEN  ; skip if no record
"RTN","A1AE2POS",260,0)
 S BMARR(BUILD)="" ; add to requiremenents
"RTN","A1AE2POS",261,0)
 D A1AEP2B(BUILD,KIEN) ; add to PAT multipe of primary entry
"RTN","A1AE2POS",262,0)
 N BLDNM S BLDNM=""
"RTN","A1AE2POS",263,0)
 F  S BLDNM=$O(^XPD(9.6,BIEN,10,"B",BLDNM)) Q:BLDNM=""  D
"RTN","A1AE2POS",264,0)
 . Q:$D(BMARR(BLDNM))  ; no need to continue if already have
"RTN","A1AE2POS",265,0)
 . D A1AEP2A(BLDNM,.BMARR,KIEN) ; add all its required patches
"RTN","A1AE2POS",266,0)
 Q
"RTN","A1AE2POS",267,0)
 ;
"RTN","A1AE2POS",268,0)
 ; Load PAT multiples
"RTN","A1AE2POS",269,0)
 ; Looks in DHCP PATCHES [#11005] for Patch Designation
"RTN","A1AE2POS",270,0)
 ;   matching the BUILD name (PD)
"RTN","A1AE2POS",271,0)
 ;   If found, the patch is entered in the primary BUILD
"RTN","A1AE2POS",272,0)
 ;     PAT multiple, and in PAT of all matching INSTALLS
"RTN","A1AE2POS",273,0)
 ; Enter
"RTN","A1AE2POS",274,0)
 ;   PD    =  Patch Designation to lookup in 11005
"RTN","A1AE2POS",275,0)
 ;              (same name as build now under review)
"RTN","A1AE2POS",276,0)
 ;   KIEN  =  IEN of primary Build in which PAT is being built
"RTN","A1AE2POS",277,0)
 ; Variables
"RTN","A1AE2POS",278,0)
 ;   A1AEPI  =  IEN of Patch matching name of PD
"RTN","A1AE2POS",279,0)
 ;   IIEN    =  IEN of INSTALLS(s) matching KIEN entry
"RTN","A1AE2POS",280,0)
A1AEP2B(PD,KIEN) ;
"RTN","A1AE2POS",281,0)
  N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525
"RTN","A1AE2POS",282,0)
 S A1AEPI=$O(^A1AE(A1AEFILE,"B",PD,0))
"RTN","A1AE2POS",283,0)
 ; If no match, try dropping the ".0"
"RTN","A1AE2POS",284,0)
 I 'A1AEPI,$P(PD,"*",2)?.NP1"0" D
"RTN","A1AE2POS",285,0)
 .  N PD0 S PD0=$P(PD,"*")_"*"_$P($P(PD,"*",2),".")_"*"_$P(PD,"*",3)
"RTN","A1AE2POS",286,0)
 .  S A1AEPI=$O(^A1AE(A1AEFILE,"B",PD0,0))
"RTN","A1AE2POS",287,0)
 Q:'A1AEPI
"RTN","A1AE2POS",288,0)
 ; Update BUILD and entry PAT multiple
"RTN","A1AE2POS",289,0)
 D A1AEP2C(KIEN,A1AEPI,9.619)
"RTN","A1AE2POS",290,0)
 ; Update this and all similar named INSTALL entries PAT multiple
"RTN","A1AE2POS",291,0)
 N IIEN S IIEN=$O(^XPD(9.7,"B",$P(^XPD(9.6,KIEN,0),"^"),0))
"RTN","A1AE2POS",292,0)
 I IIEN D
"RTN","A1AE2POS",293,0)
 . N PMI S PMI=$P(^XPD(9.7,IIEN,0),"^")
"RTN","A1AE2POS",294,0)
 . N INODE S INODE=$NA(^XPD(9.7,"B",PMI))
"RTN","A1AE2POS",295,0)
 . F  S INODE=$Q(@INODE) Q:$QS(INODE,3)'[PMI  D
"RTN","A1AE2POS",296,0)
 .. S IIEN=$QS(INODE,4) D A1AEP2C(IIEN,A1AEPI,9.719)
"RTN","A1AE2POS",297,0)
 Q
"RTN","A1AE2POS",298,0)
 ; Update PAT multiple in BUILD/INSTALL entry
"RTN","A1AE2POS",299,0)
A1AEP2C(A1AEKI,A1AEPI,KFILE) ;
"RTN","A1AE2POS",300,0)
 N FDA,DIERR
"RTN","A1AE2POS",301,0)
 S FDA(3,KFILE,"?+1,"_A1AEKI_",",.01)=A1AEPI
"RTN","A1AE2POS",302,0)
 N NODE S NODE=$NA(FDA),NODE=$Q(@NODE) ;W !,NODE,"=",@NODE
"RTN","A1AE2POS",303,0)
 D UPDATE^DIE("","FDA(3)","")
"RTN","A1AE2POS",304,0)
 Q
"RTN","A1AE2POS",305,0)
 ;
"RTN","A1AE2POS",306,0)
SETPLUS  ; sets up pre-lookup transforms for existing files that need it
"RTN","A1AE2POS",307,0)
 S ^DD(9.49,.01,7.5)="D PLU949^A1AEDD1"
"RTN","A1AE2POS",308,0)
 S ^DD(9.6,.01,7.5)="D PLU96^A1AEDD1"
"RTN","A1AE2POS",309,0)
 S ^DD(9.7,.01,7.5)="D PLU97^A1AEDD1"
"RTN","A1AE2POS",310,0)
 Q
"RTN","A1AE2POS",311,0)
 ;
"RTN","A1AE2POS",312,0)
SETSEQ ; sets up whole file cross-reference on NAME field (#.01) of the PATCH APPLICATION HISTORY
"RTN","A1AE2POS",313,0)
 ; subfile (#9.4901) of the VERSION subfile (#9.49) of the PACKAGE file (#9.4) to be able to look
"RTN","A1AE2POS",314,0)
 ; up patch by package PREFIX, VERSION, STREAM POINTER, and SEQUENCE NUMBER for release
"RTN","A1AE2POS",315,0)
 I $D(^DD(9.4,0,"IX","A1AESEQ",9.4901,.01)) Q  ; already installed
"RTN","A1AE2POS",316,0)
 S NODE=0 ; should probably be 2, but just make sure
"RTN","A1AE2POS",317,0)
 F NODE1=0:0 S NODE1=$O(^DD(9.4901,.01,1,NODE1)) Q:NODE1'>0  S NODE=NODE1
"RTN","A1AE2POS",318,0)
 S NODE=NODE+1
"RTN","A1AE2POS",319,0)
 S ^DD(9.4901,.01,1,NODE,0)="9.4^A1AESEQ^MUMPS"
"RTN","A1AE2POS",320,0)
 S ^DD(9.4901,.01,1,NODE,1)="D A1AESEQ^A1AEDD1"
"RTN","A1AE2POS",321,0)
 S ^DD(9.4901,.01,1,NODE,2)="D KA1AESEQ^A1AEDD1"
"RTN","A1AE2POS",322,0)
 S ^DD(9.4901,.01,1,NODE,"%D",0)="^^2^2^3150105^"
"RTN","A1AE2POS",323,0)
 S ^DD(9.4901,.01,1,NODE,"%D",1,0)="This cross reference permits the user to rapidly find patches related to "
"RTN","A1AE2POS",324,0)
 S ^DD(9.4901,.01,1,NODE,"%D",2,0)="a package, version, and stream by release sequence number."
"RTN","A1AE2POS",325,0)
 S ^DD(9.4901,.01,1,NODE,"DT")=3150105
"RTN","A1AE2POS",326,0)
 S ^DD(9.4,0,"IX","A1AESEQ",9.4901,.01)=""
"RTN","A1AE2POS",327,0)
 ; and index the existing values
"RTN","A1AE2POS",328,0)
 N DA,X
"RTN","A1AE2POS",329,0)
 F DA(2)=0:0 S DA(2)=$O(^DIC(9.4,DA(2))) Q:DA(2)'>0  F DA(1)=0:0 S DA(1)=$O(^DIC(9.4,DA(2),22,DA(1))) Q:DA(1)'>0  F DA=0:0 S DA=$O(^DIC(9.4,DA(2),22,DA(1),"PAH",DA)) Q:DA'>0  S X=$P(^(DA,0),U) D A1AESEQ^A1AEDD1
"RTN","A1AE2POS",330,0)
 Q
"RTN","A1AE2POS",331,0)
UPDATSEQ    ; update Package file if a patch is INFO only and has sequence number for released and it isn't already present
"RTN","A1AE2POS",332,0)
 ; If sequence number, check for only 1 Category for a patch and that Category is INFO only
"RTN","A1AE2POS",333,0)
 N CCNT,I,INFO,X,P,PKG,PKGV,PTCH,PTCHSEQ,S
"RTN","A1AE2POS",334,0)
 S CCNT=0,INFO=0
"RTN","A1AE2POS",335,0)
 F I=0:0 D:(CCNT=1)&(INFO)  S INFO=0,CCNT=0,I=$O(^A1AE(A1AEFILE,I)) Q:I'>0  S X=^(I,0),P=$P(X,U),S=$P(X,U,6) I S>0 F J=0:0 S J=$O(^A1AE(A1AEFILE,I,"C",J)) Q:J'>0  S CCNT=CCNT+1 I ^(J,0)["inf" S INFO=1
"RTN","A1AE2POS",336,0)
 . S PKG=$P(P,"*"),PKGV=$P(P,"*",2),PTCH=$P(P,"*",3) I $P(PKGV,".",2)="" S PKGV=+PKGV_".0"
"RTN","A1AE2POS",337,0)
 . S PTCHSEQ=PTCH_" SEQ #"_S
"RTN","A1AE2POS",338,0)
 . N DA S DA(2)=$O(^DIC(9.4,"C",PKG,"")) I DA(2)'>0 D  I DA(2)'>0 W !,"ERROR WITH ",P," PACKAGE ENTRY IN FILE 9.4" Q
"RTN","A1AE2POS",339,0)
 . . N FDA,FDAMSG S FDA(9.4,"+1,",.01)=PKG_" package",FDA(9.4,"+1,",1)=PKG,FDA(9.4,"+1,",2)="SHORT DESCRIP"
"RTN","A1AE2POS",340,0)
 . . D UPDATE^DIE("E","FDA","","FDAMSG")
"RTN","A1AE2POS",341,0)
 . . S DA(2)=$O(^DIC(9.4,"C",PKG,""))
"RTN","A1AE2POS",342,0)
 . . Q
"RTN","A1AE2POS",343,0)
 . S DA(1)=$O(^DIC(9.4,DA(2),22,"B",PKGV,"")) I DA(1)'>0 D  I DA(1)'>0 W !,"ERROR WITH ",P," VERSION ENTRY IN FILE 9.4" Q
"RTN","A1AE2POS",344,0)
 . . N VALUE S VALUE=PKGV I VALUE'["." S VALUE=VALUE_".0"
"RTN","A1AE2POS",345,0)
 . . N FDA,FDAMSG S FDA(9.49,"+1,"_DA(2)_",",.01)=VALUE
"RTN","A1AE2POS",346,0)
 . . D UPDATE^DIE("E","FDA","","FDAMSG")
"RTN","A1AE2POS",347,0)
 . . S DA(1)=$O(^DIC(9.4,DA(2),22,"B",PKGV,""))
"RTN","A1AE2POS",348,0)
 . . Q
"RTN","A1AE2POS",349,0)
 . S DA=$O(^DIC(9.4,DA(2),22,DA(1),"PAH","B",PTCHSEQ,"")) I DA>0 Q
"RTN","A1AE2POS",350,0)
 . S DA=$O(^DIC(9.4,DA(2),22,DA(1),"PAH","B",PTCH,"")) I DA>0 D  Q
"RTN","A1AE2POS",351,0)
 . . N FDA,FDAMSG S FDA(9.4901,DA_","_DA(1)_","_DA(2)_",",.01)=PTCHSEQ
"RTN","A1AE2POS",352,0)
 . . D FILE^DIE("E","FDA","FDAMSG")
"RTN","A1AE2POS",353,0)
 . . Q
"RTN","A1AE2POS",354,0)
 . I DA'>0 D
"RTN","A1AE2POS",355,0)
 . . N FDA,FDAMSG S FDA(9.4901,"+1,"_DA(1)_","_DA(2)_",",.01)=PTCHSEQ
"RTN","A1AE2POS",356,0)
 . . D UPDATE^DIE("E","FDA","","FDAMSG")
"RTN","A1AE2POS",357,0)
 . . Q
"RTN","A1AE2POS",358,0)
 . Q
"RTN","A1AE2POS",359,0)
 Q
"RTN","A1AE2POS",360,0)
 ;
"RTN","A1AE2POS",361,0)
CLRFILE() N STRM,DA,DIERR,DIK S STRM=""
"RTN","A1AE2POS",362,0)
 F  S STRM=$O(^A1AE(11007.1,"B",STRM)) Q:STRM=""  D  Q:$D(DIERR)
"RTN","A1AE2POS",363,0)
 . S DA=$O(^A1AE(11007.1,"B",STRM,0)) Q:'DA
"RTN","A1AE2POS",364,0)
 . S DIK="^A1AE(11007.1," D ^DIK
"RTN","A1AE2POS",365,0)
 Q '$D(DIERR)
"RTN","A1AE2POS",366,0)
 ;
"RTN","A1AE2POS",367,0)
 ;
"RTN","A1AE2POS",368,0)
LOADFILE() N DIERR,FDA,FDAIEN
"RTN","A1AE2POS",369,0)
 S FDA(3,11007.1,"?+1,",.001)=1
"RTN","A1AE2POS",370,0)
 S FDA(3,11007.1,"?+1,",.01)="FOIA VISTA"
"RTN","A1AE2POS",371,0)
 S FDA(3,11007.1,"?+1,",.02)=0
"RTN","A1AE2POS",372,0)
 S FDA(3,11007.1,"?+1,",.05)="FV"
"RTN","A1AE2POS",373,0)
 S FDA(3,11007.1,"?+1,",.06)=1
"RTN","A1AE2POS",374,0)
 S FDA(3,11007.1,"?+1,",.07)="FORUM.VA.GOV"
"RTN","A1AE2POS",375,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AE2POS",376,0)
 K FDAIEN
"RTN","A1AE2POS",377,0)
 Q:$D(DIERR) 0
"RTN","A1AE2POS",378,0)
 K FDA,DIERR
"RTN","A1AE2POS",379,0)
 S FDA(3,11007.1,"?+1,",.001)=10001
"RTN","A1AE2POS",380,0)
 S FDA(3,11007.1,"?+1,",.01)="OSEHRA VISTA"
"RTN","A1AE2POS",381,0)
 S FDA(3,11007.1,"?+1,",.02)=0
"RTN","A1AE2POS",382,0)
 S FDA(3,11007.1,"?+1,",.05)="OV"
"RTN","A1AE2POS",383,0)
 S FDA(3,11007.1,"?+1,",.06)=0
"RTN","A1AE2POS",384,0)
 S FDA(3,11007.1,"?+1,",.07)="FORUM.OSEHRA.ORG"
"RTN","A1AE2POS",385,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AE2POS",386,0)
 Q:$D(DIERR) 0
"RTN","A1AE2POS",387,0)
 Q 1
"RTN","A1AE2POS",388,0)
 ;
"RTN","A1AE2POS",389,0)
MAILGRP ; [For KIDS] Add Server options to mail groups
"RTN","A1AE2POS",390,0)
 N SRVGROUP S SRVGROUP=$$FIND1^DIC(3.8,,"QX","A1AEFMSC")
"RTN","A1AE2POS",391,0)
 N CLGROUP   S CLGROUP=$$FIND1^DIC(3.8,,"QX","A1AESTRMCHG")
"RTN","A1AE2POS",392,0)
 ;
"RTN","A1AE2POS",393,0)
 N FDA,C
"RTN","A1AE2POS",394,0)
 S C=","
"RTN","A1AE2POS",395,0)
 I SRVGROUP D
"RTN","A1AE2POS",396,0)
 . N IENS S IENS="+1,"_SRVGROUP_","
"RTN","A1AE2POS",397,0)
 . D FIND^DIC(3.812,C_SRVGROUP_C,,,"S.A1AEFMSC")
"RTN","A1AE2POS",398,0)
 . I +^TMP("DILIST",$J,0)=0 S FDA(3.812,IENS,.01)="S.A1AEFMSC" ; Server
"RTN","A1AE2POS",399,0)
 N IENSC S IENSC="+2,"_CLGROUP_","
"RTN","A1AE2POS",400,0)
 D FIND^DIC(3.812,C_CLGROUP_C,,,"S.A1AENEWSTRM")
"RTN","A1AE2POS",401,0)
 I +^TMP("DILIST",$J,0)=0 S FDA(3.812,IENSC,.01)="S.A1AENEWSTRM"
"RTN","A1AE2POS",402,0)
 ;
"RTN","A1AE2POS",403,0)
 N ERR
"RTN","A1AE2POS",404,0)
 D:$D(FDA) UPDATE^DIE("E",$NA(FDA),,$NA(ERR))
"RTN","A1AE2POS",405,0)
 I $D(ERR) D MES^XPDUTL("Error: "_ERR("DIERR",1,"TEXT",1))
"RTN","A1AE2POS",406,0)
 QUIT
"RTN","A1AEAU")
0^2^B24270356
"RTN","A1AEAU",1,0)
A1AEAU ;isa/rmo,mjk-dhcp problem/patch file edits ;1987-11-24T11:00
"RTN","A1AEAU",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEAU",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEAU",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEAU",5,0)
 ;
"RTN","A1AEAU",6,0)
 ;
"RTN","A1AEAU",7,0)
 ;primary change history
"RTN","A1AEAU",8,0)
 ;2014-03-28; version 2.4, build 8 released
"RTN","A1AEAU",9,0)
 ;1992-12-02; version 2.2 released
"RTN","A1AEAU",10,0)
 ;
"RTN","A1AEAU",11,0)
 ;
"RTN","A1AEAU",12,0)
 G:$D(^DOPT("A1AEAU",6)) A S ^DOPT("A1AEAU",0)="Authorized Users Menu Option^1N^" F I=1:1 S X=$T(@I) Q:X=""  S ^DOPT("A1AEAU",I,0)=$P(X,";;",2,99)
"RTN","A1AEAU",13,0)
 S DIK="^DOPT(""A1AEAU""," D IXALL^DIK
"RTN","A1AEAU",14,0)
A W !! S DIC="^DOPT(""A1AEAU"",",DIC(0)="AEQM" D ^DIC Q:Y<0  D @+Y G A
"RTN","A1AEAU",15,0)
 ;
"RTN","A1AEAU",16,0)
1 ;;Entry/Edit Authorized Users
"RTN","A1AEAU",17,0)
 S DIC("S")="I $D(^A1AE(11007,+Y,""PH"",DUZ,0))" D PKG^A1AEUTL Q:'$D(A1AEPK)  W !!,"Adding Authorized Users to: ",A1AEPKNM,! S DA=A1AEPKIF,DIE="^A1AE(11007,",DR="[A1AE ADD/EDIT USERS]",DIE("NO^")="" D ^DIE K DIE("NO^"),DE,DQ,DIE D KEY^A1AEKEY
"RTN","A1AEAU",18,0)
 Q
"RTN","A1AEAU",19,0)
 ;
"RTN","A1AEAU",20,0)
2 ;;Select Packages for Notification
"RTN","A1AEAU",21,0)
 G LIST
"RTN","A1AEAU",22,0)
ADDUSR K A1AEDEL S DIC="^A1AE(11007,",DIC(0)="EMQ" R !!,"Select PACKAGE: ",X:DTIME G Q:'$T!(X="^")!(X="") S:$E(X,1)="-" X=$E(X,2,99),A1AEDEL=""  G:"ALLall"[$E(X,1,3)&($L(X)=3) SETUSR
"RTN","A1AEAU",23,0)
 S DIC("S")="I $P(^(0),U,2)=""Y""" D ^DIC K DIC("S") I Y>0 S A1AEPKIF=+Y,A1AEPKNM=$P(^DIC(9.4,+Y,0),"^",1) G SELUSR
"RTN","A1AEAU",24,0)
 W:X'["?" *7 W !!,"Enter 'ALL' or a specific package you want to be included in."
"RTN","A1AEAU",25,0)
LIST I '$D(^A1AE(11007,"AU",DUZ)) W !!?3,"You currently have no packages selected for immediate notification." G ADDUSR
"RTN","A1AEAU",26,0)
 W !!?3,"You currently have the following packages selected:"
"RTN","A1AEAU",27,0)
 F A1AEPKIF=0:0 S A1AEPKIF=$O(^A1AE(11007,"AU",DUZ,A1AEPKIF)) Q:'A1AEPKIF  I $D(^A1AE(11007,A1AEPKIF,0)),$P(^(0),"^",2)="Y",$D(^DIC(9.4,A1AEPKIF,0)) W !?7,$P(^(0),"^",2),?12,"-",?14,$P(^(0),"^",1)
"RTN","A1AEAU",28,0)
 K A1AEPKIF G ADDUSR
"RTN","A1AEAU",29,0)
 ;
"RTN","A1AEAU",30,0)
SETUSR W !
"RTN","A1AEAU",31,0)
 I "ALLall"[$E(X_0,1,3),$L(X)=3
"RTN","A1AEAU",32,0)
 IF  S DIR(0)="YO",DIR("B")="NO"
"RTN","A1AEAU",33,0)
 IF  S DIR("A")="  Are you sure you want to "_$S($D(A1AEDEL):"DE-SELECT",1:"select")_" 'ALL' packages for notification " IF 1
"RTN","A1AEAU",34,0)
 IF  S DIR("?")=" Enter 'Y' to continue" D ^DIR I $D(DUOUT)!($D(DTOUT))!('Y) K DIR G ADDUSR
"RTN","A1AEAU",35,0)
 K DIR
"RTN","A1AEAU",36,0)
 F A1AEPKIF=0:0 S A1AEPKIF=+$O(^A1AE(11007,A1AEPKIF)) Q:'A1AEPKIF  I $P(^(A1AEPKIF,0),"^",2)="Y" S A1AEPKNM=$P(^DIC(9.4,A1AEPKIF,0),"^",1) DO
"RTN","A1AEAU",37,0)
 .IF '$D(A1AEDEL) DO
"RTN","A1AEAU",38,0)
 . .I $D(^A1AE(11007,A1AEPKIF,1,DUZ,0)) W !?3,"...already on ",A1AEPKNM," list" Q
"RTN","A1AEAU",39,0)
 . .D SETNOD
"RTN","A1AEAU",40,0)
 .E  DO
"RTN","A1AEAU",41,0)
 . .I '$D(^A1AE(11007,A1AEPKIF,1,DUZ,0)) Q
"RTN","A1AEAU",42,0)
 . .S DIK="^A1AE(11007,"_A1AEPKIF_",1,",DA(1)=A1AEPKIF,DA=DUZ
"RTN","A1AEAU",43,0)
 . .D ^DIK W !?3,"...deleted from ",A1AEPKNM
"RTN","A1AEAU",44,0)
 . .K DIK,DA
"RTN","A1AEAU",45,0)
 ;
"RTN","A1AEAU",46,0)
 G ADDUSR
"RTN","A1AEAU",47,0)
 ;
"RTN","A1AEAU",48,0)
Q K A1AEPKNM,A1AEPKIF,A1AEPK,DIE,DIC,DIR,DA,DR,D0,DI,D0,D1,DE,DQ Q
"RTN","A1AEAU",49,0)
 ;
"RTN","A1AEAU",50,0)
SELUSR I '$D(^A1AE(11007,A1AEPKIF,1,DUZ,0)),'$D(A1AEDEL) D SETNOD G ADDUSR
"RTN","A1AEAU",51,0)
 ;naked reference to tag SELUSR
"RTN","A1AEAU",52,0)
 I '$D(^(0)),$D(A1AEDEL) W !?3,*7,"...currently not in the ",A1AEPKNM," list" G ADDUSR
"RTN","A1AEAU",53,0)
 I $D(^(0)),$D(A1AEDEL) G DELUSR
"RTN","A1AEAU",54,0)
 W !!,"You already receive automatic notification and printing of ",A1AEPKNM," patches.",!,"Do you want this to stop? No// "
"RTN","A1AEAU",55,0)
 R X:DTIME G Q:'$T!(X="^"),ADDUSR:"Nn"[$E(X,1),DELUSR:"Yy"[$E(X,1) W:X'["?" *7 W !!,"Enter Y to delete, or N to exit." G SELUSR
"RTN","A1AEAU",56,0)
 ;
"RTN","A1AEAU",57,0)
SETNOD S DA=A1AEPKIF,DIE="^A1AE(11007,",DR="50///`"_DUZ,DR(2,11007.05)="2///T" K DE,DQ D ^DIE I '$D(Y) W !?3,"...added to ",A1AEPKNM
"RTN","A1AEAU",58,0)
 Q
"RTN","A1AEAU",59,0)
 ;
"RTN","A1AEAU",60,0)
DELUSR S DIK="^A1AE(11007,"_A1AEPKIF_",1,",DA(1)=A1AEPKIF,DA=DUZ D ^DIK W !?3,"...deleted from ",A1AEPKNM G ADDUSR
"RTN","A1AEAU",61,0)
 ;
"RTN","A1AEAU",62,0)
3 ;;Add Package to Patch Module
"RTN","A1AEAU",63,0)
 Q:'$D(^XUSEC("A1AE MGR",DUZ))  S A1AE(0)="AEMLQ" D PKG^A1AEUTL Q:'$D(A1AEPK)  S DA=A1AEPKIF,DR="[A1AE ADD/EDIT USERS]",DIE="^A1AE(11007," D ^DIE K DQ,DE,A1AEPKIF,A1AEPKNM,A1AEPK Q
"RTN","A1AEAU",64,0)
 ;
"RTN","A1AEAU",65,0)
4 ;;List of Package Users
"RTN","A1AEAU",66,0)
 S DIC("S")="I $D(^A1AE(11007,+Y,""PH"",DUZ,0))" D PKG^A1AEUTL Q:'$D(A1AEPK)
"RTN","A1AEAU",67,0)
 S DIC="^A1AE(11007,",FLDS="[A1AE PACKAGE USERS]",BY=".01",(FR,TO)=A1AEPKNM,L=0 D EN1^DIP K FLDS,TO,FR,BY,A1AEPKIF,A1AEPK,A1AEPKNM Q
"RTN","A1AEAU",68,0)
 ;
"RTN","A1AEAU",69,0)
5 ;;Patch Options Documentation
"RTN","A1AEAU",70,0)
 S DIC="^DIC(19,",FLDS="[A1AE PATCH OPTS DOC]",BY="@.01",FR="A1AE",TO="A1AEZ",DIS(0)="I $P(^DIC(19,D0,0),U,1)'[""PB"",$P(^(0),U,1)'[""A1AE MGR"",$P(^(0),U,1)'[""A1AE XUSEC""",L=0 W ! D EN1^DIP K FLDS,BY,FR,TO,DIS(0) Q
"RTN","A1AEAU",71,0)
 ;
"RTN","A1AEAU",72,0)
6 ;;Key Allocation for Patch Functions
"RTN","A1AEAU",73,0)
 D ASKKEY^A1AEKEY
"RTN","A1AEBLD")
0^89^B49735027
"RTN","A1AEBLD",1,0)
A1AEBLD ;ven/jli-handle transport of build entries for dhcp patches file(#11005) ;2015-07-06  11:53 PM
"RTN","A1AEBLD",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEBLD",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEBLD",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEBLD",5,0)
 ;
"RTN","A1AEBLD",6,0)
 ;
"RTN","A1AEBLD",7,0)
 D EN^%ut("A1AEUBLD")
"RTN","A1AEBLD",8,0)
 Q
"RTN","A1AEBLD",9,0)
 ;
"RTN","A1AEBLD",10,0)
VERBOSE ;
"RTN","A1AEBLD",11,0)
 D EN^%ut("A1AEUBLD",1)
"RTN","A1AEBLD",12,0)
 Q
"RTN","A1AEBLD",13,0)
 ;
"RTN","A1AEBLD",14,0)
BUILDIT(PATCHNUM) ; Add DHCP PATCHES file field data to end of data in DHCP PATCH MESSAGE file (#11005.1)
"RTN","A1AEBLD",15,0)
 ; input - BUILDNUM - entry number in the BUILD file (#9.6)
"RTN","A1AEBLD",16,0)
 N GLOBNODE,GLOBREF,ENDNUM,A1AEIEN,BASE,BASE1,BASELEN,BUILDNAM,GLOBVAL,ENDKID
"RTN","A1AEBLD",17,0)
 S GLOBNODE="A1AEBLD"
"RTN","A1AEBLD",18,0)
 S BUILDNAM=$$BUILDNAM(PATCHNUM)
"RTN","A1AEBLD",19,0)
 S A1AEIEN=PATCHNUM
"RTN","A1AEBLD",20,0)
 S GLOBREF=$NA(^A1AE(11005.1,A1AEIEN,2))
"RTN","A1AEBLD",21,0)
 S BASE=$NA(^XTMP("A1AEBLD",$J,A1AEIEN))
"RTN","A1AEBLD",22,0)
 K @BASE
"RTN","A1AEBLD",23,0)
 D BUILDGLO(PATCHNUM,$NA(@BASE@("PATCHES")))
"RTN","A1AEBLD",24,0)
 ; originally was going to add a section PATCHES after KIDS, but add it into it
"RTN","A1AEBLD",25,0)
 ;S ENDNUM=$O(@GLOBREF@(""),-1)
"RTN","A1AEBLD",26,0)
 ;S ENDNUM=ENDNUM+1,@GLOBREF@(ENDNUM,0)="$PATCHES "_BUILDNAM,ENDNUM=ENDNUM+1
"RTN","A1AEBLD",27,0)
 ; above modified to
"RTN","A1AEBLD",28,0)
 S ENDNUM=$O(@GLOBREF@(""),-1) S ENDKID=@GLOBREF@(ENDNUM,0)
"RTN","A1AEBLD",29,0)
 S BASE1=$E(BASE,1,$L(BASE)-1),GLOBVAL=BASE,BASELEN=$L(BASE)+1
"RTN","A1AEBLD",30,0)
 F  S GLOBVAL=$Q(@GLOBVAL) Q:GLOBVAL'[BASE1  S @GLOBREF@(ENDNUM,0)=$E(GLOBVAL,BASELEN,$L(GLOBVAL)),ENDNUM=ENDNUM+1,@GLOBREF@(ENDNUM,0)=@GLOBVAL,ENDNUM=ENDNUM+1
"RTN","A1AEBLD",31,0)
 ; change from ending PATCHES back to ending KIDS
"RTN","A1AEBLD",32,0)
 ;S @GLOBREF@(ENDNUM,0)="$END PATCHES"
"RTN","A1AEBLD",33,0)
 ; replaced above line with
"RTN","A1AEBLD",34,0)
 S @GLOBREF@(ENDNUM,0)=ENDKID
"RTN","A1AEBLD",35,0)
 S $P(^A1AE(11005.1,A1AEIEN,2,0),U,3,4)=ENDNUM_U_ENDNUM ; update zero node for message
"RTN","A1AEBLD",36,0)
 K @BASE
"RTN","A1AEBLD",37,0)
 Q
"RTN","A1AEBLD",38,0)
 ;
"RTN","A1AEBLD",39,0)
BUILDGLO(PATCHNUM,BASE) ; Builds data structure to transport specific fields of file 11005
"RTN","A1AEBLD",40,0)
 ; input - PATCHNUM - internal entry number in the BUILD file (#9.6)
"RTN","A1AEBLD",41,0)
 ; input - BASE - location to save data
"RTN","A1AEBLD",42,0)
 N NAME,IEN,NODES,NODEVAL,RETURN,BUILDNAM
"RTN","A1AEBLD",43,0)
 S IEN=PATCHNUM
"RTN","A1AEBLD",44,0)
 I IEN="" Q  ; not in file 11005
"RTN","A1AEBLD",45,0)
 ; base storage location for data
"RTN","A1AEBLD",46,0)
 ; get list of nodes and data on those nodes to transport
"RTN","A1AEBLD",47,0)
 D GETNODES(.NODES)
"RTN","A1AEBLD",48,0)
 ; walk through nodes and move data to transport to part of build
"RTN","A1AEBLD",49,0)
 S NODEVAL=0
"RTN","A1AEBLD",50,0)
 ; zero contains all individual fields
"RTN","A1AEBLD",51,0)
 D GETDATA(.RETURN,11005,IEN,NODES(0))
"RTN","A1AEBLD",52,0)
 M @(BASE_"=RETURN(0)")
"RTN","A1AEBLD",53,0)
 ; 141117 following added to provide data in case referenced entries in other files don't already exist
"RTN","A1AEBLD",54,0)
 ; PACKAGE FILE entry
"RTN","A1AEBLD",55,0)
 K RETURN D GETDATA(.RETURN,9.4,+$P(^A1AE(11005,IEN,0),U,2),".01;1;2;")
"RTN","A1AEBLD",56,0)
 M @BASE@(9.4)=RETURN(0)
"RTN","A1AEBLD",57,0)
 ; PATCH STREAM entry
"RTN","A1AEBLD",58,0)
 K RETURN D GETDATA(.RETURN,11007.1,+$P(^A1AE(11005,IEN,0),U,20),".01;.05;")
"RTN","A1AEBLD",59,0)
 M @BASE@(11007.1)=RETURN(0)
"RTN","A1AEBLD",60,0)
 S @BASE@(11007.1,"FLDS",.02)="NO" ; if entry doesn't exist, set PRIMARY to NO
"RTN","A1AEBLD",61,0)
 S @BASE@(11007.1,"FLDS",.06)="NO" ; if entry doesn't exist, set SUBSCRIPTION to NO
"RTN","A1AEBLD",62,0)
 ; 141117 end of insertion
"RTN","A1AEBLD",63,0)
 ; rest are multiples
"RTN","A1AEBLD",64,0)
 F  S NODEVAL=$O(NODES(NODEVAL)) Q:NODEVAL=""  D
"RTN","A1AEBLD",65,0)
 . K RETURN
"RTN","A1AEBLD",66,0)
 . D GETMULT(.RETURN,IEN,NODEVAL) Q:'$D(RETURN)
"RTN","A1AEBLD",67,0)
 . M @(BASE_"=RETURN(NODEVAL)")
"RTN","A1AEBLD",68,0)
 . Q
"RTN","A1AEBLD",69,0)
 Q
"RTN","A1AEBLD",70,0)
 ;
"RTN","A1AEBLD",71,0)
BUILDNAM(PATCHNUM) ; Returns the name for the specified build number
"RTN","A1AEBLD",72,0)
 Q $P($G(^A1AE(11005,PATCHNUM,0)),U)
"RTN","A1AEBLD",73,0)
 ;
"RTN","A1AEBLD",74,0)
GETIEN(FILE,NAME) ; Returns whether an entry with NAME as .01 field exists in file number FILE
"RTN","A1AEBLD",75,0)
 ; input:
"RTN","A1AEBLD",76,0)
 ;     FILE - number of file to be checked
"RTN","A1AEBLD",77,0)
 ;     NAME - name of entry (.01 field value)
"RTN","A1AEBLD",78,0)
 ; return:
"RTN","A1AEBLD",79,0)
 ;     value > 0 if an entry for the patch is in FILE (DA value)
"RTN","A1AEBLD",80,0)
 ;     value = null if entry was not found in file FILE
"RTN","A1AEBLD",81,0)
 N GLOB
"RTN","A1AEBLD",82,0)
 S GLOB=$G(^DIC(FILE,0,"GL"))
"RTN","A1AEBLD",83,0)
 S GLOB=GLOB_"""B"","""_NAME_""","""")"
"RTN","A1AEBLD",84,0)
 Q +$O(@GLOB)
"RTN","A1AEBLD",85,0)
 ;
"RTN","A1AEBLD",86,0)
GETNODES(VALS) ; returns VALS with an array of nodes, and field numbers
"RTN","A1AEBLD",87,0)
 ; these are the fields that are to be transported.  Any changes to
"RTN","A1AEBLD",88,0)
 ; those fields that should be transported should occur below.
"RTN","A1AEBLD",89,0)
 ;
"RTN","A1AEBLD",90,0)
 ; input - VALS - passed by reference
"RTN","A1AEBLD",91,0)
 ; returns:
"RTN","A1AEBLD",92,0)
 ;      array of nodes - The zero node contains the list of semi-colon
"RTN","A1AEBLD",93,0)
 ;      separated field numbers to be transported.  The other nodes
"RTN","A1AEBLD",94,0)
 ;      represent the nodes of multiple fields.
"RTN","A1AEBLD",95,0)
 ;
"RTN","A1AEBLD",96,0)
 ; The following is the list of the nodes and fields to be transported.
"RTN","A1AEBLD",97,0)
 ; Fields followed by an 'm' indicate they are multiple fields and
"RTN","A1AEBLD",98,0)
 ; all data under them will be transported
"RTN","A1AEBLD",99,0)
 ;     node    fields
"RTN","A1AEBLD",100,0)
 ;      0   .01,2p,3,4,5,6,7,18,.2p
"RTN","A1AEBLD",101,0)
 ;      3   19m
"RTN","A1AEBLD",102,0)
 ;      4   40
"RTN","A1AEBLD",103,0)
 ;      5   5.7p
"RTN","A1AEBLD",104,0)
 ;      C   6.5m
"RTN","A1AEBLD",105,0)
 ;      D   5.5m
"RTN","A1AEBLD",106,0)
 ;      P   100m
"RTN","A1AEBLD",107,0)
 ;      P2  102
"RTN","A1AEBLD",108,0)
 ;
"RTN","A1AEBLD",109,0)
 K VALS
"RTN","A1AEBLD",110,0)
 S VALS(0)=".01;.2;2;3;4;5;6;7;18;40;5.7;102",VALS(3)="0,",VALS("C")="0,",VALS("D")="0,",VALS("P")="0,"
"RTN","A1AEBLD",111,0)
 Q
"RTN","A1AEBLD",112,0)
 ;
"RTN","A1AEBLD",113,0)
GETDATA(RETURN,FILE,IEN,NODELIST) ; get data for specified fields in file entry
"RTN","A1AEBLD",114,0)
 ; 141117 modified to handle different files, since some data needs to be carried if pointed to file entries aren't present on the system being installed on
"RTN","A1AEBLD",115,0)
 ; output - RETURN   - result array
"RTN","A1AEBLD",116,0)
 ; input  - FILENUM  - file number to obtain data for
"RTN","A1AEBLD",117,0)
 ; input  - IEN      - internal entry number for file entry to return data for
"RTN","A1AEBLD",118,0)
 ; input  - NODELIST - semi-colon separated list of field numbers
"RTN","A1AEBLD",119,0)
 N XXLIST,IENS,FLD,VAL
"RTN","A1AEBLD",120,0)
 S IENS=IEN_","
"RTN","A1AEBLD",121,0)
 D GETS^DIQ(FILE,IENS,NODELIST,"E","XXLIST")
"RTN","A1AEBLD",122,0)
 F FLD=0:0 S FLD=$O(XXLIST(FILE,IENS,FLD)) Q:FLD'>0  S VAL=XXLIST(FILE,IENS,FLD,"E") I VAL'="" S RETURN(0,"FLDS",FLD)=VAL
"RTN","A1AEBLD",123,0)
 Q
"RTN","A1AEBLD",124,0)
 ;
"RTN","A1AEBLD",125,0)
GETMULT(RETURN,IEN,NODEVAL) ; Returns the sub-file part of global
"RTN","A1AEBLD",126,0)
 ; input - RETURN - by reference contains the array part of the global
"RTN","A1AEBLD",127,0)
 ; input - IEN - subscript in file 11005
"RTN","A1AEBLD",128,0)
 ; input - NODEVAL - node under which all data should be transported
"RTN","A1AEBLD",129,0)
 ;
"RTN","A1AEBLD",130,0)
 M RETURN(NODEVAL,"MULT",NODEVAL)=^A1AE(11005,IEN,NODEVAL)
"RTN","A1AEBLD",131,0)
 Q
"RTN","A1AEBLD",132,0)
 ;
"RTN","A1AEBLD",133,0)
 ; JLI 150529 - Modified code below this point so that 11004 is used for the client instead of 11005
"RTN","A1AEBLD",134,0)
 ;
"RTN","A1AEBLD",135,0)
INSTALL(PATCHID) ; install data from patch section of build (if it includes data for file 11004)
"RTN","A1AEBLD",136,0)
 ; called from IN^XPDIJ1 during patch install
"RTN","A1AEBLD",137,0)
 ; JLI 150530 - commented next line, replaced with following - showing up during install as aborting and misleading
"RTN","A1AEBLD",138,0)
 ;N A1AEBASE,A1AEPTID,PKGNAME,STRMNAME I '$D(^A1AE(11004)) W !,"INSTALL ABORTED, NO GLOBAL ^A1AE(11004)" Q  ; PATCH file (#11004) is not present
"RTN","A1AEBLD",139,0)
 N A1AEBASE,A1AEPTID,PKGNAME,STRMNAME I '$D(^A1AE(11004)) Q  ; PATCH file (#11004) is not present
"RTN","A1AEBLD",140,0)
 ; get base location for INSTALL data, returns no true on not finding DHCP PATCHES data in the install file
"RTN","A1AEBLD",141,0)
 I '$$GETBASE(.A1AEBASE,PATCHID) W !,"FAILED IN GETBASE - A1AEBASE=",$G(A1AEBASE) Q
"RTN","A1AEBLD",142,0)
 ;
"RTN","A1AEBLD",143,0)
 ;  The following fields contain pointers to the files shown, which have the required fields shown
"RTN","A1AEBLD",144,0)
 ; .2 --> PATCH STREAM 11007.1
"RTN","A1AEBLD",145,0)
 ;     .01
"RTN","A1AEBLD",146,0)
 ;     .02  PRIMARY  --> NO if does not exist
"RTN","A1AEBLD",147,0)
 ;     .05  ABBREVIATION
"RTN","A1AEBLD",148,0)
 ;     .06  SUBSCRIPTION ---> No if does not exist
"RTN","A1AEBLD",149,0)
 ;
"RTN","A1AEBLD",150,0)
 ; 2 --> PACKAGE  9.4
"RTN","A1AEBLD",151,0)
 ;     .01 NAME
"RTN","A1AEBLD",152,0)
 ;     1 PREFIX
"RTN","A1AEBLD",153,0)
 ;     2 SHORT DESCRIPTION
"RTN","A1AEBLD",154,0)
 ;
"RTN","A1AEBLD",155,0)
 ; Check existence of PACKAGE and PATCH STREAM file entries and if an entry is not present, create it
"RTN","A1AEBLD",156,0)
 D CHKPACKG(A1AEBASE) D CHKSTREM(A1AEBASE) D UPDATFIL(A1AEBASE)
"RTN","A1AEBLD",157,0)
 Q
"RTN","A1AEBLD",158,0)
 ;
"RTN","A1AEBLD",159,0)
GETBASE(A1AEBASE,PATCHID) ;
"RTN","A1AEBLD",160,0)
 ; input
"RTN","A1AEBLD",161,0)
 ;    A1AEBASE - passed by reference - will contain the base reference for the data in the install file on return
"RTN","A1AEBLD",162,0)
 ;    PATCHID  - input name for the patch
"RTN","A1AEBLD",163,0)
 ; returns
"RTN","A1AEBLD",164,0)
 ;    0 or >0 value indcating whether finding location succeeded or not
"RTN","A1AEBLD",165,0)
 N A1AEBLD,A1AEINST,A1AEPTID,A1AEVAL
"RTN","A1AEBLD",166,0)
 S A1AEBASE=""
"RTN","A1AEBLD",167,0)
 ; get INSTALL file entry for PATCHID, it seems there might be more than one entry, take the last
"RTN","A1AEBLD",168,0)
 S A1AEINST=-1 F A1AEVAL=0:0 S A1AEVAL=$O(^XPD(9.7,"B",PATCHID,A1AEVAL)) Q:A1AEVAL'>0  S A1AEINST=A1AEVAL
"RTN","A1AEBLD",169,0)
 ; get the base entry as the one for this install
"RTN","A1AEBLD",170,0)
 I A1AEINST>0 S A1AEBASE=$NA(^XTMP("XPDI",A1AEINST,"PATCHES")) S A1AEVAL=$O(@A1AEBASE@(0))
"RTN","A1AEBLD",171,0)
 S A1AEBLD=$$GETIEN(9.6,PATCHID)
"RTN","A1AEBLD",172,0)
 ;
"RTN","A1AEBLD",173,0)
 I A1AEBLD'="",'A1AEVAL S A1AEBASE=$NA(^XTMP("XPDI",A1AEINST,"BLD",A1AEBLD,"PATCHES")),A1AEVAL=$D(^("PATCHES"))
"RTN","A1AEBLD",174,0)
 Q A1AEVAL
"RTN","A1AEBLD",175,0)
 ;
"RTN","A1AEBLD",176,0)
CHKPACKG(A1AEBASE) ; Check that entry PKGNAME exists in PACKAGE file (#9.4), if not create it
"RTN","A1AEBLD",177,0)
 N PKGIEN,PKGNAME,A1AEMSG,A1AEPKG
"RTN","A1AEBLD",178,0)
 S PKGNAME=$G(@A1AEBASE@("FLDS",2))
"RTN","A1AEBLD",179,0)
 S PKGIEN=$$GETIEN(9.4,PKGNAME)
"RTN","A1AEBLD",180,0)
 I PKGIEN'>0 D
"RTN","A1AEBLD",181,0)
 . ; create an entry with its required fields
"RTN","A1AEBLD",182,0)
 . N PKGIENS,PKGFDA,I
"RTN","A1AEBLD",183,0)
 . S PKGIENS="+1,"
"RTN","A1AEBLD",184,0)
 . F I=0:0 S I=$O(@A1AEBASE@(9.4,"FLDS",I)) Q:I'>0  S PKGFDA(9.4,PKGIENS,I)=^(I)
"RTN","A1AEBLD",185,0)
 . D UPDATE^DIE("E","PKGFDA","A1AEPKG","A1AEMSG")
"RTN","A1AEBLD",186,0)
 . Q
"RTN","A1AEBLD",187,0)
 Q
"RTN","A1AEBLD",188,0)
 ;
"RTN","A1AEBLD",189,0)
CHKSTREM(A1AEBASE) ; Check that entry PKGNAME exists in DHCP PATCH STREAM file (#11007.1), if not create it
"RTN","A1AEBLD",190,0)
 N STREMIEN,STREMNAM,A1AEMSG,A1AESTRM
"RTN","A1AEBLD",191,0)
 S STREMNAM=$G(@A1AEBASE@("FLDS",.2))
"RTN","A1AEBLD",192,0)
 I STREMNAM="" QUIT  ; Package. No stream.
"RTN","A1AEBLD",193,0)
 S STREMIEN=$$GETIEN(11007.1,STREMNAM) I STREMIEN'>0 D
"RTN","A1AEBLD",194,0)
 . ; create an entry with its required fields
"RTN","A1AEBLD",195,0)
 . N STRMIENS,STREMFDA,I
"RTN","A1AEBLD",196,0)
 . S STRMIENS="+1," I $D(@A1AEBASE@(11007.1,"FLDS",.001)) S STRMIENS="+"_^(.001)_","
"RTN","A1AEBLD",197,0)
 . F I=0:0 S I=$O(@A1AEBASE@(11007.1,"FLDS",I)) Q:I'>0  S STREMFDA(11007.1,STRMIENS,I)=^(I)
"RTN","A1AEBLD",198,0)
 . D UPDATE^DIE("E","STREMFDA","A1AESTRM","A1AEMSG")
"RTN","A1AEBLD",199,0)
 . Q
"RTN","A1AEBLD",200,0)
 Q
"RTN","A1AEBLD",201,0)
 ;
"RTN","A1AEBLD",202,0)
UPDATFIL(A1AEBASE) ;
"RTN","A1AEBLD",203,0)
 N A1AEFDA,A1AEFLD,A1AEIENS,A1AEROOT,MSGROOT,A1AEIEN,A1AEVAL,DA,DIK,A1AEPTID
"RTN","A1AEBLD",204,0)
 S A1AEPTID=@A1AEBASE@("FLDS",.01)
"RTN","A1AEBLD",205,0)
 S A1AEIEN=$O(^A1AE(11004,"B",A1AEPTID,0))
"RTN","A1AEBLD",206,0)
 ; if no entry for patch is in file #11004, will need to create it
"RTN","A1AEBLD",207,0)
 ; but FileManager non-friendly, since it forces you to use the install template
"RTN","A1AEBLD",208,0)
 ; so, have to force it by simply setting the global
"RTN","A1AEBLD",209,0)
 I A1AEIEN'>0 F A1AEVAL=1:1:6 L +^A1AE(11004):0 H:'$T 5 I $T S A1AEVAL=-1 Q
"RTN","A1AEBLD",210,0)
 ; ---- REALLY DON'T WANT TO SIMPLY EXIT WITHOUT FILLING IN DHCP PATCHES FILE ----
"RTN","A1AEBLD",211,0)
 ; I A1AEVAL>0 W !,"Can't get lock on the PATCH file (#11004)."
"RTN","A1AEBLD",212,0)
 ;
"RTN","A1AEBLD",213,0)
 I A1AEIEN'>0 D
"RTN","A1AEBLD",214,0)
 . S A1AEIEN=$P(^A1AE(11004,0),U,3)+1
"RTN","A1AEBLD",215,0)
 . S ^A1AE(11004,0)=$P(^A1AE(11004,0),U,1,2)_U_A1AEIEN_U_($P(^A1AE(11004,0),U,4)+1)
"RTN","A1AEBLD",216,0)
 . S A1AEVAL=@A1AEBASE@("FLDS",.01)
"RTN","A1AEBLD",217,0)
 . ; remove .0 from version if present
"RTN","A1AEBLD",218,0)
 . N A1AETEST,A1AETSTL
"RTN","A1AEBLD",219,0)
 . S A1AETEST=$P(A1AEVAL,"*",2),A1AETSTL=$L(A1AETEST)
"RTN","A1AEBLD",220,0)
 . I $E(A1AETEST,A1AETSTL-1,A1AETSTL)=".0" S A1AEVAL=$P(A1AEVAL,"*")_"*"_$E(A1AETEST,1,A1AETSTL-2)_"*"_$P(A1AEVAL,"*",3,99)
"RTN","A1AEBLD",221,0)
 . ;
"RTN","A1AEBLD",222,0)
 . S ^A1AE(11004,A1AEIEN,0)=A1AEVAL
"RTN","A1AEBLD",223,0)
 . S ^A1AE(11004,"B",A1AEVAL,A1AEIEN)=""
"RTN","A1AEBLD",224,0)
 . L -^A1AE(11004)
"RTN","A1AEBLD",225,0)
 . Q
"RTN","A1AEBLD",226,0)
 ; now update data associated with individual fields in patch entry
"RTN","A1AEBLD",227,0)
 K A1AEFDA,A1AEROOT
"RTN","A1AEBLD",228,0)
 S A1AEIENS=A1AEIEN_","
"RTN","A1AEBLD",229,0)
 S A1AEFLD=.01 F  S A1AEFLD=$O(@A1AEBASE@("FLDS",A1AEFLD)) Q:A1AEFLD'>0  S A1AEFDA(11004,A1AEIENS,A1AEFLD)=^(A1AEFLD)
"RTN","A1AEBLD",230,0)
 D FILE^DIE("E","A1AEFDA","MSGROOT")
"RTN","A1AEBLD",231,0)
 ; now move multiple nodes into the entry
"RTN","A1AEBLD",232,0)
 S A1AEFLD="" F  S A1AEFLD=$O(@A1AEBASE@("MULT",A1AEFLD)) Q:A1AEFLD=""  M ^A1AE(11004,A1AEIEN,A1AEFLD)=^(A1AEFLD)
"RTN","A1AEBLD",233,0)
 ; and make sure all cross-references are set
"RTN","A1AEBLD",234,0)
 S DIK="^A1AE(11004,",DA=A1AEIEN D IX^DIK
"RTN","A1AEBLD",235,0)
 Q
"RTN","A1AECL1")
0^3^B16811729
"RTN","A1AECL1",1,0)
A1AECL1 ;isf/rwf-released patch routine file updater ;2014-03-07T19:37
"RTN","A1AECL1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AECL1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AECL1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AECL1",5,0)
 ;
"RTN","A1AECL1",6,0)
 ;
"RTN","A1AECL1",7,0)
 ;primary change history
"RTN","A1AECL1",8,0)
 ;;2014-03-28: version 2.4 patch module
"RTN","A1AECL1",9,0)
 ;
"RTN","A1AECL1",10,0)
 ;
"RTN","A1AECL1",11,0)
 Q
"RTN","A1AECL1",12,0)
 ;
"RTN","A1AECL1",13,0)
 ;This entry point is called when a patch is released to update the ROUTINE file
"RTN","A1AECL1",14,0)
 ;with the checksums from the patch.
"RTN","A1AECL1",15,0)
PATCH(PIEN) ;Update routine file for one patch.
"RTN","A1AECL1",16,0)
 I $P(^A1AE(11005,PIEN,0),U,21) QUIT  ; If we are importing, don't update the routines sub-file
"RTN","A1AECL1",17,0)
 N RTNL,PATCH
"RTN","A1AECL1",18,0)
 S RTNL=$NA(^TMP("A1AECL1",$J)) K @RTNL
"RTN","A1AECL1",19,0)
 S PATCH=$P(^A1AE(11005,PIEN,0),U)
"RTN","A1AECL1",20,0)
 D RSUM($NA(^A1AE(11005.1,PIEN,2)),.RTNL)
"RTN","A1AECL1",21,0)
 I '$L($O(@RTNL@(" "))) D HFS(RTNL)
"RTN","A1AECL1",22,0)
 D SAVE(PIEN,PATCH,RTNL)
"RTN","A1AECL1",23,0)
 Q
"RTN","A1AECL1",24,0)
 ;
"RTN","A1AECL1",25,0)
SAVE(PIEN,PATCH,ROOT) ;
"RTN","A1AECL1",26,0)
 N RN
"RTN","A1AECL1",27,0)
 S RN=""
"RTN","A1AECL1",28,0)
 F  S RN=$O(@ROOT@(RN)) Q:RN=""  D RTNLOG(PIEN,RN,PATCH,@ROOT@(RN))
"RTN","A1AECL1",29,0)
 Q
"RTN","A1AECL1",30,0)
 ;
"RTN","A1AECL1",31,0)
 ;RSUM=add/delete^nop^checksum^patchlist
"RTN","A1AECL1",32,0)
RTNLOG(PIEN,RN,PCH,RSUM) ;Enter/Update routine in the Routine File
"RTN","A1AECL1",33,0)
 ; VEN/SMH - Changing this to file into 11007.1 in Routine mulitple
"RTN","A1AECL1",34,0)
 ; so that we can have the routines by stream
"RTN","A1AECL1",35,0)
 N STREAM S STREAM=$$GET1^DIQ(11005,PIEN,.2,"I") ; PATCH STREAM (Internal)
"RTN","A1AECL1",36,0)
 N IENS11007P1 S IENS11007P1="?+10,"_STREAM_","
"RTN","A1AECL1",37,0)
 N Y,FDA,IEN
"RTN","A1AECL1",38,0)
 S FDA(11007.11,IENS11007P1,.01)=RN ; Routine Name
"RTN","A1AECL1",39,0)
 S Y=$O(^DIC(9.8,"B",RN,0))
"RTN","A1AECL1",40,0)
 I Y'>0 S IEN="?+1,",FDA(9.8,IEN,1)="R",FDA(9.8,IEN,.01)=RN
"RTN","A1AECL1",41,0)
 I Y>0 S IEN=(+Y)_","
"RTN","A1AECL1",42,0)
 S FDA(9.8,IEN,6)=2 ; Always track and report national patches
"RTN","A1AECL1",43,0)
 I +RSUM D
"RTN","A1AECL1",44,0)
 . S FDA(9.8,IEN,6.2)=PCH ;Delete routine
"RTN","A1AECL1",45,0)
 . S FDA(11007.11,IENS11007P1,1.1)=PIEN ; Deleted by Patch
"RTN","A1AECL1",46,0)
 I 'RSUM D
"RTN","A1AECL1",47,0)
 . S FDA(9.8,IEN,7.1)=DT
"RTN","A1AECL1",48,0)
 . S FDA(9.8,IEN,7.2)=$P(RSUM,U,3) ;Checksum
"RTN","A1AECL1",49,0)
 . S FDA(9.8,IEN,7.3)=$P(RSUM,U,4) ;Patch List
"RTN","A1AECL1",50,0)
 . S IEN="?+2,"_IEN,FDA(9.818,IEN,.01)=PCH,FDA(9.818,IEN,2)=$P(RSUM,U,3),FDA(9.818,IEN,3)=$P(RSUM,U,4)
"RTN","A1AECL1",51,0)
 . ;
"RTN","A1AECL1",52,0)
 . S FDA(11007.11,IENS11007P1,.02)=$P(RSUM,U,3) ; Checksum
"RTN","A1AECL1",53,0)
 . S FDA(11007.11,IENS11007P1,.03)=$$NOW^XLFDT() ; Now's time
"RTN","A1AECL1",54,0)
 . S FDA(11007.11,IENS11007P1,.04)=$P(RSUM,U,4) ; Patch List
"RTN","A1AECL1",55,0)
 D UPDATE^DIE("","FDA","IEN")
"RTN","A1AECL1",56,0)
 Q
"RTN","A1AECL1",57,0)
 ;
"RTN","A1AECL1",58,0)
HFS(RET) ;Check if HFS Data
"RTN","A1AECL1",59,0)
 I '$D(^A1AE(11005.5,PIEN,0)) Q
"RTN","A1AECL1",60,0)
 N I,X
"RTN","A1AECL1",61,0)
 S I=0
"RTN","A1AECL1",62,0)
 F  S I=$O(^A1AE(11005.5,PIEN,1,I)) Q:'I  S X=^(I,0) D
"RTN","A1AECL1",63,0)
 . S @RET@($P(X,U,1))=$P(X,U,2,5)
"RTN","A1AECL1",64,0)
 . Q
"RTN","A1AECL1",65,0)
 Q
"RTN","A1AECL1",66,0)
 ;
"RTN","A1AECL1",67,0)
RSUM(ROOT,RET) ;
"RTN","A1AECL1",68,0)
 ;ROOT is the root where the message is.
"RTN","A1AECL1",69,0)
 ;RET will return an array of routine names and checksums
"RTN","A1AECL1",70,0)
 N IX
"RTN","A1AECL1",71,0)
 I $$PATFL() Q
"RTN","A1AECL1",72,0)
 D BLDTMP
"RTN","A1AECL1",73,0)
 I $L($O(^TMP($J,"RTN","")))>0 D SUM
"RTN","A1AECL1",74,0)
 K ^TMP($J,"RTN") ; VEN/SMH - Don't kill the whole thing
"RTN","A1AECL1",75,0)
 Q
"RTN","A1AECL1",76,0)
 ;
"RTN","A1AECL1",77,0)
PATFL() ;See if data is in the Patch file
"RTN","A1AECL1",78,0)
 N A1,PL,RN,RSUM
"RTN","A1AECL1",79,0)
 S A1=0
"RTN","A1AECL1",80,0)
 F  S A1=$O(^A1AE(11005,PIEN,"P",A1)) Q:A1'>0  S A2=$G(^(A1,0)) D
"RTN","A1AECL1",81,0)
 . Q:'$L($P(A2,U,2))
"RTN","A1AECL1",82,0)
 . S RN=$P(A2,U),RSUM=$P(A2,U,2),PL=$P(A2,U,3)
"RTN","A1AECL1",83,0)
 . S @RET@(RN)="0^0^"_RSUM_U_PL
"RTN","A1AECL1",84,0)
 . Q
"RTN","A1AECL1",85,0)
 Q $L($O(@RET@("")))
"RTN","A1AECL1",86,0)
 ;
"RTN","A1AECL1",87,0)
SUM ;Build the RSUM's, Zero node is add/delete^nop^checksum
"RTN","A1AECL1",88,0)
 ;Add to zero node the patch list as the 4th $P
"RTN","A1AECL1",89,0)
 N RN,PL S RN=""
"RTN","A1AECL1",90,0)
 F  S RN=$O(^TMP($J,"RTN",RN)) Q:RN=""  D
"RTN","A1AECL1",91,0)
 . S PL=$G(^TMP($J,"RTN",RN,2,0))
"RTN","A1AECL1",92,0)
 . S @RET@(RN)=$G(^TMP($J,"RTN",RN))_U_$P(PL,";",5)
"RTN","A1AECL1",93,0)
 . Q
"RTN","A1AECL1",94,0)
 Q
"RTN","A1AECL1",95,0)
 ;
"RTN","A1AECL1",96,0)
BLDTMP ;Build the TMP global to work from.
"RTN","A1AECL1",97,0)
 N IX K ^TMP($J,"RTN") ; VEN/SMH - Don't kill ^($J) here!
"RTN","A1AECL1",98,0)
 S IX=0
"RTN","A1AECL1",99,0)
 ;Skip until we find $KID, then skip 2 more
"RTN","A1AECL1",100,0)
 F  S IX=$O(@ROOT@(IX)) Q:IX'>0  S X=^(IX,0) Q:$E(X,1,4)="$KID"
"RTN","A1AECL1",101,0)
 S IX=$O(@ROOT@(IX)) S IX=$O(@ROOT@(IX))
"RTN","A1AECL1",102,0)
 ;Now the real part
"RTN","A1AECL1",103,0)
 F  S IX=$O(@ROOT@(IX)) Q:IX'>0  D
"RTN","A1AECL1",104,0)
 . S X=^(IX,0),IX=$O(@ROOT@(IX)) Q:$E(X,2,4)'="RTN"
"RTN","A1AECL1",105,0)
 . S Y=$G(^(IX,0))
"RTN","A1AECL1",106,0)
 . S @("^TMP($J,"_X)=Y
"RTN","A1AECL1",107,0)
 . Q
"RTN","A1AECL1",108,0)
 Q
"RTN","A1AECL1",109,0)
 ;
"RTN","A1AECL1",110,0)
 ;Fix database from bad code
"RTN","A1AECL1",111,0)
FIX ;
"RTN","A1AECL1",112,0)
 N DA,X,Y,D1
"RTN","A1AECL1",113,0)
 S DA=0
"RTN","A1AECL1",114,0)
 F  S DA=$O(^DIC(9.8,DA)) Q:'DA  D
"RTN","A1AECL1",115,0)
 . S X=$G(^DIC(9.8,DA,4)) I $L(X) D
"RTN","A1AECL1",116,0)
 . . I X'["~" Q
"RTN","A1AECL1",117,0)
 . . S Y=$P(X,"~",1)_"^"_$P($P(X,"~",2),";",5)
"RTN","A1AECL1",118,0)
 . . W !,DA,?10,Y
"RTN","A1AECL1",119,0)
 . . ;S ^DIC(9.8,DA,4)=Y
"RTN","A1AECL1",120,0)
 . . Q
"RTN","A1AECL1",121,0)
 . S D1=0 F  S D1=$O(^DIC(9.8,DA,8,D1)) Q:'Y  D
"RTN","A1AECL1",122,0)
 . . S X=^DIC(9.8,DA,8,D1,0) Q:X'["~"
"RTN","A1AECL1",123,0)
 . . S Y=$P(X,"~",1)
"RTN","A1AECL1",124,0)
 . . W !,DA,?10,Y
"RTN","A1AECL1",125,0)
 . . S ^DIC(9.8,DA,8,D1,0)=Y
"RTN","A1AECL1",126,0)
 . . Q
"RTN","A1AECL1",127,0)
 Q
"RTN","A1AECL1",128,0)
 ;
"RTN","A1AECL1",129,0)
TEST(D0) ;Update ROUTINE file from the Routine list.
"RTN","A1AECL1",130,0)
 N A1,A2,PH,PHL,RN,RSUM
"RTN","A1AECL1",131,0)
 S A1=0,PH=$P(^A1AE(11005,D0,0),U)
"RTN","A1AECL1",132,0)
 F  S A1=$O(^A1AE(11005,D0,"P",A1)) Q:A1'>0  S A2=$G(^(A1,0)) D
"RTN","A1AECL1",133,0)
 . S RN=$P(A2,U),RSUM=$P(A2,U,2),PHL=$P(A2,U,3) Q:'$L(RSUM)
"RTN","A1AECL1",134,0)
 . D RTNLOG(RN,PH,"0^0^"_RSUM_U_PHL)
"RTN","A1AECL1",135,0)
 . Q
"RTN","A1AECL1",136,0)
 Q
"RTN","A1AECOPD")
0^4^B24688471
"RTN","A1AECOPD",1,0)
A1AECOPD ;isa/pke-copy message into patch description ;2014-03-28T17:31
"RTN","A1AECOPD",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AECOPD",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AECOPD",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AECOPD",5,0)
 ;
"RTN","A1AECOPD",6,0)
 ;
"RTN","A1AECOPD",7,0)
 ;primary change history
"RTN","A1AECOPD",8,0)
 ;2014-03-28; version 2.4 released
"RTN","A1AECOPD",9,0)
 ;
"RTN","A1AECOPD",10,0)
 ;
"RTN","A1AECOPD",11,0)
EN N X,Y
"RTN","A1AECOPD",12,0)
 I $P(^A1AE(11007,$O(^DIC(9.4,"C",$P(A1AEPD,"*"),0)),0),U,5)'="y" Q
"RTN","A1AECOPD",13,0)
ASK S A1AERD("A")="Do you want to copy lines from a message into the Patch Description? "
"RTN","A1AECOPD",14,0)
 S A1AERD(1)="Yes^select a message, subject contains "_$P(A1AEPD,"*",1,2)
"RTN","A1AECOPD",15,0)
 S A1AERD(2)="No^not copy any messages ",A1AERD("B")=2
"RTN","A1AECOPD",16,0)
 S A1AERD(0)="S"
"RTN","A1AECOPD",17,0)
 D SET^A1AERD K A1AERD D ASKS:"Y"[$E(X,1)
"RTN","A1AECOPD",18,0)
 ;
"RTN","A1AECOPD",19,0)
Q W ! K QUE,A1AEROU,^UTILITY($J,"A1AECP"),A1AELINE,A1AEFRLN,A1AETOLN,A1AEOFF,A1AEBLK,A1AEPGLN,A1AELNCT,A1AELNB,A1AELNIN,A1AEBOT,A1AENMSP,A1AEWFLG
"RTN","A1AECOPD",20,0)
 K AFIND
"RTN","A1AECOPD",21,0)
 Q
"RTN","A1AECOPD",22,0)
ASKS ;AXMZ
"RTN","A1AECOPD",23,0)
 I $D(AXMZ) S QMSUB=$P(^XMB(3.9,AXMZ,0),U) D FND Q
"RTN","A1AECOPD",24,0)
 ;this is for axmz
"RTN","A1AECOPD",25,0)
 S SHOW=10 D QUE^A1AEM,LOC^A1AEM I '$D(QUE) Q
"RTN","A1AECOPD",26,0)
 I $D(X)<10 W !!?3,"No message in queue has subject containing ",$P(A1AEPD,"*",1,2) Q
"RTN","A1AECOPD",27,0)
 S A1AERD(0)="S",A1AERD("A")="Select Message to copy : "
"RTN","A1AECOPD",28,0)
 D SET^A1AERD
"RTN","A1AECOPD",29,0)
 I X["^" Q
"RTN","A1AECOPD",30,0)
 S AXMZ=X(X),QMSUB=$P(^XMB(3.9,AXMZ,0),U)
"RTN","A1AECOPD",31,0)
 Q:'$D(AXMZ)
"RTN","A1AECOPD",32,0)
FND K A1AERD D ASKLIN
"RTN","A1AECOPD",33,0)
 Q
"RTN","A1AECOPD",34,0)
 ;
"RTN","A1AECOPD",35,0)
ASKLIN S IOP="HOME" D ^%ZIS K IOP S A1AERD("A")="from" W ! D LINE Q:X="^"!(X="")  S A1AEFRLN=A1AELINE,A1AERD("A")="through",A1AERD("B")=A1AELINE+1 D LINE Q:X="^"  S A1AETOLN=A1AELINE K A1AERD
"RTN","A1AECOPD",36,0)
 ;
"RTN","A1AECOPD",37,0)
 D SETUTI,ASKCOP:$D(^UTILITY($J,"A1AECP")) W:'$D(^UTILITY($J,"A1AECP")) !?3,"...No lines to copy"
"RTN","A1AECOPD",38,0)
 Q
"RTN","A1AECOPD",39,0)
 ;
"RTN","A1AECOPD",40,0)
LINE W !?2,"Copy ",A1AERD("A")," line: " W:$D(A1AERD("B")) A1AERD("B")_"// " R X:DTIME S:'$T X="^" Q:X="^"!(X="")  I X["?" W !?3,"Enter line to copy ",A1AERD("A")_$S(A1AERD("A")'["th":"",1:" or 'ALL'") G LINE
"RTN","A1AECOPD",41,0)
 I 'X,"ALLall"'[$E(X_0,1,3)!(A1AERD("A")["fr") W !?3,*7,"Enter numeric line number" G LINE
"RTN","A1AECOPD",42,0)
LINESIL S (AFIND,FIND)=0 F AZ=.9999999:0 S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  S AFIND=AZ I $D(^(AZ,0)),AZ=X!($E(^(0),1,8)="$END TXT") S FIND=AZ,A1AELINE=AZ-1 S:$E(^(0),1,8)="$END TXT" A1AELINE=AZ-2 S AFIND=0 Q
"RTN","A1AECOPD",43,0)
 I "ALLall"[$E(X_0,1,3),'FIND,AFIND S A1AELINE=AFIND-1
"RTN","A1AECOPD",44,0)
 E  I 'FIND,X,AFIND,AFIND<X S A1AELINE=AFIND-1
"RTN","A1AECOPD",45,0)
 E  I 'FIND W !?3,*7,"Line ",X," not found in " K FIND G LINE
"RTN","A1AECOPD",46,0)
 ;
"RTN","A1AECOPD",47,0)
 I $D(A1AEFRLN),A1AELINE<A1AEFRLN W !?3,*7,"Line copying through precedes line copying from" G LINE
"RTN","A1AECOPD",48,0)
 Q
"RTN","A1AECOPD",49,0)
 ;
"RTN","A1AECOPD",50,0)
SETUTI K ^UTILITY($J,"A1AECP") S A1AELNCT=0
"RTN","A1AECOPD",51,0)
 F AZ=$S(A1AEFRLN<1:.99,1:A1AEFRLN):0:A1AETOLN S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)) S A1AELNCT=A1AELNCT+1,^UTILITY($J,"A1AECP",A1AELNCT)=^(0)
"RTN","A1AECOPD",52,0)
 Q
"RTN","A1AECOPD",53,0)
 ;cc
"RTN","A1AECOPD",54,0)
ASKCOP W ! F A1AELNB=1:1:A1AELNCT I $D(^UTILITY($J,"A1AECP",A1AELNB)) W !,A1AELNB,"> ",^(A1AELNB)
"RTN","A1AECOPD",55,0)
 S A1AERD("A")="Do you want to copy "_$S(A1AELNCT=1:"this line",1:"these "_A1AELNCT_" lines")_"? "
"RTN","A1AECOPD",56,0)
 S A1AERD(0)="S",A1AERD(1)="Yes^copy these lines into the patch description",A1AERD(2)="No^not copy these lines",A1AERD("B")=2 D SET^A1AERD K A1AERD Q:X="^"  ;;;!("N"[$E(X,1))
"RTN","A1AECOPD",57,0)
 I "nN"[$E(X,1) G ASKLIN
"RTN","A1AECOPD",58,0)
 S A1AEBOT=$S($D(^A1AE(11005,DA,"D",0)):$P(^(0),"^",3),1:0),A1AELNIN=0 D INSERT:A1AEBOT,COPY:'A1AEBOT
"RTN","A1AECOPD",59,0)
 Q
"RTN","A1AECOPD",60,0)
 ;
"RTN","A1AECOPD",61,0)
INSERT R !!,"Insert code after what description line: ",X:DTIME Q:'$T!(X="^")  I X<0!(X>A1AEBOT)!(X'?1N.N)!(X["?") G HELP
"RTN","A1AECOPD",62,0)
 S A1AELNIN=X I A1AELNIN<A1AEBOT S A1AEFRLN=A1AEBOT+A1AELNCT,A1AETOLN=A1AELNIN+1+A1AELNCT F I=A1AEFRLN:-1:A1AETOLN S ^A1AE(11005,DA,"D",I,0)=^A1AE(11005,DA,"D",(I-A1AELNCT),0)
"RTN","A1AECOPD",63,0)
A D COPY
"RTN","A1AECOPD",64,0)
 Q
"RTN","A1AECOPD",65,0)
 ;
"RTN","A1AECOPD",66,0)
HELP I X["??" W @IOF F I=0:0 S I=+$O(^A1AE(11005,DA,"D",I)) Q:'I  W !,I,"> ",^(I,0) I ($Y+6)>IOSL D CRCHK Q:X1="^"  W @IOF
"RTN","A1AECOPD",67,0)
 I X'["??" W:X'["?" *7 W !!?3,"Enter a line number between 0 and ",A1AEBOT,", or",!?3,"'??' to list current description."
"RTN","A1AECOPD",68,0)
 G INSERT
"RTN","A1AECOPD",69,0)
 ;
"RTN","A1AECOPD",70,0)
COPY S A1AELNB=0,A1AEFRLN=A1AELNIN+1,A1AETOLN=A1AELNIN+A1AELNCT F I=A1AEFRLN:1:A1AETOLN S A1AELNB=A1AELNB+1,^A1AE(11005,DA,"D",I,0)=^UTILITY($J,"A1AECP",A1AELNB) I ^(0)["|" S A1AEWFLG=""
"RTN","A1AECOPD",71,0)
 S:'$D(^A1AE(11005,DA,"D",0)) ^(0)="" S $P(^A1AE(11005,DA,"D",0),"^",3)=A1AEBOT+A1AELNCT
"RTN","A1AECOPD",72,0)
 Q
"RTN","A1AECOPD",73,0)
 ;
"RTN","A1AECOPD",74,0)
CRCHK I $E(IOST,1)="C" W !!,*7,"Press RETURN to continue or '^' to stop " R X1:DTIME
"RTN","A1AECOPD",75,0)
 Q
"RTN","A1AECOPR")
0^5^B27532901
"RTN","A1AECOPR",1,0)
A1AECOPR ;isa/pke-copy routines into routine text ;1990-05-01
"RTN","A1AECOPR",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AECOPR",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AECOPR",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AECOPR",5,0)
 ;
"RTN","A1AECOPR",6,0)
 ;
"RTN","A1AECOPR",7,0)
 ;primary change history
"RTN","A1AECOPR",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AECOPR",9,0)
 ;1992-12-02: version 2.2 released
"RTN","A1AECOPR",10,0)
 ;
"RTN","A1AECOPR",11,0)
 ;
"RTN","A1AECOPR",12,0)
 S A1AEROU=X
"RTN","A1AECOPR",13,0)
EN S SAVEX=X
"RTN","A1AECOPR",14,0)
 ;
"RTN","A1AECOPR",15,0)
ASK S A1AERD("A")="Copy routine lines from a packman message into the description? "
"RTN","A1AECOPR",16,0)
 S A1AERD(1)="Yes^select a message, subject contains "_$P(A1AEPD,"*",1,2)
"RTN","A1AECOPR",17,0)
 S A1AERD(2)="No^not copy any messages ",A1AERD("B")=2
"RTN","A1AECOPR",18,0)
 S A1AERD(0)="S"
"RTN","A1AECOPR",19,0)
 D SET^A1AERD K A1AERD D ASKS:"Y"[$E(X,1)
"RTN","A1AECOPR",20,0)
 ;
"RTN","A1AECOPR",21,0)
 D Q^A1AECOPD Q
"RTN","A1AECOPR",22,0)
ASKS ;
"RTN","A1AECOPR",23,0)
 I $D(AXMZ) S QMSUB=$P(^XMB(3.9,AXMZ,0),U) D FND Q
"RTN","A1AECOPR",24,0)
 ;
"RTN","A1AECOPR",25,0)
 S SHOW=10 D QUE^A1AEM,LOC^A1AEM I '$D(QUE) Q
"RTN","A1AECOPR",26,0)
 I $D(X)<10 W !!?3,"No message in queue has subject containing ",$P(A1AEPD,"*",1,2) Q
"RTN","A1AECOPR",27,0)
 S A1AERD(0)="S",A1AERD("A")="Select Message to copy : "
"RTN","A1AECOPR",28,0)
 D SET^A1AERD
"RTN","A1AECOPR",29,0)
 I X["^" Q
"RTN","A1AECOPR",30,0)
 S AXMZ=X(X),QMSUB=$P(^XMB(3.9,AXMZ,0),U)
"RTN","A1AECOPR",31,0)
 Q:'$D(AXMZ)
"RTN","A1AECOPR",32,0)
FND D FCOPY^A1AEM I '$D(RNAM) W !!?3,"Routine '",A1AEROU,"' not found in message '",QMSUB,"'" Q
"RTN","A1AECOPR",33,0)
 K A1AERD D ASKLIN
"RTN","A1AECOPR",34,0)
 Q
"RTN","A1AECOPR",35,0)
 ;
"RTN","A1AECOPR",36,0)
ASKLIN S IOP="HOME" D ^%ZIS K IOP S A1AERD("A")="from" W ! D LINE Q:X="^"!(X="")  S A1AEFRLN=A1AELINE,A1AERD("A")="through",A1AERD("B")=$S(A1AEOFF:X_"+"_A1AEOFF,1:X) D LINE Q:X="^"  S A1AETOLN=$S(X="":A1AEFRLN,1:A1AELINE) K A1AERD
"RTN","A1AECOPR",37,0)
 ;
"RTN","A1AECOPR",38,0)
 D SETUTI,ASKCOP:$D(^UTILITY($J,"A1AECP")) W:'$D(^UTILITY($J,"A1AECP")) !?3,"...No lines to copy"
"RTN","A1AECOPR",39,0)
 Q
"RTN","A1AECOPR",40,0)
 ;
"RTN","A1AECOPR",41,0)
LINE W !?2,"Copy ",A1AERD("A")," line: " W:$D(A1AERD("B")) A1AERD("B")_"// " R X:DTIME S:'$T X="^" Q:X="^"!(X="")  I X["?" W !?3,"Enter line to copy ",A1AERD("A") G LINE
"RTN","A1AECOPR",42,0)
 S A1AEOFF=+$P(X,"+",2) I X["+",'A1AEOFF W !?3,*7,"Line offset should be a numeric value" G LINE
"RTN","A1AECOPR",43,0)
B S X=$P(X,"+",1) I '(X?1U.UN!(X?1"%".UN)!(X?1N.N))!($L(X)>8) W !?3,*7,"Line label should be 1-8 characters" G LINE
"RTN","A1AECOPR",44,0)
 S FIND=0 F AZ=$P(RNAM,U,2):0:$P(RNAM,U,3) S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)),$L($P(^(0)," ")),$P(^(0)," ")=X S FIND=AZ,A1AELINE=AZ+A1AEOFF-1 Q
"RTN","A1AECOPR",45,0)
 I 'FIND W !?3,*7,"Line label ",X," not found in ",A1AEROU K FIND G LINE
"RTN","A1AECOPR",46,0)
 ;
"RTN","A1AECOPR",47,0)
 S FIND1=1 I A1AEOFF F AZ=FIND:0:A1AELINE+A1AEOFF S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)),'$L($P(^(0)," ",2)) S FIND1=0 Q
"RTN","A1AECOPR",48,0)
 I 'FIND1,A1AEOFF W !?3,*7,"Line ",X,"+",A1AEOFF," not found in ",A1AEROU K FIND1 G LINE
"RTN","A1AECOPR",49,0)
 ;
"RTN","A1AECOPR",50,0)
 I $D(A1AEFRLN),A1AELINE<A1AEFRLN W !?3,*7,"Line copying through precedes line copying from" G LINE
"RTN","A1AECOPR",51,0)
 Q
"RTN","A1AECOPR",52,0)
 ;
"RTN","A1AECOPR",53,0)
SETUTI K ^UTILITY($J,"A1AECP") S A1AELNCT=0 F AZ=A1AEFRLN:0:A1AETOLN S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)) S A1AELNCT=A1AELNCT+1,^UTILITY($J,"A1AECP",A1AELNCT)=$S("$TXT$ROU$END"'[$E(^(0),1,4):^(0),1:"xxxx"_$E(^(0),5,245))
"RTN","A1AECOPR",54,0)
 Q
"RTN","A1AECOPR",55,0)
 ;
"RTN","A1AECOPR",56,0)
ASKCOP W ! F A1AELNB=1:1:A1AELNCT I $D(^UTILITY($J,"A1AECP",A1AELNB)) W !,A1AELNB,"> ",^(A1AELNB)
"RTN","A1AECOPR",57,0)
 S A1AERD("A")="Do you want to copy "_$S(A1AELNCT=1:"this line",1:"these "_A1AELNCT_" lines")_"? "
"RTN","A1AECOPR",58,0)
 S A1AERD(0)="S",A1AERD(1)="Yes^copy these lines into the routine description",A1AERD(2)="No^not copy these lines",A1AERD("B")=2 D SET^A1AERD K A1AERD Q:X="^"  ;;;!("N"[$E(X,1))
"RTN","A1AECOPR",59,0)
 I "nN"[$E(X,1) G ASKLIN
"RTN","A1AECOPR",60,0)
 S A1AEBOT=$S($D(^A1AE(11005,DA(1),"P",DA,"D",0)):$P(^(0),"^",3),1:0),A1AELNIN=0 D INSERT:A1AEBOT,COPY:'A1AEBOT
"RTN","A1AECOPR",61,0)
 Q
"RTN","A1AECOPR",62,0)
 ;
"RTN","A1AECOPR",63,0)
INSERT R !!,"Insert code after what description line: ",X:DTIME Q:'$T!(X="^")  I X<0!(X>A1AEBOT)!(X'?1N.N)!(X["?") G HELP
"RTN","A1AECOPR",64,0)
 S A1AELNIN=X I A1AELNIN<A1AEBOT S A1AEFRLN=A1AEBOT+A1AELNCT,A1AETOLN=A1AELNIN+1+A1AELNCT F I=A1AEFRLN:-1:A1AETOLN S ^A1AE(11005,DA(1),"P",DA,"D",I,0)=^A1AE(11005,DA(1),"P",DA,"D",(I-A1AELNCT),0)
"RTN","A1AECOPR",65,0)
A D COPY
"RTN","A1AECOPR",66,0)
 Q
"RTN","A1AECOPR",67,0)
 ;
"RTN","A1AECOPR",68,0)
HELP I X["??" W @IOF F I=0:0 S I=+$O(^A1AE(11005,DA(1),"P",DA,"D",I)) Q:'I  W !,I,"> ",^(I,0) I ($Y+6)>IOSL D CRCHK Q:X1="^"  W @IOF
"RTN","A1AECOPR",69,0)
 I X'["??" W:X'["?" *7 W !!?3,"Enter a line number between 0 and ",A1AEBOT,", or",!?3,"'??' to list current description."
"RTN","A1AECOPR",70,0)
 G INSERT
"RTN","A1AECOPR",71,0)
 ;
"RTN","A1AECOPR",72,0)
COPY S A1AELNB=0,A1AEFRLN=A1AELNIN+1,A1AETOLN=A1AELNIN+A1AELNCT F I=A1AEFRLN:1:A1AETOLN S A1AELNB=A1AELNB+1,^A1AE(11005,DA(1),"P",DA,"D",I,0)=^UTILITY($J,"A1AECP",A1AELNB) I ^(0)["|" S A1AEWFLG=""
"RTN","A1AECOPR",73,0)
 S:'$D(^A1AE(11005,DA(1),"P",DA,"D",0)) ^(0)="" S $P(^A1AE(11005,DA(1),"P",DA,"D",0),"^",3)=A1AEBOT+A1AELNCT
"RTN","A1AECOPR",74,0)
 Q
"RTN","A1AECOPR",75,0)
 ;
"RTN","A1AECOPR",76,0)
CRCHK I $E(IOST,1)="C" W !!,*7,"Press RETURN to continue or '^' to stop " R X1:DTIME
"RTN","A1AECOPR",77,0)
 Q
"RTN","A1AECOPY")
0^6^B27327351
"RTN","A1AECOPY",1,0)
A1AECOPY ;isa/rmo-copy routine code into routine description ;1987-11-24T11:00
"RTN","A1AECOPY",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AECOPY",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AECOPY",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AECOPY",5,0)
 ;
"RTN","A1AECOPY",6,0)
 ;
"RTN","A1AECOPY",7,0)
 ;primary change history
"RTN","A1AECOPY",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AECOPY",9,0)
 ;1992-12-02: version 2.2 released
"RTN","A1AECOPY",10,0)
 ;
"RTN","A1AECOPY",11,0)
 ;
"RTN","A1AECOPY",12,0)
 S A1AEROU=X I $D(^("OS",^DD("OS"),18)) X ^(18)
"RTN","A1AECOPY",13,0)
 I '$T W !!?3,"The routine ",X," does not reside in the routine directory." G Q
"RTN","A1AECOPY",14,0)
ASK S A1AERD("A")="Copy routine lines from the routine directory into the description? ",A1AERD(0)="S",A1AERD(1)="Yes^select lines to copy from the routine "_A1AEROU,A1AERD(2)="No^not copy any lines",A1AERD("B")=2
"RTN","A1AECOPY",15,0)
 D SET^A1AERD K A1AERD D ASKLIN:"Y"[$E(X,1)
"RTN","A1AECOPY",16,0)
 ;
"RTN","A1AECOPY",17,0)
Q W ! S X=A1AEROU K A1AEROU,^UTILITY($J,"A1AECP"),A1AELINE,A1AEFRLN,A1AETOLN,A1AEOFF,A1AEBLK,A1AEPGLN,A1AELNCT,A1AELNB,A1AELNIN,A1AEBOT,A1AENMSP,A1AEWFLG
"RTN","A1AECOPY",18,0)
 Q
"RTN","A1AECOPY",19,0)
 ;
"RTN","A1AECOPY",20,0)
ASKLIN S IOP="HOME" D ^%ZIS K IOP S A1AERD("A")="from" W ! D LINE Q:X="^"!(X="")  S A1AEFRLN=A1AELINE,A1AERD("A")="through",A1AERD("B")=$S(A1AEOFF:X_"+"_A1AEOFF,1:X) D LINE Q:X="^"  S A1AETOLN=$S(X="":A1AEFRLN,1:A1AELINE) K A1AERD
"RTN","A1AECOPY",21,0)
 D SETUTI,ASKCOP:$D(^UTILITY($J,"A1AECP")) W:'$D(^UTILITY($J,"A1AECP")) !?3,"...No lines to copy"
"RTN","A1AECOPY",22,0)
 I $D(A1AEWFLG) W !!,*7,"NOTE: The text which you have just copied contains the word-processing",!?6,"window symbol '|'. To display the symbol as a character in the",!?6,"description, edit the line which contains '|' and put in '||'.",! H 2
"RTN","A1AECOPY",23,0)
 Q
"RTN","A1AECOPY",24,0)
 ;
"RTN","A1AECOPY",25,0)
LINE W !?2,"Copy ",A1AERD("A")," line: " W:$D(A1AERD("B")) A1AERD("B")_"// " R X:DTIME S:'$T X="^" Q:X="^"!(X="")  I X["?" W !?3,"Enter line to copy ",A1AERD("A") G LINE
"RTN","A1AECOPY",26,0)
 S A1AEOFF=+$P(X,"+",2) I X["+",'A1AEOFF W !?3,*7,"Line offset should be a numeric value" G LINE
"RTN","A1AECOPY",27,0)
 S X=$P(X,"+",1) I '(X?1U.UN!(X?1"%".UN)!(X?1N.N))!($L(X)>8) W !?3,*7,"Line label should be 1-8 characters" G LINE
"RTN","A1AECOPY",28,0)
 X "ZL @A1AEROU S A1AEPGLN=$T(@X)" I A1AEPGLN="" W !?3,*7,"Line label ",X," not found in ",A1AEROU G LINE
"RTN","A1AECOPY",29,0)
 S A1AEBLK=" " X "ZL @A1AEROU F A1AELNB=1:1 Q:$P($T(+A1AELNB),A1AEBLK,1)=X" S A1AELINE=A1AELNB+A1AEOFF
"RTN","A1AECOPY",30,0)
 I A1AEOFF X "ZL @A1AEROU S A1AEPGLN=$T(+A1AELINE)" I A1AEPGLN="" W !?3,*7,"Line ",X,"+",A1AEOFF," not found in ",A1AEROU G LINE
"RTN","A1AECOPY",31,0)
 I $D(A1AEFRLN),A1AELINE<A1AEFRLN W !?3,*7,"Line copying through precedes line copying from" G LINE
"RTN","A1AECOPY",32,0)
 Q
"RTN","A1AECOPY",33,0)
 ;
"RTN","A1AECOPY",34,0)
SETUTI K ^UTILITY($J,"A1AECP") X "ZL @A1AEROU S A1AELNCT=0 F A1AELNB=A1AEFRLN:1:A1AETOLN S A1AEPGLN=$T(+A1AELNB) S A1AELNCT=A1AELNCT+1,^UTILITY($J,""A1AECP"",A1AELNCT)=$S(""$TXT$ROU$END""'[$E(A1AEPGLN,1,4):A1AEPGLN,1:""xx""_$E(A1AEPGLN,5,245))"
"RTN","A1AECOPY",35,0)
 Q
"RTN","A1AECOPY",36,0)
 ;
"RTN","A1AECOPY",37,0)
ASKCOP W ! F A1AELNB=1:1:A1AELNCT I $D(^UTILITY($J,"A1AECP",A1AELNB)) W !,A1AELNB,"> ",^(A1AELNB)
"RTN","A1AECOPY",38,0)
 S A1AERD("A")="Do you want to copy "_$S(A1AELNCT=1:"this line",1:"these "_A1AELNCT_" lines")_"? "
"RTN","A1AECOPY",39,0)
 S A1AERD(0)="S",A1AERD(1)="Yes^copy these lines into the routine description",A1AERD(2)="No^not copy these lines",A1AERD("B")=2 D SET^A1AERD K A1AERD Q:X="^"  ;;;!("N"[$E(X,1))
"RTN","A1AECOPY",40,0)
 I "nN"[$E(X,1) G ASKLIN
"RTN","A1AECOPY",41,0)
 S A1AEBOT=$S($D(^A1AE(11005,DA(1),"P",DA,"D",0)):$P(^(0),"^",3),1:0),A1AELNIN=0 D INSERT:A1AEBOT,COPY:'A1AEBOT
"RTN","A1AECOPY",42,0)
 Q
"RTN","A1AECOPY",43,0)
 ;
"RTN","A1AECOPY",44,0)
INSERT R !!,"Insert code after what description line: ",X:DTIME Q:'$T!(X="^")  I X<0!(X>A1AEBOT)!(X'?1N.N)!(X["?") G HELP
"RTN","A1AECOPY",45,0)
 S A1AELNIN=X I A1AELNIN<A1AEBOT S A1AEFRLN=A1AEBOT+A1AELNCT,A1AETOLN=A1AELNIN+1+A1AELNCT F I=A1AEFRLN:-1:A1AETOLN S ^A1AE(11005,DA(1),"P",DA,"D",I,0)=^A1AE(11005,DA(1),"P",DA,"D",(I-A1AELNCT),0)
"RTN","A1AECOPY",46,0)
 D COPY
"RTN","A1AECOPY",47,0)
 Q
"RTN","A1AECOPY",48,0)
 ;
"RTN","A1AECOPY",49,0)
HELP I X["??" W @IOF F I=0:0 S I=+$O(^A1AE(11005,DA(1),"P",DA,"D",I)) Q:'I  W !,I,"> ",^(I,0) I ($Y+6)>IOSL D CRCHK Q:X1="^"  W @IOF
"RTN","A1AECOPY",50,0)
 I X'["??" W:X'["?" *7 W !!?3,"Enter a line number between 0 and ",A1AEBOT,", or",!?3,"'??' to list current description."
"RTN","A1AECOPY",51,0)
 G INSERT
"RTN","A1AECOPY",52,0)
 ;
"RTN","A1AECOPY",53,0)
COPY S A1AELNB=0,A1AEFRLN=A1AELNIN+1,A1AETOLN=A1AELNIN+A1AELNCT F I=A1AEFRLN:1:A1AETOLN S A1AELNB=A1AELNB+1,^A1AE(11005,DA(1),"P",DA,"D",I,0)=^UTILITY($J,"A1AECP",A1AELNB) I ^(0)["|" S A1AEWFLG=""
"RTN","A1AECOPY",54,0)
 S:'$D(^A1AE(11005,DA(1),"P",DA,"D",0)) ^(0)="" S $P(^A1AE(11005,DA(1),"P",DA,"D",0),"^",3)=A1AEBOT+A1AELNCT
"RTN","A1AECOPY",55,0)
 Q
"RTN","A1AECOPY",56,0)
 ;
"RTN","A1AECOPY",57,0)
CRCHK I $E(IOST,1)="C" W !!,*7,"Press RETURN to continue or '^' to stop " R X1:DTIME
"RTN","A1AECOPY",58,0)
 Q
"RTN","A1AEDD1")
0^65^B8373863
"RTN","A1AEDD1",1,0)
A1AEDD1 ;ven/jli-data dictionary related code ;2015-05-20T18:23
"RTN","A1AEDD1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEDD1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEDD1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEDD1",5,0)
 ;
"RTN","A1AEDD1",6,0)
 ;
"RTN","A1AEDD1",7,0)
 ;primary change history
"RTN","A1AEDD1",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEDD1",9,0)
 ;
"RTN","A1AEDD1",10,0)
 ;
"RTN","A1AEDD1",11,0)
 Q
"RTN","A1AEDD1",12,0)
 ;
"RTN","A1AEDD1",13,0)
PLU949 ; pre-lookup transform for version field of file 9.4 add .0 to integer if exists
"RTN","A1AEDD1",14,0)
 ; ZEXCEPT: X already defined before lookup attempt starts
"RTN","A1AEDD1",15,0)
 I X?1.N1"."1.N.1A.2N Q
"RTN","A1AEDD1",16,0)
 I X?1.N.1A.2N D  Q  ; contains a numeric, but no decimal
"RTN","A1AEDD1",17,0)
 . N FOUND,DONE,VALUE,I
"RTN","A1AEDD1",18,0)
 . S FOUND=0,DONE=0
"RTN","A1AEDD1",19,0)
 . F I=1:1:$L(X) S VALUE="0123456789"[$E(X,I) S:VALUE FOUND=1 I FOUND,'VALUE S X=$E(X,1,I-1)_".0"_$E(X,I,$L(X)),DONE=1 Q
"RTN","A1AEDD1",20,0)
 . I FOUND,'DONE S X=X_".0" ; digit was the last character
"RTN","A1AEDD1",21,0)
 . Q
"RTN","A1AEDD1",22,0)
 I X?1.N1".".1A.2N S X=$P(X,".")_".0"_$P(X,".",2) ; no value following decimal
"RTN","A1AEDD1",23,0)
 Q
"RTN","A1AEDD1",24,0)
 ;
"RTN","A1AEDD1",25,0)
PLU96 ; Pre-Lookup Transform for Build file (#9.6)
"RTN","A1AEDD1",26,0)
PLU97 ; Pre-Lookup Transform for Install file (#9.7)
"RTN","A1AEDD1",27,0)
 ; ZEXCEPT: X defined before call is made
"RTN","A1AEDD1",28,0)
 I X?1A1.ANE1AP1.N1"."1.N Q  ; ONE CORRECT FORMAT WITH 1 OR more decimal places
"RTN","A1AEDD1",29,0)
 I X?1A1.APN1"*"1.N1"."1.N1"*"1.N Q  ; ANOTHER CORRECT FORMAT
"RTN","A1AEDD1",30,0)
 ; need to fix based on format
"RTN","A1AEDD1",31,0)
 I X?1A1.APN1"*"1.N1"."1"*"1.N.1A.2N S X=$P(X,"*")_"*"_$P(X,"*",2)_"0"_"*"_$P(X,"*",3) Q
"RTN","A1AEDD1",32,0)
 I X?1A1.APN1"*"1.N1"*"1.N.1A.2N S X=$P(X,"*")_"*"_$P(X,"*",2)_".0"_"*"_$P(X,"*",3) Q
"RTN","A1AEDD1",33,0)
 I X?1A1.ANE1AP1.N1"." S X=X_"0" Q
"RTN","A1AEDD1",34,0)
 I X?1A1.ANE1AP1.N S X=X_".0" Q
"RTN","A1AEDD1",35,0)
 ; any other input may be a partial - since it doesn't have a number in it.
"RTN","A1AEDD1",36,0)
 Q
"RTN","A1AEDD1",37,0)
 ;
"RTN","A1AEDD1",38,0)
PLU11005 ; pre-lookup transform for DHCP PATCHES file (#11005)
"RTN","A1AEDD1",39,0)
 ; ZEXCEPT: X defined before entry is made
"RTN","A1AEDD1",40,0)
 N VAL
"RTN","A1AEDD1",41,0)
 S VAL=$L(X)
"RTN","A1AEDD1",42,0)
 I X[".0",$E(X,VAL-1,VAL)=".0" S X=$P(X,".0")
"RTN","A1AEDD1",43,0)
 I X?1A1.APN1"*"1.N1"."1"0"1"*"1.N.1A.2N S X=$P(X,".0")_$P(X,".0",2)
"RTN","A1AEDD1",44,0)
 Q
"RTN","A1AEDD1",45,0)
 ;
"RTN","A1AEDD1",46,0)
PLU11004 ; pre-lookup transform for PATCH file (#11004)
"RTN","A1AEDD1",47,0)
 ; ZEXCEPT: X defined before entry is made
"RTN","A1AEDD1",48,0)
 N VAL
"RTN","A1AEDD1",49,0)
 S VAL=$L(X)
"RTN","A1AEDD1",50,0)
 I X[".0",$E(X,VAL-1,VAL)=".0" S X=$P(X,".0")
"RTN","A1AEDD1",51,0)
 I X?1A1.APN1"*"1.N1"."1"0"1"*"1.N.1A.2N S X=$P(X,".0")_$P(X,".0",2)
"RTN","A1AEDD1",52,0)
 Q
"RTN","A1AEDD1",53,0)
 ;
"RTN","A1AEDD1",54,0)
A1AESEQ ; called as SET cross-reference on NAME entry for PATCH APPLICATION HISTORY sub-file
"RTN","A1AEDD1",55,0)
 ; ZEXCEPT: DA,X - defined prior to entry
"RTN","A1AEDD1",56,0)
 N SEQ,PAT,PKG,VER,I,STRM,PATCH,PATNUM
"RTN","A1AEDD1",57,0)
 S SEQ=+$P(X,"#",2)
"RTN","A1AEDD1",58,0)
 I SEQ>0 S PKG=$P(^DIC(9.4,DA(2),0),U,2),VER=+^DIC(9.4,DA(2),22,DA(1),0),PATNUM=+X D
"RTN","A1AEDD1",59,0)
 . S STRM=0 F I=0:0 S I=$O(^A1AE(11007.1,I)) Q:I'>0  I PATNUM>(I-1) S STRM=I
"RTN","A1AEDD1",60,0)
 . I STRM=0 S STRM=1
"RTN","A1AEDD1",61,0)
 . S PATCH=PKG_"*"_VER_"*"_PATNUM
"RTN","A1AEDD1",62,0)
 . S ^DIC(9.4,"A1AESEQ",PKG,VER,STRM,SEQ,PATCH)=""
"RTN","A1AEDD1",63,0)
 . Q
"RTN","A1AEDD1",64,0)
 Q
"RTN","A1AEDD1",65,0)
 ;
"RTN","A1AEDD1",66,0)
KA1AESEQ ; called as KILL cross-reference on NAME entry for PATCH APPLICATION HISTORY sub-file
"RTN","A1AEDD1",67,0)
 ; ZEXCEPT: DA,X - defined prior to entry
"RTN","A1AEDD1",68,0)
 N SEQ,PAT,PKG,VER,I,STRM,PATCH,PATNUM
"RTN","A1AEDD1",69,0)
 S SEQ=+$P(X,"#",2)
"RTN","A1AEDD1",70,0)
 I SEQ>0 S PAT=$P(^(0),U),PKG=$P(^DIC(9.4,DA(2),0),U,2),VER=+^DIC(9.4,DA(2),22,DA(1),0),PATNUM=+X D
"RTN","A1AEDD1",71,0)
 . S STRM=0 F I=0:0 S I=$O(^A1AE(11007.1,I)) Q:I'>0  I PATNUM>(I-1) S STRM=I
"RTN","A1AEDD1",72,0)
 . I STRM=0 S STRM=1
"RTN","A1AEDD1",73,0)
 . S PATCH=PKG_"*"_VER_"*"_PATNUM
"RTN","A1AEDD1",74,0)
 . K ^DIC(9.4,"A1AESEQ",PKG,VER,STRM,SEQ,PATCH)
"RTN","A1AEDD1",75,0)
 . Q
"RTN","A1AEDD1",76,0)
 Q
"RTN","A1AEF1")
0^67^B112078132
"RTN","A1AEF1",1,0)
A1AEF1 ;ven/lgc-functions builds and installs ;2015-02-15T17:37
"RTN","A1AEF1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEF1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEF1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEF1",5,0)
 ;
"RTN","A1AEF1",6,0)
 ;
"RTN","A1AEF1",7,0)
 ;primary change history
"RTN","A1AEF1",8,0)
 ;2014-09-11: version 2.4 released
"RTN","A1AEF1",9,0)
 ;
"RTN","A1AEF1",10,0)
 ;
"RTN","A1AEF1",11,0)
 ; CHANGE LGC - 9/18/2014
"RTN","A1AEF1",12,0)
 ;    Modified REQB to build double array
"RTN","A1AEF1",13,0)
 ;    BMARR(BUILD)=IEN into 9.6
"RTN","A1AEF1",14,0)
 ;    BMARR(n,BUILD)=Depth in descendants
"RTN","A1AEF1",15,0)
 ;
"RTN","A1AEF1",16,0)
 ; CHANGE LGC - 10/1/2014
"RTN","A1AEF1",17,0)
 ;    Note requirement to kill array passed
"RTN","A1AEF1",18,0)
 ;    by reference in REQB and MULB before
"RTN","A1AEF1",19,0)
 ;    calling API.
"RTN","A1AEF1",20,0)
 ;    A1AEFRQB edited to N BMARR
"RTN","A1AEF1",21,0)
 ;    A1AEFMUB edited to N BMARR
"RTN","A1AEF1",22,0)
 ;
"RTN","A1AEF1",23,0)
 ; CHANGE LGC - 12/1/2014
"RTN","A1AEF1",24,0)
 ;    Modified BACTV to find PACKAGE IEN by either
"RTN","A1AEF1",25,0)
 ;    direct lookup into entry in 9.6 OR by
"RTN","A1AEF1",26,0)
 ;    looking up package abb in the "C" cross
"RTN","A1AEF1",27,0)
 ;
"RTN","A1AEF1",28,0)
 ; Return in BMARR array all REQUIRED BUILDS for
"RTN","A1AEF1",29,0)
 ;  a the BUILD entry in BUILDS [#9.6]
"RTN","A1AEF1",30,0)
 ; Code by Rick Marshall and Joel Ivey during dev conference call
"RTN","A1AEF1",31,0)
 ;    discussing recursion practices
"RTN","A1AEF1",32,0)
 ; ENTER
"RTN","A1AEF1",33,0)
 ;   BUILD   =  bill name 
"RTN","A1AEF1",34,0)
 ;   BMARR   =  array passed by reference
"RTN","A1AEF1",35,0)
 ;              *** Array must be empty
"RTN","A1AEF1",36,0)
 ; EXIT
"RTN","A1AEF1",37,0)
 ;   BMARR   =  array of names of all REQUIRED BUILDS
"RTN","A1AEF1",38,0)
REQB(BUILD,BMARR) ; Return array of all REQ builds
"RTN","A1AEF1",39,0)
 S:'$D(BMARR(0)) BMARR(0)=0,BMARR(0,0)=1
"RTN","A1AEF1",40,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) ; do we have an IEN?
"RTN","A1AEF1",41,0)
 Q:'BIEN  ; skip if no record
"RTN","A1AEF1",42,0)
 S BMARR(BUILD)=$O(^XPD(9.6,"B",BUILD,0)) ; add to requirements
"RTN","A1AEF1",43,0)
 I BMARR(0,0)>0 S BMARR(0)=BMARR(0)+1,BMARR(BMARR(0),BUILD)=BMARR(0,0)
"RTN","A1AEF1",44,0)
 N REQB S REQB=""
"RTN","A1AEF1",45,0)
 F  S REQB=$O(^XPD(9.6,BIEN,"REQB","B",REQB)) Q:REQB=""  D
"RTN","A1AEF1",46,0)
 . Q:$D(BMARR(REQB))  ; already have
"RTN","A1AEF1",47,0)
 . S BMARR(0,0)=BMARR(0,0)+1
"RTN","A1AEF1",48,0)
 . D REQB(REQB,.BMARR) ; add all its required builds
"RTN","A1AEF1",49,0)
 S BMARR(0,0)=BMARR(0,0)-1 Q
"RTN","A1AEF1",50,0)
 ;
"RTN","A1AEF1",51,0)
 ; Return in BMARR array all MULTIPLE BUILDS for
"RTN","A1AEF1",52,0)
 ;  a the BUILD entry in BUILDS [#9.6]
"RTN","A1AEF1",53,0)
 ; ENTER
"RTN","A1AEF1",54,0)
 ;   BUILD   =  bill name 
"RTN","A1AEF1",55,0)
 ;   BMARR   =  array passed by reference
"RTN","A1AEF1",56,0)
 ;              *** array must be empty
"RTN","A1AEF1",57,0)
 ; EXIT
"RTN","A1AEF1",58,0)
 ;   BMARR   =  array of names of all Multiple Builds
"RTN","A1AEF1",59,0)
MULB(BUILD,BMARR) ; Return array of all MULB builds
"RTN","A1AEF1",60,0)
 S:'$D(BMARR(0)) BMARR(0)=0,BMARR(0,0)=1
"RTN","A1AEF1",61,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) ; do we have an IEN?
"RTN","A1AEF1",62,0)
 Q:'BIEN  ; skip if no record
"RTN","A1AEF1",63,0)
 S BMARR(BUILD)=$O(^XPD(9.6,"B",BUILD,0)) ; add to requirements
"RTN","A1AEF1",64,0)
 I BMARR(0,0)>0 S BMARR(0)=BMARR(0)+1,BMARR(BMARR(0),BUILD)=BMARR(0,0)
"RTN","A1AEF1",65,0)
 N MULB S MULB=""
"RTN","A1AEF1",66,0)
 F  S MULB=$O(^XPD(9.6,BIEN,10,"B",MULB)) Q:MULB=""  D
"RTN","A1AEF1",67,0)
 . Q:$D(BMARR(MULB))  ; already have
"RTN","A1AEF1",68,0)
 . S BMARR(0,0)=BMARR(0,0)+1
"RTN","A1AEF1",69,0)
 . D MULB(MULB,.BMARR) ; add all its MULTIPLE builds
"RTN","A1AEF1",70,0)
 S BMARR(0,0)=BMARR(0,0)-1 Q
"RTN","A1AEF1",71,0)
 ;
"RTN","A1AEF1",72,0)
 ;
"RTN","A1AEF1",73,0)
 ; Use the REQB function above to find all decendents of the
"RTN","A1AEF1",74,0)
 ;   present REQUIRED BUILD entries for this parent build
"RTN","A1AEF1",75,0)
 ;   and push them into the REQUIRED BUILDS [#11] multiple
"RTN","A1AEF1",76,0)
 ; ENTER
"RTN","A1AEF1",77,0)
 ;   BUILD    =  Name of parent build to edit REQB multiple
"RTN","A1AEF1",78,0)
 ; EXIT
"RTN","A1AEF1",79,0)
 ;   RETURN X =  0=error  1=ok
"RTN","A1AEF1",80,0)
A1AEFRQB(BUILD) ; File REQUIRED BUILDS
"RTN","A1AEF1",81,0)
 Q:BUILD=""
"RTN","A1AEF1",82,0)
 N X
"RTN","A1AEF1",83,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEF1",84,0)
 N BMARR D REQB(BUILD,.BMARR)
"RTN","A1AEF1",85,0)
 Q:'$D(BMARR)
"RTN","A1AEF1",86,0)
 ; CHANGE 9/18/2014 BLDNM=" " rather than BLDNM=""
"RTN","A1AEF1",87,0)
 ;   to account for modification of REQB to double array
"RTN","A1AEF1",88,0)
 N BLDNM,DIERR S BLDNM=" "
"RTN","A1AEF1",89,0)
 F  S BLDNM=$O(BMARR(BLDNM)) Q:BLDNM=""  D  Q:'X
"RTN","A1AEF1",90,0)
 .  Q:BUILD=BLDNM
"RTN","A1AEF1",91,0)
 .  S X=$$ADBTORM(BIEN,BLDNM,"R")
"RTN","A1AEF1",92,0)
 Q:X 1
"RTN","A1AEF1",93,0)
 Q X
"RTN","A1AEF1",94,0)
 ;
"RTN","A1AEF1",95,0)
 ;
"RTN","A1AEF1",96,0)
 ; Use the MULB function above to find all decendents of the
"RTN","A1AEF1",97,0)
 ;   present MULTIPLE BUILD entries for this parent build
"RTN","A1AEF1",98,0)
 ;   and push them into the MULTIPLE BUILDS [#10] multiple
"RTN","A1AEF1",99,0)
 ; ENTER
"RTN","A1AEF1",100,0)
 ;   BUILD    =  Name of parent build to edit MULB  multiple
"RTN","A1AEF1",101,0)
 ; EXIT
"RTN","A1AEF1",102,0)
 ;   RETURN X =  0=error  1=ok
"RTN","A1AEF1",103,0)
A1AEFMUB(BUILD) ; File MULTIPLE BUILDS
"RTN","A1AEF1",104,0)
 Q:BUILD=""
"RTN","A1AEF1",105,0)
 N X
"RTN","A1AEF1",106,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEF1",107,0)
 N BMARR D MULB(BUILD,.BMARR)
"RTN","A1AEF1",108,0)
 Q:'$D(BMARR)
"RTN","A1AEF1",109,0)
 N BLDNM,DIERR S BLDNM=" "
"RTN","A1AEF1",110,0)
 F  S BLDNM=$O(BMARR(BLDNM)) Q:BLDNM=""  D  Q:'X
"RTN","A1AEF1",111,0)
 .  Q:BUILD=BLDNM
"RTN","A1AEF1",112,0)
 .  S X=$$ADBTORM(BIEN,BLDNM,"M")
"RTN","A1AEF1",113,0)
 Q:X 1
"RTN","A1AEF1",114,0)
 Q X
"RTN","A1AEF1",115,0)
 ;
"RTN","A1AEF1",116,0)
 ;
"RTN","A1AEF1",117,0)
 ; Add a build name to either the MULB or REQB multiple
"RTN","A1AEF1",118,0)
 ; ENTER
"RTN","A1AEF1",119,0)
 ;    BIEN     =  Parent BUILD 
"RTN","A1AEF1",120,0)
 ;    BLDNM    =  member or prerequisite build being added
"RTN","A1AEF1",121,0)
 ;    RM       =  "R" prerequisite REQB
"RTN","A1AEF1",122,0)
 ;             =  "M" for member MULB
"RTN","A1AEF1",123,0)
 ; RETURN
"RTN","A1AEF1",124,0)
 ;    1        =  new entry added
"RTN","A1AEF1",125,0)
 ;    0        =  error
"RTN","A1AEF1",126,0)
ADBTORM(BIEN,BLDNM,RM) ; Add build to either REQB or MULB
"RTN","A1AEF1",127,0)
 I RM'?1"R",RM'?1"M" Q 0
"RTN","A1AEF1",128,0)
 I 'BIEN Q 0
"RTN","A1AEF1",129,0)
 I '$D(^XPD(9.6,BIEN)) Q 0
"RTN","A1AEF1",130,0)
 I BLDNM="" Q 0
"RTN","A1AEF1",131,0)
 I '$O(^XPD(9.6,"B",BLDNM,0)) Q 0
"RTN","A1AEF1",132,0)
 N FDA,DIERR,FDAIEN
"RTN","A1AEF1",133,0)
 S:RM?1"R" FDA(3,9.611,"?+1,"_BIEN_",",.01)=BLDNM
"RTN","A1AEF1",134,0)
 S:RM?1"M" FDA(3,9.63,"?+1,"_BIEN_",",.01)=BLDNM
"RTN","A1AEF1",135,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEF1",136,0)
 Q:+FDAIEN(1) +FDAIEN(1)
"RTN","A1AEF1",137,0)
 Q 0
"RTN","A1AEF1",138,0)
 ;
"RTN","A1AEF1",139,0)
 ; Given a routine, trace out all the patches in 11005
"RTN","A1AEF1",140,0)
 ;  containing that routine
"RTN","A1AEF1",141,0)
 ; Note: DHCP PATCHES file very incomplete at this time
"RTN","A1AEF1",142,0)
 ; Note: How handle routines without version or package?
"RTN","A1AEF1",143,0)
 ; ENTER
"RTN","A1AEF1",144,0)
 ;   A1AERTNM   =  Routine Name
"RTN","A1AEF1",145,0)
 ;   PTCHARR    =  Array of Patches required to build
"RTN","A1AEF1",146,0)
 ;                 second line of routine
"RTN","A1AEF1",147,0)
 ; RETURNS
"RTN","A1AEF1",148,0)
 ;   PTCHARR   = example below.  129215=ien found 11005
"RTN","A1AEF1",149,0)
 ;             POO("DG*5.3*673")=""
"RTN","A1AEF1",150,0)
 ;             POO("DG*5.3*688")=""
"RTN","A1AEF1",151,0)
 ;             POO("DG*5.3*797")=129215
"RTN","A1AEF1",152,0)
 ;             POO("DG*5.3*842")=129243
"RTN","A1AEF1",153,0)
 ; VARIABLES
"RTN","A1AEF1",154,0)
 ;   A1AE005    =  IEN of patch in file 11005
"RTN","A1AEF1",155,0)
 ;   A1AE2LN    =  Second line of the routine
"RTN","A1AEF1",156,0)
 ;   A1AEPLST   =  List of patches from routine second line
"RTN","A1AEF1",157,0)
 ;   A1AESBB    =  Package abbreviation
"RTN","A1AEF1",158,0)
 ;   A1AESIEN   =  Package IEN in file 9.4
"RTN","A1AEF1",159,0)
 ;   A1AESNM    =  Package name from second line
"RTN","A1AEF1",160,0)
 ;   A1AEVR     =  Version from second line
"RTN","A1AEF1",161,0)
 ;   A1AEPNM    =  Patch Name built from routine second line
"RTN","A1AEF1",162,0)
 ;
"RTN","A1AEF1",163,0)
PTC4RTN(A1AERTNM,PTCHARR) ; Find all patches touching Routine
"RTN","A1AEF1",164,0)
 K PTCHARR Q:A1AERTNM=""
"RTN","A1AEF1",165,0)
 ; Get 2nd line of routine
"RTN","A1AEF1",166,0)
 N A1AE2LN S A1AE2LN=$T(+2^@A1AERTNM)
"RTN","A1AEF1",167,0)
 Q:A1AE2LN=""  ; No second line, bail out.
"RTN","A1AEF1",168,0)
 ; Write 2nd line of routine
"RTN","A1AEF1",169,0)
 ;W !,A1AE2LN,!
"RTN","A1AEF1",170,0)
 ; Get version of routine's package.  Remember .0 issue
"RTN","A1AEF1",171,0)
 N A1AEVR S A1AEVR=$P(A1AE2LN,";",3) ; get version
"RTN","A1AEF1",172,0)
 I A1AEVR?.NP1"0" S A1AEVR=$P(A1AEVR,".")
"RTN","A1AEF1",173,0)
 ; Get routine's package abbreviation
"RTN","A1AEF1",174,0)
 N A1AESNM S A1AESNM=$$UP($P(A1AE2LN,";",4)) ; get package name
"RTN","A1AEF1",175,0)
 Q:A1AESNM=""
"RTN","A1AEF1",176,0)
 N A1AESIEN S A1AESIEN=$O(^DIC(9.4,"B",A1AESNM,0))
"RTN","A1AEF1",177,0)
 Q:A1AESIEN=""
"RTN","A1AEF1",178,0)
 N A1AESABB S A1AESABB=$$GET1^DIQ(9.4,A1AESIEN_",",1)
"RTN","A1AEF1",179,0)
 Q:A1AESABB=""
"RTN","A1AEF1",180,0)
 ; Get listing of patches from routines second line
"RTN","A1AEF1",181,0)
 ; Assumption is routine list follows double **
"RTN","A1AEF1",182,0)
 ;  and each patch number delimited by ","
"RTN","A1AEF1",183,0)
 N A1AEPLST S A1AEPLST=$P(A1AE2LN,"**",2)
"RTN","A1AEF1",184,0)
 N CNT,A1AEPNM
"RTN","A1AEF1",185,0)
 ; Look for patches required to build second line
"RTN","A1AEF1",186,0)
 ; Save necessary patches in array with IEN of patch
"RTN","A1AEF1",187,0)
 ;   in file 11005 if found
"RTN","A1AEF1",188,0)
 N A1AE005 ; *** ADDED 10/3/2014
"RTN","A1AEF1",189,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEF1",190,0)
 F CNT=1:1:$L(A1AEPLST,",") D
"RTN","A1AEF1",191,0)
 . S A1AEPNM=A1AESABB_"*"_A1AEVR_"*"_$P(A1AEPLST,",",CNT)
"RTN","A1AEF1",192,0)
 . S PTCHARR(A1AEPNM)=""
"RTN","A1AEF1",193,0)
 .; Added ^ in below. was $O(A1AE(11005...
"RTN","A1AEF1",194,0)
 . S A1AE005=$O(^A1AE(A1AEFILE,"B",A1AEPNM,0)) ; JLI 150525 replaced 11005 with A1AEFILE
"RTN","A1AEF1",195,0)
 .; I A1AE005 W "  DHCP PATCH ENTRY:",A1AE005
"RTN","A1AEF1",196,0)
 . S PTCHARR(A1AEPNM)=A1AE005
"RTN","A1AEF1",197,0)
 Q
"RTN","A1AEF1",198,0)
 ;
"RTN","A1AEF1",199,0)
 ; Given a patch
"RTN","A1AEF1",200,0)
 ;   Find every routine in this patch
"RTN","A1AEF1",201,0)
 ;   Find all patches for 2nd line of each routine as
"RTN","A1AEF1",202,0)
 ;     occurs on the system.  
"RTN","A1AEF1",203,0)
 ;   Return all patches needed to build every routine
"RTN","A1AEF1",204,0)
 ;     in the original patch
"RTN","A1AEF1",205,0)
 ;   As the necessary patches may not be in 11005
"RTN","A1AEF1",206,0)
 ;     keep an array of all patch names necessary and
"RTN","A1AEF1",207,0)
 ;     the IEN into the DHCP PATCHES [#11005] if found
"RTN","A1AEF1",208,0)
 ; NOTE: Remember the routine second line listed in the
"RTN","A1AEF1",209,0)
 ;   patch in may not represent the second line of the
"RTN","A1AEF1",210,0)
 ;   routine as now active in the system, so use 2nd line
"RTN","A1AEF1",211,0)
 ;   of the active routine
"RTN","A1AEF1",212,0)
 ; Logic
"RTN","A1AEF1",213,0)
 ;  Identify every routine in a patch 
"RTN","A1AEF1",214,0)
 ;     ^A1AE(11005,PATCH IEN,"P",SS,0)=ROUTINE^CHKSM^**123,231**
"RTN","A1AEF1",215,0)
 ;   With each routine idenfity every patch with that routine
"RTN","A1AEF1",216,0)
 ;       ^A1AE(11005,"R",RTN,11005IEN,SS WITHIN PATCH)
"RTN","A1AEF1",217,0)
 ;       Run the above
"RTN","A1AEF1",218,0)
 ;    Get the second line from the active routine
"RTN","A1AEF1",219,0)
 ;       Run the above
"RTN","A1AEF1",220,0)
 ; ENTER
"RTN","A1AEF1",221,0)
 ;    A1AEPIEN   =  IEN in 11005 of patch under scrutiny
"RTN","A1AEF1",222,0)
 ;    PTCHARR    =  Array passed by reference
"RTN","A1AEF1",223,0)
 ; RETURN
"RTN","A1AEF1",224,0)
 ;    PTCHARR    =  Array of all patches needed to build
"RTN","A1AEF1",225,0)
 ;                  every routine in the patch under
"RTN","A1AEF1",226,0)
 ;                  scrutiny
"RTN","A1AEF1",227,0)
PTCRTNS(A1AEPIEN,PTCHARR) ; Return array of all patches to build Routine
"RTN","A1AEF1",228,0)
 K PTCHARR
"RTN","A1AEF1",229,0)
 Q:'$G(A1AEPIEN)
"RTN","A1AEF1",230,0)
 ; 1. Get routines in the patch
"RTN","A1AEF1",231,0)
 ; 2. Get array of patches for each routine using PTC4RTN
"RTN","A1AEF1",232,0)
 ;    necessary as can't trust DHCP PATCHES to have
"RTN","A1AEF1",233,0)
 ;    the necessary patches.  PTC4RTN builds an array
"RTN","A1AEF1",234,0)
 ;    of all patches necessary for the second line of
"RTN","A1AEF1",235,0)
 ;    the routine REGARDLESS of the patches existence
"RTN","A1AEF1",236,0)
 ;    in 11005
"RTN","A1AEF1",237,0)
 ;
"RTN","A1AEF1",238,0)
 ; 1. Build array of routines in the patch
"RTN","A1AEF1",239,0)
 ;    Double array   ARR(RTN,"ACTIVE")=LINE2 RTN IN SYSTEM
"RTN","A1AEF1",240,0)
 ;                   ARR(RTN,P,IEN,SS)=PATCH ENTRY DISP LINE2
"RTN","A1AEF1",241,0)
 N A1AER,A1AERR,A1AERRS,A1AERSS S A1AERSS=0
"RTN","A1AEF1",242,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEF1",243,0)
 F  S A1AERSS=$O(^A1AE(A1AEFILE,A1AEPIEN,"P",A1AERSS)) Q:'A1AERSS  D  ; JLI 150525 changed 11005 to A1AEFILE
"RTN","A1AEF1",244,0)
 .  S A1AER=^A1AE(A1AEFILE,A1AEPIEN,"P",A1AERSS,0) ; JLI 150525 changed 11005 to A1AEFILE
"RTN","A1AEF1",245,0)
 .  S A1AERTNM=$P(A1AER,"^"),A1AEPLST=$P(A1AER,"^",3)
"RTN","A1AEF1",246,0)
 .  S PTCHARR(A1AERTNM,"P",A1AEPIEN,A1AERSS)=A1AEPLST
"RTN","A1AEF1",247,0)
 .  S PTCHARR(A1AERTNM,"ACTIVE")=$T(+2^@A1AERTNM)
"RTN","A1AEF1",248,0)
 ;
"RTN","A1AEF1",249,0)
 ; 2. Get array of patches for each routine active in system
"RTN","A1AEF1",250,0)
 ;
"RTN","A1AEF1",251,0)
 N CNT,RTN,TMPARR,RTNARR
"RTN","A1AEF1",252,0)
 S CNT=0,RTN=""
"RTN","A1AEF1",253,0)
P2 F  S RTN=$O(PTCHARR(RTN)) Q:RTN=""  D
"RTN","A1AEF1",254,0)
 .  D PTC4RTN^A1AEF1(RTN,.TMPARR) M RTNARR(RTN)=TMPARR
"RTN","A1AEF1",255,0)
 K PTCHARR M PTCHARR=RTNARR
"RTN","A1AEF1",256,0)
 Q
"RTN","A1AEF1",257,0)
 ;
"RTN","A1AEF1",258,0)
 ;
"RTN","A1AEF1",259,0)
 ; Required patch list name in KIDS considering patch stream of
"RTN","A1AEF1",260,0)
 ;   developer's site
"RTN","A1AEF1",261,0)
 ; Logic
"RTN","A1AEF1",262,0)
 ;   1. Enter with BMARR array of all BUILDS under
"RTN","A1AEF1",263,0)
 ;      consideration
"RTN","A1AEF1",264,0)
 ;   2. Get Patch Stream for this developer from 11007.1
"RTN","A1AEF1",265,0)
 ;   3. Look up each build in DHCP PATCHES 11005 file
"RTN","A1AEF1",266,0)
 ;   4. If found, remove array node if Stream wrong
"RTN","A1AEF1",267,0)
 ;   5. Return list of BUILDS matching developer's Stream
"RTN","A1AEF1",268,0)
 ; Example
"RTN","A1AEF1",269,0)
 ;   SD*5.3*70 would have had 5 entries in REQUIRED BUILDS
"RTN","A1AEF1",270,0)
 ;      and returned a BARR array with 9 as a few more
"RTN","A1AEF1",271,0)
 ;      were found with the REQB function
"RTN","A1AEF1",272,0)
 ;      All are VISTA BUILDS.  Unfortunately none are
"RTN","A1AEF1",273,0)
 ;       in 11005
"RTN","A1AEF1",274,0)
 ;   However, I added SD*5.3*10504 as an additional REQB
"RTN","A1AEF1",275,0)
 ;      Now when I run REQB^A1AEF1
"RTN","A1AEF1",276,0)
 ;      I am returned 213 nodes in array as 10504 is
"RTN","A1AEF1",277,0)
 ;      an OSEHRA build based on SD*5.3*504.  All,except
"RTN","A1AEF1",278,0)
 ;      one of these SD*5.3*10504 is missing in 11005.
"RTN","A1AEF1",279,0)
 ;      However, with this logic, they would have been
"RTN","A1AEF1",280,0)
 ;      deleted anyway as they would be listed as VISTA
"RTN","A1AEF1",281,0)
 ;      stream (PRIMARY set to 1 for FOIA VISTA
"RTN","A1AEF1",282,0)
 ;   So, now to test the splitting off of REQUIRED BUILDS
"RTN","A1AEF1",283,0)
 ;      (and the associated patches in 11005), I will
"RTN","A1AEF1",284,0)
 ;      remove all BUILD nodes in the original array that do
"RTN","A1AEF1",285,0)
 ;      not have corresponding OSEHRA patches in 11005
"RTN","A1AEF1",286,0)
 ;
"RTN","A1AEF1",287,0)
 ; ENTER
"RTN","A1AEF1",288,0)
 ;    BUILD   =  Parent build
"RTN","A1AEF1",289,0)
 ;    BARR    =  Array of builds under consideration
"RTN","A1AEF1",290,0)
 ;    MR      =  Indicator for whether the array of builds
"RTN","A1AEF1",291,0)
 ;               represents
"RTN","A1AEF1",292,0)
 ;                 "R" builds from the parents REQB multiple
"RTN","A1AEF1",293,0)
 ;                 "M" builds from the parents MULB multiple
"RTN","A1AEF1",294,0)
 ;                 "" unknown
"RTN","A1AEF1",295,0)
 ; EXIT
"RTN","A1AEF1",296,0)
 ;    BARR    =  Array of builds belonging to user's site's
"RTN","A1AEF1",297,0)
 ;               patch stream.  
"RTN","A1AEF1",298,0)
 ;               MR = "" all builds filtered for stream
"RTN","A1AEF1",299,0)
 ;               MR = "R" filtered list minus REQB entries
"RTN","A1AEF1",300,0)
 ;               MR = "M" filtered list minus MULB entries
"RTN","A1AEF1",301,0)
PTC4KIDS(BUILD,BARR,MR) ; Filter build's REQB and MULB for patch stream
"RTN","A1AEF1",302,0)
 ; PTSTRM will be 0,1,or 10001
"RTN","A1AEF1",303,0)
 N PTSTRM S PTSTRM=$O(^A1AE(11007.1,"APRIM",1,0))
"RTN","A1AEF1",304,0)
 ;W !,"PTSTRM=",PTSTRM
"RTN","A1AEF1",305,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEF1",306,0)
 N PDIEN
"RTN","A1AEF1",307,0)
 S NODE=$NA(BARR(" ")) F  S NODE=$Q(@NODE) Q:NODE'["BARR"  D
"RTN","A1AEF1",308,0)
 . S PD=$QS(NODE,1)
"RTN","A1AEF1",309,0)
 . I MR?1"R" D
"RTN","A1AEF1",310,0)
 .. ; Remove BARR node if = BUILD, or already in Required Builds
"RTN","A1AEF1",311,0)
 .. I (PD=BUILD) K @NODE
"RTN","A1AEF1",312,0)
 .. I $D(^XPD(9.6,BIEN,"REQB","B",PD)) K @NODE
"RTN","A1AEF1",313,0)
 . I MR?1"M" D
"RTN","A1AEF1",314,0)
 .. ; Remove BARR node if = BUILD, or already in Multiple Builds
"RTN","A1AEF1",315,0)
 .. I (PD=BUILD) K @NODE
"RTN","A1AEF1",316,0)
 .. I $D(^XPD(9.6,BIEN,10,"B",PD)) K @NODE
"RTN","A1AEF1",317,0)
 .; correct for builds with ".0" in version
"RTN","A1AEF1",318,0)
 . I $P(PD,"*",2)?.NP1"0" D
"RTN","A1AEF1",319,0)
 .. S PD=$P(PD,"*")_"*"_$P($P(PD,"*",2),".")_"*"_$P(PD,"*",3)
"RTN","A1AEF1",320,0)
 .; If BUILD does not have corresponding entryDHCP PATCHES file,
"RTN","A1AEF1",321,0)
 .;   then delete this node from incoming array
"RTN","A1AEF1",322,0)
 . N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEF1",323,0)
 . S PDIEN=$O(^A1AE(A1AEFILE,"B",PD,0)) ; JLI 150525
"RTN","A1AEF1",324,0)
 .; Local change to increase returned list size
"RTN","A1AEF1",325,0)
 . I 'PDIEN K @NODE Q
"RTN","A1AEF1",326,0)
 . I $$GET1^DIQ(A1AEFILE,PDIEN_",",.2,"I")'=PTSTRM K @NODE ; JLI 150525
"RTN","A1AEF1",327,0)
 Q
"RTN","A1AEF1",328,0)
 ;
"RTN","A1AEF1",329,0)
 ;
"RTN","A1AEF1",330,0)
 ; Filter incoming array to include only names found
"RTN","A1AEF1",331,0)
 ;  in the DHCP PATCHES file AND which are assigned
"RTN","A1AEF1",332,0)
 ;  the same stream as in use at this site.
"RTN","A1AEF1",333,0)
 ; May be used to filter BUILD, INSTALL, or PATCH names
"RTN","A1AEF1",334,0)
 ; ENTER
"RTN","A1AEF1",335,0)
 ;   BARR  =  array by reference. BUILDS, INSTALLS, or PATCHES
"RTN","A1AEF1",336,0)
 ; RETURN
"RTN","A1AEF1",337,0)
 ;   BARR  =  array filtered for names found in 
"RTN","A1AEF1",338,0)
 ;            DHCP PATCHES [#11005] and correct patch stream
"RTN","A1AEF1",339,0)
PTCSTRM(BARR) ; Filter build array to match site's patch stream
"RTN","A1AEF1",340,0)
 ; PTSTRM will be 0,1,or 10001
"RTN","A1AEF1",341,0)
 N PTSTRM S PTSTRM=$O(^A1AE(11007.1,"APRIM",1,0))
"RTN","A1AEF1",342,0)
 S NODE=$NA(BARR(" ")) F  S NODE=$Q(@NODE) Q:NODE'["BARR"  D
"RTN","A1AEF1",343,0)
 . S PD=$QS(NODE,1)
"RTN","A1AEF1",344,0)
 .; correct for builds with ".0" in version
"RTN","A1AEF1",345,0)
 . I $P(PD,"*",2)?.NP1"0" D
"RTN","A1AEF1",346,0)
 .. S PD=$P(PD,"*")_"*"_$P($P(PD,"*",2),".")_"*"_$P(PD,"*",3)
"RTN","A1AEF1",347,0)
 . N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEF1",348,0)
 . S PDIEN=$O(^A1AE(A1AEFILE,"B",PD,0)) ; JLI 150525 changed 11005 to A1AEFILE
"RTN","A1AEF1",349,0)
 . I 'PDIEN K @NODE Q
"RTN","A1AEF1",350,0)
 .; Must match patch stream
"RTN","A1AEF1",351,0)
 . I $$GET1^DIQ(A1AEFILE,PDIEN_",",.2,"I")'=PTSTRM K @NODE ; JLI 150525 changed 11005 to A1AEFILE
"RTN","A1AEF1",352,0)
 Q
"RTN","A1AEF1",353,0)
 ;
"RTN","A1AEF1",354,0)
 ; Given a parent BUILD, and an array of other BUILD names,
"RTN","A1AEF1",355,0)
 ;   Update the PAT multiple of the parent BUILD [#9.6]
"RTN","A1AEF1",356,0)
 ;   and any corresponding INSTALLs [#9.7]
"RTN","A1AEF1",357,0)
 ; ENTER
"RTN","A1AEF1",358,0)
 ;    BUILD  =  parent build under scrutiny
"RTN","A1AEF1",359,0)
 ;    BARR   =  array of BUILD NAMES passed by reference
"RTN","A1AEF1",360,0)
 ; RETURN
"RTN","A1AEF1",361,0)
 ;    BUILD's PAT multiple updated
"RTN","A1AEF1",362,0)
UPDPAT(BUILD,BARR) ; Update PAT multiple of a build
"RTN","A1AEF1",363,0)
 S KIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'KIEN
"RTN","A1AEF1",364,0)
 S NODE=$NA(BARR(" ")) F  S NODE=$Q(@NODE) Q:NODE'["BARR"  D
"RTN","A1AEF1",365,0)
 . S PD=$QS(NODE,1)
"RTN","A1AEF1",366,0)
 .; Update BUILDS (and any corresponding INSTALL) PAT multiple
"RTN","A1AEF1",367,0)
 . D UPDPAT1(PD,KIEN)
"RTN","A1AEF1",368,0)
 Q
"RTN","A1AEF1",369,0)
 ; Load PAT multiples
"RTN","A1AEF1",370,0)
 ; Looks in DHCP PATCHES [#11005] for Patch Designation
"RTN","A1AEF1",371,0)
 ;   matching the BUILD name (PD)
"RTN","A1AEF1",372,0)
 ;   If found, the patch is entered in the primary BUILD
"RTN","A1AEF1",373,0)
 ;             primary BUILD's PAT [#19] multiple 
"RTN","A1AEF1",374,0)
 ;               and into
"RTN","A1AEF1",375,0)
 ;             all corresponding INSTALLS' PAT [#19] multiple
"RTN","A1AEF1",376,0)
 ; ENTER
"RTN","A1AEF1",377,0)
 ;   PD    =  Patch Designation to lookup in 11005
"RTN","A1AEF1",378,0)
 ;              (same name as build now under review)
"RTN","A1AEF1",379,0)
 ;   KIEN  =  IEN of primary Build in which PAT is being built
"RTN","A1AEF1",380,0)
 ; RETURN
"RTN","A1AEF1",381,0)
 ;   BUILD (and INSTALLS) updated
"RTN","A1AEF1",382,0)
 ; Variables
"RTN","A1AEF1",383,0)
 ;   A1AEPI  =  IEN of Patch matching name of PD
"RTN","A1AEF1",384,0)
 ;   IIEN    =  IEN of INSTALLS(s) matching KIEN entry
"RTN","A1AEF1",385,0)
UPDPAT1(PD,KIEN) ; Add a patch entry to the PAT multiple of a build
"RTN","A1AEF1",386,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEF1",387,0)
 S A1AEPI=$O(^A1AE(A1AEFILE,"B",PD,0))
"RTN","A1AEF1",388,0)
 ; If no match, try dropping the ".0"
"RTN","A1AEF1",389,0)
 I 'A1AEPI,$P(PD,"*",2)?.NP1"0" D
"RTN","A1AEF1",390,0)
 .  N PD0 S PD0=$P(PD,"*")_"*"_$P($P(PD,"*",2),".")_"*"_$P(PD,"*",3)
"RTN","A1AEF1",391,0)
 .  S A1AEPI=$O(^A1AE(A1AEFILE,"B",PD0,0)) ; JLI 150525
"RTN","A1AEF1",392,0)
 Q:'A1AEPI
"RTN","A1AEF1",393,0)
 ; Update BUILD and entry PAT multiple
"RTN","A1AEF1",394,0)
 D UPDPAT2(KIEN,A1AEPI,9.619)
"RTN","A1AEF1",395,0)
 ; Update this and all similar named INSTALL entries PAT multiple
"RTN","A1AEF1",396,0)
 N IIEN S IIEN=$O(^XPD(9.7,"B",$P(^XPD(9.6,KIEN,0),"^"),0))
"RTN","A1AEF1",397,0)
 I IIEN D
"RTN","A1AEF1",398,0)
 . N PMI S PMI=$P(^XPD(9.7,IIEN,0),"^")
"RTN","A1AEF1",399,0)
 . N INODE S INODE=$NA(^XPD(9.7,"B",PMI))
"RTN","A1AEF1",400,0)
 . F  S INODE=$Q(@INODE) Q:$QS(INODE,3)'[PMI  D
"RTN","A1AEF1",401,0)
 .. S IIEN=$QS(INODE,4) D UPDPAT2(IIEN,A1AEPI,9.719)
"RTN","A1AEF1",402,0)
 Q
"RTN","A1AEF1",403,0)
 ; Update PAT multiple in BUILD/INSTALL entry
"RTN","A1AEF1",404,0)
 ; ENTER
"RTN","A1AEF1",405,0)
 ;     A1AEKI  =  IEN of BUILD [#9.6] or INSTALL [#9.7]
"RTN","A1AEF1",406,0)
 ;     A1AEPI  =  IEN of PATCH into 11005
"RTN","A1AEF1",407,0)
 ;     KFILE   =  file to update
"RTN","A1AEF1",408,0)
 ;                9.619 for BUILDs, 9.719 for INSTALLs
"RTN","A1AEF1",409,0)
 ; RETURN
"RTN","A1AEF1",410,0)
 ;     BUILD / INSTALL entry PAT multiple updated
"RTN","A1AEF1",411,0)
UPDPAT2(A1AEKI,A1AEPI,KFILE) ; Update a single PAT entry in a build
"RTN","A1AEF1",412,0)
 ;W !,"A1AEKI=",A1AEKI," A1AEPI=",A1AEPI," KFILE=",KFILE
"RTN","A1AEF1",413,0)
 N FDA,DIERR
"RTN","A1AEF1",414,0)
 S FDA(3,KFILE,"?+1,"_A1AEKI_",",.01)=A1AEPI
"RTN","A1AEF1",415,0)
 N NODE S NODE=$NA(FDA),NODE=$Q(@NODE) ;W !,NODE,"=",@NODE
"RTN","A1AEF1",416,0)
 D UPDATE^DIE("","FDA(3)","")
"RTN","A1AEF1",417,0)
 Q
"RTN","A1AEF1",418,0)
 ;
"RTN","A1AEF1",419,0)
 ; ENTER
"RTN","A1AEF1",420,0)
 ;    STR   =  String to set to upper case
"RTN","A1AEF1",421,0)
 ; RETURN
"RTN","A1AEF1",422,0)
 ;    STR   =  all uppercase
"RTN","A1AEF1",423,0)
UP(STR) ; Return string as all uppercase
"RTN","A1AEF1",424,0)
 Q $TR(STR,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","A1AEF1",425,0)
 ;
"RTN","A1AEF1",426,0)
 ;
"RTN","A1AEF1",427,0)
 ; Remove old versions
"RTN","A1AEF1",428,0)
 ; ENTER
"RTN","A1AEF1",429,0)
 ;     BARR  =  array of BUILD names passed by reference
"RTN","A1AEF1",430,0)
 ; RETURN
"RTN","A1AEF1",431,0)
 ;     BARR  =  array with BUILDS after removing those
"RTN","A1AEF1",432,0)
 ;              not representing current package versions.
"RTN","A1AEF1",433,0)
REMOB(BARR) ; Remove non-current pkg builds from array
"RTN","A1AEF1",434,0)
 Q:'$D(BARR)
"RTN","A1AEF1",435,0)
 N TMP
"RTN","A1AEF1",436,0)
 S NODE=$NA(BARR(" "))
"RTN","A1AEF1",437,0)
 F  S NODE=$Q(@NODE) Q:NODE'["BARR("  D
"RTN","A1AEF1",438,0)
 . I $$BACTV($QS(NODE,1)) S TMP($QS(NODE,1))=""
"RTN","A1AEF1",439,0)
 K BARR M BARR=TMP
"RTN","A1AEF1",440,0)
 Q
"RTN","A1AEF1",441,0)
 ; Check BUILD for its association with a current
"RTN","A1AEF1",442,0)
 ;   package version
"RTN","A1AEF1",443,0)
 ; Note PACKAGE [#9.4] and BUILD [#9.6] maintain the
"RTN","A1AEF1",444,0)
 ;  decimal node of a version even when 0
"RTN","A1AEF1",445,0)
 ; ENTER
"RTN","A1AEF1",446,0)
 ;  BUILD   =  NAME of BUILD
"RTN","A1AEF1",447,0)
 ; RETURN
"RTN","A1AEF1",448,0)
 ;  1 for active version, 0 for older version member
"RTN","A1AEF1",449,0)
BACTV(BUILD) ; Check build represents current package version
"RTN","A1AEF1",450,0)
 Q:BUILD="" 0
"RTN","A1AEF1",451,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0))
"RTN","A1AEF1",452,0)
 ;N PKGIEN S PKGIEN=$$GET1^DIQ(9.6,BIEN_",",1,"I") Q:'PKGIEN 0
"RTN","A1AEF1",453,0)
 N PKGIEN
"RTN","A1AEF1",454,0)
 I BIEN S PKGIEN=$$GET1^DIQ(9.6,BIEN_",",1,"I")
"RTN","A1AEF1",455,0)
 E  S PKGIEN=$O(^DIC(9.4,"C",$P(BUILD,"*"),0))
"RTN","A1AEF1",456,0)
 Q:'PKGIEN 0
"RTN","A1AEF1",457,0)
 N ACTVER S ACTVER=$$GET1^DIQ(9.4,PKGIEN_",",13)
"RTN","A1AEF1",458,0)
 ; Regular case where build has x*y*z structure
"RTN","A1AEF1",459,0)
 I $L(BUILD,"*")=3,+$P(BUILD,"*",2)=+ACTVER Q 1
"RTN","A1AEF1",460,0)
 ; Case where build has "X Y Z 1.0" style
"RTN","A1AEF1",461,0)
 I +$P(BUILD," ",$L(BUILD," "))=+ACTVER Q 1
"RTN","A1AEF1",462,0)
 Q 0
"RTN","A1AEF1",463,0)
 ;
"RTN","A1AEF1",464,0)
 ;
"RTN","A1AEF1",465,0)
EOR ; end of routine A1AEF1
"RTN","A1AEF2")
0^68^B13458985
"RTN","A1AEF2",1,0)
A1AEF2 ;ven/lgc-functions minimum set ;2015-05-24T00:25
"RTN","A1AEF2",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEF2",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEF2",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEF2",5,0)
 ;
"RTN","A1AEF2",6,0)
 ;
"RTN","A1AEF2",7,0)
 ;primary change history
"RTN","A1AEF2",8,0)
 ;2014-09-17: version 2.4 released
"RTN","A1AEF2",9,0)
 ;
"RTN","A1AEF2",10,0)
 ;
"RTN","A1AEF2",11,0)
 ; CHANGE 9/18/2014 BUILD=" " rather than BUILD=""
"RTN","A1AEF2",12,0)
 ;   to account for modification of REQB to double array
"RTN","A1AEF2",13,0)
 ;
"RTN","A1AEF2",14,0)
 ; Bring in array of builds and delete those that
"RTN","A1AEF2",15,0)
 ;   have more recent duplicates of all their
"RTN","A1AEF2",16,0)
 ;   contained components
"RTN","A1AEF2",17,0)
 ;
"RTN","A1AEF2",18,0)
 ;
"RTN","A1AEF2",19,0)
 ;ENTER
"RTN","A1AEF2",20,0)
 ;   BARR    = Array of BUILDS
"RTN","A1AEF2",21,0)
 ;EXIT
"RTN","A1AEF2",22,0)
 ;   MINSET  = Array of BUILDS representing a
"RTN","A1AEF2",23,0)
 ;             minimum set from BARR
"RTN","A1AEF2",24,0)
 ;NOTE: Assume we will keep all BUILDS with
"RTN","A1AEF2",25,0)
 ;          New or modified files
"RTN","A1AEF2",26,0)
 ;          Unique Components
"RTN","A1AEF2",27,0)
 ;          Most recently installed of duplicates
"RTN","A1AEF2",28,0)
 ;NOTE: Removing 
"RTN","A1AEF2",29,0)
 ;          BUILDS not belonging to the user's site's stream
"RTN","A1AEF2",30,0)
 ;            determined by checking corresponding PATCHES[#11005]
"RTN","A1AEF2",31,0)
 ;          BUILDS not representing current package versions
"RTN","A1AEF2",32,0)
 ;   
"RTN","A1AEF2",33,0)
 ;^XPD(9.6,BIEN,4,FILE#)=FILE#           FILES
"RTN","A1AEF2",34,0)
 ;^XPD(9.6,BIEN,"KRN","B",.4,CI) =       PRINT TEMPLATES
"RTN","A1AEF2",35,0)
 ;^XPD(9.6,BIEN,"KRN","B",.401,CI) =     SORT TEMPLATES
"RTN","A1AEF2",36,0)
 ;^XPD(9.6,BIEN,"KRN","B",.402,CI) =     INPUT TEMPLATES
"RTN","A1AEF2",37,0)
 ;^XPD(9.6,BIEN,"KRN","B",.403,CI) =     FORMS
"RTN","A1AEF2",38,0)
 ;^XPD(9.6,BIEN,"KRN","B",.5,CI) =       FUNCTIONS
"RTN","A1AEF2",39,0)
 ;^XPD(9.6,BIEN,"KRN","B",.84,CI) =      DIALOG
"RTN","A1AEF2",40,0)
 ;^XPD(9.6,BIEN,"KRN","B",3.6,CI) =      BULLETINS
"RTN","A1AEF2",41,0)
 ;^XPD(9.6,BIEN,"KRN","B",9.2,CI) =      HELP FRAME
"RTN","A1AEF2",42,0)
 ;^XPD(9.6,BIEN,"KRN","B",9.8,CI) =      ROUTINES
"RTN","A1AEF2",43,0)
 ;^XPD(9.6,BIEN,"KRN","B",19,CI) =       OPTIONS
"RTN","A1AEF2",44,0)
 ;^XPD(9.6,BIEN,"KRN","B",19.1,CI) =     SECURITY KEYS
"RTN","A1AEF2",45,0)
 ;^XPD(9.6,BIEN,"KRN","B",101,CI) =      PROTOCOL
"RTN","A1AEF2",46,0)
 ;^XPD(9.6,BIEN,"KRN","B",409.61,CI) =   LIST TEMPLATE
"RTN","A1AEF2",47,0)
 ;^XPD(9.6,BIEN,"KRN","B",8994,CI) =     REMOTE PROCEDURE
"RTN","A1AEF2",48,0)
 ;
"RTN","A1AEF2",49,0)
MINSET(BARR) ; Reduce array of builds to minimum set
"RTN","A1AEF2",50,0)
 ; Build ^XTMP(COMPONENT,DTINSTALLED,BUILD)
"RTN","A1AEF2",51,0)
 K ^XTMP($J)
"RTN","A1AEF2",52,0)
 N BUILD,BIEN,DTINS
"RTN","A1AEF2",53,0)
 ; CHANGE 9/18/2014 BUILD=" " rather than BUILD=""
"RTN","A1AEF2",54,0)
 ;   to account for modification of REQB to double array
"RTN","A1AEF2",55,0)
 S BUILD=" "
"RTN","A1AEF2",56,0)
 F  S BUILD=$O(BARR(BUILD)) Q:BUILD=""  D
"RTN","A1AEF2",57,0)
 . S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEF2",58,0)
 . S DTINS=$$DTINS(BUILD) ; Get Install DT Inverse
"RTN","A1AEF2",59,0)
 . D LOADXTMP(BUILD,BIEN,DTINS) ; Load ^XTMP($J
"RTN","A1AEF2",60,0)
 ;
"RTN","A1AEF2",61,0)
 ; Now build the minimum set with ^XTMP entries
"RTN","A1AEF2",62,0)
 D BLDMS ; Builds new MINSET array
"RTN","A1AEF2",63,0)
 ;
"RTN","A1AEF2",64,0)
 ; Display array size reduction
"RTN","A1AEF2",65,0)
 N BLD,CNT S CNT=0,BUILD=" "
"RTN","A1AEF2",66,0)
 F  S BUILD=$O(BARR(BUILD)) Q:BUILD=""  S CNT=CNT+1
"RTN","A1AEF2",67,0)
 W:$G(CNT) !,"Original REQB array CNT=",CNT
"RTN","A1AEF2",68,0)
 S CNT=0,BLD=" "
"RTN","A1AEF2",69,0)
 F  S BLD=$O(MINSET(BLD)) Q:BLD=""  S CNT=CNT+1
"RTN","A1AEF2",70,0)
 W:$G(CNT) !,"Minimum Set of necessary BUILDS=",CNT,!
"RTN","A1AEF2",71,0)
 ;K ^XTMP($J)
"RTN","A1AEF2",72,0)
 Q
"RTN","A1AEF2",73,0)
 ;
"RTN","A1AEF2",74,0)
 ; Load ^XTMP($J nodes with all components found 
"RTN","A1AEF2",75,0)
 ;   in this build
"RTN","A1AEF2",76,0)
 ; ENTER
"RTN","A1AEF2",77,0)
 ;    BUILD   =  BUILD name (used to identify ^XTMP node)
"RTN","A1AEF2",78,0)
 ;    BIEN    =  BUILD IEN into 9.6
"RTN","A1AEF2",79,0)
 ;    DTINS   =  Inverse Date build install completed
"RTN","A1AEF2",80,0)
 ; RETURN
"RTN","A1AEF2",81,0)
 ;    ^XTMP($J with all components/files in BUILD
"RTN","A1AEF2",82,0)
LOADXTMP(BUILD,BIEN,DTINS) ; Load ^XTMP with all build components
"RTN","A1AEF2",83,0)
 ;W !,"BUILD=",$G(BUILD)," BIEN=",$G(BIEN)," DTINS=",$G(DTINS)
"RTN","A1AEF2",84,0)
 N NODE,STOPNODE
"RTN","A1AEF2",85,0)
 S NODE=$NA(^XPD(9.6,BIEN)),STOPNODE=$P(NODE,")")
"RTN","A1AEF2",86,0)
 F  S NODE=$Q(@NODE) Q:NODE'[STOPNODE  D
"RTN","A1AEF2",87,0)
 .; If a file
"RTN","A1AEF2",88,0)
 . I $QS(NODE,3)=4,$QS(NODE,4)>0,$QS(NODE,4)=+@NODE D  Q
"RTN","A1AEF2",89,0)
 .. S ^XTMP($J,$QS(NODE,3),$QS(NODE,4),DTINS,BUILD,BIEN)=""
"RTN","A1AEF2",90,0)
 .; If not a file, but another component
"RTN","A1AEF2",91,0)
 . I $QS(NODE,3)="KRN",$QS(NODE,5)="NM",$QS(NODE,6)="B" D
"RTN","A1AEF2",92,0)
 .. S ^XTMP($J,$QS(NODE,4),$QS(NODE,7),DTINS,BUILD,BIEN)=""
"RTN","A1AEF2",93,0)
 Q
"RTN","A1AEF2",94,0)
 ;
"RTN","A1AEF2",95,0)
 ; Returns INVERSE Date/Time the build last installed
"RTN","A1AEF2",96,0)
 ;   remembering there may be multiple installs
"RTN","A1AEF2",97,0)
 ; ENTER
"RTN","A1AEF2",98,0)
 ;    BUILD  =  BUILD name
"RTN","A1AEF2",99,0)
 ; RETURNS
"RTN","A1AEF2",100,0)
 ;    INVERSE Date/Time of most recent install
"RTN","A1AEF2",101,0)
DTINS(BUILD) ; Return inverse date/time of build's most recent install
"RTN","A1AEF2",102,0)
 N NODE,IIEN
"RTN","A1AEF2",103,0)
 S IIEN=$O(^XPD(9.7,"B",BUILD,0)) Q:'IIEN 0 D
"RTN","A1AEF2",104,0)
 . S NODE=$NA(^XPD(9.7,"B",BUILD))
"RTN","A1AEF2",105,0)
 N DTINS S DTINS=0
"RTN","A1AEF2",106,0)
 F  S NODE=$Q(@NODE) Q:($QS(NODE,3)'=BUILD)  D
"RTN","A1AEF2",107,0)
 . I $$GET1^DIQ(9.7,$QS(NODE,4)_",",17,"I")>DTINS D
"RTN","A1AEF2",108,0)
 .. S DTINS=$$GET1^DIQ(9.7,$QS(NODE,4)_",",17,"I")
"RTN","A1AEF2",109,0)
 Q 9999999.999999-DTINS
"RTN","A1AEF2",110,0)
 ;
"RTN","A1AEF2",111,0)
 ; BUILD MINIMAL SET
"RTN","A1AEF2",112,0)
 ; Logic - run down ^XTMP array and with each unique
"RTN","A1AEF2",113,0)
 ;         entry idenfied by next entry not match
"RTN","A1AEF2",114,0)
 ;         through subscript 3 save BUILD.  The 4th
"RTN","A1AEF2",115,0)
 ;         subscript of install date/time removes
"RTN","A1AEF2",116,0)
 ;         duplicates
"RTN","A1AEF2",117,0)
 ; NOTE: In each ^XTMP($J node
"RTN","A1AEF2",118,0)
 ;      Subscript     Contains
"RTN","A1AEF2",119,0)
 ;       1            $J
"RTN","A1AEF2",120,0)
 ;       2            type of component (CMP)
"RTN","A1AEF2",121,0)
 ;       3            component identifier (CID)
"RTN","A1AEF2",122,0)
 ;       4            INVERSE install date/time
"RTN","A1AEF2",123,0)
 ;       5            BUILD
"RTN","A1AEF2",124,0)
 ;       6            BUILD IEN in file 9.6
"RTN","A1AEF2",125,0)
 ; Could right out file 
"RTN","A1AEF2",126,0)
 ; Type of Component ,Component ID, ISTALL DATE, BUILD
"RTN","A1AEF2",127,0)
 ; ENTER
"RTN","A1AEF2",128,0)
 ;   ^XTMP($J nodes set
"RTN","A1AEF2",129,0)
 ; RETURNS
"RTN","A1AEF2",130,0)
 ;   MINSET array 
"RTN","A1AEF2",131,0)
BLDMS ; Reduce component array in ^XTMP to minimal set
"RTN","A1AEF2",132,0)
 K MINSET
"RTN","A1AEF2",133,0)
 N NODE S NODE=$NA(^XTMP($J))
"RTN","A1AEF2",134,0)
 N CMP,CID S (CMP,CID)=""
"RTN","A1AEF2",135,0)
 F  S NODE=$Q(@NODE) Q:NODE=""  Q:($QS(NODE,1)'[$J)  D
"RTN","A1AEF2",136,0)
 .; Keep every build with file components
"RTN","A1AEF2",137,0)
 . I $QS(NODE,2)=4 S MINSET($QS(NODE,5))="" Q
"RTN","A1AEF2",138,0)
 .; Quit if this is the same component and 
"RTN","A1AEF2",139,0)
 .;   component description we have seen before
"RTN","A1AEF2",140,0)
 .;   INVERSE DT (like lab) puts recent on top
"RTN","A1AEF2",141,0)
 . I $QS(NODE,2)=CMP,$QS(NODE,3)=CID Q
"RTN","A1AEF2",142,0)
 . S CMP=$QS(NODE,2),CID=$QS(NODE,3)
"RTN","A1AEF2",143,0)
 . S MINSET($QS(NODE,5))=""
"RTN","A1AEF2",144,0)
 ;W !,"$J = ",$J,!
"RTN","A1AEF2",145,0)
 Q
"RTN","A1AEF2",146,0)
 ;  
"RTN","A1AEF2",147,0)
 ;
"RTN","A1AEF2",148,0)
 ; Example entry
"RTN","A1AEF2",149,0)
 ;^XPD(9.6,42,"KRN",0) = ^9.67PA^8994^14
"RTN","A1AEF2",150,0)
 ;^XPD(9.6,42,"KRN",.4,0) = .4
"RTN","A1AEF2",151,0)
 ;^XPD(9.6,42,"KRN",.401,0) = .401
"RTN","A1AEF2",152,0)
 ;^XPD(9.6,42,"KRN",.402,0) = .402
"RTN","A1AEF2",153,0)
 ;^XPD(9.6,42,"KRN",.402,"NM",0) = ^9.68A^1^1
"RTN","A1AEF2",154,0)
 ;^XPD(9.6,42,"KRN",.402,"NM",1,0) = PRCHSITE    FILE #411^411^0
"RTN","A1AEF2",155,0)
 ;^XPD(9.6,42,"KRN",.402,"NM","B","PRCHSITE    FILE #411",1) =
"RTN","A1AEF2",156,0)
 ;^XPD(9.6,42,"KRN",.403,0) = .403
"RTN","A1AEF2",157,0)
 ;^XPD(9.6,42,"KRN",.5,0) = .5
"RTN","A1AEF2",158,0)
 ;^XPD(9.6,42,"KRN",.84,0) = .84
"RTN","A1AEF2",159,0)
 ;^XPD(9.6,42,"KRN",3.6,0) = 3.6
"RTN","A1AEF2",160,0)
 ;^XPD(9.6,42,"KRN",3.6,"NM",0) = ^9.68A^^
"RTN","A1AEF2",161,0)
 ;^XPD(9.6,42,"KRN",9.2,0) = 9.2
"RTN","A1AEF2",162,0)
 ;^XPD(9.6,42,"KRN",9.8,0) = 9.8
"RTN","A1AEF2",163,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM",0) = ^9.68A^10^10
"RTN","A1AEF2",164,0)
 ;
"RTN","A1AEF2",165,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM",1,0) = PRCFQ1^^0^B6725362
"RTN","A1AEF2",166,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM",2,0) = PRCHE1^^0^B7002603
"RTN","A1AEF2",167,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM",3,0) = PRCHE1A^^0^B1284140
"RTN","A1AEF2",168,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM",4,0) = PRCHNPO^^0^B26343386
"RTN","A1AEF2",169,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM",5,0) = PRCORV^^0^B28872321
"RTN","A1AEF2",170,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM",6,0) = PRCORV1^^0^B19406806
"RTN","A1AEF2",171,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM",7,0) = PRCOVRQ^^0^B18290984
"RTN","A1AEF2",172,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM",8,0) = PRCOVRQ1^^0^B15086643
"RTN","A1AEF2",173,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM",9,0) = PRCFAC3^^0^B18041749
"RTN","A1AEF2",174,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM",10,0) = PRCOVTST^^0^B6119184
"RTN","A1AEF2",175,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM","B","PRCFAC3",9) =
"RTN","A1AEF2",176,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM","B","PRCFQ1",1) =
"RTN","A1AEF2",177,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM","B","PRCHE1",2) =
"RTN","A1AEF2",178,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM","B","PRCHE1A",3) =
"RTN","A1AEF2",179,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM","B","PRCHNPO",4) =
"RTN","A1AEF2",180,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM","B","PRCORV",5) =
"RTN","A1AEF2",181,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM","B","PRCORV1",6) =
"RTN","A1AEF2",182,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM","B","PRCOVRQ",7) =
"RTN","A1AEF2",183,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM","B","PRCOVRQ1",8) =
"RTN","A1AEF2",184,0)
 ;^XPD(9.6,42,"KRN",9.8,"NM","B","PRCOVTST",10) =
"RTN","A1AEF2",185,0)
 ;^XPD(9.6,42,"KRN",19,0) = 19
"RTN","A1AEF2",186,0)
 ;^XPD(9.6,42,"KRN",19,"NM",0) = ^9.68A^8^8
"RTN","A1AEF2",187,0)
 ;^XPD(9.6,42,"KRN",19,"NM",1,0) = PRCF MASTER^^3
"RTN","A1AEF2",188,0)
 ;^XPD(9.6,42,"KRN",19,"NM",2,0) = PRCFA ACCTG TECH^^3
"RTN","A1AEF2",189,0)
 ;^XPD(9.6,42,"KRN",19,"NM",3,0) = PRCFA UTILITY^^3
"RTN","A1AEF2",190,0)
 ;^XPD(9.6,42,"KRN",19,"NM",4,0) = PRCO VRQ REVIEW^^0
"RTN","A1AEF2",191,0)
 ;^XPD(9.6,42,"KRN",19,"NM",5,0) = PRCB MASTER^^3
"RTN","A1AEF2",192,0)
 ;^XPD(9.6,42,"KRN",19,"NM",6,0) = PRCFD ACCTG PAYMENT MENU^^3
"RTN","A1AEF2",193,0)
 ;^XPD(9.6,42,"KRN",19,"NM",7,0) = PRCFA DOCUMENT PROCESSING^^3
"RTN","A1AEF2",194,0)
 ;^XPD(9.6,42,"KRN",19,"NM",8,0) = PRCFD PAYMENTS MENU^^3
"RTN","A1AEF2",195,0)
 ;^XPD(9.6,42,"KRN",19,"NM","B","PRCB MASTER",5) =
"RTN","A1AEF2",196,0)
 ;^XPD(9.6,42,"KRN",19,"NM","B","PRCF MASTER",1) =
"RTN","A1AEF2",197,0)
 ;^XPD(9.6,42,"KRN",19,"NM","B","PRCFA ACCTG TECH",2) =
"RTN","A1AEF2",198,0)
 ;^XPD(9.6,42,"KRN",19,"NM","B","PRCFA DOCUMENT PROCESSING",7) =
"RTN","A1AEF2",199,0)
 ;^XPD(9.6,42,"KRN",19,"NM","B","PRCFA UTILITY",3) =
"RTN","A1AEF2",200,0)
 ;^XPD(9.6,42,"KRN",19,"NM","B","PRCFD ACCTG PAYMENT MENU",6) =
"RTN","A1AEF2",201,0)
 ;^XPD(9.6,42,"KRN",19,"NM","B","PRCFD PAYMENTS MENU",8) =
"RTN","A1AEF2",202,0)
 ;^XPD(9.6,42,"KRN",19,"NM","B","PRCO VRQ REVIEW",4) =
"RTN","A1AEF2",203,0)
 ;^XPD(9.6,42,"KRN",19.1,0) = 19.1
"RTN","A1AEF2",204,0)
 ;^XPD(9.6,42,"KRN",101,0) = 101
"RTN","A1AEF2",205,0)
 ;^XPD(9.6,42,"KRN",101,"NM",0) = ^9.68A^6^6
"RTN","A1AEF2",206,0)
 ;^XPD(9.6,42,"KRN",101,"NM",1,0) = PRCO DELETE VRQ^^0
"RTN","A1AEF2",207,0)
 ;^XPD(9.6,42,"KRN",101,"NM",2,0) = PRCO EDIT VENDOR ENTRY^^0
"RTN","A1AEF2",208,0)
 ;^XPD(9.6,42,"KRN",101,"NM",3,0) = PRCO REVIEW ENTRY^^0
"RTN","A1AEF2",209,0)
 ;^XPD(9.6,42,"KRN",101,"NM",4,0) = PRCO SEND VRQ^^0
"RTN","A1AEF2",210,0)
 ;^XPD(9.6,42,"KRN",101,"NM",5,0) = PRCO VENDOR REVIEW^^0
"RTN","A1AEF2",211,0)
 ;^XPD(9.6,42,"KRN",101,"NM",6,0) = PRCO PRINT ENTRY^^0
"RTN","A1AEF2",212,0)
 ;^XPD(9.6,42,"KRN",101,"NM","B","PRCO DELETE VRQ",1) =
"RTN","A1AEF2",213,0)
 ;^XPD(9.6,42,"KRN",101,"NM","B","PRCO EDIT VENDOR ENTRY",2) =
"RTN","A1AEF2",214,0)
 ;^XPD(9.6,42,"KRN",101,"NM","B","PRCO PRINT ENTRY",6) =
"RTN","A1AEF2",215,0)
 ;^XPD(9.6,42,"KRN",101,"NM","B","PRCO REVIEW ENTRY",3) =
"RTN","A1AEF2",216,0)
 ;^XPD(9.6,42,"KRN",101,"NM","B","PRCO SEND VRQ",4) =
"RTN","A1AEF2",217,0)
 ;^XPD(9.6,42,"KRN",101,"NM","B","PRCO VENDOR REVIEW",5) =
"RTN","A1AEF2",218,0)
 ;^XPD(9.6,42,"KRN",409.61,0) = 409.61
"RTN","A1AEF2",219,0)
 ;^XPD(9.6,42,"KRN",409.61,"NM",0) = ^9.68A^1^1
"RTN","A1AEF2",220,0)
 ;^XPD(9.6,42,"KRN",409.61,"NM",1,0) = PRCO VENDOR REVIEW^^0
"RTN","A1AEF2",221,0)
 ;^XPD(9.6,42,"KRN",409.61,"NM","B","PRCO VENDOR REVIEW",1) =
"RTN","A1AEF2",222,0)
 ;^XPD(9.6,42,"KRN",8994,0) = 8994
"RTN","A1AEF2",223,0)
 ;^XPD(9.6,42,"KRN",8994,"NM",0) = ^9.68A^^
"RTN","A1AEF2",224,0)
 ;
"RTN","A1AEF2",225,0)
 ;
"RTN","A1AEF2",226,0)
EOR ; end of routine A1AEF2
"RTN","A1AEF3")
0^69^B91532031
"RTN","A1AEF3",1,0)
A1AEF3 ;ven/lgc-find all prerequisite/member builds ; 2015-05-15T00:26
"RTN","A1AEF3",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEF3",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEF3",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEF3",5,0)
 ;
"RTN","A1AEF3",6,0)
 ;
"RTN","A1AEF3",7,0)
 ;primary change history
"RTN","A1AEF3",8,0)
 ;2014-09-11: version 2.4 released
"RTN","A1AEF3",9,0)
 ;
"RTN","A1AEF3",10,0)
 ;
"RTN","A1AEF3",11,0)
 ; Option for developer to 
"RTN","A1AEF3",12,0)
 ;  1. Use recursive search to identify any additional
"RTN","A1AEF3",13,0)
 ;     member [MULB] or prerequisite [REQB] builds dependent
"RTN","A1AEF3",14,0)
 ;     in the array of each already existing in parent
"RTN","A1AEF3",15,0)
 ;     build in request
"RTN","A1AEF3",16,0)
 ;     D MULB^A1AEF1  D REQB^A1AEF1
"RTN","A1AEF3",17,0)
 ;  2. Remove any builds not belonging to active version of
"RTN","A1AEF3",18,0)
 ;     corresponding package
"RTN","A1AEF3",19,0)
 ;     D REMOB^A1AEF1
"RTN","A1AEF3",20,0)
 ;  3. Reduce array of builds to those that install components
"RTN","A1AEF3",21,0)
 ;     not replaced by subsequent build installs
"RTN","A1AEF3",22,0)
 ;     D MINSET^A1AEF2
"RTN","A1AEF3",23,0)
 ;  4. Replace nodes needed to display inheritance
"RTN","A1AEF3",24,0)
 ;     D LOADINH
"RTN","A1AEF3",25,0)
 ;  5. Ask if user wishes to see display of builds identified
"RTN","A1AEF3",26,0)
 ;     $$DISPL
"RTN","A1AEF3",27,0)
 ;  6. Ask if user wishes to add to the parent build
"RTN","A1AEF3",28,0)
 ;     a. all the builds identified in steps 1-2 above
"RTN","A1AEF3",29,0)
 ;     b. just the minimal set identified
"RTN","A1AEF3",30,0)
 ;     c. none of those extra builds identified
"RTN","A1AEF3",31,0)
 ;     $$KEEP
"RTN","A1AEF3",32,0)
 ;  7. If developer asks to add builds, update
"RTN","A1AEF3",33,0)
 ;     $$UPDBLD
"RTN","A1AEF3",34,0)
 ;  8. Ask if user wishes to pull in BUILDS Derived from
"RTN","A1AEF3",35,0)
 ;     the existing Pre-requisite and Member entries
"RTN","A1AEF3",36,0)
 ;     in this BUILD
"RTN","A1AEF3",37,0)
 ;     $$UPDDERQ
"RTN","A1AEF3",38,0)
 ;  9. If derived builds requested, pull in these builds
"RTN","A1AEF3",39,0)
 ;     OTHSTRM^A1AEF4
"RTN","A1AEF3",40,0)
 ;  10. Ask if user wishes to update PAT multiples in BUILD
"RTN","A1AEF3",41,0)
 ;     and associated INSTALLs
"RTN","A1AEF3",42,0)
 ;     $$UPDPATQ
"RTN","A1AEF3",43,0)
 ;  11. If instructed to do so, Update the PAT multiples
"RTN","A1AEF3",44,0)
 ;     UPPAT(BUILD)
"RTN","A1AEF3",45,0)
 ;
"RTN","A1AEF3",46,0)
 ;ENTER:
"RTN","A1AEF3",47,0)
 ;   BUILD   =  Name of parent build in question
"RTN","A1AEF3",48,0)
 ;EXIT
"RTN","A1AEF3",49,0)
 ;   BARR    =  Array of REQUIRED BUILDS to add to the
"RTN","A1AEF3",50,0)
 ;               parent after developer filtered those
"RTN","A1AEF3",51,0)
 ;               found by PTC4KIDS above
"RTN","A1AEF3",52,0)
 ;
"RTN","A1AEF3",53,0)
SELBLDS(BUILD) ; Evaluate build for all related REQB & MULB builds
"RTN","A1AEF3",54,0)
 N ERR,POO,RTN S ERR=0,RTN=$T(+0)
"RTN","A1AEF3",55,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) I 'BIEN D  Q
"RTN","A1AEF3",56,0)
 . D BLDTXTA("TXT1",.POO,1)
"RTN","A1AEF3",57,0)
 D BLDTXTA("TXT2",.POO,1)
"RTN","A1AEF3",58,0)
 ;
"RTN","A1AEF3",59,0)
 ;
"RTN","A1AEF3",60,0)
 ; --- MULTIPLE BUILDS
"RTN","A1AEF3",61,0)
 ; Check to see if parent build has members --- MULTIPLE BUILDS"
"RTN","A1AEF3",62,0)
 ;
"RTN","A1AEF3",63,0)
 N MB,OARR,UPD
"RTN","A1AEF3",64,0)
 D MULB^A1AEF1(BUILD,.MB)
"RTN","A1AEF3",65,0)
 ; Save original array from MULB call so we are able
"RTN","A1AEF3",66,0)
 ;  to add back lineage later
"RTN","A1AEF3",67,0)
 M OARR=MB
"RTN","A1AEF3",68,0)
 ;
"RTN","A1AEF3",69,0)
 I $G(MB(0))<2 D
"RTN","A1AEF3",70,0)
 . D BLDTXTA("TXT3",.POO,1)
"RTN","A1AEF3",71,0)
 . H 2
"RTN","A1AEF3",72,0)
 E  D
"RTN","A1AEF3",73,0)
 . N MB0 S MB0=$G(MB(0))
"RTN","A1AEF3",74,0)
 . D BLDTXTA("TXT4",.POO,1)
"RTN","A1AEF3",75,0)
 . D REMOB^A1AEF1(.MB)
"RTN","A1AEF3",76,0)
 . N NODE,CNT S CNT=0,NODE=$NA(MB(" "))
"RTN","A1AEF3",77,0)
 . F  S NODE=$Q(@NODE) Q:NODE'["MB("  S CNT=CNT+1
"RTN","A1AEF3",78,0)
 . D BLDTXTA("TXT5",.POO,1)
"RTN","A1AEF3",79,0)
 . N MINSET D MINSET^A1AEF2(.MB)
"RTN","A1AEF3",80,0)
 . D LOADINH(.MB,.OARR) ; Replace inheritance indicators
"RTN","A1AEF3",81,0)
 . D:$$DISPL DSPNODES(.MB)
"RTN","A1AEF3",82,0)
 .; KEEP returns 1=ignore , 2=keep all, 3=keep minimu, 0=ignore
"RTN","A1AEF3",83,0)
 . S UPD=$$KEEP("M") I UPD>1 D
"RTN","A1AEF3",84,0)
 .. N UPDTXT S UPDTXT=$S(UPD=2:"ALL",UPD=3:"MINIMUM",1:"")
"RTN","A1AEF3",85,0)
 .. D BLDTXTA("TXT6",.POO,1)
"RTN","A1AEF3",86,0)
 .. S ERR=$$UPDBLD(BUILD,.OARR,.MB,"M",UPD)
"RTN","A1AEF3",87,0)
 ;
"RTN","A1AEF3",88,0)
 ;Fall into PREREQUISITE [REQB] 
"RTN","A1AEF3",89,0)
 ; ---- REQUIRED BUILDS
"RTN","A1AEF3",90,0)
 D BLDTXTA("TXT7",.POO,1)
"RTN","A1AEF3",91,0)
 ; Check is this is parent with prerequisites [REQB]
"RTN","A1AEF3",92,0)
 K OARR
"RTN","A1AEF3",93,0)
 N REQB
"RTN","A1AEF3",94,0)
 D REQB^A1AEF1(BUILD,.REQB)
"RTN","A1AEF3",95,0)
 M OARR=REQB
"RTN","A1AEF3",96,0)
 I $G(REQB(0))<2 D
"RTN","A1AEF3",97,0)
 . D BLDTXTA("TXT8",.POO,1)
"RTN","A1AEF3",98,0)
 . H 2
"RTN","A1AEF3",99,0)
 E  D
"RTN","A1AEF3",100,0)
 . N REQB0 S REQB0=$G(REQB(0))
"RTN","A1AEF3",101,0)
 . D BLDTXTA("TXT9",.POO,1)
"RTN","A1AEF3",102,0)
 . D REMOB^A1AEF1(.REQB)
"RTN","A1AEF3",103,0)
 . N NODE,CNT S CNT=0,NODE=$NA(REQB(" "))
"RTN","A1AEF3",104,0)
 . F  S NODE=$Q(@NODE) Q:NODE'["REQB("  S CNT=CNT+1
"RTN","A1AEF3",105,0)
 . D BLDTXTA("TXT10",.POO,1)
"RTN","A1AEF3",106,0)
 . N MINSET D MINSET^A1AEF2(.REQB)
"RTN","A1AEF3",107,0)
 . D LOADINH(.REQB,.OARR) ; Replace inheritance indicators
"RTN","A1AEF3",108,0)
 . D:$$DISPL DSPNODES(.REQB)
"RTN","A1AEF3",109,0)
 .; KEEP returns 1=ignore , 2=keep all, 3=keep minimu, 0=ignore
"RTN","A1AEF3",110,0)
 . S UPD=$$KEEP("R") I UPD>1 D
"RTN","A1AEF3",111,0)
 .. N UPDTXT S UPDTXT=$S(UPD=2:"ALL",UPD=3:"MINIMUM",1:"")
"RTN","A1AEF3",112,0)
 .. D BLDTXTA("TXT11",.POO,1)
"RTN","A1AEF3",113,0)
 .. S ERR=$$UPDBLD(BUILD,.OARR,.REQB,"R",UPD)
"RTN","A1AEF3",114,0)
 ;
"RTN","A1AEF3",115,0)
 ; Update REQB and MULB multiples with patches derived for
"RTN","A1AEF3",116,0)
 ;  other streams
"RTN","A1AEF3",117,0)
 I $$UPDDERQ D
"RTN","A1AEF3",118,0)
 . D BLDTXTA("TXT12",.POO,1)
"RTN","A1AEF3",119,0)
 . S X=$$OTHSTRM^A1AEF4(BUILD)
"RTN","A1AEF3",120,0)
 ;
"RTN","A1AEF3",121,0)
 ; Update PAT multiple with patches corresponding to entries
"RTN","A1AEF3",122,0)
 ;  in the REQB and MULB multiples
"RTN","A1AEF3",123,0)
 ; Updates PAT multiple of all corresponding INSTALLs as well
"RTN","A1AEF3",124,0)
 I $$UPDPATQ(BUILD) D
"RTN","A1AEF3",125,0)
 . D BLDTXTA("TXT13",.POO,1)
"RTN","A1AEF3",126,0)
 . D UPPAT(BUILD)
"RTN","A1AEF3",127,0)
 Q
"RTN","A1AEF3",128,0)
 ;
"RTN","A1AEF3",129,0)
 ;
"RTN","A1AEF3",130,0)
 ; Ask developer if they wish to display the array
"RTN","A1AEF3",131,0)
 ; ENTER
"RTN","A1AEF3",132,0)
 ;    nothing required
"RTN","A1AEF3",133,0)
 ; RETURNS
"RTN","A1AEF3",134,0)
 ;    1 = Display, 2 = DO NOT display, 0 = DO NOT display
"RTN","A1AEF3",135,0)
DISPL() ; Ask whether to display array
"RTN","A1AEF3",136,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","A1AEF3",137,0)
 S DIR(0)="SO^1:Display All;2:Do Not Disp"
"RTN","A1AEF3",138,0)
 S DIR("L",1)="Select one of the following:"
"RTN","A1AEF3",139,0)
 S DIR("L",2)=""
"RTN","A1AEF3",140,0)
 S DIR("L",3)="1. Display Patch Relationships"
"RTN","A1AEF3",141,0)
 S DIR("L",4)="   Minimum set indicated by <<<"
"RTN","A1AEF3",142,0)
 S DIR("L")="2. No Display desired"
"RTN","A1AEF3",143,0)
 D ^DIR
"RTN","A1AEF3",144,0)
 Q +$G(Y)
"RTN","A1AEF3",145,0)
 ;
"RTN","A1AEF3",146,0)
 ; Ask developer how they wish to proceed
"RTN","A1AEF3",147,0)
 ; ENTER
"RTN","A1AEF3",148,0)
 ;   MR  = "M" or "R"
"RTN","A1AEF3",149,0)
 ; RETURN
"RTN","A1AEF3",150,0)
 ;   1 = ignore builds found, 2 = keep all, 3 = keep minimum set
"RTN","A1AEF3",151,0)
 ;   0 = didn't answer
"RTN","A1AEF3",152,0)
KEEP(RM) ; Ask how to proceed
"RTN","A1AEF3",153,0)
 I 'RM?1"R",'RM?1"M" Q 0
"RTN","A1AEF3",154,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","A1AEF3",155,0)
 S DIR(0)="SO^1:Ignore;2:Keep all identified;3:Keep only minimum set"
"RTN","A1AEF3",156,0)
 S DIR("L",1)="Select one of the following:"
"RTN","A1AEF3",157,0)
 S DIR("L",2)=""
"RTN","A1AEF3",158,0)
 I RM?1"M" D
"RTN","A1AEF3",159,0)
 . S DIR("L",3)="1. Ignore all additional member builds identified"
"RTN","A1AEF3",160,0)
 . S DIR("L",4)="2. Keep all additional member builds identified"
"RTN","A1AEF3",161,0)
 I RM?1"R" D
"RTN","A1AEF3",162,0)
 . S DIR("L",3)="1. Ignore all additional prerequisites identified"
"RTN","A1AEF3",163,0)
 . S DIR("L",4)="2. Keep all additional prerequiites identified"
"RTN","A1AEF3",164,0)
 S DIR("L")="3. Keep only Minimum Set "
"RTN","A1AEF3",165,0)
 D ^DIR
"RTN","A1AEF3",166,0)
 Q +$G(Y)
"RTN","A1AEF3",167,0)
 ;
"RTN","A1AEF3",168,0)
 ;
"RTN","A1AEF3",169,0)
 ; Ask whether to update the BUILDS 
"RTN","A1AEF3",170,0)
 ; ENTER
"RTN","A1AEF3",171,0)
 ;   BUILD = name of BUILD to potentially update
"RTN","A1AEF3",172,0)
 ; RETURN
"RTN","A1AEF3",173,0)
 ;   1 = update BUILDS multiple, 0 = do NOT update BUILDS multiple
"RTN","A1AEF3",174,0)
UPDBLDQ(BUILD) ; Ask whether to update builds
"RTN","A1AEF3",175,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","A1AEF3",176,0)
 S DIR(0)="Y"
"RTN","A1AEF3",177,0)
 S DIR("A")="Include selected builds in "_BUILD
"RTN","A1AEF3",178,0)
 S DIR("B")="N"
"RTN","A1AEF3",179,0)
 D ^DIR
"RTN","A1AEF3",180,0)
 Q +$G(Y)
"RTN","A1AEF3",181,0)
 ;
"RTN","A1AEF3",182,0)
 ;
"RTN","A1AEF3",183,0)
 ; Ask whether to bring in DERIVED BUILDS
"RTN","A1AEF3",184,0)
 ; ENTER
"RTN","A1AEF3",185,0)
 ;   BUILD = name of BUILD to potentially update
"RTN","A1AEF3",186,0)
 ; RETURN
"RTN","A1AEF3",187,0)
 ;   1 = update, 0 = do NOT update
"RTN","A1AEF3",188,0)
UPDDERQ() ; Ask whether to bring in other stream derived builds
"RTN","A1AEF3",189,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","A1AEF3",190,0)
 S DIR(0)="Y"
"RTN","A1AEF3",191,0)
 S DIR("A")="Bring in BUILDS derived for other stream(s)"
"RTN","A1AEF3",192,0)
 S DIR("B")="N"
"RTN","A1AEF3",193,0)
 D ^DIR
"RTN","A1AEF3",194,0)
 Q +$G(Y)
"RTN","A1AEF3",195,0)
 ;
"RTN","A1AEF3",196,0)
 ;
"RTN","A1AEF3",197,0)
 ; Ask whether to update the PAT multiple of BUILD and INSTALLS
"RTN","A1AEF3",198,0)
 ; ENTER
"RTN","A1AEF3",199,0)
 ;   BUILD = name of BUILD to potentially update
"RTN","A1AEF3",200,0)
 ; RETURN
"RTN","A1AEF3",201,0)
 ;   1 = update PAT multiple, 0 = do NOT update PAT multiple
"RTN","A1AEF3",202,0)
UPDPATQ(BUILD) ; Ask whether to update PAT multiples
"RTN","A1AEF3",203,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","A1AEF3",204,0)
 S DIR(0)="Y"
"RTN","A1AEF3",205,0)
 S DIR("A")="Update PATCH multiple of "_BUILD_" and its INSTALLS"
"RTN","A1AEF3",206,0)
 S DIR("B")="N"
"RTN","A1AEF3",207,0)
 D ^DIR
"RTN","A1AEF3",208,0)
 Q +$G(Y)
"RTN","A1AEF3",209,0)
 ;
"RTN","A1AEF3",210,0)
 ;
"RTN","A1AEF3",211,0)
 ; Ask developer if they wish to update the parent
"RTN","A1AEF3",212,0)
 ; ENTER
"RTN","A1AEF3",213,0)
 ;   BUILD     = PARENT BUILD under construction
"RTN","A1AEF3",214,0)
 ;   OARR      = Array of builds before minimal set calculated
"RTN","A1AEF3",215,0)
 ;   MARR      = Minimal set array of builds
"RTN","A1AEF3",216,0)
 ;   RM        = "M" for member [MULB] update
"RTN","A1AEF3",217,0)
 ;               "R" for prerequisite [REQB] update
"RTN","A1AEF3",218,0)
 ;   UPD       = instructions
"RTN","A1AEF3",219,0)
 ;                UPD = 2  Update with all BUILDS identified
"RTN","A1AEF3",220,0)
 ;                UPD = 3  Update with only Minimum Set
"RTN","A1AEF3",221,0)
 ; RETURN
"RTN","A1AEF3",222,0)
 ;   Parent build updated if directed to do so
"RTN","A1AEF3",223,0)
 ;   0 = error OR not request update,  1 = update successful
"RTN","A1AEF3",224,0)
UPDBLD(BUILD,OARR,REQB,RM,UPD) ; Ask if parent should be updated
"RTN","A1AEF3",225,0)
 N ERR S ERR=0
"RTN","A1AEF3",226,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0))
"RTN","A1AEF3",227,0)
 Q:'BIEN ERR
"RTN","A1AEF3",228,0)
 ; 
"RTN","A1AEF3",229,0)
 ; Asked to update either REQB or MULB multiple
"RTN","A1AEF3",230,0)
 N NODE S NODE=$S(UPD=2:$NA(OARR(" ")),UPD=3:$NA(REQB(" ")),1:"")
"RTN","A1AEF3",231,0)
 Q:NODE=""
"RTN","A1AEF3",232,0)
 N STOP S STOP=$P(NODE,"""")
"RTN","A1AEF3",233,0)
 N BLD2ADD
"RTN","A1AEF3",234,0)
 F  S NODE=$Q(@NODE) Q:NODE'[STOP  D  Q:'ERR
"RTN","A1AEF3",235,0)
 . S BLD2ADD=$QS(NODE,1)
"RTN","A1AEF3",236,0)
 . S ERR=$$ADBTORM^A1AEF1(BIEN,BLD2ADD,RM)
"RTN","A1AEF3",237,0)
 Q ERR
"RTN","A1AEF3",238,0)
 ;
"RTN","A1AEF3",239,0)
 ; Display and array with parental history indentation
"RTN","A1AEF3",240,0)
 ; ENTER
"RTN","A1AEF3",241,0)
 ;    DPLARR  =  Array of BUILDS with parental history
"RTN","A1AEF3",242,0)
 ;               identification
"RTN","A1AEF3",243,0)
 ;               e.g. 
"RTN","A1AEF3",244,0)
 ; RETURN
"RTN","A1AEF3",245,0)
 ;    No variables returned or modified
"RTN","A1AEF3",246,0)
DSPNODES(DPLARR) ; Display array of builds parental history
"RTN","A1AEF3",247,0)
 N CNT
"RTN","A1AEF3",248,0)
 N NODE S NODE=$NA(DPLARR(0,0))
"RTN","A1AEF3",249,0)
 F  S NODE=$Q(@NODE) Q:$QS(NODE,2)=""  D
"RTN","A1AEF3",250,0)
 .  W ! F CNT=1:1:@NODE W "."
"RTN","A1AEF3",251,0)
 .  W $QS(NODE,2)
"RTN","A1AEF3",252,0)
 .  I $D(MINSET($QS(NODE,2))) W " <<<"
"RTN","A1AEF3",253,0)
 Q
"RTN","A1AEF3",254,0)
 ;
"RTN","A1AEF3",255,0)
 ; Load inheritance nodes generated at the REQB or MULB 
"RTN","A1AEF3",256,0)
 ;   call in A1AEF1 before minimal set and patch stream
"RTN","A1AEF3",257,0)
 ;   subroutines pulled out unnecessary nodes
"RTN","A1AEF3",258,0)
 ; NOTE: the OARR array needed to be saved immediately
"RTN","A1AEF3",259,0)
 ;   following the REQB or MULB call
"RTN","A1AEF3",260,0)
 ; ENTER
"RTN","A1AEF3",261,0)
 ;   OARR    =  Original array from REQB or MULB in A1AEF1
"RTN","A1AEF3",262,0)
 ;   RARR    =  Reduced minimal set array
"RTN","A1AEF3",263,0)
 ; RETURN
"RTN","A1AEF3",264,0)
 ;   OARR    =  RARR with new RARR(n,PD)=numeric inheritance
"RTN","A1AEF3",265,0)
 ; e.g. ENTER
"RTN","A1AEF3",266,0)
 ;   ENTER
"RTN","A1AEF3",267,0)
 ;      RARR("DG*5.3*147")=""
"RTN","A1AEF3",268,0)
 ;      OARR("DG*5.3*147")=1863 and OARR(133,"DG*5.3*147")=14
"RTN","A1AEF3",269,0)
 ;   RETURN
"RTN","A1AEF3",270,0)
 ;      RARR("DG*5.3*147")="" and RARR(133,"DG*5.3*147")=14
"RTN","A1AEF3",271,0)
LOADINH(RARR,OARR) ; Load inheritance nodes generated for REQB and MULB
"RTN","A1AEF3",272,0)
 N NODE S NODE=$NA(OARR(0,0))
"RTN","A1AEF3",273,0)
 F  S NODE=$Q(@NODE) Q:NODE'["OARR("  Q:'$QS(NODE,1)  D
"RTN","A1AEF3",274,0)
 .  I $D(RARR($QS(NODE,2))) D
"RTN","A1AEF3",275,0)
 ..  S RARR($QS(NODE,1),$QS(NODE,2))=@NODE
"RTN","A1AEF3",276,0)
 Q
"RTN","A1AEF3",277,0)
 ;
"RTN","A1AEF3",278,0)
 ; Update PAT multiple. Must be done AFTER the steps
"RTN","A1AEF3",279,0)
 ;  above adding new member and new prerequisite builds
"RTN","A1AEF3",280,0)
 ;  as the entries in the REQB and MULB multiple of the
"RTN","A1AEF3",281,0)
 ;  indicated BUILD will be used to find all corresponding
"RTN","A1AEF3",282,0)
 ;  patches in the DHCP PATCHES [#11005] file and add
"RTN","A1AEF3",283,0)
 ;  to the PAT multiple of the BUILD as well as to
"RTN","A1AEF3",284,0)
 ;  the PAT multiple of all corresponsing INSTALLS
"RTN","A1AEF3",285,0)
 ;  NOTE: This build may have been installed more than
"RTN","A1AEF3",286,0)
 ;        once on this system
"RTN","A1AEF3",287,0)
 ; ENTER
"RTN","A1AEF3",288,0)
 ;    BUILD = Name of build to update
"RTN","A1AEF3",289,0)
 ; RETURN
"RTN","A1AEF3",290,0)
 ;    PAT multiple of BUILD, and INSTALLS
"RTN","A1AEF3",291,0)
 ;        filled with all PATCHES [#11005] associated
"RTN","A1AEF3",292,0)
 ;        with each entry in the REQB (prerequisite) and
"RTN","A1AEF3",293,0)
 ;        MULB (member) multiple
"RTN","A1AEF3",294,0)
UPPAT(BUILD) ; Update build's PAT multiple
"RTN","A1AEF3",295,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) ; do we have an IEN?
"RTN","A1AEF3",296,0)
 Q:'BIEN
"RTN","A1AEF3",297,0)
 D UPDPAT1^A1AEF1(BUILD,.BIEN) ; add to PAT multipe of primary entry
"RTN","A1AEF3",298,0)
 ;
"RTN","A1AEF3",299,0)
 ; Run through all member builds (MULB) and add those to
"RTN","A1AEF3",300,0)
 ;   the PATCH multiple of the parent BUILD
"RTN","A1AEF3",301,0)
 N PD S PD=""
"RTN","A1AEF3",302,0)
 F  S PD=$O(^XPD(9.6,BIEN,10,"B",PD)) Q:PD=""  D
"RTN","A1AEF3",303,0)
 . D UPDPAT1^A1AEF1(PD,.BIEN)
"RTN","A1AEF3",304,0)
 ;
"RTN","A1AEF3",305,0)
 ; Run through all prerequisite builds (REQB) and add those to
"RTN","A1AEF3",306,0)
 ;   the PATCH multiple of the parent BUILD
"RTN","A1AEF3",307,0)
 S PD=""
"RTN","A1AEF3",308,0)
 F  S PD=$O(^XPD(9.6,BIEN,"REQB","B",PD)) Q:PD=""  D
"RTN","A1AEF3",309,0)
 . D UPDPAT1^A1AEF1(PD,.BIEN)
"RTN","A1AEF3",310,0)
 Q
"RTN","A1AEF3",311,0)
 ;
"RTN","A1AEF3",312,0)
 ; Build TXT array and write to screen
"RTN","A1AEF3",313,0)
 ; ENTER
"RTN","A1AEF3",314,0)
 ;     TLBL   = Label for $T information
"RTN","A1AEF3",315,0)
 ;     TXTAR  = Array by reference
"RTN","A1AEF3",316,0)
 ;     WTOIO  = Toggle for write to IO
"RTN","A1AEF3",317,0)
 ;              0 - do now write out array
"RTN","A1AEF3",318,0)
 ;              1 - write out array to IO
"RTN","A1AEF3",319,0)
 ; EXIT
"RTN","A1AEF3",320,0)
 ;     TXTAR  = Array of information
"RTN","A1AEF3",321,0)
BLDTXTA(TLBL,TXTAR,WTOIO) ; Build TXT array and write to screen
"RTN","A1AEF3",322,0)
 Q:'($E($T(@TLBL),1,$L(TLBL))=TLBL)
"RTN","A1AEF3",323,0)
 S WTOIO=$S(+$G(WTOIO)=0:0,1:1)
"RTN","A1AEF3",324,0)
 K TXTAR
"RTN","A1AEF3",325,0)
 N TXT,CNT S CNT=0
"RTN","A1AEF3",326,0)
 F  S TXT=$P($T(@TLBL+CNT),";;",2) Q:TXT["*END*"  D
"RTN","A1AEF3",327,0)
 . S CNT=CNT+1
"RTN","A1AEF3",328,0)
 . I '$L($P(TXT,"^",2)) D  Q
"RTN","A1AEF3",329,0)
 ..  S TXTAR(CNT)=TXT
"RTN","A1AEF3",330,0)
 . S TXT=$P(TXT,"^",2) D  Q
"RTN","A1AEF3",331,0)
 .. I '($D(@TXT)#2) D  Q  ; JLI 150524 modified to check variable at top level from '$D(@TXT)
"RTN","A1AEF3",332,0)
 ... S TXTAR(CNT)="MISSING VAR:"_TXT Q
"RTN","A1AEF3",333,0)
 .. E  D  Q
"RTN","A1AEF3",334,0)
 ... S TXTAR(CNT)=@TXT
"RTN","A1AEF3",335,0)
 Q:'WTOIO
"RTN","A1AEF3",336,0)
 S CNT=0
"RTN","A1AEF3",337,0)
 F  S CNT=$O(TXTAR(CNT)) Q:'CNT  D
"RTN","A1AEF3",338,0)
 .  I TXTAR(CNT)="" W ! Q
"RTN","A1AEF3",339,0)
 .  W TXTAR(CNT)
"RTN","A1AEF3",340,0)
 Q
"RTN","A1AEF3",341,0)
 ;
"RTN","A1AEF3",342,0)
TXT1 ;;
"RTN","A1AEF3",343,0)
 ;;Build:
"RTN","A1AEF3",344,0)
 ;;^BUILD
"RTN","A1AEF3",345,0)
 ;; Not found in BUILD [#9.6] file.
"RTN","A1AEF3",346,0)
 ;;*END*
"RTN","A1AEF3",347,0)
TXT2 ;;
"RTN","A1AEF3",348,0)
 ;;Parent BUILD under scrutiny :
"RTN","A1AEF3",349,0)
 ;;^BUILD
"RTN","A1AEF3",350,0)
 ;;*END*
"RTN","A1AEF3",351,0)
TXT3 ;;
"RTN","A1AEF3",352,0)
 ;;
"RTN","A1AEF3",353,0)
 ;;^BUILD
"RTN","A1AEF3",354,0)
 ;; has no members listed in MULB multiple.
"RTN","A1AEF3",355,0)
 ;;
"RTN","A1AEF3",356,0)
 ;;*END*
"RTN","A1AEF3",357,0)
TXT4 ;;
"RTN","A1AEF3",358,0)
 ;;
"RTN","A1AEF3",359,0)
 ;;BUILD
"RTN","A1AEF3",360,0)
 ;; has 
"RTN","A1AEF3",361,0)
 ;;^MB0
"RTN","A1AEF3",362,0)
 ;; members listed in MULB multiple.
"RTN","A1AEF3",363,0)
 ;;
"RTN","A1AEF3",364,0)
 ;;*END*
"RTN","A1AEF3",365,0)
TXT5 ;;
"RTN","A1AEF3",366,0)
 ;;
"RTN","A1AEF3",367,0)
 ;;Parent BUILD has
"RTN","A1AEF3",368,0)
 ;;^CNT
"RTN","A1AEF3",369,0)
 ;; members after removing
"RTN","A1AEF3",370,0)
 ;;  Builds representing old versions of packages
"RTN","A1AEF3",371,0)
 ;;
"RTN","A1AEF3",372,0)
 ;;*END*
"RTN","A1AEF3",373,0)
TXT6 ;;
"RTN","A1AEF3",374,0)
 ;;Adding
"RTN","A1AEF3",375,0)
 ;;^UPDTXT
"RTN","A1AEF3",376,0)
 ;; Builds.
"RTN","A1AEF3",377,0)
 ;;
"RTN","A1AEF3",378,0)
 ;;*END*
"RTN","A1AEF3",379,0)
TXT7 ;;
"RTN","A1AEF3",380,0)
 ;;
"RTN","A1AEF3",381,0)
 ;;*END*
"RTN","A1AEF3",382,0)
TXT8 ;;
"RTN","A1AEF3",383,0)
 ;;
"RTN","A1AEF3",384,0)
 ;;^BUILD
"RTN","A1AEF3",385,0)
 ;; has no members listed in REQB multiple.
"RTN","A1AEF3",386,0)
 ;;
"RTN","A1AEF3",387,0)
 ;;*END*
"RTN","A1AEF3",388,0)
TXT9 ;;
"RTN","A1AEF3",389,0)
 ;;
"RTN","A1AEF3",390,0)
 ;;Parent BUILD has 
"RTN","A1AEF3",391,0)
 ;;^REQB0
"RTN","A1AEF3",392,0)
 ;; prerequisites.
"RTN","A1AEF3",393,0)
 ;;
"RTN","A1AEF3",394,0)
 ;;*END*
"RTN","A1AEF3",395,0)
TXT10 ;;
"RTN","A1AEF3",396,0)
 ;;
"RTN","A1AEF3",397,0)
 ;;Parent BILD has 
"RTN","A1AEF3",398,0)
 ;;^CNT
"RTN","A1AEF3",399,0)
 ;; prerequisites after removing
"RTN","A1AEF3",400,0)
 ;;
"RTN","A1AEF3",401,0)
 ;; Builds representing old versions of packages.
"RTN","A1AEF3",402,0)
 ;;
"RTN","A1AEF3",403,0)
 ;;*END*
"RTN","A1AEF3",404,0)
TXT11 ;;
"RTN","A1AEF3",405,0)
 ;;Adding "
"RTN","A1AEF3",406,0)
 ;;^UPDTXT
"RTN","A1AEF3",407,0)
 ;; Builds.
"RTN","A1AEF3",408,0)
 ;;
"RTN","A1AEF3",409,0)
 ;;*END*
"RTN","A1AEF3",410,0)
TXT12 ;;
"RTN","A1AEF3",411,0)
 ;;
"RTN","A1AEF3",412,0)
 ;;Pulling in builds derived from from Pre-requisite and
"RTN","A1AEF3",413,0)
 ;;
"RTN","A1AEF3",414,0)
 ;; Member multiples for other streams.
"RTN","A1AEF3",415,0)
 ;;*END*
"RTN","A1AEF3",416,0)
TXT13 ;;
"RTN","A1AEF3",417,0)
 ;;Updating the PATCH multiple of
"RTN","A1AEF3",418,0)
 ;;^BUILD
"RTN","A1AEF3",419,0)
 ;; and
"RTN","A1AEF3",420,0)
 ;;
"RTN","A1AEF3",421,0)
 ;; corresponding INSTALLS.
"RTN","A1AEF3",422,0)
 ;;
"RTN","A1AEF3",423,0)
 ;;*END*
"RTN","A1AEF3",424,0)
 ;
"RTN","A1AEF3",425,0)
 ; UNIT TEST testing.  Do not modify TXTZ /lgc
"RTN","A1AEF3",426,0)
TXTZ ;;
"RTN","A1AEF3",427,0)
 ;;Testing BLDTXTA in A1AEF3 
"RTN","A1AEF3",428,0)
 ;;^BUILD
"RTN","A1AEF3",429,0)
 ;;Testing Testing Testing
"RTN","A1AEF3",430,0)
 ;;
"RTN","A1AEF3",431,0)
 ;; Testing
"RTN","A1AEF3",432,0)
 ;;
"RTN","A1AEF3",433,0)
 ;;*END*
"RTN","A1AEF3",434,0)
 ;
"RTN","A1AEF3",435,0)
EOR ; end of routine A1AEF3
"RTN","A1AEF4")
0^70^B4694624
"RTN","A1AEF4",1,0)
A1AEF4 ;ven/lgc-add required patches other streams ;2015-02-15T17:59
"RTN","A1AEF4",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEF4",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEF4",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEF4",5,0)
 ;
"RTN","A1AEF4",6,0)
 ;
"RTN","A1AEF4",7,0)
 ;primary change history
"RTN","A1AEF4",8,0)
 ;2014-09-11: version 2.4 released
"RTN","A1AEF4",9,0)
 ;
"RTN","A1AEF4",10,0)
 ;
"RTN","A1AEF4",11,0)
 ; Enter with BUILD name
"RTN","A1AEF4",12,0)
 ;  1. Add patches derived from for other stream
"RTN","A1AEF4",13,0)
 ;  2. Update PAT multiple
"RTN","A1AEF4",14,0)
 ;ENTER
"RTN","A1AEF4",15,0)
 ;   BUILD   =  Name of parent build in question
"RTN","A1AEF4",16,0)
 ;RETURN
"RTN","A1AEF4",17,0)
 ;   BUILD UPDATED
"RTN","A1AEF4",18,0)
 ;   0 = error,  1 = updated successfully
"RTN","A1AEF4",19,0)
OTHSTRM(BUILD) ; Add patches derived from other stream,update PAT
"RTN","A1AEF4",20,0)
 N NOERR S NOERR=1
"RTN","A1AEF4",21,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) I 'BIEN D  Q 0
"RTN","A1AEF4",22,0)
 . W !,"Build:"_BUILD_" Not found in BUILD [#9.6] file."
"RTN","A1AEF4",23,0)
 . W $C(7),!,!
"RTN","A1AEF4",24,0)
 ;
"RTN","A1AEF4",25,0)
 ; Add patches derived for other stream
"RTN","A1AEF4",26,0)
 ; Run through all REQB pre-requisites
"RTN","A1AEF4",27,0)
 N REQB S REQB=""
"RTN","A1AEF4",28,0)
 F  S REQB=$O(^XPD(9.6,BIEN,"REQB","B",REQB)) Q:REQB=""  D  Q:'NOERR
"RTN","A1AEF4",29,0)
 .  S PD=$$DERPTC(REQB) Q:PD=""
"RTN","A1AEF4",30,0)
 .  S NOERR=$$ADBTORM^A1AEF1(BIEN,PD,"R")
"RTN","A1AEF4",31,0)
 ; Run through all MULB member builds
"RTN","A1AEF4",32,0)
 N MULB S MULB=""
"RTN","A1AEF4",33,0)
 F  S MULB=$O(^XPD(9.6,BIEN,10,"B",MULB)) Q:MULB=""  D  Q:'NOERR
"RTN","A1AEF4",34,0)
 .  S PD=$$DERPTC(MULB) Q:PD=""
"RTN","A1AEF4",35,0)
 .  S ERR=$$ADBTORM^A1AEF1(BIEN,PD,"M")
"RTN","A1AEF4",36,0)
 ;
"RTN","A1AEF4",37,0)
 ; Update PAT multiple in parent build after adding
"RTN","A1AEF4",38,0)
 ;   new builds from other streams
"RTN","A1AEF4",39,0)
 N BARR S (REQB,MULB)=""
"RTN","A1AEF4",40,0)
 F  S REQB=$O(^XPD(9.6,BIEN,"REQB","B",REQB)) Q:REQB=""  D
"RTN","A1AEF4",41,0)
 . S BARR(REQB)=""
"RTN","A1AEF4",42,0)
 F  S MULB=$O(^XPD(9.6,BIEN,10,"B",MULB)) Q:MULB=""  D
"RTN","A1AEF4",43,0)
 . S BARR(MULB)=""
"RTN","A1AEF4",44,0)
 ; Ignore user's patch stream, just update all
"RTN","A1AEF4",45,0)
 D UPDPAT^A1AEF1(BUILD,.BARR)
"RTN","A1AEF4",46,0)
 Q:'NOERR 0  Q 1
"RTN","A1AEF4",47,0)
 ;
"RTN","A1AEF4",48,0)
 ; ENTER
"RTN","A1AEF4",49,0)
 ;    PD     =   PATCH DESIGNATION (BUILD NAME) from
"RTN","A1AEF4",50,0)
 ;               REQB or MULB multiple of parent build [BIEN]
"RTN","A1AEF4",51,0)
 ; RETURN
"RTN","A1AEF4",52,0)
 ;    NAME of patch derived from PD
"RTN","A1AEF4",53,0)
DERPTC(PD) ; Get name of patch derived from parent build
"RTN","A1AEF4",54,0)
 Q:PD="" PD
"RTN","A1AEF4",55,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEF4",56,0)
 N PATIEN S PATIEN=+$O(^A1AE(A1AEFILE,"ADERIVED",PD,0)) ; JLI 150525
"RTN","A1AEF4",57,0)
 Q:PATIEN $$GET1^DIQ(A1AEFILE,PATIEN_",",.01) ; JLI 150525
"RTN","A1AEF4",58,0)
 ;
"RTN","A1AEF4",59,0)
 ; Adjust PD where build version includes ".0" which is not
"RTN","A1AEF4",60,0)
 ;  allowed in DHCP PATCHES [#11005] file
"RTN","A1AEF4",61,0)
 I $P(PD,"*",2)'?.EP1"0" Q ""
"RTN","A1AEF4",62,0)
 S $P(PD,"*",2)=$P($P(PD,"*",2),".")
"RTN","A1AEF4",63,0)
 S PATIEN=+$O(^A1AE(A1AEFILE,"ADERIVED",PD,0)) ; JLI 150525
"RTN","A1AEF4",64,0)
 Q:'PATIEN ""
"RTN","A1AEF4",65,0)
 Q $$GET1^DIQ(A1AEFILE,PATIEN_",",.01) ; JLI 150525
"RTN","A1AEF4",66,0)
 ;
"RTN","A1AEF4",67,0)
 ;
"RTN","A1AEF4",68,0)
EOR ; end of routine A1AEF4
"RTN","A1AEF5")
0^71^B91418133
"RTN","A1AEF5",1,0)
A1AEF5 ;ven/lgc-find every related build ;2015-02-16T17:31
"RTN","A1AEF5",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEF5",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEF5",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEF5",5,0)
 ;
"RTN","A1AEF5",6,0)
 ;
"RTN","A1AEF5",7,0)
 ;primary change history
"RTN","A1AEF5",8,0)
 ;2014-11-28: version 2.4 released
"RTN","A1AEF5",9,0)
 ;
"RTN","A1AEF5",10,0)
 ;
"RTN","A1AEF5",11,0)
 ; Enter with BUILD name
"RTN","A1AEF5",12,0)
 ;   1. Save ^XTMP($J,PARENT BUILD,PARENT BUILD)=PARENTIEN
"RTN","A1AEF5",13,0)
 ;   1. Find all REQB for parent build
"RTN","A1AEF5",14,0)
 ;   2. Save in ^XTMP($J,PARENT BUILD,ASSOC BUILD)=ASBLDIEN
"RTN","A1AEF5",15,0)
 ;   3. Find all MULB for parent build
"RTN","A1AEF5",16,0)
 ;   4. Save in ^XTMP($J,PARENT BUILD,ASSOC BUILD)=ASBLDIEN
"RTN","A1AEF5",17,0)
 ;   5. Find all MULB for all REQB
"RTN","A1AEF5",18,0)
 ;
"RTN","A1AEF5",19,0)
 ;   6. Go through every build (PARENT and ASSOCIATE)
"RTN","A1AEF5",20,0)
 ;      a. Find all routines
"RTN","A1AEF5",21,0)
 ;         Save patches requred for this routine
"RTN","A1AEF5",22,0)
 ;            use  PTCRTNS^A1AEF1(A1AEPIEN,.PTCHARR) 
"RTN","A1AEF5",23,0)
 ;         ^XTMP($J,PARENT BUILD,ASSOCIATED BUILD,ROUTINE)=
"RTN","A1AEF5",24,0)
 ;            PATCH NAME
"RTN","A1AEF5",25,0)
 ;      b. Find every component in build
"RTN","A1AEF5",26,0)
 ;         Use LOADXTMP^A1AEF2(PARENT BUILD,ASSBIEN,DTINS)
"RTN","A1AEF5",27,0)
 ;            Note: this doesn't clear so can do repeatedly
"RTN","A1AEF5",28,0)
 ;                  for each build
"RTN","A1AEF5",29,0)
 ;      c. Run through every component and find every 
"RTN","A1AEF5",30,0)
 ;         build that contained this component or file
"RTN","A1AEF5",31,0)
 ;         add to ^XTMP($J,PARENT BUILD,ASSOC BUILD,COMPONENT)
"RTN","A1AEF5",32,0)
 ;
"RTN","A1AEF5",33,0)
 ;   7. Show totals for all builds associated and total
"RTN","A1AEF5",34,0)
 ;      number of ^XTMP($J nodes [indication of complexity
"RTN","A1AEF5",35,0)
 ;      of relationships.
"RTN","A1AEF5",36,0)
 ;      Include total blds associated and then reduced
"RTN","A1AEF5",37,0)
 ;      limited number of builds by removing all but
"RTN","A1AEF5",38,0)
 ;      leading build of non-related packages.
"RTN","A1AEF5",39,0)
 ;
"RTN","A1AEF5",40,0)
 ; ENTER
"RTN","A1AEF5",41,0)
 ;   BUILD  = Parent BUILD under scrutiny
"RTN","A1AEF5",42,0)
 ;   MSG    = 1:build MSGTXT
"RTN","A1AEF5",43,0)
 ;            0:print statistics to terminal
"RTN","A1AEF5",44,0)
 ; RETURN
"RTN","A1AEF5",45,0)
 ;   MSG    = 1:return MSGTXT as function
"RTN","A1AEF5",46,0)
 ;            0:return "" as function AND
"RTN","A1AEF5",47,0)
 ;              print full statistics with comments to terminal
"RTN","A1AEF5",48,0)
FNDALL(BUILD,MSG) ;
"RTN","A1AEF5",49,0)
 K ^XTMP($J)
"RTN","A1AEF5",50,0)
 S:'$G(MSG) MSG=0
"RTN","A1AEF5",51,0)
 N MSGTXT,REQB,MULB S (MSGTXT,REQB,MULB)=""
"RTN","A1AEF5",52,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEF5",53,0)
 S ^XTMP($J,BUILD,BUILD)=BIEN
"RTN","A1AEF5",54,0)
 W:'$G(MSG) !,"$J=",$J," BUILD being evaluated : ",BUILD
"RTN","A1AEF5",55,0)
 ;
"RTN","A1AEF5",56,0)
 I $G(MSG) D
"RTN","A1AEF5",57,0)
 . N CNT S CNT=0
"RTN","A1AEF5",58,0)
 . S (REQB,MULB)=""
"RTN","A1AEF5",59,0)
 . F  S REQB=$O(^XPD(9.6,BIEN,"REQB","B",REQB)) Q:REQB=""  D
"RTN","A1AEF5",60,0)
 .. S CNT=CNT+1
"RTN","A1AEF5",61,0)
 . S MSGTXT="REQB^"_CNT_"^",CNT=0
"RTN","A1AEF5",62,0)
 . F  S MULB=$O(^XPD(9.6,BIEN,10,"B",MULB)) Q:MULB=""  D
"RTN","A1AEF5",63,0)
 .. S CNT=CNT+1
"RTN","A1AEF5",64,0)
 . S MSGTXT=MSGTXT_"MULB^"_CNT_"^"
"RTN","A1AEF5",65,0)
 . S (REQB,MULB)=""
"RTN","A1AEF5",66,0)
 ;
"RTN","A1AEF5",67,0)
 ; Get recursive built array of all REQB and MULB
"RTN","A1AEF5",68,0)
 ;  for the parent build
"RTN","A1AEF5",69,0)
 D REQB^A1AEF1(BUILD,.REQB)
"RTN","A1AEF5",70,0)
 D MULB^A1AEF1(BUILD,.MULB)
"RTN","A1AEF5",71,0)
 S REQB=" " F  S REQB=$O(REQB(REQB)) Q:REQB=""  D
"RTN","A1AEF5",72,0)
 .  S ^XTMP($J,BUILD,REQB)=REQB(REQB)
"RTN","A1AEF5",73,0)
 S MULB=" " F  S MULB=$O(MULB(MULB)) Q:MULB=""  D
"RTN","A1AEF5",74,0)
 .  S ^XTMP($J,BUILD,MULB)=MULB(MULB)
"RTN","A1AEF5",75,0)
 ;
"RTN","A1AEF5",76,0)
 I '$G(MSG) D
"RTN","A1AEF5",77,0)
 . W !,"REQB and MULB run individually",!
"RTN","A1AEF5",78,0)
 . W !,!,"TOTAL NODES IN ^XTMP = ",$$CNTNODES
"RTN","A1AEF5",79,0)
 . W !,"TOTAL BUILDS ASSOCIATED = ",$$CNTBLDS
"RTN","A1AEF5",80,0)
 . W !,!
"RTN","A1AEF5",81,0)
 E  D
"RTN","A1AEF5",82,0)
 . N TOTRMR S TOTRMR=$$CNTBLDS
"RTN","A1AEF5",83,0)
 . S MSGTXT=MSGTXT_"TOTRMR^"_TOTRMR_"^"
"RTN","A1AEF5",84,0)
 ;
"RTN","A1AEF5",85,0)
 D FND1(BUILD,MSG,.MSGTXT)
"RTN","A1AEF5",86,0)
 D FND2(BUILD,MSG,.MSGTXT)
"RTN","A1AEF5",87,0)
 D FND3(BUILD,MSG,.MSGTXT)
"RTN","A1AEF5",88,0)
 D FND4(BUILD,MSG,.MSGTXT)
"RTN","A1AEF5",89,0)
 D FND5(BUILD,MSG,.MSGTXT)
"RTN","A1AEF5",90,0)
 Q:$G(MSG) BUILD_"^"_MSGTXT
"RTN","A1AEF5",91,0)
 Q
"RTN","A1AEF5",92,0)
 ;
"RTN","A1AEF5",93,0)
 ; Now we have checked for all REQB, but not for
"RTN","A1AEF5",94,0)
 ;  all MULT builds OF THE REQUIRED BUILDS
"RTN","A1AEF5",95,0)
 ; ENTER
"RTN","A1AEF5",96,0)
 ;    BUILD = name of PARENT build under inspection
"RTN","A1AEF5",97,0)
 ;    MSG   = 1:build MSGTXT
"RTN","A1AEF5",98,0)
 ;            0:print statistics to terminal
"RTN","A1AEF5",99,0)
 ;    ^XTMP($J,BUILD under construction
"RTN","A1AEF5",100,0)
 ; RETURN
"RTN","A1AEF5",101,0)
 ;    ^XTMP($J,BUILD updated
"RTN","A1AEF5",102,0)
FND1(BUILD,MSG,MSGTXT) ; Check REQB for MULB
"RTN","A1AEF5",103,0)
 N MULBTMP,BLD
"RTN","A1AEF5",104,0)
 S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEF5",105,0)
 . D MULB^A1AEF1(BLD,.MULB)
"RTN","A1AEF5",106,0)
 . M MULBTMP=MULB
"RTN","A1AEF5",107,0)
 ; Pull these into ^XTMP array
"RTN","A1AEF5",108,0)
 S MULB=" " F  S MULB=$O(MULBTMP(MULB)) Q:MULB=""  D
"RTN","A1AEF5",109,0)
 .  S ^XTMP($J,BUILD,MULB)=MULBTMP(MULB)
"RTN","A1AEF5",110,0)
 ; Now we have all the REQB and MULB for those builds
"RTN","A1AEF5",111,0)
 ;   entered into the PARENT BUILDS REQB and MULB fields
"RTN","A1AEF5",112,0)
 ;
"RTN","A1AEF5",113,0)
 I '$G(MSG) D
"RTN","A1AEF5",114,0)
 . W !,"Adding MULB of the REQB",!
"RTN","A1AEF5",115,0)
 . W !,!,"TOTAL NODES IN ^XTMP = ",$$CNTNODES
"RTN","A1AEF5",116,0)
 . W !,"TOTAL BUILDS ASSOCIATED = ",$$CNTBLDS
"RTN","A1AEF5",117,0)
 . W !,!
"RTN","A1AEF5",118,0)
 E  D
"RTN","A1AEF5",119,0)
 . N TOTRMRM S TOTRMRM=$$CNTBLDS
"RTN","A1AEF5",120,0)
 . S MSGTXT=MSGTXT_"TOTRMRM^"_TOTRMRM_"^"
"RTN","A1AEF5",121,0)
 Q
"RTN","A1AEF5",122,0)
 ;
"RTN","A1AEF5",123,0)
 ; Add PATCHES (BUILDS) required to build the second
"RTN","A1AEF5",124,0)
 ;   line of every routine contained in all builds
"RTN","A1AEF5",125,0)
 ; ENTER
"RTN","A1AEF5",126,0)
 ;    BUILD = name of PARENT build under inspection
"RTN","A1AEF5",127,0)
 ;    MSG   = 1:build MSGTXT
"RTN","A1AEF5",128,0)
 ;            0:print statistics to terminal
"RTN","A1AEF5",129,0)
 ;    ^XTMP($J,BUILD array under construction
"RTN","A1AEF5",130,0)
 ; RETURN
"RTN","A1AEF5",131,0)
 ;    ^XTMP($J,BUILD updated
"RTN","A1AEF5",132,0)
FND2(BUILD,MSG,MSGTXT) ; Add all patches to build routines
"RTN","A1AEF5",133,0)
 N BLD,RTNARR,RTNNM,PTCH,PTCHIEN,PTCHARR
"RTN","A1AEF5",134,0)
 S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEF5",135,0)
 . D RTNSINB(BLD,.RTNARR)
"RTN","A1AEF5",136,0)
 . S RTNNM="" F  S RTNNM=$O(RTNARR(RTNNM)) Q:RTNNM=""  D
"RTN","A1AEF5",137,0)
 .. D PTC4RTN^A1AEF1(RTNNM,.PTCHARR)
"RTN","A1AEF5",138,0)
 .. Q:'$D(PTCHARR)
"RTN","A1AEF5",139,0)
 .. S PTCH=" " F  S PTCH=$O(PTCHARR(PTCH)) Q:PTCH=""  D
"RTN","A1AEF5",140,0)
 ...; Fix patches integer and no .0
"RTN","A1AEF5",141,0)
 ... I $P(PTCH,"*",2)=$P($P(PTCH,"*",2),".") D
"RTN","A1AEF5",142,0)
 .... S $P(PTCH,"*",2)=$P(PTCH,"*",2)_".0"
"RTN","A1AEF5",143,0)
 ... S PTCHIEN=+$O(^XPD(9.6,"B",PTCH,0))
"RTN","A1AEF5",144,0)
 ... S ^XTMP($J,BUILD,PTCH)=PTCHIEN
"RTN","A1AEF5",145,0)
 ... S ^XTMP($J,BUILD,PTCH,RTNNM,"R")=""
"RTN","A1AEF5",146,0)
 ;
"RTN","A1AEF5",147,0)
 I '$G(MSG) D
"RTN","A1AEF5",148,0)
 . N A1AEFILE S A1AEFILE=11004,A1AENAME="PATCH" I '$D(^DIC(11004)) S A1AEFILE=11005,A1AENAME="DHCP PATCHES" ; JLI 150525 
"RTN","A1AEF5",149,0)
 . W !,"Adding all patches (BUILDS) found in the"
"RTN","A1AEF5",150,0)
 . W !," second line of all routines associated with"
"RTN","A1AEF5",151,0)
 . W !," the full array of BUILDS identified to date"
"RTN","A1AEF5",152,0)
 . W !,"Note: the patch names are built from the"
"RTN","A1AEF5",153,0)
 . W !," information in the routine.  Thus, these"
"RTN","A1AEF5",154,0)
 . W !," patches (BUILDS) may not be in either the"
"RTN","A1AEF5",155,0)
 . ;W !," DHCP PATCHES [#11005] nor BUILDS [#9.6] file.",! ; JLI 150525 commented out replaced by next line
"RTN","A1AEF5",156,0)
 . W !," "_A1AENAME_" [#"_A1AEFILE_"] nor BUILDS [#9.6] file.",! ; JLI 150525 works for either file
"RTN","A1AEF5",157,0)
 . W !,!,"TOTAL NODES IN ^XTMP = ",$$CNTNODES
"RTN","A1AEF5",158,0)
 . W !,"TOTAL BUILDS ASSOCIATED = ",$$CNTBLDS
"RTN","A1AEF5",159,0)
 . W !,!
"RTN","A1AEF5",160,0)
 E  D
"RTN","A1AEF5",161,0)
 . N TOTP4R S TOTP4R=$$CNTBLDS
"RTN","A1AEF5",162,0)
 . S MSGTXT=MSGTXT_"TOTP4R^"_TOTP4R_"^"
"RTN","A1AEF5",163,0)
 Q
"RTN","A1AEF5",164,0)
 ;
"RTN","A1AEF5",165,0)
 ;
"RTN","A1AEF5",166,0)
 ; Now look through every build's components and find
"RTN","A1AEF5",167,0)
 ;  every build that also touched these components
"RTN","A1AEF5",168,0)
 ; NOTE: *** Some patches will not be in 9.6, therefore
"RTN","A1AEF5",169,0)
 ;       will not be included in looking at components
"RTN","A1AEF5",170,0)
 ; ENTER
"RTN","A1AEF5",171,0)
 ;    BUILD = name of PARENT build under inspection
"RTN","A1AEF5",172,0)
 ;    MSG   = 1:build MSGTXT
"RTN","A1AEF5",173,0)
 ;            0:print statistics to terminal
"RTN","A1AEF5",174,0)
 ;    ^XTMP($J,BUILD under construction
"RTN","A1AEF5",175,0)
 ; RETURN
"RTN","A1AEF5",176,0)
 ;    ^XTMP($J,BUILD updated
"RTN","A1AEF5",177,0)
FND3(BUILD,MSG,MSGTXT) ; Find every build with similar components
"RTN","A1AEF5",178,0)
 N BLD,BLDIEN,DTINS S BLD=" "
"RTN","A1AEF5",179,0)
 F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEF5",180,0)
 .  S BLDIEN=+$G(^XTMP($J,BUILD,BLD))
"RTN","A1AEF5",181,0)
 .  I BLDIEN D
"RTN","A1AEF5",182,0)
 ..  S DTINS=$$DTINS^A1AEF2(BLD)
"RTN","A1AEF5",183,0)
 ..  D:DTINS LOADXTMP^A1AEF2(BUILD,BLDIEN,DTINS)
"RTN","A1AEF5",184,0)
 ;
"RTN","A1AEF5",185,0)
 I '$G(MSG) D
"RTN","A1AEF5",186,0)
 . W !,"Adding nodes to ^XTMP for all components in "
"RTN","A1AEF5",187,0)
 . W !," the array of builds. "
"RTN","A1AEF5",188,0)
 . W !,"Note: this pulls only components INSTALLED, thus"
"RTN","A1AEF5",189,0)
 . W !," if there is no record of install in file #9.7"
"RTN","A1AEF5",190,0)
 . W !," the component would not be captured at this point",!
"RTN","A1AEF5",191,0)
 . W !,!,"TOTAL NODES IN ^XTMP = ",$$CNTNODES
"RTN","A1AEF5",192,0)
 . W !,"TOTAL BUILDS ASSOCIATED = ",$$CNTBLDS
"RTN","A1AEF5",193,0)
 . W !,!
"RTN","A1AEF5",194,0)
 Q
"RTN","A1AEF5",195,0)
 ;
"RTN","A1AEF5",196,0)
 ; In ^XPD
"RTN","A1AEF5",197,0)
 ;  $QS(NODE,3)="KRN"
"RTN","A1AEF5",198,0)
 ;  $QS(NODE,4)="B"
"RTN","A1AEF5",199,0)
 ;  $QS(NODE,5)= numeric for component
"RTN","A1AEF5",200,0)
 ;  $QS(NODE,6)= name of component
"RTN","A1AEF5",201,0)
 ;    unless file, then
"RTN","A1AEF5",202,0)
 ;  $QS(NODE,3)= 4
"RTN","A1AEF5",203,0)
 ;  $QS(NODE,4)= file number
"RTN","A1AEF5",204,0)
 ;^XPD(9.6,BIEN,4,FILE#)=FILE#           FILES
"RTN","A1AEF5",205,0)
 ;^XPD(9.6,BIEN,"KRN","B",.4,CI) =       PRINT TEMPLATES
"RTN","A1AEF5",206,0)
 ;^XPD(9.6,BIEN,"KRN","B",.401,CI) =     SORT TEMPLATES
"RTN","A1AEF5",207,0)
 ;^XPD(9.6,BIEN,"KRN","B",.402,CI) =     INPUT TEMPLATES
"RTN","A1AEF5",208,0)
 ;^XPD(9.6,BIEN,"KRN","B",.403,CI) =     FORMS
"RTN","A1AEF5",209,0)
 ;^XPD(9.6,BIEN,"KRN","B",.5,CI) =       FUNCTIONS
"RTN","A1AEF5",210,0)
 ;^XPD(9.6,BIEN,"KRN","B",.84,CI) =      DIALOG
"RTN","A1AEF5",211,0)
 ;^XPD(9.6,BIEN,"KRN","B",3.6,CI) =      BULLETINS
"RTN","A1AEF5",212,0)
 ;^XPD(9.6,BIEN,"KRN","B",9.2,CI) =      HELP FRAME
"RTN","A1AEF5",213,0)
 ;^XPD(9.6,BIEN,"KRN","B",9.8,CI) =      ROUTINES
"RTN","A1AEF5",214,0)
 ;^XPD(9.6,BIEN,"KRN","B",19,CI) =       OPTIONS
"RTN","A1AEF5",215,0)
 ;^XPD(9.6,BIEN,"KRN","B",19.1,CI) =     SECURITY KEYS
"RTN","A1AEF5",216,0)
 ;^XPD(9.6,BIEN,"KRN","B",101,CI) =      PROTOCOL
"RTN","A1AEF5",217,0)
 ;^XPD(9.6,BIEN,"KRN","B",409.61,CI) =   LIST TEMPLATE
"RTN","A1AEF5",218,0)
 ;^XPD(9.6,BIEN,"KRN","B",8994,CI) =     REMOTE PROCEDURE
"RTN","A1AEF5",219,0)
 ;
"RTN","A1AEF5",220,0)
 ; In ^XTMP
"RTN","A1AEF5",221,0)
 ;  $QS(NODE,2)= numeric for component
"RTN","A1AEF5",222,0)
 ;  $QS(NODE,3)= name of component or number of file
"RTN","A1AEF5",223,0)
 ;^XTMP(17311,.4,"DG SI LIST    FILE #2",7019669.857859,"SD*5.3*70",1382)
"RTN","A1AEF5",224,0)
 ;^XTMP(17311,3.8,"YS MHA-MHNDB",6899291.839066,"SD*5.3*70",8300)
"RTN","A1AEF5",225,0)
 ;^XTMP(17311,3.8,"YS MHA-MHNDB",6919796.778282,"SD*5.3*70",7452)
"RTN","A1AEF5",226,0)
 ;^XTMP(17311,4,.11,6999795.859968,"SD*5.3*70",2699)
"RTN","A1AEF5",227,0)
 ;^XTMP(17311,4,.11,7009279.885882,"SD*5.3*70",2367)
"RTN","A1AEF5",228,0)
 ;
"RTN","A1AEF5",229,0)
 ;  $QS(NODE,3)="KRN"
"RTN","A1AEF5",230,0)
 ;  $QS(NODE,4)="B"
"RTN","A1AEF5",231,0)
 ;  $QS(NODE,5)= numeric for component
"RTN","A1AEF5",232,0)
 ;  $QS(NODE,6)= name of component
"RTN","A1AEF5",233,0)
 ;    unless file, then
"RTN","A1AEF5",234,0)
 ;  $QS(NODE,3)= 4
"RTN","A1AEF5",235,0)
 ;  $QS(NODE,4)= file number
"RTN","A1AEF5",236,0)
 ;  $QS(NODE,5)= 0  to prevent getting info nodes
"RTN","A1AEF5",237,0)
 ; ENTER
"RTN","A1AEF5",238,0)
 ;    BUILD = name of PARENT build under inspection
"RTN","A1AEF5",239,0)
 ;    MSG   = 1:build MSGTXT
"RTN","A1AEF5",240,0)
 ;            0:print statistics to terminal
"RTN","A1AEF5",241,0)
 ;    ^XTMP($J = array of builds from previous LOADXTMP call
"RTN","A1AEF5",242,0)
 ; RETURN
"RTN","A1AEF5",243,0)
 ;    ^XTMP($J,BUILD updated
"RTN","A1AEF5",244,0)
FND4(BUILD,MSG,MSGTXT) ; Get all builds for components in ^XTMP
"RTN","A1AEF5",245,0)
 N NODE,BIEN,NMCMP,NMRICMP S NODE=$NA(^XPD(9.6))
"RTN","A1AEF5",246,0)
 F  S NODE=$Q(@NODE) Q:NODE'["^XPD(9.6"  D
"RTN","A1AEF5",247,0)
 . S BIEN=+$QS(NODE,2)
"RTN","A1AEF5",248,0)
 . I $QS(NODE,3)=4,$QS(NODE,2),$QS(NODE,4),$QS(NODE,5)=0 D
"RTN","A1AEF5",249,0)
 .. N FNMBR S FNMBR=$QS(NODE,4)
"RTN","A1AEF5",250,0)
 .. I $D(^XTMP($J,4,FNMBR)) D  Q
"RTN","A1AEF5",251,0)
 ... S ^XTMP($J,BUILD,$P(^XPD(9.6,BIEN,0),"^"),"F")=+$QS(NODE,2)_"^"_FNMBR
"RTN","A1AEF5",252,0)
 .;
"RTN","A1AEF5",253,0)
 . I $QS(NODE,3)["KRN",$QS(NODE,4)["B" D
"RTN","A1AEF5",254,0)
 .. S NMRICMP=$QS(NODE,5)
"RTN","A1AEF5",255,0)
 .. S NMCMP=$QS(NODE,6)
"RTN","A1AEF5",256,0)
 .. I $D(^XTMP($J,NMRICMP,NMCMP)) D
"RTN","A1AEF5",257,0)
 ... S ^XTMP($J,BUILD,$P(^XPD(9.6,BIEN,0),"^"),"C")=BIEN_"^"_NMRICMP_"^"_NMCMP
"RTN","A1AEF5",258,0)
 ;
"RTN","A1AEF5",259,0)
 I '$G(MSG) D
"RTN","A1AEF5",260,0)
 . W !,"Adding every build which touched the components found"
"RTN","A1AEF5",261,0)
 . W !,"  in the search above, and adding the component info"
"RTN","A1AEF5",262,0)
 . W !,"  to the ^XTMP array",!
"RTN","A1AEF5",263,0)
 . W !,!,"TOTAL NODES IN ^XTMP = ",$$CNTNODES
"RTN","A1AEF5",264,0)
 . W !,"TOTAL BUILDS ASSOCIATED = ",$$CNTBLDS
"RTN","A1AEF5",265,0)
 . W !,!
"RTN","A1AEF5",266,0)
 E  D
"RTN","A1AEF5",267,0)
 . N TOTCMP S TOTCMP=$$CNTBLDS
"RTN","A1AEF5",268,0)
 . S MSGTXT=MSGTXT_"TOTCMP^"_TOTCMP_"^"
"RTN","A1AEF5",269,0)
 .; W !,BUILD,"^",MSGTXT
"RTN","A1AEF5",270,0)
 Q
"RTN","A1AEF5",271,0)
 ;
"RTN","A1AEF5",272,0)
 ;
"RTN","A1AEF5",273,0)
 ; ENTER
"RTN","A1AEF5",274,0)
 ;    BUILD = name of PARENT build under inspection
"RTN","A1AEF5",275,0)
 ;    MSG     = 1:build MSGTXT
"RTN","A1AEF5",276,0)
 ;              0:print statistics to terminal
"RTN","A1AEF5",277,0)
 ;    MSGTXT  = Summary statistics message
"RTN","A1AEF5",278,0)
 ;    BLDARR  = array of associated builds after limiting
"RTN","A1AEF5",279,0)
 ;              BLDARR(0)=total number
"RTN","A1AEF5",280,0)
 ; RETURN
"RTN","A1AEF5",281,0)
 ;    MSG = 1, MSGTXT updated
"RTN","A1AEF5",282,0)
 ;    MSG = 0, informational text and total to terminal
"RTN","A1AEF5",283,0)
FND5(BUILD,MSG,MSGTXT) ; Limit builds to one from other packages
"RTN","A1AEF5",284,0)
 N BLDARR D DISPLMT(BUILD,.BLDARR)
"RTN","A1AEF5",285,0)
 I '$G(MSG) D
"RTN","A1AEF5",286,0)
 . W !,"Limiting associated builds to a single example"
"RTN","A1AEF5",287,0)
 . W !,"  of each patch array not belonging to the"
"RTN","A1AEF5",288,0)
 . W !,"  package of the parent BUILD being examined",!
"RTN","A1AEF5",289,0)
 . W !,"Also remove all BUILDS not associated with an"
"RTN","A1AEF5",290,0)
 . W !,"  ACTIVE version of the package represented.",!
"RTN","A1AEF5",291,0)
 . W !,"TOTAL BUILDS ASSOCIATED = ",$G(BLDARR(0))
"RTN","A1AEF5",292,0)
 . W !,!
"RTN","A1AEF5",293,0)
 E  D
"RTN","A1AEF5",294,0)
 . S MSGTXT=MSGTXT_"LMTD^"_$G(BLDARR(0))_"^"
"RTN","A1AEF5",295,0)
 Q
"RTN","A1AEF5",296,0)
 ;
"RTN","A1AEF5",297,0)
 ; Count total nodes in ^XTMP($J as indicator of
"RTN","A1AEF5",298,0)
 ;  complexity of relationships
"RTN","A1AEF5",299,0)
 ; ENTER
"RTN","A1AEF5",300,0)
 ;   ^XTMP($J = array of builds from previous LOADXTMP call
"RTN","A1AEF5",301,0)
 ; RETURN
"RTN","A1AEF5",302,0)
 ;   Count of nodes
"RTN","A1AEF5",303,0)
CNTNODES() ; Count total nodes in ^XTMP
"RTN","A1AEF5",304,0)
 N NODE,CNT S NODE=$NA(^XTMP($J)),CNT=0
"RTN","A1AEF5",305,0)
 F  S NODE=$Q(@NODE) Q:NODE'[("^XTMP("_$J)  S CNT=CNT+1
"RTN","A1AEF5",306,0)
 Q CNT
"RTN","A1AEF5",307,0)
 ;
"RTN","A1AEF5",308,0)
 ;
"RTN","A1AEF5",309,0)
 ; ENTER
"RTN","A1AEF5",310,0)
 ;   ^XTMP($J = array of builds from previous LOADXTMP call
"RTN","A1AEF5",311,0)
 ; RETURNS
"RTN","A1AEF5",312,0)
 ;   CNT  =  Count of BUILDS in ^XTMP array that
"RTN","A1AEF5",313,0)
 ;           represent a current version of their package
"RTN","A1AEF5",314,0)
CNTBLDS() ; Count all builds in ^XTMP
"RTN","A1AEF5",315,0)
 N BLD,CNT S BLD=" ",CNT=0
"RTN","A1AEF5",316,0)
 F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEF5",317,0)
 . S:$$BACTV^A1AEF1(BLD) CNT=CNT+1
"RTN","A1AEF5",318,0)
 Q CNT
"RTN","A1AEF5",319,0)
 ;
"RTN","A1AEF5",320,0)
 ;
"RTN","A1AEF5",321,0)
 ; Build array of all routines contained in a BUILD
"RTN","A1AEF5",322,0)
 ; ENTER
"RTN","A1AEF5",323,0)
 ;   BUILD  = NAME OF BUILD
"RTN","A1AEF5",324,0)
 ;   RTNARR = ARRAY PASSED BY REFERENCE
"RTN","A1AEF5",325,0)
 ; RETURN
"RTN","A1AEF5",326,0)
 ;   RTNARR   = ARRAY OF ROUTINES IN BUILD
"RTN","A1AEF5",327,0)
RTNSINB(BUILD,RTNARR) ; Return array of patches from RTN 2nd line
"RTN","A1AEF5",328,0)
 K RTNARR
"RTN","A1AEF5",329,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEF5",330,0)
 N RTNNM,RTNSS S RTNSS=0
"RTN","A1AEF5",331,0)
 F  S RTNSS=$O(^XPD(9.6,BIEN,"KRN",9.8,"NM",RTNSS)) Q:'RTNSS  D
"RTN","A1AEF5",332,0)
 . S RTNNM=$P($G(^XPD(9.6,BIEN,"KRN",9.8,"NM",RTNSS,0)),"^")
"RTN","A1AEF5",333,0)
 . I $L(RTNNM) D
"RTN","A1AEF5",334,0)
 ..;Take care of cases where routine name in B cross has " "
"RTN","A1AEF5",335,0)
 .. S:$E(RTNNM)=" " RTNNM=$E(RTNNM,2,$L(RTNNM))
"RTN","A1AEF5",336,0)
 .. S RTNARR(RTNNM)=""
"RTN","A1AEF5",337,0)
 Q
"RTN","A1AEF5",338,0)
 ;
"RTN","A1AEF5",339,0)
 ; Display all builds associated with the parent BUILD
"RTN","A1AEF5",340,0)
 ;   which belong to a currently active package
"RTN","A1AEF5",341,0)
 ; ENTER
"RTN","A1AEF5",342,0)
 ;    BUILD    = name of parent BUILD under inspection
"RTN","A1AEF5",343,0)
 ;    MSG      = 1:build MSGTXT
"RTN","A1AEF5",344,0)
 ;               0:print statistics to terminal
"RTN","A1AEF5",345,0)
 ;    ^XTMP($J = array of builds from previous LOADXTMP call
"RTN","A1AEF5",346,0)
 ; RETURN
"RTN","A1AEF5",347,0)
 ;    MSG   = 0: Number of builds displayed to terminal
"RTN","A1AEF5",348,0)
 ;               null returned as function
"RTN","A1AEF5",349,0)
 ;          = 1: Number of builds returned as function
"RTN","A1AEF5",350,0)
DISP(BUILD,MSG) ; Display all builds associated with parent
"RTN","A1AEF5",351,0)
 N BLD,CNT S BLD=" ",CNT=0
"RTN","A1AEF5",352,0)
 F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEF5",353,0)
 . I $$BACTV^A1AEF1(BLD) S CNT=CNT+1
"RTN","A1AEF5",354,0)
 . W:'$G(MSG) !,BLD
"RTN","A1AEF5",355,0)
 I '$G(MSG) D  Q ""
"RTN","A1AEF5",356,0)
 . W !,!,"Number of builds : ",CNT
"RTN","A1AEF5",357,0)
 E  Q CNT
"RTN","A1AEF5",358,0)
 Q
"RTN","A1AEF5",359,0)
 ;
"RTN","A1AEF5",360,0)
 ; Display all builds associated with the parent BUILD
"RTN","A1AEF5",361,0)
 ;   which belong to a currently active package
"RTN","A1AEF5",362,0)
 ; AND
"RTN","A1AEF5",363,0)
 ;   Limiting associated builds to a single example
"RTN","A1AEF5",364,0)
 ;     of each patch array not belonging to the
"RTN","A1AEF5",365,0)
 ;     package of the parent BUILD being examined
"RTN","A1AEF5",366,0)
 ; ENTER
"RTN","A1AEF5",367,0)
 ;    BUILD = name of parent BUILD under inspection
"RTN","A1AEF5",368,0)
 ;    MSG   = 1:build MSGTXT
"RTN","A1AEF5",369,0)
 ;            0:print statistics to terminal
"RTN","A1AEF5",370,0)
 ;    ^XTMP($J = array of builds from previous LOADXTMP call
"RTN","A1AEF5",371,0)
 ; RETURN
"RTN","A1AEF5",372,0)
 ;    BLDARR    = array of builds identified
"RTN","A1AEF5",373,0)
 ;    BLDARR(0) = Number of builds identified
"RTN","A1AEF5",374,0)
DISPLMT(BUILD,BLDARR) ; Display limited array of builds
"RTN","A1AEF5",375,0)
 N BLD S BLD=" "
"RTN","A1AEF5",376,0)
 K BLDARR
"RTN","A1AEF5",377,0)
 F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEF5",378,0)
 . I $$BACTV^A1AEF1(BLD) D
"RTN","A1AEF5",379,0)
 .. I $P(BLD,"*")=$P(BUILD,"*") S BLDARR($P(BLD,"*"))="" Q
"RTN","A1AEF5",380,0)
 .. Q:$D(BLDARR($P(BLD,"*")))
"RTN","A1AEF5",381,0)
 .. S BLDARR($P(BLD,"*"))=""
"RTN","A1AEF5",382,0)
 N CNT,NODE S CNT=0,NODE=$NA(BLDARR)
"RTN","A1AEF5",383,0)
 F  S NODE=$Q(@NODE) Q:NODE'["BLDARR("  D
"RTN","A1AEF5",384,0)
 .  S CNT=CNT+1
"RTN","A1AEF5",385,0)
 S BLDARR(0)=CNT
"RTN","A1AEF5",386,0)
 Q
"RTN","A1AEF5",387,0)
 ;
"RTN","A1AEF5",388,0)
TESTIT(BLD96) ; Temporary test of FINDALL for all builds in 9.6
"RTN","A1AEF5",389,0)
 S:'$D(BLD96) BLD96=""
"RTN","A1AEF5",390,0)
 F  S BLD96=$O(^XPD(9.6,"B",BLD96)) Q:BLD96=""  D
"RTN","A1AEF5",391,0)
 . I $E(BLD96)'=" " W !,$$FNDALL^A1AEF5(BLD96,1)
"RTN","A1AEF5",392,0)
 Q
"RTN","A1AEF5",393,0)
 ;
"RTN","A1AEF5",394,0)
EOR ; end of routine A1AEF5
"RTN","A1AEHSVR")
0^7^B9819035
"RTN","A1AEHSVR",1,0)
A1AEHSVR ;isf/rwf-hfs checksum msg server ;2007-10-17T17:19
"RTN","A1AEHSVR",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEHSVR",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEHSVR",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEHSVR",5,0)
 ;
"RTN","A1AEHSVR",6,0)
 ;
"RTN","A1AEHSVR",7,0)
 ;primary change history
"RTN","A1AEHSVR",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEHSVR",9,0)
 ;
"RTN","A1AEHSVR",10,0)
 ;
"RTN","A1AEHSVR",11,0)
EN ;Save the HFS Checksum message for when the patch is released.
"RTN","A1AEHSVR",12,0)
 N IEN,TYPE,DATE,PATCH,PACKAGE,FDA,FIE,Y,X,CNT,EXIT
"RTN","A1AEHSVR",13,0)
 K ^TMP("A1AE",$J)
"RTN","A1AEHSVR",14,0)
 S XMER=0,(PACKAGE,PATCH)="",CNT=0,FDA=$NA(^TMP("A1AE",$J))
"RTN","A1AEHSVR",15,0)
 F  X XMREC Q:XMER  D  Q:'IEN
"RTN","A1AEHSVR",16,0)
 . S TYPE=+$P(XMRG,"~~",2),DATA=$E(XMRG,5,255)
"RTN","A1AEHSVR",17,0)
 . I $T(@TYPE) D @TYPE
"RTN","A1AEHSVR",18,0)
 . Q
"RTN","A1AEHSVR",19,0)
 I PATCH="" D ERR("BAD MESSAGE")
"RTN","A1AEHSVR",20,0)
 D FWD ;Send copy to mail group
"RTN","A1AEHSVR",21,0)
 K ^TMP("A1AE",$J)
"RTN","A1AEHSVR",22,0)
 Q
"RTN","A1AEHSVR",23,0)
 ;
"RTN","A1AEHSVR",24,0)
1 ;Patch name
"RTN","A1AEHSVR",25,0)
 N C,I,%
"RTN","A1AEHSVR",26,0)
 S PATCH=DATA I PATCH="" Q
"RTN","A1AEHSVR",27,0)
 I PATCH[" " S %=$L(PATCH," "),PATCH=$P(PATCH," ",1,%-1)_"*"_$P(PATCH," ",%)_"*0"
"RTN","A1AEHSVR",28,0)
 I $L(PATCH,"*")=3 S $P(PATCH,"*",2)=+$P(PATCH,"*",2)
"RTN","A1AEHSVR",29,0)
 ;
"RTN","A1AEHSVR",30,0)
 S IEN=$$FIND1^DIC(11005,,"M",PATCH,)
"RTN","A1AEHSVR",31,0)
 I 'IEN D:0 ERR("Could not find patch: "_PATCH) Q
"RTN","A1AEHSVR",32,0)
 S C=^A1AE(11005,IEN,0) I $P(C,U,8)'="u" S IEN=0 Q  ;Only save if underdev
"RTN","A1AEHSVR",33,0)
 I '$D(^A1AE(11005.5,IEN,0)) D  I IEN<1 D ERR("COULD NOT ADD: "_PATCH) Q
"RTN","A1AEHSVR",34,0)
 . S DIC(0)="ML",DIC="^A1AE(11005.5,",X=PATCH D ^DIC
"RTN","A1AEHSVR",35,0)
 . S IEN=+Y
"RTN","A1AEHSVR",36,0)
 S PACKAGE=$P(^A1AE(11005,IEN,0),U,2)
"RTN","A1AEHSVR",37,0)
 S @FDA@(11005.5,IEN_",",2)=XMZ,@FDA@(11005.5,IEN_",",3)=$$NOW^XLFDT
"RTN","A1AEHSVR",38,0)
 Q
"RTN","A1AEHSVR",39,0)
 ;
"RTN","A1AEHSVR",40,0)
2 ;Linked Patchs
"RTN","A1AEHSVR",41,0)
 S CNT=CNT+1,FIE="?+"_CNT_","_IEN_",",@FDA@(11005.521,FIE,.01)=DATA
"RTN","A1AEHSVR",42,0)
 Q
"RTN","A1AEHSVR",43,0)
 ;
"RTN","A1AEHSVR",44,0)
3 ;Add Routines. RTN^install/delete^ien_in_build^Checksum~patch list
"RTN","A1AEHSVR",45,0)
 N RN,CS,ID,PL
"RTN","A1AEHSVR",46,0)
 S DATA=$TR(DATA,"~","^") ;Fix bad version
"RTN","A1AEHSVR",47,0)
 S RN=$P(DATA,"^",1),ID=$P(DATA,"^",2),CS=$P(DATA,"^",4),PL=$P(DATA,"^",5)
"RTN","A1AEHSVR",48,0)
 S CNT=CNT+1,FIE="?+"_CNT_","_IEN_","
"RTN","A1AEHSVR",49,0)
 S @FDA@(11005.511,FIE,.01)=RN,@FDA@(11005.511,FIE,2)=ID,@FDA@(11005.511,FIE,3)=CS,@FDA@(11005.511,FIE,5)=PL
"RTN","A1AEHSVR",50,0)
 K FIE
"RTN","A1AEHSVR",51,0)
 Q
"RTN","A1AEHSVR",52,0)
 ;
"RTN","A1AEHSVR",53,0)
8 ;From Domain
"RTN","A1AEHSVR",54,0)
 N X,Y,IX,FD,CD
"RTN","A1AEHSVR",55,0)
 S @FDA@(11005.5,IEN_",",5)=DATA
"RTN","A1AEHSVR",56,0)
 S FD=$RE(DATA)
"RTN","A1AEHSVR",57,0)
 ;See if from a authorized sender
"RTN","A1AEHSVR",58,0)
 I 'PACKAGE K FDA Q
"RTN","A1AEHSVR",59,0)
 S IX=0,CD="",X=0
"RTN","A1AEHSVR",60,0)
 F  S IX=$O(^DIC(9.4,PACKAGE,25,IX)) Q:'IX  S Y=^(IX,0) D  Q:X
"RTN","A1AEHSVR",61,0)
 . S Y=$P(^DIC(4.2,+Y,0),U)
"RTN","A1AEHSVR",62,0)
 . S CD=$RE(Y),X=($E(FD,1,$L(CD))=CD)
"RTN","A1AEHSVR",63,0)
 . Q
"RTN","A1AEHSVR",64,0)
 I 'X K FDA ;Don't accept if not from authorized domain
"RTN","A1AEHSVR",65,0)
 Q
"RTN","A1AEHSVR",66,0)
 ;Save data
"RTN","A1AEHSVR",67,0)
9 ;
"RTN","A1AEHSVR",68,0)
 Q:'$D(FDA)  Q:'IEN
"RTN","A1AEHSVR",69,0)
 D  ;Remove any previous routine info
"RTN","A1AEHSVR",70,0)
 . K ^A1AE(11005.5,IEN,1)
"RTN","A1AEHSVR",71,0)
 . Q
"RTN","A1AEHSVR",72,0)
 D  ;Clear Patch link
"RTN","A1AEHSVR",73,0)
 . N DA,DIK
"RTN","A1AEHSVR",74,0)
 . S DA(1)=IEN,DA=0,DIK="^A1AE(11005.5,"_IEN_",2,"
"RTN","A1AEHSVR",75,0)
 . F  S DA=$O(^A1AE(11005.5,IEN,2,DA)) Q:'DA  D ^DIK
"RTN","A1AEHSVR",76,0)
 . Q
"RTN","A1AEHSVR",77,0)
 K FIE D UPDATE^DIE("",FDA,"FIE")
"RTN","A1AEHSVR",78,0)
 Q
"RTN","A1AEHSVR",79,0)
 ;
"RTN","A1AEHSVR",80,0)
ERR(MSG) ;Report error
"RTN","A1AEHSVR",81,0)
 ;For now just send an alert
"RTN","A1AEHSVR",82,0)
 N XQA,XQAMSG,XQAOPT,XQAROU
"RTN","A1AEHSVR",83,0)
 S XQAMSG="HFS SERVER: "_MSG,XQA("G.A1AE PATCH ERRORS")=""
"RTN","A1AEHSVR",84,0)
 D SETUP^XQALERT
"RTN","A1AEHSVR",85,0)
 Q
"RTN","A1AEHSVR",86,0)
 ;
"RTN","A1AEHSVR",87,0)
FWD ;Forward message
"RTN","A1AEHSVR",88,0)
 Q:'$D(XMZ)
"RTN","A1AEHSVR",89,0)
 N XMDUZ
"RTN","A1AEHSVR",90,0)
 S XMY("G.A1AE HFS MESSAGES")=""
"RTN","A1AEHSVR",91,0)
 D ENT1^XMD
"RTN","A1AEHSVR",92,0)
 Q
"RTN","A1AEHSVR",93,0)
 ;
"RTN","A1AEHSVR",94,0)
TEST ;
"RTN","A1AEHSVR",95,0)
 N XMRG,XMER,XMREC,XMZ
"RTN","A1AEHSVR",96,0)
 W !,"Message number: " R XMZ:300 Q:'XMZ
"RTN","A1AEHSVR",97,0)
 S XMREC="D REC^XMS3"
"RTN","A1AEHSVR",98,0)
 D EN
"RTN","A1AEHSVR",99,0)
 Q
"RTN","A1AEK1")
0^109^B105446011
"RTN","A1AEK1",1,0)
A1AEK1 ;ven/lgc-check patch against site's stream ;2015-07-03  9:58 PM
"RTN","A1AEK1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEK1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEK1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEK1",5,0)
 ;
"RTN","A1AEK1",6,0)
 ;
"RTN","A1AEK1",7,0)
 ;primary change history
"RTN","A1AEK1",8,0)
 ;2014-12-27: version 2.4 released
"RTN","A1AEK1",9,0)
 ;
"RTN","A1AEK1",10,0)
 ;
"RTN","A1AEK1",11,0)
 ; Enter from EN1+12^XPDIL, GI+5^XPDIPM
"RTN","A1AEK1",12,0)
 ;
"RTN","A1AEK1",13,0)
 S ^XTMP($J,"A1AEK1 FROM TOP")=""
"RTN","A1AEK1",14,0)
 Q  ; Not from top
"RTN","A1AEK1",15,0)
 ;
"RTN","A1AEK1",16,0)
 ;
"RTN","A1AEK1",17,0)
 ; NOTE: How about patches without xxx*yyy*zzz format?
"RTN","A1AEK1",18,0)
 ; NOTE: How find SEQ# on patches in multiple-patch
"RTN","A1AEK1",19,0)
 ;       such as DG*5.3*860 where the SEQ# isn't anywhere
"RTN","A1AEK1",20,0)
 ;       in the KIDS file or Subject Header?
"RTN","A1AEK1",21,0)
 ; 
"RTN","A1AEK1",22,0)
 ; VARIABLES
"RTN","A1AEK1",23,0)
 ;   A1AEHDR   = Patch header (1st line) gleaned in
"RTN","A1AEK1",24,0)
 ;               XPDIL or XPDIPM
"RTN","A1AEK1",25,0)
 ; SITE VARS
"RTN","A1AEK1",26,0)
 ;    SV("STRMPRFX") =  Active Site Patch Stream Abbreviation
"RTN","A1AEK1",27,0)
 ;    SV("STRMDT")   =  Date Active Patch Stream Initiated
"RTN","A1AEK1",28,0)
 ;    SV("STRMNM")   =  Active Site Patch Stream Name
"RTN","A1AEK1",29,0)
 ;    SV("STRM")     =  Active Site Patch Stream IEN into 11007.1
"RTN","A1AEK1",30,0)
 ;    SV("ACTPKGV")  =  Site's Active Version for Package
"RTN","A1AEK1",31,0)
 ;
"RTN","A1AEK1",32,0)
 ; PATCH VARS   PTCHVER,PKGPRFX,PTSA
"RTN","A1AEK1",33,0)
 ;    KV("PKGPRFX")  =  KIDS Package Prefix
"RTN","A1AEK1",34,0)
 ;    KV("PTCHNBR")  =  KIDS Patch Number
"RTN","A1AEK1",35,0)
 ;    KV("PTCHNM")   =  KIDS Patch Name
"RTN","A1AEK1",36,0)
 ;    KV("PTCHRDT")  =  KIDS Patch Release Date
"RTN","A1AEK1",37,0)
 ;    KV("PTCHSQN")  =  KIDS Patch SEQ#
"RTN","A1AEK1",38,0)
 ;    KV("PTCHSTRM") =  KIDS Patch Stream IEN into 11007.1
"RTN","A1AEK1",39,0)
 ;    KV("PTCHVER")  =  KIDS Patch Package Version
"RTN","A1AEK1",40,0)
 ;          PTCINST(STREAM,SEQ#,PKG ABB,PKGVER,PATCH NAME)=""
"RTN","A1AEK1",41,0)
 ;    FI             = Array of first patch SEQ# installed
"RTN","A1AEK1",42,0)
 ;                     for each Patch Stream for this package
"RTN","A1AEK1",43,0)
 ;                     FI(STREAM)=SEQ#
"RTN","A1AEK1",44,0)
 ;    LI             = Array of last patch SEQ# installed
"RTN","A1AEK1",45,0)
 ;                     for each Patch Stream for this package
"RTN","A1AEK1",46,0)
 ;                     LI(STREAM)=SEQ#
"RTN","A1AEK1",47,0)
 ;    MSSEQ          = Arrays of missing sequence numbers
"RTN","A1AEK1",48,0)
 ;                     of patches by each stream
"RTN","A1AEK1",49,0)
 ;    XPDT(n)        = Array of Builds in this Distribution
"RTN","A1AEK1",50,0)
 ;                     Provided by XPDIL, XPDIPM when patch loaded
"RTN","A1AEK1",51,0)
 ;    XPDT(1)        = DA^NAME [^XTMP("XPDI",DA..]
"RTN","A1AEK1",52,0)
 ;                     e.g. 8994^DG*5.3*770
"RTN","A1AEK1",53,0)
 ;    XPDT("DA",8994)         =1   [DA]
"RTN","A1AEK1",54,0)
 ;    XPDT("NM","DG*5.3*770") =1   [PATCH NAME]
"RTN","A1AEK1",55,0)
 ;    ERRMSG         = 0 no error, 1^error message = error
"RTN","A1AEK1",56,0)
 ;                   
"RTN","A1AEK1",57,0)
 ;ENTER
"RTN","A1AEK1",58,0)
 ;  XPDQUIT   = variable passed by reference *
"RTN","A1AEK1",59,0)
 ;  XPD ARRAY = Builds in this Distribution *
"RTN","A1AEK1",60,0)
 ;    * Provided by XPDIL, XPDIPM when patch loaded
"RTN","A1AEK1",61,0)
 ;    e.g.
"RTN","A1AEK1",62,0)
 ;       XPDT(1)="8996^DG*5.3*770"
"RTN","A1AEK1",63,0)
 ;       XPDT("DA",8996)=1
"RTN","A1AEK1",64,0)
 ;       XPDT("NM","DG*5.3*770")=1
"RTN","A1AEK1",65,0)
 ;  A1AEHDR = Subject of Packman KIDS, first line of KIDS file
"RTN","A1AEK1",66,0)
 ;    e.g.
"RTN","A1AEK1",67,0)
 ;       Released DG*5.3*770 SEQ #681
"RTN","A1AEK1",68,0)
 ;RETURN
"RTN","A1AEK1",69,0)
 ;   ABORT
"RTN","A1AEK1",70,0)
 ;     0    =  Install if desired.
"RTN","A1AEK1",71,0)
 ;     1    =  Abort install signal to XPDI* rtns
"RTN","A1AEK1",72,0)
EN(A1AEHDR) ; Check KIDS for correct patch stream
"RTN","A1AEK1",73,0)
 N ABORT S ABORT=0
"RTN","A1AEK1",74,0)
 ; Quit without any action of Patch Module not installed
"RTN","A1AEK1",75,0)
 Q:'$D(^A1AE(11007.1)) ABORT
"RTN","A1AEK1",76,0)
 N ERRMSG S ERRMSG=0 ; No error message
"RTN","A1AEK1",77,0)
 ; Pull site's patch stream variables
"RTN","A1AEK1",78,0)
 D SITEVAR(.SV)
"RTN","A1AEK1",79,0)
 ; Fall out without intervention if 11007.1 not set up
"RTN","A1AEK1",80,0)
 Q:'$G(SV("STRM")) ABORT
"RTN","A1AEK1",81,0)
 ;
"RTN","A1AEK1",82,0)
 ; Run through each build that came with this patch
"RTN","A1AEK1",83,0)
 ; *Note that at this time, multiple builds, new
"RTN","A1AEK1",84,0)
 ;   package installs and some other KIDS may fail
"RTN","A1AEK1",85,0)
 ;   review.  Installation is passed back to KIDS
"RTN","A1AEK1",86,0)
 ;   without intervention.*
"RTN","A1AEK1",87,0)
 N SSEKS,SEQN,XPDTCNT S (ABORT,ERRMSG,XPDTCNT)=0
"RTN","A1AEK1",88,0)
 F  S XPDTCNT=$O(XPDT(XPDTCNT)) Q:'XPDTCNT  D
"RTN","A1AEK1",89,0)
 . S SEQN=0
"RTN","A1AEK1",90,0)
 . I XPDT(XPDTCNT)["SEQ #" S SEQN=+$P(XPDT(XPDTCNT),"SEQ #",2)
"RTN","A1AEK1",91,0)
 . I 'SEQN,A1AEHDR[$P(XPDT(XPDTCNT),"^",2),A1AEHDR["SEQ #" D
"RTN","A1AEK1",92,0)
 .. S SEQN=+$P(A1AEHDR,"#",2)
"RTN","A1AEK1",93,0)
 .; Note SEQN (patch SEQ #) may be zero, but we may
"RTN","A1AEK1",94,0)
 .;  still do some evaluation before allowing install
"RTN","A1AEK1",95,0)
 .; Pull patch variables - PKG PREFIX^VERSION^PTCHNMB
"RTN","A1AEK1",96,0)
 . D KIDVAR(.KV,.XPDT,XPDTCNT)
"RTN","A1AEK1",97,0)
 .;
"RTN","A1AEK1",98,0)
 .; If we have no patch number, this is not a patch, but a new package.
"RTN","A1AEK1",99,0)
 .; So quit. We don't do that check.
"RTN","A1AEK1",100,0)
 . I '$DATA(KV("PTCHNBR")) QUIT
"RTN","A1AEK1",101,0)
 .;
"RTN","A1AEK1",102,0)
 .; Get toggle SSEKS variable.  Site Stream=KIDS Stream
"RTN","A1AEK1",103,0)
 . S SSEKS=$$SSEKS(.SV,.KV)
"RTN","A1AEK1",104,0)
 .;
"RTN","A1AEK1",105,0)
 . S KV("PTCHSQN")=SEQN
"RTN","A1AEK1",106,0)
 .;
"RTN","A1AEK1",107,0)
 .; Get the Active Version of KIDS' package at this site
"RTN","A1AEK1",108,0)
 .; If this is wrong package version, abort patch install
"RTN","A1AEK1",109,0)
 . S SV("ACTPKGV")=$$ACTVERS(KV("PKGPRFX"))
"RTN","A1AEK1",110,0)
 . I 'SV("ACTPKGV") D  Q
"RTN","A1AEK1",111,0)
 .. S ABORT=1
"RTN","A1AEK1",112,0)
 .. S ERRMSG=$P($T(VRSNERR),";;",2)
"RTN","A1AEK1",113,0)
 .. D ERRMSG(ERRMSG,KV("PTCHNM"))
"RTN","A1AEK1",114,0)
 .;
"RTN","A1AEK1",115,0)
 .; Performs the following:
"RTN","A1AEK1",116,0)
 .;  1. Builds array of all pkg patches previously installed
"RTN","A1AEK1",117,0)
 .;     by Patch Stream
"RTN","A1AEK1",118,0)
 .;  2. Builds LI array of most recently installed patch by stream
"RTN","A1AEK1",119,0)
 .;  3. Builds FI array of first installed patch by stream
"RTN","A1AEK1",120,0)
 .;  4. Sets STRMCHNG indicating whether this site has ever
"RTN","A1AEK1",121,0)
 .;     changed patch streams
"RTN","A1AEK1",122,0)
 .;
"RTN","A1AEK1",123,0)
 . D GLSTINST(KV("PKGPRFX"),KV("PTCHVER"),.PTCINST,.STRMCHNG,.LI,.FI)
"RTN","A1AEK1",124,0)
 .;
"RTN","A1AEK1",125,0)
 .; Get array of all missing SEQ# patches for this package by stream
"RTN","A1AEK1",126,0)
 . D MISSING(KV("PKGPRFX"),KV("PTCHVER"),KV("PTCHSQN"),.MSSEQ)
"RTN","A1AEK1",127,0)
 .;
"RTN","A1AEK1",128,0)
 .; *** For DEBUG only
"RTN","A1AEK1",129,0)
 .; D MSG^KBAPEMSG("A1AEK1_1 ")
"RTN","A1AEK1",130,0)
 .;
"RTN","A1AEK1",131,0)
 .; Process suitability of this patch's install
"RTN","A1AEK1",132,0)
 . I SSEKS S ABORT=$$SSEKSY(.MSSEQ,.ABORT) Q
"RTN","A1AEK1",133,0)
 . S ABORT=$$SSEKSN(.MSSEQ,.ABORT) Q
"RTN","A1AEK1",134,0)
 Q ABORT
"RTN","A1AEK1",135,0)
 ;
"RTN","A1AEK1",136,0)
 ; Site/Server and KIDS ARE same Patch Stream
"RTN","A1AEK1",137,0)
 ; ENTER
"RTN","A1AEK1",138,0)
 ;   MSSEQ   =  Array of missing installs by Patch Stream
"RTN","A1AEK1",139,0)
 ;   ABORT   =  Variable representing present Abort status
"RTN","A1AEK1",140,0)
 ; RETURN
"RTN","A1AEK1",141,0)
 ;   ABORT set to 1 if user should abort install
"RTN","A1AEK1",142,0)
 ;         otherwise, do not change
"RTN","A1AEK1",143,0)
SSEKSY(MSSEQ,ABORT) ; Process when Site/Server Stream = KIDS'
"RTN","A1AEK1",144,0)
 ; All patches for this Stream installed. Allow installation.
"RTN","A1AEK1",145,0)
 I '$D(MSSEQ(KV("PTCHSTRM"))) Q ABORT
"RTN","A1AEK1",146,0)
 ;
"RTN","A1AEK1",147,0)
 ; Some earlier SEQ# KIDS patches not installed
"RTN","A1AEK1",148,0)
 ; If Site/Server has never switch Streams. Allow with warning
"RTN","A1AEK1",149,0)
 ;  and ability to list missing patches if desired
"RTN","A1AEK1",150,0)
 I 'STRMCHNG D  Q ABORT
"RTN","A1AEK1",151,0)
 . N ERRMSG S ERRMSG=$P($T(MSNGSQN),";;",2)
"RTN","A1AEK1",152,0)
 . D ERRMSG(ERRMSG,KV("PTCHNM"))
"RTN","A1AEK1",153,0)
 . N Y S Y=$$ANSWQ
"RTN","A1AEK1",154,0)
 . N MSA S MSA=$$SHOWMSQN(.MSSEQ,KV("PKGPRFX"),KV("PTCHSTRM"),Y,.MSA)
"RTN","A1AEK1",155,0)
 ;
"RTN","A1AEK1",156,0)
 ; Since Site/Server has switched Streams, and some earlier
"RTN","A1AEK1",157,0)
 ;  patches have not been installed, show special warning
"RTN","A1AEK1",158,0)
 ;  and set ABORT to 1.  The patch should not be installed.
"RTN","A1AEK1",159,0)
 S ABORT=1
"RTN","A1AEK1",160,0)
 N ERRMSG S ERRMSG=$P($T(MSNGSQN),";;",2)
"RTN","A1AEK1",161,0)
 D ERRMSG(ERRMSG,KV("PTCHNM"))
"RTN","A1AEK1",162,0)
 D WARN
"RTN","A1AEK1",163,0)
 N Y S Y=$$ANSWQ
"RTN","A1AEK1",164,0)
 N MSA S MSA=$$SHOWMSQN(.MSSEQ,KV("PKGPRFX"),KV("PTCHSTRM"),Y,.MSA)
"RTN","A1AEK1",165,0)
 Q ABORT
"RTN","A1AEK1",166,0)
 ;
"RTN","A1AEK1",167,0)
 ; 
"RTN","A1AEK1",168,0)
 ; Process when Site/Server Stream NOT SAME as KIDS'
"RTN","A1AEK1",169,0)
 ; ENTER
"RTN","A1AEK1",170,0)
 ;   MSSEQ   =  Array of missing installs by Patch Stream
"RTN","A1AEK1",171,0)
 ;   ABORT   =  Variable representing present Abort status
"RTN","A1AEK1",172,0)
 ; RETURN
"RTN","A1AEK1",173,0)
 ;   ABORT set to 1 if user should abort install
"RTN","A1AEK1",174,0)
 ;         otherwise, do not change
"RTN","A1AEK1",175,0)
SSEKSN(MSSEQ,ABORT) ; Process when Site/Server Stream NOT SAME as KIDS'
"RTN","A1AEK1",176,0)
 ;
"RTN","A1AEK1",177,0)
 ; I the site has never installed a KIDS patch of
"RTN","A1AEK1",178,0)
 ;   this stream for this package, then ABORT installation
"RTN","A1AEK1",179,0)
 I '$D(PTCINST(KV("PTCHSTRM"),KV("PKGPRFX"))) D  Q ABORT
"RTN","A1AEK1",180,0)
 . N ERRMSG S ERRMSG=$P($T(WRNGSTRM),";;",2)
"RTN","A1AEK1",181,0)
 . D ERRMSG(ERRMSG,KV("PTCHNM"))
"RTN","A1AEK1",182,0)
 . S ABORT=1
"RTN","A1AEK1",183,0)
 ;
"RTN","A1AEK1",184,0)
 ; Site/Server has previously installed KIDS's Stream Patches
"RTN","A1AEK1",185,0)
 ; If the KIDS SEQ# is NOT LESS than the SEQ# for the first
"RTN","A1AEK1",186,0)
 ;  installed KIDS SEQ# for the Active Patch Stream, ABORT
"RTN","A1AEK1",187,0)
 I '(KV("PTCHSQN")<FI(SV("STRM"))) D  Q ABORT
"RTN","A1AEK1",188,0)
 . N ERRMSG S ERRMSG=$P($T(WRNGSTRM),";;",2)
"RTN","A1AEK1",189,0)
 . D ERRMSG(ERRMSG,KV("PTCHNM"))
"RTN","A1AEK1",190,0)
 . S ABORT=1
"RTN","A1AEK1",191,0)
 ;
"RTN","A1AEK1",192,0)
 ; If the KIDS SEQ# is LESS than the SEQ# for the first
"RTN","A1AEK1",193,0)
 ;  installed KIDS SEQ# for the Active Patch Stream, ALLOW INSTALL
"RTN","A1AEK1",194,0)
 S ABORT=0
"RTN","A1AEK1",195,0)
 N ERRMSG S ERRMSG=$P($T(MSNGSQN),";;",2)
"RTN","A1AEK1",196,0)
 D ERRMSG(ERRMSG,KV("PTCHNM"))
"RTN","A1AEK1",197,0)
 N Y S Y=$$ANSWQ
"RTN","A1AEK1",198,0)
 N MSA S MSA=$$SHOWMSQN(.MSSEQ,KV("PKGPRFX"),KV("PTCHSTRM"),Y,.MSA)
"RTN","A1AEK1",199,0)
 Q ABORT
"RTN","A1AEK1",200,0)
 ;
"RTN","A1AEK1",201,0)
 ;
"RTN","A1AEK1",202,0)
 ; Pull array of all patches previously installed for
"RTN","A1AEK1",203,0)
 ;   this package for all patch streams
"RTN","A1AEK1",204,0)
 ; Use ^DIC(9.4,"A1AESEQ",PKG,VER,STRM,SEQ,PATCH)
"RTN","A1AEK1",205,0)
 ;  cross reference
"RTN","A1AEK1",206,0)
 ;ENTER
"RTN","A1AEK1",207,0)
 ;   PKGPRFX  =  Package PREFIX or abbreviation
"RTN","A1AEK1",208,0)
 ;   PKGVER   =  Active package version
"RTN","A1AEK1",209,0)
 ;   PTCINST  =  Patch Stream Array by reference
"RTN","A1AEK1",210,0)
 ;   STRMCHNG =  variable by reference
"RTN","A1AEK1",211,0)
 ;   LI       =  Last installs Array by reference
"RTN","A1AEK1",212,0)
 ;   FI       =  First install Array by reference
"RTN","A1AEK1",213,0)
 ;EXIT
"RTN","A1AEK1",214,0)
 ;   PTCINST(STREAM,SEQ#,PKG ABB,PKGVER,PATCH NAME)=""
"RTN","A1AEK1",215,0)
 ;   STRMCHNG
"RTN","A1AEK1",216,0)
 ;       0=never changed patch streams
"RTN","A1AEK1",217,0)
 ;       1=has changed patch streams
"RTN","A1AEK1",218,0)
 ;   LI(STREAM)=SEQ#
"RTN","A1AEK1",219,0)
 ;   FI(STREAM)=SEQ#
"RTN","A1AEK1",220,0)
GLSTINST(PKGPRFX,PKGVER,PTCINST,STRMCHNG,LI,FI) ; Blds array of installs
"RTN","A1AEK1",221,0)
 K PTCINST,LI,FI,STRMCHNG
"RTN","A1AEK1",222,0)
 S STRMCHNG=0
"RTN","A1AEK1",223,0)
 S PTCINST(0)=0
"RTN","A1AEK1",224,0)
 N NODE S NODE=$NA(^DIC(9.4,"A1AESEQ",PKGPRFX,PKGVER))
"RTN","A1AEK1",225,0)
 N STRM,SC,SNODE S SC=0,SNODE=$P(NODE,")")
"RTN","A1AEK1",226,0)
 F  S NODE=$Q(@NODE) Q:NODE'[SNODE  D
"RTN","A1AEK1",227,0)
 . I ($G(STRM)'=$QS(NODE,5)) S STRM=$QS(NODE,5) D
"RTN","A1AEK1",228,0)
 .. S FI($QS(NODE,5))=$QS(NODE,6)
"RTN","A1AEK1",229,0)
 . S PTCINST($QS(NODE,5),$QS(NODE,6),PKGPRFX,PKGVER,$QS(NODE,7))=""
"RTN","A1AEK1",230,0)
 . S LI($QS(NODE,5))=$QS(NODE,6)
"RTN","A1AEK1",231,0)
 . S PTCINST(0)=$G(PTCINST(0))+1
"RTN","A1AEK1",232,0)
 . S SC=$S(SC=0:SC=$QS(NODE,5),SC=$QS(NODE,5):$QS(NODE,5),1:"C")
"RTN","A1AEK1",233,0)
 S STRMCHNG=$S(SC="C":1,1:0)
"RTN","A1AEK1",234,0)
 Q
"RTN","A1AEK1",235,0)
 ;
"RTN","A1AEK1",236,0)
 ; Pull array of missing sequence numbers (patches not installed)
"RTN","A1AEK1",237,0)
 ;  for each stream
"RTN","A1AEK1",238,0)
 ;ENTER
"RTN","A1AEK1",239,0)
 ;   PKGPRFX  = Package prefix
"RTN","A1AEK1",240,0)
 ;   PKGVER   = Current version of package
"RTN","A1AEK1",241,0)
 ;   PTCHSEQN = Sequence number of patch in question
"RTN","A1AEK1",242,0)
 ;   MSSEQ    = Array passed by reference
"RTN","A1AEK1",243,0)
 ;RETURN
"RTN","A1AEK1",244,0)
 ;   MSSEQ    = Array of Sequence Numbers, Patch names
"RTN","A1AEK1",245,0)
 ;              that should be installed before this patch
"RTN","A1AEK1",246,0)
 ;   e.g.
"RTN","A1AEK1",247,0)
 ; ^DIC(9.4,"A1AESEQ","DG",5.3,1,74,"DG*5.3*77")
"RTN","A1AEK1",248,0)
 ; ^DIC(9.4,"A1AESEQ","DG",5.3,1,75,"DG*5.3*79")
"RTN","A1AEK1",249,0)
 ; ^DIC(9.4,"A1AESEQ","DG",5.3,1,76,"DG*5.3*80")
"RTN","A1AEK1",250,0)
 ; ^DIC(9.4,"A1AESEQ","DG",5.3,1,78,"DG*5.3*82")
"RTN","A1AEK1",251,0)
 ; ^DIC(9.4,"A1AESEQ","DG",5.3,1,80,"DG*5.3*78")
"RTN","A1AEK1",252,0)
 ; ^DIC(9.4,"A1AESEQ","DG",5.3,1,82,"DG*5.3*88")
"RTN","A1AEK1",253,0)
 ;   Returns
"RTN","A1AEK1",254,0)
 ; MSSEQ(1,77)=""
"RTN","A1AEK1",255,0)
 ; MSSEQ(1,79)=""
"RTN","A1AEK1",256,0)
 ; MSSEQ(1,81)=""
"RTN","A1AEK1",257,0)
MISSING(PKGPRFX,PKGVER,PTCHSQN,MSSEQ) ; Return missing install SEQ#
"RTN","A1AEK1",258,0)
 Q:$G(PKGPRFX)=""
"RTN","A1AEK1",259,0)
 Q:'$G(PKGVER)
"RTN","A1AEK1",260,0)
 Q:'$G(PTCHSQN)
"RTN","A1AEK1",261,0)
 K MSSEQ
"RTN","A1AEK1",262,0)
 Q:$G(PTCHSQN)=1
"RTN","A1AEK1",263,0)
 N STRM,SEQN,STRMABB,PTCHNM S STRMABB=""
"RTN","A1AEK1",264,0)
 F  S STRMABB=$O(^A1AE(11007.1,"C",STRMABB)) Q:STRMABB=""  D
"RTN","A1AEK1",265,0)
 . S STRM=+$O(^A1AE(11007.1,"C",STRMABB,0)) Q:'STRM
"RTN","A1AEK1",266,0)
 . F SEQN=1:1:PTCHSQN D
"RTN","A1AEK1",267,0)
 .. I $D(^DIC(9.4,"A1AESEQ",PKGPRFX,PKGVER,STRM,SEQN)) Q
"RTN","A1AEK1",268,0)
 .. S MSSEQ(STRM,SEQN)=""
"RTN","A1AEK1",269,0)
 Q
"RTN","A1AEK1",270,0)
 ;
"RTN","A1AEK1",271,0)
 ; ENTER
"RTN","A1AEK1",272,0)
 ;   MSSEQ   = array by reference with uninstalled
"RTN","A1AEK1",273,0)
 ;             patches and their sequence numbers
"RTN","A1AEK1",274,0)
 ;   STRM    = Site's stream number
"RTN","A1AEK1",275,0)
 ;   PKGPRFX = Package prefix (e.g. "DG")
"RTN","A1AEK1",276,0)
 ;   Y       = 0 = user didn't wish display, save in array
"RTN","A1AEK1",277,0)
 ;           = 1 = display uninstalled patches
"RTN","A1AEK1",278,0)
 ;   MSARRAY = Array of missing patches
"RTN","A1AEK1",279,0)
 ; RETURN
"RTN","A1AEK1",280,0)
 ;   display uninstalled patches if asked to do so
"RTN","A1AEK1",281,0)
 ;   return array of missing patche
"RTN","A1AEK1",282,0)
SHOWMSQN(MSSEQ,PKGPRFX,STRM,Y,MSA) ; Show/build array missing SEQ#
"RTN","A1AEK1",283,0)
 S ^XTMP("A1AEK1")=PKGPRFX_"^"_STRM_"^"_Y
"RTN","A1AEK1",284,0)
 M ^XTMP("A1AEK1 MSSEQ")=MSSEQ(STRM)
"RTN","A1AEK1",285,0)
 K MSA S MSA(0)=0
"RTN","A1AEK1",286,0)
 Q:'STRM MSA(0)
"RTN","A1AEK1",287,0)
 Q:'($D(MSSEQ(STRM))) MSA(0)
"RTN","A1AEK1",288,0)
 N SEQN S SEQN=0
"RTN","A1AEK1",289,0)
 F  S SEQN=$O(MSSEQ(STRM,SEQN)) Q:'SEQN  D
"RTN","A1AEK1",290,0)
 . I Y W !,PKGPRFX," SEQ#: ",SEQN Q
"RTN","A1AEK1",291,0)
 . S MSA(0)=$G(MSA(0))+1 D
"RTN","A1AEK1",292,0)
 .. S MSA(MSA(0))=PKGPRFX_" SEQ#: "_SEQN
"RTN","A1AEK1",293,0)
 Q MSA(0)
"RTN","A1AEK1",294,0)
 ;
"RTN","A1AEK1",295,0)
 ;ENTER
"RTN","A1AEK1",296,0)
 ;  nothing required
"RTN","A1AEK1",297,0)
 ;RETURN
"RTN","A1AEK1",298,0)
 ;  Y  set to 0 for NO, 1 for YES
"RTN","A1AEK1",299,0)
ANSWQ() ; Return answer of YES/NO question
"RTN","A1AEK1",300,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","A1AEK1",301,0)
 S DIR(0)="Y"
"RTN","A1AEK1",302,0)
 S DIR("A")="Display listing of missing sequence numbers?"
"RTN","A1AEK1",303,0)
 S DIR("B")="N"
"RTN","A1AEK1",304,0)
 D ^DIR
"RTN","A1AEK1",305,0)
 Q +$G(Y)
"RTN","A1AEK1",306,0)
 ;
"RTN","A1AEK1",307,0)
 ; 
"RTN","A1AEK1",308,0)
 ;
"RTN","A1AEK1",309,0)
 ; ENTER
"RTN","A1AEK1",310,0)
 ;   SV   =  Array by reference of Site variables built by SITEVAR
"RTN","A1AEK1",311,0)
 ;   KV   =  Array by reference of KIDS variables built by KIDSVAR
"RTN","A1AEK1",312,0)
 ; RETURN
"RTN","A1AEK1",313,0)
 ;   1  = Site's patch stream = KIDS patch stream
"RTN","A1AEK1",314,0)
 ;   0  = Site's patch stream DOES NOT match KIDS patch stream
"RTN","A1AEK1",315,0)
SSEKS(SV,KV) ; Set variable representing whether SiteStream=KIDSstream
"RTN","A1AEK1",316,0)
 Q (SV("STRM")=$G(KV("PTCHSTRM")))
"RTN","A1AEK1",317,0)
 ;
"RTN","A1AEK1",318,0)
 ; ENTER
"RTN","A1AEK1",319,0)
 ;   SV   =  array by reference
"RTN","A1AEK1",320,0)
 ; RETURN
"RTN","A1AEK1",321,0)
 ;   SV array with Sties patch stream variables
"RTN","A1AEK1",322,0)
SITEVAR(SV) ; Build array of Site Patch stream variables
"RTN","A1AEK1",323,0)
 K SV
"RTN","A1AEK1",324,0)
 N STRM S STRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEK1",325,0)
 S:STRM SV("STRM")=STRM
"RTN","A1AEK1",326,0)
 S:STRM SV("STRMNM")=$P($G(^A1AE(11007.1,STRM,0)),"^")
"RTN","A1AEK1",327,0)
 S:STRM SV("STRMDT")=$O(^A1AE(11007.1,STRM,1,"B","A"),-1)
"RTN","A1AEK1",328,0)
 S:STRM SV("STRMPRFX")=$$GET1^DIQ(11007.1,STRM,.05)
"RTN","A1AEK1",329,0)
 Q
"RTN","A1AEK1",330,0)
 ;
"RTN","A1AEK1",331,0)
 ;
"RTN","A1AEK1",332,0)
 ; ENTER
"RTN","A1AEK1",333,0)
 ;   KV
"RTN","A1AEK1",334,0)
 ;   XPDT
"RTN","A1AEK1",335,0)
 ;   XPDTCNT
"RTN","A1AEK1",336,0)
 ; RETURN
"RTN","A1AEK1",337,0)
 ;   KV array with KIDS' patch stream variables
"RTN","A1AEK1",338,0)
KIDVAR(KV,XPDT,XPDTCNT) ;
"RTN","A1AEK1",339,0)
 K KV Q:'XPDTCNT
"RTN","A1AEK1",340,0)
 Q:'$D(XPDT(XPDTCNT))
"RTN","A1AEK1",341,0)
 N PTCHNM S PTCHNM=$P(XPDT(XPDTCNT),"^",2)
"RTN","A1AEK1",342,0)
 I $L(PTCHNM),($L(PTCHNM,"*")=3) D
"RTN","A1AEK1",343,0)
 . S KV("PTCHNM")=PTCHNM
"RTN","A1AEK1",344,0)
 . S KV("PKGPRFX")=$P(PTCHNM,"*")
"RTN","A1AEK1",345,0)
 . S KV("PTCHVER")=$P(PTCHNM,"*",2)
"RTN","A1AEK1",346,0)
 . S KV("PTCHNBR")=$P(PTCHNM,"*",3)
"RTN","A1AEK1",347,0)
 . N I S I=0 F  S I=$O(^A1AE(11007.1,I)) Q:'I  Q:(I>KV("PTCHNBR"))  D
"RTN","A1AEK1",348,0)
 .. S KV("PTCHSTRM")=I
"RTN","A1AEK1",349,0)
 . N PTCHDA S PTCHDA=+$G(XPDT(XPDTCNT)) I PTCHDA D
"RTN","A1AEK1",350,0)
 .. N NODE S NODE=$NA(^XTMP("XPDI",PTCHDA)),NODE=$Q(@NODE)
"RTN","A1AEK1",351,0)
 .. S KV("PTCHRDT")=$P(@NODE,"^",4)
"RTN","A1AEK1",352,0)
 Q
"RTN","A1AEK1",353,0)
 ;
"RTN","A1AEK1",354,0)
 ;ENTER
"RTN","A1AEK1",355,0)
 ;   PKGPRFX  = Package prefix or abbreviation
"RTN","A1AEK1",356,0)
 ;RETURN
"RTN","A1AEK1",357,0)
 ;   0 = package not supported at this site
"RTN","A1AEK1",358,0)
 ;   n = active version of this package
"RTN","A1AEK1",359,0)
ACTVERS(PKGPRFX) ; Return Site's Active version of this package
"RTN","A1AEK1",360,0)
 N I S I=$O(^DIC(9.4,"C",PKGPRFX,0)) Q:'I 0
"RTN","A1AEK1",361,0)
 Q $$GET1^DIQ(9.4,I_",",13)
"RTN","A1AEK1",362,0)
 ;
"RTN","A1AEK1",363,0)
 ;ENTER
"RTN","A1AEK1",364,0)
 ;   ERRMSG  = Error message
"RTN","A1AEK1",365,0)
 ;   PTCHNM  = Patch Name (e.g. DG*5.3*770)
"RTN","A1AEK1",366,0)
 ;RETURN
"RTN","A1AEK1",367,0)
 ;   Write out error message and patch name if called
"RTN","A1AEK1",368,0)
 ;   Return error message and patch name if entered as extrinsic
"RTN","A1AEK1",369,0)
ERRMSG(ERRMSG,PTCHNM) ; Process error message
"RTN","A1AEK1",370,0)
 I '$Q W !,"** ",ERRMSG," **",!
"RTN","A1AEK1",371,0)
 Q:$Q ERRMSG_"^"_PTCHNM Q
"RTN","A1AEK1",372,0)
 ;
"RTN","A1AEK1",373,0)
 ;
"RTN","A1AEK1",374,0)
WARN(STRNG) N TXT,CNT S CNT=0
"RTN","A1AEK1",375,0)
 F  S TXT=$P($T(WARNTXT+CNT),";;",2) Q:TXT["*END*"  D  Q:TXT=""
"RTN","A1AEK1",376,0)
 . S CNT=CNT+1 W:'$D(STRNG) !,TXT
"RTN","A1AEK1",377,0)
 S STRNG=TXT
"RTN","A1AEK1",378,0)
 Q:$Q STRNG Q
"RTN","A1AEK1",379,0)
 ;
"RTN","A1AEK1",380,0)
WARNTXT ;;                    ***
"RTN","A1AEK1",381,0)
 ;;As this Site/Server has switch Patch Streams,"
"RTN","A1AEK1",382,0)
 ;;  you are required to install all Patches"
"RTN","A1AEK1",383,0)
 ;;  released in support of this package for
"RTN","A1AEK1",384,0)
 ;;  your Active Patch Stream."
"RTN","A1AEK1",385,0)
 ;;             --- OR ---"
"RTN","A1AEK1",386,0)
 ;;  Edit the following fields in the Package [#9.4]
"RTN","A1AEK1",387,0)
 ;;  file to indicate your unwillingness to install 
"RTN","A1AEK1",388,0)
 ;;  one or more back patches"
"RTN","A1AEK1",389,0)
 ;;  PATCH APPLICATION HISTORY [#.01] enter as
"RTN","A1AEK1",390,0)
 ;;     Patch Number [space] "SEQ#" [space] Patch SEQ#
"RTN","A1AEK1",391,0)
 ;;  DATE APPLIED [#.02] 
"RTN","A1AEK1",392,0)
 ;;  APPLIED BY [#.03]
"RTN","A1AEK1",393,0)
 ;;  DESCRIPTION [#1] Reason for not installing
"RTN","A1AEK1",394,0)
 ;;                     ***
"RTN","A1AEK1",395,0)
 ;;*END*
"RTN","A1AEK1",396,0)
 ;
"RTN","A1AEK1",397,0)
 ; Error messages 
"RTN","A1AEK1",398,0)
PKGVERR ;;Couln't ascertain active package version on system
"RTN","A1AEK1",399,0)
VRSNERR ;;Does not represent current package version
"RTN","A1AEK1",400,0)
MSNGSQN ;;Earler SEQUENCE #'d patches for package not installed
"RTN","A1AEK1",401,0)
WRNGSTRM ;;KIDS install not for your package STREAM
"RTN","A1AEK1",402,0)
 ;
"RTN","A1AEK1",403,0)
 ;
"RTN","A1AEK1",404,0)
EOR ; end of routine A1AEK1
"RTN","A1AEK2")
0^110^B98333709
"RTN","A1AEK2",1,0)
A1AEK2 ;ven/lgc-forum-site subscription messaging ;2015-05-28T06:45
"RTN","A1AEK2",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEK2",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEK2",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEK2",5,0)
 ;
"RTN","A1AEK2",6,0)
 ;
"RTN","A1AEK2",7,0)
 ;primary change history
"RTN","A1AEK2",8,0)
 ;2014-12-27: version 2.4 released
"RTN","A1AEK2",9,0)
 ;
"RTN","A1AEK2",10,0)
 ;
"RTN","A1AEK2",11,0)
 ; CHANGE VEN/LGC 2015 03 21
"RTN","A1AEK2",12,0)
 ;    Set G.A1AEFMSC as the FORUM mail group name that
"RTN","A1AEK2",13,0)
 ;    will receive Patch Stream Change messaging
"RTN","A1AEK2",14,0)
 ;
"RTN","A1AEK2",15,0)
 ; CHANGE VEN/LGC 2015 05 27
"RTN","A1AEK2",16,0)
 ;    Modifications in A1AEF1 where DIERR shows failure.
"RTN","A1AEK2",17,0)
 ;    DATA saved in FDATA while DIERR error is considered.
"RTN","A1AEK2",18,0)
 ;
"RTN","A1AEK2",19,0)
 S ^XTMP($J,"A1AEK2 FROM TOP")=""
"RTN","A1AEK2",20,0)
 Q  ; Not from top
"RTN","A1AEK2",21,0)
 ;
"RTN","A1AEK2",22,0)
 ;
"RTN","A1AEK2",23,0)
 ; Input transform for SUBSCRIPTION [#.06] field in
"RTN","A1AEK2",24,0)
 ;  DHCP PATCH STREAM [#11007.1] file.
"RTN","A1AEK2",25,0)
 ; With an attempt to edit the SUBSCRIPTION field to
"RTN","A1AEK2",26,0)
 ;  set the site to another Patch Stream, the user
"RTN","A1AEK2",27,0)
 ;  is notified that such changes must be done by
"RTN","A1AEK2",28,0)
 ;  a Forum application edit.  However, the request
"RTN","A1AEK2",29,0)
 ;  for the change is generated and forwarded to
"RTN","A1AEK2",30,0)
 ;  Forum through the A1AESTRMCHG mail group.
"RTN","A1AEK2",31,0)
 ; If the variable A1AEFOAP (Forum Approved) is defined
"RTN","A1AEK2",32,0)
 ;  an edit proceeds without interference.
"RTN","A1AEK2",33,0)
 ; ENTER
"RTN","A1AEK2",34,0)
 ;   A1AEFOAP  = exists if editing by Forum action
"RTN","A1AEK2",35,0)
 ;   STRM      = entry in DHCP PATCH STREAM desired
"RTN","A1AEK2",36,0)
 ;               e.g. 1 or 10001
"RTN","A1AEK2",37,0)
 ;   DUZ       = user
"RTN","A1AEK2",38,0)
 ;   Y0        = user selection to SEQUENCE if called
"RTN","A1AEK2",39,0)
 ;                through FM edit INPUT TEMPLATE
"RTN","A1AEK2",40,0)
 ;               --- or set by Option
"RTN","A1AEK2",41,0)
 ;   SLNT      = [OPTIONAL] SILENT TOGGLE 1=YES
"RTN","A1AEK2",42,0)
 ; EXIT
"RTN","A1AEK2",43,0)
 ;   SLNT  = if passed as 1 (true) return data array
"RTN","A1AEK2",44,0)
 ;           if not passed or 0 then email delivered
"RTN","A1AEK2",45,0)
 ;   Sends out email request for SEQUENCE (patch stream)
"RTN","A1AEK2",46,0)
 ;    change to Forum
"RTN","A1AEK2",47,0)
STRM(STRM,Y0,SLNT) ; INPUT TRANSFORM ON SUBSCRIPTION [.06] in 11007.1
"RTN","A1AEK2",48,0)
 Q:$D(A1AEFOAP)
"RTN","A1AEK2",49,0)
 S SLNT=$S($G(SLNT):1,1:0)
"RTN","A1AEK2",50,0)
 I Y0="YES",+$G(STRM),$O(^A1AE(11007.1,"ASUBS",0,0))=STRM D
"RTN","A1AEK2",51,0)
 . I $$CONFIRM!SLNT D
"RTN","A1AEK2",52,0)
 .. N SERVER S SERVER=$$GET1^DIQ(8989.3,1_",",.01) ; REQST DOMAIN
"RTN","A1AEK2",53,0)
 .. I $$NEWSTRM(DUZ,$$HTFM^XLFDT($H),SERVER,+$G(STRM),SLNT) D
"RTN","A1AEK2",54,0)
 ... W:'SLNT !,!,"*** Forum is being notified of your request"
"RTN","A1AEK2",55,0)
 ... W:'SLNT !,"to change your site's SUBSCRIPTION to "
"RTN","A1AEK2",56,0)
 ... W:'SLNT !,"   ",$P(^A1AE(11007.1,STRM,0),"^"),"***",!
"RTN","A1AEK2",57,0)
 ; Since updating SEQUENCE requires FORUM action, the 
"RTN","A1AEK2",58,0)
 ;  input transform ALWAYS kills X
"RTN","A1AEK2",59,0)
 K X
"RTN","A1AEK2",60,0)
 Q
"RTN","A1AEK2",61,0)
 ;
"RTN","A1AEK2",62,0)
 ;
"RTN","A1AEK2",63,0)
 ;ENTER
"RTN","A1AEK2",64,0)
 ;  nothing required
"RTN","A1AEK2",65,0)
 ;RETURN
"RTN","A1AEK2",66,0)
 ;  0 for NO, 1 for YES
"RTN","A1AEK2",67,0)
CONFIRM() ; Return answer to confirm No/Yes
"RTN","A1AEK2",68,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","A1AEK2",69,0)
 S DIR(0)="Y"
"RTN","A1AEK2",70,0)
 S DIR("A")="Confirm desire to switch PATCH SUBSCRIPTION"
"RTN","A1AEK2",71,0)
 S DIR("B")="N"
"RTN","A1AEK2",72,0)
 D ^DIR
"RTN","A1AEK2",73,0)
 Q +$G(Y)
"RTN","A1AEK2",74,0)
 ;
"RTN","A1AEK2",75,0)
 ;
"RTN","A1AEK2",76,0)
 ; Send formatted email out to G.A1AESTRMCHG to be sent
"RTN","A1AEK2",77,0)
 ;  to local users on the mail group and through the server
"RTN","A1AEK2",78,0)
 ;  on the MEMBERS REMOTE named S.A1AENEWSTRM
"RTN","A1AEK2",79,0)
 ; Action fired off by an INPUT TRANSFORM on the 
"RTN","A1AEK2",80,0)
 ;  SUBSCRIPTION [#.06] field in the DHCP PATCH STREAM
"RTN","A1AEK2",81,0)
 ;  [#11007.1] file
"RTN","A1AEK2",82,0)
 ; ENTER
"RTN","A1AEK2",83,0)
 ;  DUZ     =  user
"RTN","A1AEK2",84,0)
 ;  SCDT    =  date/time stream change requested
"RTN","A1AEK2",85,0)
 ;  SERVER  =  name of server
"RTN","A1AEK2",86,0)
 ;  STRM    =  new stream desired
"RTN","A1AEK2",87,0)
 ;  SLNT    =  toggle for SILENT to FORUM
"RTN","A1AEK2",88,0)
 ;             0 normal mode, msg subject toggles sending to FORUM
"RTN","A1AEK2",89,0)
 ;             1 test mode, msg subject stops sending to FORUM
"RTN","A1AEK2",90,0)
 ; EXIT
"RTN","A1AEK2",91,0)
 ;  0^COMMENT if error, or IEN into 3.9 for message
"RTN","A1AEK2",92,0)
NEWSTRM(DUZ,SCDT,SERVER,STRM,SLNT) ;
"RTN","A1AEK2",93,0)
 Q:'$G(DUZ) "1^MISSING DUZ"
"RTN","A1AEK2",94,0)
 Q:'$G(SCDT) "1^MISSING or BAD Stream Change Date/Time"
"RTN","A1AEK2",95,0)
 Q:'$L(SERVER) "1^MISSING SERVER information"
"RTN","A1AEK2",96,0)
 Q:'$G(STRM) "1^MISSING STREAM information"
"RTN","A1AEK2",97,0)
 N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEK2",98,0)
 N ACTSTRMD S ACTSTRMD=$O(^A1AE(11007.1,+$G(ACTSTRM),1,"B","A"),-1)
"RTN","A1AEK2",99,0)
 N XMSUBJ S XMSUBJ=SERVER_":::SUBSCRIPTION CHNG REQUEST "
"RTN","A1AEK2",100,0)
 S:SLNT XMSUBJ="A1AE:::SUBSCRIPTION CHNG REQUEST "
"RTN","A1AEK2",101,0)
 N VAP S:SLNT VAP="T+1"
"RTN","A1AEK2",102,0)
 N DATA
"RTN","A1AEK2",103,0)
 S DATA(0)=6
"RTN","A1AEK2",104,0)
 S DATA(1)="SERVER:::"_SERVER
"RTN","A1AEK2",105,0)
 S DATA(2)="ACTIVE SUBSCRIPTION:::"_ACTSTRM
"RTN","A1AEK2",106,0)
 S DATA(3)="DATE SUBSCRIPTION ACTIVE:::"_ACTSTRMD
"RTN","A1AEK2",107,0)
 S DATA(4)="REQUESTOR DUZ:::"_DUZ
"RTN","A1AEK2",108,0)
 S DATA(5)="SWITCH TO SUBSCRIPTION:::"_STRM
"RTN","A1AEK2",109,0)
 S DATA(6)="SWITCH REQUEST DATE:::"_SCDT
"RTN","A1AEK2",110,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",111,0)
 ; Returns 0^comment for error, or IEN of mail message in 3.9
"RTN","A1AEK2",112,0)
 Q $$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",113,0)
 ;
"RTN","A1AEK2",114,0)
 ;
"RTN","A1AEK2",115,0)
 ;S.A1AENEWSTRM receives emails sent to G.A1AESTRMCHG
"RTN","A1AEK2",116,0)
 ; and calls the PRCSMAIL linetag below
"RTN","A1AEK2",117,0)
 ; Get first line of incoming mail
"RTN","A1AEK2",118,0)
 ;  e.g. Outgoing email from site requesting new stream
"RTN","A1AEK2",119,0)
 ;        FORUM.OSEHRA.ORG SUBSCRIPTION CHNG REQUEST
"RTN","A1AEK2",120,0)
 ;       Incoming confirmation email from FORUM
"RTN","A1AEK2",121,0)
 ;        FORUM.OSEHRA.ORG SUBSCRIPTION CHNG APPR
"RTN","A1AEK2",122,0)
 ;        FORUM.OSEHRA.ORG SUBSCRIPTION CHNG NOT APPR
"RTN","A1AEK2",123,0)
 ;       Outgoing email from site to FORUM confirm change
"RTN","A1AEK2",124,0)
 ;        FORUM.OSEHRA.ORG SUBSCRIPTION CHNG COMPLETED
"RTN","A1AEK2",125,0)
 ;        FORUM.OSEHAA.ORG SUBSCRIPTION CHNG FAILED
"RTN","A1AEK2",126,0)
 ; ENTER
"RTN","A1AEK2",127,0)
 ;   XMZ  =  IEN of mail in ^XMB(3.9
"RTN","A1AEK2",128,0)
 ;   emails arriving into this mailgroup are ignored by
"RTN","A1AEK2",129,0)
 ;    server if SUBJECT not identified.
"RTN","A1AEK2",130,0)
 ; EXIT
"RTN","A1AEK2",131,0)
 ;   Returns TXT value if called as extrinsic
"RTN","A1AEK2",132,0)
 ;       TXT="" if subj processed, "*END*" if not
"RTN","A1AEK2",133,0)
 ;   Takes appropriate action on email requests,confirmations
"RTN","A1AEK2",134,0)
PRCSMAIL(A1AESTR) ; Process mail concerning changing site's Patch Stream
"RTN","A1AEK2",135,0)
 Q:'$G(XMZ)
"RTN","A1AEK2",136,0)
 N XTBMLN1 S XTBMLN1=$G(^XMB(3.9,XMZ,0))
"RTN","A1AEK2",137,0)
 N TXT,CNT S CNT=0
"RTN","A1AEK2",138,0)
 F  S TXT=$P($T(FMSUBJ+CNT),";;",2) Q:TXT["*END*"  D  Q:TXT=""
"RTN","A1AEK2",139,0)
 . I TXT'="",XTBMLN1[$P(TXT,"^") D @$P(TXT,"^",2) S TXT="" Q
"RTN","A1AEK2",140,0)
 . S CNT=CNT+1
"RTN","A1AEK2",141,0)
 S A1AESTR=TXT
"RTN","A1AEK2",142,0)
 Q:$Q A1AESTR Q
"RTN","A1AEK2",143,0)
 ;
"RTN","A1AEK2",144,0)
 ;
"RTN","A1AEK2",145,0)
 ; Now deal with contents of structured email depending
"RTN","A1AEK2",146,0)
 ;  on the subject (line1) of the email.  The linetag
"RTN","A1AEK2",147,0)
 ;  to call is pulled from the above loop looking at
"RTN","A1AEK2",148,0)
 ;  the text at linetag FMSUBJ at the bottom of this routine.
"RTN","A1AEK2",149,0)
 ;
"RTN","A1AEK2",150,0)
 ;SUBSCRIPTION CHNG REQUEST
"RTN","A1AEK2",151,0)
 ;ENTER
"RTN","A1AEK2",152,0)
 ;  XMZ  =  IEN of message in 3.9
"RTN","A1AEK2",153,0)
 ;RETURNS
"RTN","A1AEK2",154,0)
 ;  sends email message
"RTN","A1AEK2",155,0)
 ; example expected text
"RTN","A1AEK2",156,0)
 ;    SERVER:::FORUM.OSEHRA.ORG
"RTN","A1AEK2",157,0)
 ;    ACTIVE SUBSCRIPTION:::1
"RTN","A1AEK2",158,0)
 ;    DATE SUBSCRIPTION ACTIVE:::3150305.004002
"RTN","A1AEK2",159,0)
 ;    REQUESTOR DUZ:::799
"RTN","A1AEK2",160,0)
 ;    SWITCH TO SUBSCRIPTION:::10001
"RTN","A1AEK2",161,0)
 ;    SWITCH REQUEST DATE:::3150305.23481
"RTN","A1AEK2",162,0)
 ;    Called as DO, Structured request email sent to FORUM
"RTN","A1AEK2",163,0)
 ;    Run as extrinsic, email with subject that will NOT
"RTN","A1AEK2",164,0)
 ;      be trapped by server PRCSMAIL
"RTN","A1AEK2",165,0)
FCNF0 ; Process outgoing Sendsubscription change request to FORUM
"RTN","A1AEK2",166,0)
 ; Simply forward the message on to FORUM
"RTN","A1AEK2",167,0)
 N UT S UT=(^XMB(3.9,XMZ,0)["A1AE:::")
"RTN","A1AEK2",168,0)
 N NSTRM,I S (I,NSTRM)=0
"RTN","A1AEK2",169,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",170,0)
 . I ^XMB(3.9,XMZ,2,I,0)["SWITCH TO SUBSCRIPTION:::" D
"RTN","A1AEK2",171,0)
 .. S NSTRM=$P(^XMB(3.9,XMZ,2,I,0),":::",2)
"RTN","A1AEK2",172,0)
 Q:'NSTRM
"RTN","A1AEK2",173,0)
 N FRMDMN S FRMDMN=$$GET1^DIQ(11007.1,NSTRM_",",.07)
"RTN","A1AEK2",174,0)
 I 'UT N XMY S XMY("G.A1AEFMSC@"_FRMDMN)="" D ENT1^XMD Q
"RTN","A1AEK2",175,0)
 ; Fall into Unit Test
"RTN","A1AEK2",176,0)
 N DATA,I S I=0
"RTN","A1AEK2",177,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",178,0)
 . S DATA(I)=^XMB(3.9,XMZ,2,I,0),DATA(0)=I
"RTN","A1AEK2",179,0)
 S XMSUBJ="A1AE FCNF0"
"RTN","A1AEK2",180,0)
 N VAP S VAP="T+1"
"RTN","A1AEK2",181,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",182,0)
 N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",183,0)
 Q
"RTN","A1AEK2",184,0)
 ;
"RTN","A1AEK2",185,0)
 ;
"RTN","A1AEK2",186,0)
 ;
"RTN","A1AEK2",187,0)
 ; SUBSCRIPTION CHNG APPR
"RTN","A1AEK2",188,0)
 ; expected text of message
"RTN","A1AEK2",189,0)
 ;    SERVER:::FORUM.OSEHRA.ORG
"RTN","A1AEK2",190,0)
 ;    ACTIVE SUBSCRIPTION:::1
"RTN","A1AEK2",191,0)
 ;    DATE SUBSCRIPTION ACTIVE:::3150305.004002
"RTN","A1AEK2",192,0)
 ;    REQUESTOR DUZ:::799
"RTN","A1AEK2",193,0)
 ;    SWITCH TO SUBSCRIPTION:::10001
"RTN","A1AEK2",194,0)
 ;    SWITCH REQUEST DATE:::3150305.23481
"RTN","A1AEK2",195,0)
 ;    APPROVED:::YES
"RTN","A1AEK2",196,0)
 ;
"RTN","A1AEK2",197,0)
 ;  Edit 11007.1 file, send CHNG COMPLETED email
"RTN","A1AEK2",198,0)
FCNF1() ; Process incoming FORUM APPROVAL to switch streams
"RTN","A1AEK2",199,0)
 ; Get data from incoming email
"RTN","A1AEK2",200,0)
 N DATA,I S I=0
"RTN","A1AEK2",201,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",202,0)
 . S DATA(I)=^XMB(3.9,XMZ,2,I,0),DATA(0)=I
"RTN","A1AEK2",203,0)
 ; Check that the incoming mail was from this site/server
"RTN","A1AEK2",204,0)
 ;   and approval before proceeding
"RTN","A1AEK2",205,0)
 N SERVER S SERVER=$$GET1^DIQ(8989.3,1_",",.01)
"RTN","A1AEK2",206,0)
 I $$FND(.DATA,"SERVER")'=SERVER Q
"RTN","A1AEK2",207,0)
 I $$FND(.DATA,"APPROVED")'="YES" Q
"RTN","A1AEK2",208,0)
 ; Save Data array for later
"RTN","A1AEK2",209,0)
 N POO M POO=DATA
"RTN","A1AEK2",210,0)
 ; Now do edit
"RTN","A1AEK2",211,0)
 N FDA,DIERR,X,Y,A1AEFOAP,STRM
"RTN","A1AEK2",212,0)
 ; This variable needs to exist to pass input transform on
"RTN","A1AEK2",213,0)
 ;   the SEQUENCE [#.06] field of DHCP PATCH STREAM [#11007.1] file
"RTN","A1AEK2",214,0)
 S A1AEFOAP=""
"RTN","A1AEK2",215,0)
 ; Pull patch stream requested from structured email
"RTN","A1AEK2",216,0)
 S STRM=$$FND(.DATA,"SWITCH TO SUBSCRIPTION")
"RTN","A1AEK2",217,0)
 ; Update the site's SUBSCRIPTION to the new patch stream
"RTN","A1AEK2",218,0)
 S FDA(3,11007.1,STRM_",",.06)=1
"RTN","A1AEK2",219,0)
 D UPDATE^DIE("","FDA(3)")
"RTN","A1AEK2",220,0)
 H 1
"RTN","A1AEK2",221,0)
 ;
"RTN","A1AEK2",222,0)
 ; *** Send out subscription changed failure email ***
"RTN","A1AEK2",223,0)
 ; This will be captured and processed at linetag FCNF4
"RTN","A1AEK2",224,0)
 ; If during unit test, return failure string
"RTN","A1AEK2",225,0)
 N FDATA M FDATA=DATA
"RTN","A1AEK2",226,0)
 S DATA(0)=$G(DATA(0))+1
"RTN","A1AEK2",227,0)
 S DATA(DATA(0))="FORUM ACTION EDIT:::FAILED"
"RTN","A1AEK2",228,0)
 N XMSUBJ S XMSUBJ="SUBSCRIPTION CHNG FAILED"
"RTN","A1AEK2",229,0)
 ; If run as extrinsic change email subject to one
"RTN","A1AEK2",230,0)
 ;  that will not be processed by PRCSMAIL
"RTN","A1AEK2",231,0)
 I $Q S XMSUBJ="SILENT SUBSCR CHNG FAILED"
"RTN","A1AEK2",232,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",233,0)
 I $D(DIERR) D  Q:$Q 1 Q
"RTN","A1AEK2",234,0)
 . N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP)
"RTN","A1AEK2",235,0)
 K DATA M DATA=FDATA
"RTN","A1AEK2",236,0)
 ; ***
"RTN","A1AEK2",237,0)
 ;
"RTN","A1AEK2",238,0)
 ; remember to set COMMENTS field to FORUM ACTION
"RTN","A1AEK2",239,0)
 N IENS,NODE,STRMDT,STRMIEN K DIERR,FDA
"RTN","A1AEK2",240,0)
 S STRMDT=$O(^A1AE(11007.1,STRM,1,"B","A"),-1)
"RTN","A1AEK2",241,0)
 S STRMIEN=$O(^A1AE(11007.1,STRM,1,"B",STRMDT,"A"),-1)
"RTN","A1AEK2",242,0)
 S IENS=STRMIEN_","_STRM_","
"RTN","A1AEK2",243,0)
 N TXT S TXT(0)=1,TXT(1)="FORUM ACTION"
"RTN","A1AEK2",244,0)
 D WP^DIE(11007.12,IENS,2,"KA","TXT")
"RTN","A1AEK2",245,0)
 ;
"RTN","A1AEK2",246,0)
 K FDATA M FDATA=DATA
"RTN","A1AEK2",247,0)
 S DATA(0)=$G(DATA(0))+1
"RTN","A1AEK2",248,0)
 S DATA(DATA(0))="FORUM ACTION EDIT:::FAILED"
"RTN","A1AEK2",249,0)
 N XMSUBJ S XMSUBJ="SUBSCRIPTION CHNG FAILED"
"RTN","A1AEK2",250,0)
 ; If run as extrinsic change email subject to one
"RTN","A1AEK2",251,0)
 ;  that will not be processed by PRCSMAIL
"RTN","A1AEK2",252,0)
 I $Q S XMSUBJ="SILENT FORUM ACTION WP EDIT FAILED"
"RTN","A1AEK2",253,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",254,0)
 I $D(DIERR) D  Q:$Q 1 Q
"RTN","A1AEK2",255,0)
 . N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP)
"RTN","A1AEK2",256,0)
 K DATA M DATA=FDATA
"RTN","A1AEK2",257,0)
 ;
"RTN","A1AEK2",258,0)
 ; Now send SUBSCRIPTION CHNG COMPLETED back through
"RTN","A1AEK2",259,0)
 ;  the G.A1AESTRMCHG mail group which will be processed
"RTN","A1AEK2",260,0)
 ;  through FCNF3
"RTN","A1AEK2",261,0)
 ; Add following text to document
"RTN","A1AEK2",262,0)
 ;   "FORUM ACTION EDIT:::SUCCESSFUL"
"RTN","A1AEK2",263,0)
 ;   "NEW SUBSCRIPTION DATE:::"_Date/time change of subscription
"RTN","A1AEK2",264,0)
 K DATA M DATA=POO
"RTN","A1AEK2",265,0)
 S DATA(0)=$G(DATA(0))+1
"RTN","A1AEK2",266,0)
 S DATA(DATA(0))="FORUM ACTION EDIT:::SUCCESSFUL"
"RTN","A1AEK2",267,0)
 S DATA(0)=$G(DATA(0))+1
"RTN","A1AEK2",268,0)
 S DATA(DATA(0))="NEW SUBSCRIPTION DATE:::"_STRMDT
"RTN","A1AEK2",269,0)
 S DATA(0)=$G(DATA(0))+1
"RTN","A1AEK2",270,0)
 S DATA(DATA(0))="NEW ACTIVE SUBSCRIPTION:::"_STRM
"RTN","A1AEK2",271,0)
 N XMSUBJ S XMSUBJ="SUBSCRIPTION CHNG COMPLETED"
"RTN","A1AEK2",272,0)
 N VAP S VAP="T+100"
"RTN","A1AEK2",273,0)
 ; If run as extrinsic change email subject to one
"RTN","A1AEK2",274,0)
 ;  that will not be processed by PRCSMAIL
"RTN","A1AEK2",275,0)
 I $Q S XMSUBJ="SILENT SUBSCR CHNG COMPLETED",VAP="T+1"
"RTN","A1AEK2",276,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",277,0)
 N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",278,0)
 ;  mailgroup.  This will be picked up by FCNF3
"RTN","A1AEK2",279,0)
 Q:$Q 0 Q
"RTN","A1AEK2",280,0)
 ;
"RTN","A1AEK2",281,0)
 ;
"RTN","A1AEK2",282,0)
 ; SUBSCRIPTION CHNG NOT APPR 
"RTN","A1AEK2",283,0)
 ;  send PERMISSION REFUSED to mailgroup only
"RTN","A1AEK2",284,0)
 ; expected message example
"RTN","A1AEK2",285,0)
 ;    SERVER:::FORUM.OSEHRA.ORG
"RTN","A1AEK2",286,0)
 ;    ACTIVE SUBSCRIPTION:::1
"RTN","A1AEK2",287,0)
 ;    DATE SUBSCRIPTION ACTIVE:::3150305.004002
"RTN","A1AEK2",288,0)
 ;    REQUESTOR DUZ:::799
"RTN","A1AEK2",289,0)
 ;    SWITCH TO SUBSCRIPTION:::10001
"RTN","A1AEK2",290,0)
 ;    SWITCH REQUEST DATE:::3150305.23481
"RTN","A1AEK2",291,0)
 ;    APPROVED:::NO
"RTN","A1AEK2",292,0)
 ;    REJECTION COMMENT:::"_COMMENT HEADER
"RTN","A1AEK2",293,0)
 ;     May be some text conveying reason(s) for rejection
"RTN","A1AEK2",294,0)
FCNF2 ; Accept incoming FORUM rejection to switch streams
"RTN","A1AEK2",295,0)
 I ^XMB(3.9,XMZ,0)'["A1AE:::" Q
"RTN","A1AEK2",296,0)
 ; OK. This is from Unit test so pull text from message
"RTN","A1AEK2",297,0)
 N DATA,I S I=0
"RTN","A1AEK2",298,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",299,0)
 . S DATA(I)=^XMB(3.9,XMZ,2,I,0),DATA(0)=I
"RTN","A1AEK2",300,0)
 S XMSUBJ="A1AE FCNF2"
"RTN","A1AEK2",301,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",302,0)
 N VAP S VAP="T+1"
"RTN","A1AEK2",303,0)
 N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",304,0)
 Q
"RTN","A1AEK2",305,0)
 ;
"RTN","A1AEK2",306,0)
 ;
"RTN","A1AEK2",307,0)
 ; SUBSCRIPTION CHNG COMPLETED
"RTN","A1AEK2",308,0)
 ;  forward to FORUM
"RTN","A1AEK2",309,0)
 ;    SERVER:::FORUM.OSEHRA.ORG
"RTN","A1AEK2",310,0)
 ;    ACTIVE SUBSCRIPTION:::1
"RTN","A1AEK2",311,0)
 ;    DATE SUBSCRIPTION ACTIVE:::3150305.004002
"RTN","A1AEK2",312,0)
 ;    REQUESTOR DUZ:::799
"RTN","A1AEK2",313,0)
 ;    SWITCH TO SUBSCRIPTION:::10001
"RTN","A1AEK2",314,0)
 ;    SWITCH REQUEST DATE:::3150305.23481
"RTN","A1AEK2",315,0)
 ;    APPROVED:::YES
"RTN","A1AEK2",316,0)
 ;    FORUM ACTION EDIT:::SUCCESSFUL
"RTN","A1AEK2",317,0)
 ;    NEW SUBSCRIPTION DATE:::3150306.123456
"RTN","A1AEK2",318,0)
 ;    NEW ACTIVE SUBSCRIPTION:::1001
"RTN","A1AEK2",319,0)
 ;
"RTN","A1AEK2",320,0)
FCNF3 ; Send to FORUM subscription change completed message
"RTN","A1AEK2",321,0)
 ;   capture text of incoming message from VistA
"RTN","A1AEK2",322,0)
 ;   and forward to FORUM
"RTN","A1AEK2",323,0)
 N UT S UT=(^XMB(3.9,XMZ,0)["A1AE:::")
"RTN","A1AEK2",324,0)
 N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEK2",325,0)
 N FRMDMN S FRMDMN=$$GET1^DIQ(11007.1,ACTSTRM_",",.07)
"RTN","A1AEK2",326,0)
 I 'UT N XMY S XMY("G.A1AEFMSC@"_FRMDMN)="" D ENT1^XMD Q
"RTN","A1AEK2",327,0)
 ; Unit Test
"RTN","A1AEK2",328,0)
 ; Copy text of incoming message 
"RTN","A1AEK2",329,0)
 N DATA,I S I=0
"RTN","A1AEK2",330,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",331,0)
 . S DATA(I)=^XMB(3.9,XMZ,2,I,0),DATA(0)=I
"RTN","A1AEK2",332,0)
 S XMSUBJ="A1AE FCNF3"
"RTN","A1AEK2",333,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",334,0)
 N VAP S VAP="T+1"
"RTN","A1AEK2",335,0)
 N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",336,0)
 Q
"RTN","A1AEK2",337,0)
 ;
"RTN","A1AEK2",338,0)
 ;
"RTN","A1AEK2",339,0)
 ; SUBSCRIPTION CHNG FAILED 
"RTN","A1AEK2",340,0)
 ;  forward to FORUM
"RTN","A1AEK2",341,0)
 ; Copy of authorization with FAIL entry in text
"RTN","A1AEK2",342,0)
 ;   DATA(0)=7
"RTN","A1AEK2",343,0)
 ;   DATA(1)="SERVER:::"_SERVER
"RTN","A1AEK2",344,0)
 ;   DATA(2)="ACTIVE SUBSCRIPTION:::"_ACTIVE SUBSCRIPTION
"RTN","A1AEK2",345,0)
 ;   DATA(3)="DATE SUBSCRIPTION ACTIVE:::"_SUBSCRIPTION ACTIVE DATE
"RTN","A1AEK2",346,0)
 ;   DATA(4)="REQUESTOR DUZ:::"_DUZ
"RTN","A1AEK2",347,0)
 ;   DATA(5)="SWITCH TO SUBSCRIPTION:::"_NEW SUBSCRIPTION REQUESTED
"RTN","A1AEK2",348,0)
 ;   DATA(6)="SWITCH REQUEST DATA:::"_DATE REQUESTED
"RTN","A1AEK2",349,0)
 ;   DATA(7)="APPROVED:::YES"
"RTN","A1AEK2",350,0)
 ;   DATA(8)="***FORUM ACTION TO SWITCH FAILED***:::"_DATE
"RTN","A1AEK2",351,0)
FCNF4 ; Process to FORUM  subscription change failed message
"RTN","A1AEK2",352,0)
 ; Message text should include that from FORUM approval msg
"RTN","A1AEK2",353,0)
 ; Simply forward to Forum
"RTN","A1AEK2",354,0)
 N UT S UT=(^XMB(3.9,XMZ,0)["A1AE:::")
"RTN","A1AEK2",355,0)
 N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEK2",356,0)
 N FRMDMN S FRMDMN=$$GET1^DIQ(11007.1,ACTSTRM_",",.07)
"RTN","A1AEK2",357,0)
 I 'UT N XMY S XMY("G.A1AEFMSC@"_FRMDMN)="" D ENT1^XMD Q
"RTN","A1AEK2",358,0)
 ; Unit Test
"RTN","A1AEK2",359,0)
 N DATA,I S I=0
"RTN","A1AEK2",360,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",361,0)
 . S DATA(I)=^XMB(3.9,XMZ,2,I,0),DATA(0)=I
"RTN","A1AEK2",362,0)
 S XMSUBJ="A1AE FCNF4"
"RTN","A1AEK2",363,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",364,0)
 N VAP S VAP="T+1"
"RTN","A1AEK2",365,0)
 N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",366,0)
 Q
"RTN","A1AEK2",367,0)
 ;
"RTN","A1AEK2",368,0)
 ;
"RTN","A1AEK2",369,0)
 ;  from FORUM example
"RTN","A1AEK2",370,0)
 ;    SERVER:::FORUM.OSEHRA.ORG
"RTN","A1AEK2",371,0)
 ;    ACTIVE SUBSCRIPTION:::1
"RTN","A1AEK2",372,0)
 ;    DATE SUBSCRIPTION ACTIVE:::3150305.004002
"RTN","A1AEK2",373,0)
 ;    REQUESTOR DUZ:::799
"RTN","A1AEK2",374,0)
 ;    SWITCH TO SUBSCRIPTION:::10001
"RTN","A1AEK2",375,0)
 ;    SWITCH REQUEST DATE:::3150305.23481
"RTN","A1AEK2",376,0)
 ;    APPROVED:::YES
"RTN","A1AEK2",377,0)
 ;    FORUM ACTION EDIT:::SUCCESSFUL
"RTN","A1AEK2",378,0)
 ;    NEW SUBSCRIPTION DATE:::3150306.123456
"RTN","A1AEK2",379,0)
 ;    NEW ACTIVE SUBSCRIPTION:::1001
"RTN","A1AEK2",380,0)
 ;    SUBSCRIPTION CHANGE CONFIRMED:::3150307.431245
"RTN","A1AEK2",381,0)
FCNF5 ; Accept message from FORUM confirming subscription change
"RTN","A1AEK2",382,0)
 ; No Action unless Subject of incoming mail contains "A1AE:::"
"RTN","A1AEK2",383,0)
 ;  If so, send another message that has a subject
"RTN","A1AEK2",384,0)
 ;  that will not be trapped by PRCSMAIL server
"RTN","A1AEK2",385,0)
 I ^XMB(3.9,XMZ,0)'["A1AE:::" Q
"RTN","A1AEK2",386,0)
 ; OK.  This is from unit test so pull text from message
"RTN","A1AEK2",387,0)
 N DATA,I S I=0
"RTN","A1AEK2",388,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",389,0)
 . S DATA(I)=^XMB(3.9,XMZ,2,I,0),DATA(0)=I
"RTN","A1AEK2",390,0)
 S XMSUBJ="A1AE FCNF5"
"RTN","A1AEK2",391,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",392,0)
 N VAP S VAP="T+1"
"RTN","A1AEK2",393,0)
 N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",394,0)
 Q
"RTN","A1AEK2",395,0)
 ;
"RTN","A1AEK2",396,0)
 ;
"RTN","A1AEK2",397,0)
 ;send mail from postmaster to mailgroup
"RTN","A1AEK2",398,0)
 ;ENTER
"RTN","A1AEK2",399,0)
 ;  XMSUBJ  = Subject of email
"RTN","A1AEK2",400,0)
 ;  DATA    = Data array for text
"RTN","A1AEK2",401,0)
 ;  MAILGRP = Mailgroup recipient
"RTN","A1AEK2",402,0)
 ;RETURN
"RTN","A1AEK2",403,0)
 ;  0^COMMENT if error, XMZ if mail sent
"RTN","A1AEK2",404,0)
SNDMAIL(XMSUBJ,DATA,MAILGRP,VAP) ;
"RTN","A1AEK2",405,0)
 N X,Y,DI
"RTN","A1AEK2",406,0)
 ; Set DUZ to Postmaster
"RTN","A1AEK2",407,0)
 N DUZ S DUZ=0.5 D DUZ^XUP(DUZ)
"RTN","A1AEK2",408,0)
 N SNDAPP,XMERR
"RTN","A1AEK2",409,0)
 N XMTO S XMTO(MAILGRP)=""
"RTN","A1AEK2",410,0)
 N XMZ S XMZ=""
"RTN","A1AEK2",411,0)
 N XMDUZ S XMDUZ=0.5
"RTN","A1AEK2",412,0)
 N XMBODY S XMBODY="DATA"
"RTN","A1AEK2",413,0)
 S VAP=$S($D(VAP):VAP,1:"T+100")
"RTN","A1AEK2",414,0)
 N XMINSTR S XMINSTR("VAPOR")=VAP
"RTN","A1AEK2",415,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,.XMINSTR,.XMZ)
"RTN","A1AEK2",416,0)
 Q:$D(XMERR) "0^MSG SEND ERROR(S) ENCOUNTERED"
"RTN","A1AEK2",417,0)
 Q XMZ
"RTN","A1AEK2",418,0)
 ;
"RTN","A1AEK2",419,0)
 ;
"RTN","A1AEK2",420,0)
 ; ENTER
"RTN","A1AEK2",421,0)
 ;    DATA   = array of email's text by reference
"RTN","A1AEK2",422,0)
 ;    HDR    = structured text in email to find
"RTN","A1AEK2",423,0)
 ; RETURN
"RTN","A1AEK2",424,0)
 ;    Data following HDR identified in array
"RTN","A1AEK2",425,0)
 ;      - or NULL if HDR not found
"RTN","A1AEK2",426,0)
 ; example
"RTN","A1AEK2",427,0)
 ;    DATA(3)="DATE SUBSCRIPTION ACTIVE:::"_3150401.123456
"RTN","A1AEK2",428,0)
 ;    HDR ="DATE SUBSCRIPTION ACTIVE"
"RTN","A1AEK2",429,0)
 ;    3150401.123456 returned to caller
"RTN","A1AEK2",430,0)
FND(DATA,HDR) ;Find HDR in DATA array, return data
"RTN","A1AEK2",431,0)
 N NODE,RSLT S NODE=$NA(DATA),RSLT=""
"RTN","A1AEK2",432,0)
 F  S NODE=$Q(@NODE) Q:NODE'["DATA("  Q:($P(@NODE,":::")=HDR)
"RTN","A1AEK2",433,0)
 I NODE["DATA(" D
"RTN","A1AEK2",434,0)
 . S RSLT=$P(@NODE,":::",2)
"RTN","A1AEK2",435,0)
 Q RSLT
"RTN","A1AEK2",436,0)
 ;
"RTN","A1AEK2",437,0)
 ;
"RTN","A1AEK2",438,0)
FMSUBJ ;;SUBSCRIPTION CHNG REQUEST^FCNF0
"RTN","A1AEK2",439,0)
 ;;SUBSCRIPTION CHNG APPROVED^FCNF1
"RTN","A1AEK2",440,0)
 ;;SUBSCRIPTION CHNG NOT APPROVED^FCNF2
"RTN","A1AEK2",441,0)
 ;;SUBSCRIPTION CHNG COMPLETED^FCNF3
"RTN","A1AEK2",442,0)
 ;;SUBSCRIPTION CHNG FAILED^FCNF4
"RTN","A1AEK2",443,0)
 ;;SUBSCRIPTION CHNG CONFIRMED^FCNF5
"RTN","A1AEK2",444,0)
 ;;*END*
"RTN","A1AEK2",445,0)
 ;
"RTN","A1AEK2",446,0)
 ;
"RTN","A1AEK2",447,0)
EOR ; end of routine A1AEK2
"RTN","A1AEK2M")
0^48^B232688588
"RTN","A1AEK2M",1,0)
A1AEK2M ;ven/smh,toad-options a1ae import * ;2015-06-15  8:26 PM
"RTN","A1AEK2M",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEK2M",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEK2M",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEK2M",5,0)
 ;
"RTN","A1AEK2M",6,0)
 ;
"RTN","A1AEK2M",7,0)
 ; IMPORT: option import patch  [A1AE IMPORT PATCH]
"RTN","A1AEK2M",8,0)
 ; SD: option import patches in a single directory [A1AE IMPORT SINGLE DIR]
"RTN","A1AEK2M",9,0)
 ; RECURSE: option import patches recursive from a directory tree [A1AE IMPORT RECURSIVE]
"RTN","A1AEK2M",10,0)
 ; RECURSE1: import from directory & subdirectories
"RTN","A1AEK2M",11,0)
 ; $$RECURSE2: find the multibuild directory
"RTN","A1AEK2M",12,0)
 ; SILENT: silently import all patches from a directory
"RTN","A1AEK2M",13,0)
 ; MAIL: send bulletin re loaded patches
"RTN","A1AEK2M",14,0)
 ; LOAD: load a patch's hfs files
"RTN","A1AEK2M",15,0)
 ; ADD0: load foia patch msg & its osehra copy
"RTN","A1AEK2M",16,0)
 ; $$K2PMD: convert patch id from kids to pm
"RTN","A1AEK2M",17,0)
 ; PKGADD: add pkg to pm
"RTN","A1AEK2M",18,0)
 ; PKGSETUP: setup pkg in pm
"RTN","A1AEK2M",19,0)
 ; $$MKUSER: make users for the pm pkg
"RTN","A1AEK2M",20,0)
 ; VERSETUP: add pkg version
"RTN","A1AEK2M",21,0)
 ; $$INFOONLY: is patch info only?
"RTN","A1AEK2M",22,0)
 ; PREREQAD: add dependencies in description
"RTN","A1AEK2M",23,0)
 ; ASSERT: assertion engine
"RTN","A1AEK2M",24,0)
 ;
"RTN","A1AEK2M",25,0)
 ;
"RTN","A1AEK2M",26,0)
 ; 2015-05-26 ven/toad: create option A1AE IMPORT HFS DISTRIBUTION
"RTN","A1AEK2M",27,0)
 ; (just a shell for now, fill in later), contents, more structural
"RTN","A1AEK2M",28,0)
 ; comments, change ADD0 to *not* create an OSEHRA patch for each FOIA
"RTN","A1AEK2M",29,0)
 ; patch it imports. IMPORT, SD, RECURSE, RECURSE1, $$RECURSE2, ADD0,
"RTN","A1AEK2M",30,0)
 ; $$INFOONLY.
"RTN","A1AEK2M",31,0)
 ;
"RTN","A1AEK2M",32,0)
 ; 2015-05-28, ven/lgc: ^XTMP set when routine called at top is for unit
"RTN","A1AEK2M",33,0)
 ; testing
"RTN","A1AEK2M",34,0)
 ;
"RTN","A1AEK2M",35,0)
 ; 2015-05-30, ven/toad: prevent user error code at MKUSR+17^A1AEK2M
"RTN","A1AEK2M",36,0)
 ; as a result of the updater call, which did not like setting the
"RTN","A1AEK2M",37,0)
 ; security key to '561; changed to just set it to KEY, since the E
"RTN","A1AEK2M",38,0)
 ; flag will allow external values. prevent error in PKGSETUP & MKUSR
"RTN","A1AEK2M",39,0)
 ; where VA redacts names, causing crashes in updater call.
"RTN","A1AEK2M",40,0)
 ;
"RTN","A1AEK2M",41,0)
 ; Notes on the KIDS format and conversion procedure.
"RTN","A1AEK2M",42,0)
 ; NB: Notes moved to A1AEK2M0 to make space in this routine.
"RTN","A1AEK2M",43,0)
 ;
"RTN","A1AEK2M",44,0)
 ; TODO: File package entry into our system if it can't be found
"RTN","A1AEK2M",45,0)
 ;       - Hint: Finds KIDS EP that does the PKG subs
"RTN","A1AEK2M",46,0)
 ; TODO: I created fields latterly that hold the file names and file
"RTN","A1AEK2M",47,0)
 ;       paths to use. They are only used in the KIDs Version Control
"RTN","A1AEK2M",48,0)
 ;       breakout. They can be used to track all the mail information
"RTN","A1AEK2M",49,0)
 ;       rather than keep them in variables.
"RTN","A1AEK2M",50,0)
 ; TODO: The recursion code is very very first draft... needs to be
"RTN","A1AEK2M",51,0)
 ;       refined.
"RTN","A1AEK2M",52,0)
 ;
"RTN","A1AEK2M",53,0)
 S ^XTMP($J,"A1AEK2M FROM TOP")=$$HTFM^XLFDT($H,5)_"^"_$$HTFM^XLFDT($H,5)
"RTN","A1AEK2M",54,0)
 Q
"RTN","A1AEK2M",55,0)
 ;
"RTN","A1AEK2M",56,0)
IMPORT ; option import a patch [A1AE IMPORT HFS DISTRIBUTION]
"RTN","A1AEK2M",57,0)
 ; called by option A1AE IMPORT HFS DISTRIBUTION
"RTN","A1AEK2M",58,0)
 ;
"RTN","A1AEK2M",59,0)
 ; 1. prompt for a patch file
"RTN","A1AEK2M",60,0)
 ;
"RTN","A1AEK2M",61,0)
 ;
"RTN","A1AEK2M",62,0)
 ; 2. import that patch
"RTN","A1AEK2M",63,0)
 ;
"RTN","A1AEK2M",64,0)
 D EN^DDIOL("Patch ??? selected.")
"RTN","A1AEK2M",65,0)
 ;
"RTN","A1AEK2M",66,0)
 QUIT  ; end of IMPORT
"RTN","A1AEK2M",67,0)
 ;
"RTN","A1AEK2M",68,0)
 ;
"RTN","A1AEK2M",69,0)
SD ; option import patches in a single directory [A1AE IMPORT SINGLE DIR]
"RTN","A1AEK2M",70,0)
 ; called by option A1AE IMPORT SINGLE DIR
"RTN","A1AEK2M",71,0)
 ;
"RTN","A1AEK2M",72,0)
 ; N DUZ S DUZ=.5,DUZ(0)="" ; Save DUZ from previous caller.
"RTN","A1AEK2M",73,0)
 ;
"RTN","A1AEK2M",74,0)
 ; 1. prompt for directory to load all patches from
"RTN","A1AEK2M",75,0)
 ;
"RTN","A1AEK2M",76,0)
 N DIR,X,Y,DIROUT,DIRUT,DTOUT,DUOUT,DIROUT ; fur DIR
"RTN","A1AEK2M",77,0)
 S DIR(0)="F^2:255",DIR("A")="Full path of patches to load, up to but not including patch names"
"RTN","A1AEK2M",78,0)
 S DIR("B")=$G(^DISV(DUZ,"A1AEK2M-SB"))
"RTN","A1AEK2M",79,0)
 D ^DIR
"RTN","A1AEK2M",80,0)
 QUIT:Y="^"
"RTN","A1AEK2M",81,0)
 N ROOT S ROOT("SB")=Y  ; where we load files from... Single Build Root
"RTN","A1AEK2M",82,0)
 S ^DISV(DUZ,"A1AEK2M-SB")=Y
"RTN","A1AEK2M",83,0)
 ;
"RTN","A1AEK2M",84,0)
 ; 2. prompt for directory to load multi-builds from
"RTN","A1AEK2M",85,0)
 ;
"RTN","A1AEK2M",86,0)
 S DIR(0)="F^2:255",DIR("A")="Full path of Multibuilds directory, in case I can't find a patch"
"RTN","A1AEK2M",87,0)
 S DIR("B")=$G(^DISV(DUZ,"A1AEK2M-MB"))
"RTN","A1AEK2M",88,0)
 D ^DIR
"RTN","A1AEK2M",89,0)
 QUIT:Y="^"
"RTN","A1AEK2M",90,0)
 S ROOT("MB")=Y ; Multi Build Root
"RTN","A1AEK2M",91,0)
 S ^DISV(DUZ,"A1AEK2M-MB")=Y
"RTN","A1AEK2M",92,0)
 ;
"RTN","A1AEK2M",93,0)
 ; 3. silently load all kids distributions from that directory
"RTN","A1AEK2M",94,0)
 ;
"RTN","A1AEK2M",95,0)
 D SILENT(.ROOT)
"RTN","A1AEK2M",96,0)
 ;
"RTN","A1AEK2M",97,0)
 QUIT  ; end of SD
"RTN","A1AEK2M",98,0)
 ;
"RTN","A1AEK2M",99,0)
 ;
"RTN","A1AEK2M",100,0)
RECURSE ; option import patches recursive from a directory tree
"RTN","A1AEK2M",101,0)
 ;   [A1AE IMPORT RECURSIVE]
"RTN","A1AEK2M",102,0)
 ; called by option A1AE IMPORT RECURSIVE
"RTN","A1AEK2M",103,0)
 ;
"RTN","A1AEK2M",104,0)
 ; TODO: Document and clean.
"RTN","A1AEK2M",105,0)
 ;
"RTN","A1AEK2M",106,0)
 ; 1. prompt for directory to load patches from
"RTN","A1AEK2M",107,0)
 ;
"RTN","A1AEK2M",108,0)
 N DIR,X,Y,DIROUT,DIRUT,DTOUT,DUOUT,DIROUT ; fur DIR
"RTN","A1AEK2M",109,0)
 S DIR(0)="F^2:255",DIR("A")="Full path of patches to load, up to but not including patch names"
"RTN","A1AEK2M",110,0)
 S DIR("B")=$G(^DISV(DUZ,"A1AEK2M-RP")) ; Recurse Path
"RTN","A1AEK2M",111,0)
 D ^DIR
"RTN","A1AEK2M",112,0)
 QUIT:Y="^"
"RTN","A1AEK2M",113,0)
 N ROOT
"RTN","A1AEK2M",114,0)
 S ROOT=Y
"RTN","A1AEK2M",115,0)
 S ^DISV(DUZ,"A1AEK2M-RP")=ROOT
"RTN","A1AEK2M",116,0)
 ;
"RTN","A1AEK2M",117,0)
 ; 2. import all patches from directories & subdirectories
"RTN","A1AEK2M",118,0)
 ;
"RTN","A1AEK2M",119,0)
 N LVL S LVL=0
"RTN","A1AEK2M",120,0)
 N PATCHROOTS
"RTN","A1AEK2M",121,0)
 S PATCHROOTS=ROOT
"RTN","A1AEK2M",122,0)
 N MBROOT
"RTN","A1AEK2M",123,0)
 S PATCHROOTS("MB")=$$RECURSE2(PATCHROOTS) ; find multibuild directory
"RTN","A1AEK2M",124,0)
 D RECURSE1(ROOT,.PATCHROOTS) ; import all patches from dir & subdirs
"RTN","A1AEK2M",125,0)
 ;
"RTN","A1AEK2M",126,0)
 QUIT  ; end of RECURSE
"RTN","A1AEK2M",127,0)
 ;
"RTN","A1AEK2M",128,0)
 ;
"RTN","A1AEK2M",129,0)
RECURSE1(ROOT,PATCHROOTS) ; import from directory & subdirectories
"RTN","A1AEK2M",130,0)
 ; called by RECURSE
"RTN","A1AEK2M",131,0)
 ;
"RTN","A1AEK2M",132,0)
 ; TODO: Document and clean.
"RTN","A1AEK2M",133,0)
 ;
"RTN","A1AEK2M",134,0)
 ; 1. initialize
"RTN","A1AEK2M",135,0)
 ;
"RTN","A1AEK2M",136,0)
 ; ZEXCEPT: LVL - Newed above
"RTN","A1AEK2M",137,0)
 ; ZEXCEPT: L - no such variable. XINDEX is tripping up.
"RTN","A1AEK2M",138,0)
 N % ; Throw away variable
"RTN","A1AEK2M",139,0)
 S LVL=$G(LVL,0)
"RTN","A1AEK2M",140,0)
 N ARRAY S ARRAY("*")=""
"RTN","A1AEK2M",141,0)
 N FILES,TXTFILES
"RTN","A1AEK2M",142,0)
 ; DEFDIR bug!:
"RTN","A1AEK2M",143,0)
 I $$DEFDIR^%ZISH(ROOT)="/"!('$$LIST^%ZISH(ROOT,"ARRAY","FILES")) QUIT
"RTN","A1AEK2M",144,0)
 ;
"RTN","A1AEK2M",145,0)
 ; 2. load list of .txt files in directory
"RTN","A1AEK2M",146,0)
 ;
"RTN","A1AEK2M",147,0)
 S ARRAY("*.txt")=""
"RTN","A1AEK2M",148,0)
 S ARRAY("*.TXT")=""
"RTN","A1AEK2M",149,0)
 S %=$$LIST^%ZISH(ROOT,"ARRAY","TXTFILES")
"RTN","A1AEK2M",150,0)
 ;
"RTN","A1AEK2M",151,0)
 ; 3. base case: silently import all patches from a directory
"RTN","A1AEK2M",152,0)
 ;
"RTN","A1AEK2M",153,0)
 I $D(TXTFILES) D
"RTN","A1AEK2M",154,0)
 . S PATCHROOTS("SB")=ROOT
"RTN","A1AEK2M",155,0)
 . D SILENT(.PATCHROOTS)
"RTN","A1AEK2M",156,0)
 ;
"RTN","A1AEK2M",157,0)
 ; 4. recursive case: for each subdirectory, call RECURSE1 to process it
"RTN","A1AEK2M",158,0)
 ;
"RTN","A1AEK2M",159,0)
 N F S F="" F  S F=$O(FILES(F)) Q:F=""  D
"RTN","A1AEK2M",160,0)
 . I $E(F)="." QUIT  ; Hidden file
"RTN","A1AEK2M",161,0)
 . W:$D(KBANDEBUG) ?LVL*5,F,!
"RTN","A1AEK2M",162,0)
 . S LVL=LVL+1
"RTN","A1AEK2M",163,0)
 . D RECURSE1(ROOT_F_"/")
"RTN","A1AEK2M",164,0)
 . S LVL=LVL-1
"RTN","A1AEK2M",165,0)
 ;
"RTN","A1AEK2M",166,0)
 QUIT  ; end of RECURSE1
"RTN","A1AEK2M",167,0)
 ;
"RTN","A1AEK2M",168,0)
 ;
"RTN","A1AEK2M",169,0)
RECURSE2(ROOT) ; find the multibuild directory
"RTN","A1AEK2M",170,0)
 ; called by RECURSE
"RTN","A1AEK2M",171,0)
 ; TODO: Document and clean.
"RTN","A1AEK2M",172,0)
 ;
"RTN","A1AEK2M",173,0)
 ; 1. initialize
"RTN","A1AEK2M",174,0)
 ;
"RTN","A1AEK2M",175,0)
 ; ZEXCEPT: MBROOT ; Newed at the caller
"RTN","A1AEK2M",176,0)
 ; ZEXCEPT: LVL - Newed above
"RTN","A1AEK2M",177,0)
 ; ZEXCEPT: L - no such variable. XINDEX is tripping up.
"RTN","A1AEK2M",178,0)
 I $$UP^XLFSTR(ROOT)["MULTIBUILD" S MBROOT=ROOT
"RTN","A1AEK2M",179,0)
 S LVL=$G(LVL,0)
"RTN","A1AEK2M",180,0)
 N ARRAY S ARRAY("*")=""
"RTN","A1AEK2M",181,0)
 N FILES
"RTN","A1AEK2M",182,0)
 ; DEFDIR bug!:
"RTN","A1AEK2M",183,0)
 I $$DEFDIR^%ZISH(ROOT)="/"!('$$LIST^%ZISH(ROOT,"ARRAY","FILES")) QUIT ""
"RTN","A1AEK2M",184,0)
 ;
"RTN","A1AEK2M",185,0)
 ; 2. recursively search for multibuild directory
"RTN","A1AEK2M",186,0)
 ;
"RTN","A1AEK2M",187,0)
 N F S F="" F  S F=$O(FILES(F)) Q:F=""  D  Q:$D(MBROOT)
"RTN","A1AEK2M",188,0)
 . I $E(F)="." QUIT  ; Hidden file
"RTN","A1AEK2M",189,0)
 . ; DEFDIR bug!:
"RTN","A1AEK2M",190,0)
 . I $$DEFDIR^%ZISH(ROOT_F_"/")="/"!('$$LIST^%ZISH(ROOT_F_"/","ARRAY","FILES")) QUIT
"RTN","A1AEK2M",191,0)
 . W:$D(KBANDEBUG) ?LVL*5,F,!
"RTN","A1AEK2M",192,0)
 . S LVL=LVL+1
"RTN","A1AEK2M",193,0)
 . N % S %=$$RECURSE2(ROOT_F_"/")
"RTN","A1AEK2M",194,0)
 . S LVL=LVL-1
"RTN","A1AEK2M",195,0)
 ;
"RTN","A1AEK2M",196,0)
 QUIT $G(MBROOT) ; end of $$RECURSE2 ; return multi-build root
"RTN","A1AEK2M",197,0)
 ;
"RTN","A1AEK2M",198,0)
 ;
"RTN","A1AEK2M",199,0)
SILENT(ROOT) ; silently import all patches from a directory
"RTN","A1AEK2M",200,0)
 ; All output is sent via EN^DDIOL. Set DIQUIET to redirect to a global.
"RTN","A1AEK2M",201,0)
 ;
"RTN","A1AEK2M",202,0)
 ; How to invoke:
"RTN","A1AEK2M",203,0)
 ; 
"RTN","A1AEK2M",204,0)
 ; ROOT("SB") is the Single Builds dirctory
"RTN","A1AEK2M",205,0)
 ; ROOT("MB") is the multiple build dirctory
"RTN","A1AEK2M",206,0)
 ; Set ROOT and pass down by reference
"RTN","A1AEK2M",207,0)
 ;
"RTN","A1AEK2M",208,0)
 ; 1. load list of kids text files
"RTN","A1AEK2M",209,0)
 ;
"RTN","A1AEK2M",210,0)
 N ARRAY
"RTN","A1AEK2M",211,0)
 S ARRAY("*.TXT")=""
"RTN","A1AEK2M",212,0)
 S ARRAY("*.txt")=""
"RTN","A1AEK2M",213,0)
 N FILES ; return array
"RTN","A1AEK2M",214,0)
 N Y S Y=$$LIST^%ZISH(ROOT("SB"),"ARRAY","FILES")
"RTN","A1AEK2M",215,0)
 I 'Y D EN^DDIOL("Error getting directory list") QUIT
"RTN","A1AEK2M",216,0)
 ;
"RTN","A1AEK2M",217,0)
 ; 2. traverse text patches, load each
"RTN","A1AEK2M",218,0)
 ;
"RTN","A1AEK2M",219,0)
 N ERROR
"RTN","A1AEK2M",220,0)
 N PATCH S PATCH=""
"RTN","A1AEK2M",221,0)
 N RESULT ; Result of Load
"RTN","A1AEK2M",222,0)
 F  S PATCH=$O(FILES(PATCH)) Q:PATCH=""  D LOAD(.ROOT,PATCH,.ERROR,.RESULT) Q:$D(ERROR)
"RTN","A1AEK2M",223,0)
 ;
"RTN","A1AEK2M",224,0)
 ; 3. report patches without .kid files
"RTN","A1AEK2M",225,0)
 ;
"RTN","A1AEK2M",226,0)
 N I S I=""
"RTN","A1AEK2M",227,0)
 F  S I=$O(RESULT(I)) Q:I=""  I $D(RESULT(I,"CANTLOAD")) D
"RTN","A1AEK2M",228,0)
 . D EN^DDIOL("Patch "_I_" from "_RESULT(I,"TXT")_" doesn't have a KIDS file")
"RTN","A1AEK2M",229,0)
 . D EN^DDIOL("Please load these KIDS files manually into the patch module.")
"RTN","A1AEK2M",230,0)
 ;
"RTN","A1AEK2M",231,0)
 ; 4. send bulletin re loaded patches
"RTN","A1AEK2M",232,0)
 ;
"RTN","A1AEK2M",233,0)
 D MAIL(.RESULT)
"RTN","A1AEK2M",234,0)
 ;
"RTN","A1AEK2M",235,0)
 QUIT  ; end of SILENT
"RTN","A1AEK2M",236,0)
 ;
"RTN","A1AEK2M",237,0)
 ;
"RTN","A1AEK2M",238,0)
MAIL(RESULT) ; send bulletin re loaded patches
"RTN","A1AEK2M",239,0)
 ; Private Proc to Package
"RTN","A1AEK2M",240,0)
 ; Mail the result of the load to interested parties using the bulletin
"RTN","A1AEK2M",241,0)
 ; A1AE LOAD RELEASED PATCH
"RTN","A1AEK2M",242,0)
 ;
"RTN","A1AEK2M",243,0)
 ; 1. build bulletin text for each patch
"RTN","A1AEK2M",244,0)
 ;
"RTN","A1AEK2M",245,0)
 N WP,CNT S CNT=1
"RTN","A1AEK2M",246,0)
 N I S I="" F  S I=$O(RESULT(I)) Q:I=""  D
"RTN","A1AEK2M",247,0)
 . S WP(CNT)="Patch designated as "_I_" has been loaded into the Patch Module.",CNT=CNT+1
"RTN","A1AEK2M",248,0)
 . S WP(CNT)="Text file: "_RESULT(I,"TXT"),CNT=CNT+1
"RTN","A1AEK2M",249,0)
 . I '$D(RESULT(I,"CANTLOAD")) S WP(CNT)="KID file: "_RESULT(I,"KID"),CNT=CNT+1
"RTN","A1AEK2M",250,0)
 . E  S WP(CNT)="KID file couldn't be loaded. Use the Edit Patch option to load the KIDS file in.",CNT=CNT+1
"RTN","A1AEK2M",251,0)
 . S WP(CNT)="Patch Module Entries: ",CNT=CNT+1
"RTN","A1AEK2M",252,0)
 . N J F J=0:0 S J=$O(RESULT(I,"MSG",J)) Q:'J  S WP(CNT)="Entry: "_J_" with designation "_$P(^A1AE(11005,J,0),U),CNT=CNT+1
"RTN","A1AEK2M",253,0)
 . S WP(CNT)=" ",CNT=CNT+1
"RTN","A1AEK2M",254,0)
 K I,CNT
"RTN","A1AEK2M",255,0)
 ;
"RTN","A1AEK2M",256,0)
 ; 2. send bulletin
"RTN","A1AEK2M",257,0)
 ;
"RTN","A1AEK2M",258,0)
 N PARM S PARM(1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","A1AEK2M",259,0)
 D SENDBULL^XMXAPI(DUZ,"A1AE LOAD RELEASED PATCH",.PARM,$NA(WP))
"RTN","A1AEK2M",260,0)
 ;
"RTN","A1AEK2M",261,0)
 QUIT  ; end of MAIL
"RTN","A1AEK2M",262,0)
 ;
"RTN","A1AEK2M",263,0)
 ;
"RTN","A1AEK2M",264,0)
LOAD(ROOT,PATCH,ERROR,RESULT) ; load a patch's hfs files
"RTN","A1AEK2M",265,0)
 ; Load TXT message, find KIDS, then load KIDS and mail.
"RTN","A1AEK2M",266,0)
 ; ROOT = File system directory (Ref)
"RTN","A1AEK2M",267,0)
 ; PATCH = File system .TXT patch name (including the .TXT) (Value)
"RTN","A1AEK2M",268,0)
 ; ERROR = Ref variable to indicate error.
"RTN","A1AEK2M",269,0)
 ; RESULT = Ref variable containing the results, including whether we could load the KIDS patch
"RTN","A1AEK2M",270,0)
 ;
"RTN","A1AEK2M",271,0)
 ; 1. load patch description from .txt file
"RTN","A1AEK2M",272,0)
 ;
"RTN","A1AEK2M",273,0)
 ; NB: I start from 2 just in case there is something I need to put in 1 (like $TXT)
"RTN","A1AEK2M",274,0)
 K ^TMP($J,"TXT")
"RTN","A1AEK2M",275,0)
 D EN^DDIOL("Loading description "_PATCH)
"RTN","A1AEK2M",276,0)
 N Y S Y=$$FTG^%ZISH(ROOT("SB"),PATCH,$NA(^TMP($J,"TXT",2,0)),3)
"RTN","A1AEK2M",277,0)
 I 'Y W !,"Error copying TXT to global" S ERROR=1 Q
"RTN","A1AEK2M",278,0)
 D CLEANHF^A1AEK2M0($NA(^TMP($J,"TXT"))) ; add $TXT/$END TXT if necessary
"RTN","A1AEK2M",279,0)
 ;
"RTN","A1AEK2M",280,0)
 ; 2. analyze message and extract data from it
"RTN","A1AEK2M",281,0)
 ;
"RTN","A1AEK2M",282,0)
 N RTN ; RPC style return
"RTN","A1AEK2M",283,0)
 ; N OET S OET=$ET
"RTN","A1AEK2M",284,0)
 N $ET,$ES S $ET="D ANATRAP^A1AEK2M2(PATCH)" ; try/catch
"RTN","A1AEK2M",285,0)
 D ANALYZE^A1AEK2M2(.RTN,$NA(^TMP($J,"TXT")))
"RTN","A1AEK2M",286,0)
 ; S $ET=OET
"RTN","A1AEK2M",287,0)
 ; K OET
"RTN","A1AEK2M",288,0)
 ;
"RTN","A1AEK2M",289,0)
 ; ZEXCEPT: A1AEDELPREVPATCH
"RTN","A1AEK2M",290,0)
 ; Inside UT delete previous patch if UT var says so.
"RTN","A1AEK2M",291,0)
 ; I $$ISUTEST^%ut,$G(A1AEDELPREVPATCH) D
"RTN","A1AEK2M",292,0)
 I $G(A1AEDELPREVPATCH) D
"RTN","A1AEK2M",293,0)
 . N DES S DES=RTN("DESIGNATION")
"RTN","A1AEK2M",294,0)
 . N mainIEN S mainIEN=$O(^A1AE(11005,"B",DES,""))
"RTN","A1AEK2M",295,0)
 . N derivedIEN S derivedIEN=$O(^A1AE(11005,"ADERIVED",DES,""))
"RTN","A1AEK2M",296,0)
 . N DA,DIK
"RTN","A1AEK2M",297,0)
 . FOR DIK="^A1AE(11005,","^A1AE(11005.1," DO
"RTN","A1AEK2M",298,0)
 .. FOR DA=mainIEN,derivedIEN D:DA ^DIK
"RTN","A1AEK2M",299,0)
 ;
"RTN","A1AEK2M",300,0)
 ; move description to msg array
"RTN","A1AEK2M",301,0)
 ; ensure we have room for $TXT
"RTN","A1AEK2M",302,0)
 ;
"RTN","A1AEK2M",303,0)
 K ^TMP($J,"MSG") ; Message array eventually to be mailed.
"RTN","A1AEK2M",304,0)
 N I F I=0:0 S I=$O(RTN("DESC",I)) Q:'I  S ^TMP($J,"MSG",I+1,0)=RTN("DESC",I)
"RTN","A1AEK2M",305,0)
 S ^TMP($J,"MSG",1,0)=RTN("$TXT") ; $TXT
"RTN","A1AEK2M",306,0)
 N LS S LS=$O(^TMP($J,"MSG"," "),-1)
"RTN","A1AEK2M",307,0)
 S ^TMP($J,"MSG",LS+1,0)="$END TXT" ; $END TXT
"RTN","A1AEK2M",308,0)
 K I,LS
"RTN","A1AEK2M",309,0)
 N LASTSUB S LASTSUB=$O(^TMP($J,"TXT"," "),-1)
"RTN","A1AEK2M",310,0)
 ;
"RTN","A1AEK2M",311,0)
 ; 4. info-only patch?
"RTN","A1AEK2M",312,0)
 ;
"RTN","A1AEK2M",313,0)
 N INFOONLY S INFOONLY=$$INFOONLY(.RTN) ; Info Only patch?
"RTN","A1AEK2M",314,0)
 I INFOONLY D EN^DDIOL(PATCH_" is an Info Only patch.")
"RTN","A1AEK2M",315,0)
 ;
"RTN","A1AEK2M",316,0)
 ; 5. load patch payload from .kid file
"RTN","A1AEK2M",317,0)
 ;
"RTN","A1AEK2M",318,0)
 ; Load KIDS message starting into the last subscript
"RTN","A1AEK2M",319,0)
 ; + 1 from the text node
"RTN","A1AEK2M",320,0)
 ; Only if not informational!!!
"RTN","A1AEK2M",321,0)
 ; THIS CHANGED NOW B/C VA HAS SOME PATCHES THAT ARE INFORMATIONAL
"RTN","A1AEK2M",322,0)
 ; YET HAVE KIDS BUILDS
"RTN","A1AEK2M",323,0)
 K ^TMP($J,"KID")
"RTN","A1AEK2M",324,0)
 N KIDFIL ; Load the KIDS file:
"RTN","A1AEK2M",325,0)
 S KIDFIL=$$KIDFIL^A1AEK2M0(.ROOT,PATCH,.RTN,$NA(^TMP($J,"KID")))
"RTN","A1AEK2M",326,0)
 ;
"RTN","A1AEK2M",327,0)
 ; 6. fill in results array
"RTN","A1AEK2M",328,0)
 ;
"RTN","A1AEK2M",329,0)
 S RESULT(RTN("DESIGNATION"),"TXT")=PATCH
"RTN","A1AEK2M",330,0)
 S RESULT(RTN("DESIGNATION"),"KID")=KIDFIL
"RTN","A1AEK2M",331,0)
 I INFOONLY D
"RTN","A1AEK2M",332,0)
 . S RESULT(RTN("DESIGNATION"),"KID")="Info Only Patch"
"RTN","A1AEK2M",333,0)
 N CANTLOAD S CANTLOAD=0
"RTN","A1AEK2M",334,0)
 ; if we can't find it, and it isn't info, put it in this array.
"RTN","A1AEK2M",335,0)
 I KIDFIL="",'INFOONLY D
"RTN","A1AEK2M",336,0)
 . S RESULT(RTN("DESIGNATION"),"CANTLOAD")=PATCH
"RTN","A1AEK2M",337,0)
 . S CANTLOAD=1
"RTN","A1AEK2M",338,0)
 ;
"RTN","A1AEK2M",339,0)
 ; 7. move payload to msg array
"RTN","A1AEK2M",340,0)
 ;
"RTN","A1AEK2M",341,0)
 I $D(^TMP($J,"KID")) D
"RTN","A1AEK2M",342,0)
 . N I F I=1:1 Q:'$D(^TMP($J,"KID",I))  D
"RTN","A1AEK2M",343,0)
 . . S ^TMP($J,"MSG",LASTSUB+I,0)=^TMP($J,"KID",I)
"RTN","A1AEK2M",344,0)
 ;
"RTN","A1AEK2M",345,0)
 ; debug
"RTN","A1AEK2M",346,0)
 ; S $ET="B"
"RTN","A1AEK2M",347,0)
 ; debug
"RTN","A1AEK2M",348,0)
 ;
"RTN","A1AEK2M",349,0)
 ; 8. add dependencies in description
"RTN","A1AEK2M",350,0)
 ;
"RTN","A1AEK2M",351,0)
 ; (temporary or permanent... I don't know now)
"RTN","A1AEK2M",352,0)
 D PREREQAD(.RTN)
"RTN","A1AEK2M",353,0)
 ;
"RTN","A1AEK2M",354,0)
 ; 9. load FOIA patch msg & its OSEHRA copy
"RTN","A1AEK2M",355,0)
 ;
"RTN","A1AEK2M",356,0)
 D ADD0(.RTN,$NA(^TMP($J,"MSG")),CANTLOAD,INFOONLY,.RESULT,$$DEFDIR^%ZISH("./")_ROOT("SB"),PATCH,KIDFIL)
"RTN","A1AEK2M",357,0)
 ;
"RTN","A1AEK2M",358,0)
 ; Deliver the message
"RTN","A1AEK2M",359,0)
 ; DON'T DO THIS ANYMORE -- WILL DELETE
"RTN","A1AEK2M",360,0)
 ; N XMERR,XMZ
"RTN","A1AEK2M",361,0)
 ; D SENDMSG^XMXAPI(.5,XMSUBJ,$NA(^TMP($J,"MSG")),"XXX@Q-PATCH.OSEHRA.ORG",,.XMZ) ; after
"RTN","A1AEK2M",362,0)
 ; I $D(XMERR) W !,"MailMan error, see ^TMP(""XMERR"",$J)" S ERROR=1 Q
"RTN","A1AEK2M",363,0)
 ; Set MESSAGE TYPE to KIDS build
"RTN","A1AEK2M",364,0)
 ; S $P(^XMB(3.9,XMZ,0),"^",7)="K"
"RTN","A1AEK2M",365,0)
 ;
"RTN","A1AEK2M",366,0)
 ; Kill temp globals
"RTN","A1AEK2M",367,0)
 K ^TMP($J,"KID"),^("TXT"),^("MSG")
"RTN","A1AEK2M",368,0)
 ;
"RTN","A1AEK2M",369,0)
 QUIT  ; end of LOAD
"RTN","A1AEK2M",370,0)
 ;
"RTN","A1AEK2M",371,0)
 ;
"RTN","A1AEK2M",372,0)
ADD0(RTN,MSGGLO,CANTLOAD,INFOONLY,RESULT,ROOTPATH,TXTFIL,KIDFIL) ; load foia patch msg & its osehra copy
"RTN","A1AEK2M",373,0)
 ;
"RTN","A1AEK2M",374,0)
 ; Wrapper around all addition functions
"RTN","A1AEK2M",375,0)
 ;
"RTN","A1AEK2M",376,0)
 ; 1. set defaults for Server call
"RTN","A1AEK2M",377,0)
 ; In case we are invoked from A1AEPSVR, default these so we won't crash
"RTN","A1AEK2M",378,0)
 S ROOTPATH=$G(ROOTPATH)
"RTN","A1AEK2M",379,0)
 S TXTFIL=$G(TXTFIL)
"RTN","A1AEK2M",380,0)
 S KIDFIL=$G(KIDFIL)
"RTN","A1AEK2M",381,0)
 ;
"RTN","A1AEK2M",382,0)
 ; ** WARNING ** NEXT 2 LINES ARE IMPORTANT AND CONFUSING - I WOULD LOVE TO CHANGE IT.
"RTN","A1AEK2M",383,0)
 ;
"RTN","A1AEK2M",384,0)
 ; 2. convert patch id from kids to pm
"RTN","A1AEK2M",385,0)
 ;
"RTN","A1AEK2M",386,0)
 N OLDDESIGNATION S OLDDESIGNATION=RTN("DESIGNATION")
"RTN","A1AEK2M",387,0)
 ; Change designation into Patch Module format from KIDS format
"RTN","A1AEK2M",388,0)
 S RTN("DESIGNATION")=$$K2PMD(RTN("DESIGNATION"))
"RTN","A1AEK2M",389,0)
 ;
"RTN","A1AEK2M",390,0)
 ; 3. add pkg to pm
"RTN","A1AEK2M",391,0)
 ;
"RTN","A1AEK2M",392,0)
 ; ZEXCEPT: A1AEPKIF is created by PKGADD in the ST.
"RTN","A1AEK2M",393,0)
 D PKGADD(RTN("DESIGNATION"))
"RTN","A1AEK2M",394,0)
 ;
"RTN","A1AEK2M",395,0)
 ; 4. setup pkg in pm
"RTN","A1AEK2M",396,0)
 ;
"RTN","A1AEK2M",397,0)
 D PKGSETUP(A1AEPKIF,.RTN)
"RTN","A1AEK2M",398,0)
 ;
"RTN","A1AEK2M",399,0)
 ; 5. add pkg version
"RTN","A1AEK2M",400,0)
 ;
"RTN","A1AEK2M",401,0)
 D VERSETUP(A1AEPKIF,RTN("DESIGNATION"))
"RTN","A1AEK2M",402,0)
 ; ZEXCEPT: A1AEVR - Version leaks
"RTN","A1AEK2M",403,0)
 ;
"RTN","A1AEK2M",404,0)
 ; 6. add foia-stream patch
"RTN","A1AEK2M",405,0)
 ;
"RTN","A1AEK2M",406,0)
 N DA S DA=$$ADDPATCH^A1AEK2M0(A1AEPKIF,A1AEVR,.RTN,MSGGLO,CANTLOAD,INFOONLY,ROOTPATH,TXTFIL,KIDFIL)
"RTN","A1AEK2M",407,0)
 ; ZEXCEPT: A1AENB,A1AEPD
"RTN","A1AEK2M",408,0)
 ; Assert that we obtained an IEN:
"RTN","A1AEK2M",409,0)
 D ASSERT(DA)
"RTN","A1AEK2M",410,0)
 ; Assert that the Number is the same as the patch number:
"RTN","A1AEK2M",411,0)
 D ASSERT($P(RTN("DESIGNATION"),"*",3)=A1AENB)
"RTN","A1AEK2M",412,0)
 ; Assert that the designation is the same as the Patch Designation:
"RTN","A1AEK2M",413,0)
 D ASSERT(RTN("DESIGNATION")=A1AEPD)
"RTN","A1AEK2M",414,0)
 ;
"RTN","A1AEK2M",415,0)
 ; 7. add equiv osehra-stream patch
"RTN","A1AEK2M",416,0)
 ; NO - WE NO LONGER DO THIS; LEFT OVER FROM PHASE 1
"RTN","A1AEK2M",417,0)
 ; TO DO: CREATE A NEW OPTION TO MANUALLY DO THIS FROM A PATCH
"RTN","A1AEK2M",418,0)
 ;
"RTN","A1AEK2M",419,0)
 ; have to use old design b/c we just changed it:
"RTN","A1AEK2M",420,0)
 ; S RESULT(OLDDESIGNATION,"MSG",DA)=""
"RTN","A1AEK2M",421,0)
 ; Now, add the Primary forked version of the patch:
"RTN","A1AEK2M",422,0)
 ; N DA D
"RTN","A1AEK2M",423,0)
 ; . N DERIVEDPATCH M DERIVEDPATCH=RTN
"RTN","A1AEK2M",424,0)
 ; . N PRIM S PRIM=$$PRIMSTRM^A1AEUTL()
"RTN","A1AEK2M",425,0)
 ; . S DERIVEDPATCH("ORIG-DESIGNATION")=DERIVEDPATCH("DESIGNATION")
"RTN","A1AEK2M",426,0)
 ; . S $P(DERIVEDPATCH("DESIGNATION"),"*",3)=$P(DERIVEDPATCH("DESIGNATION"),"*",3)+PRIM-1
"RTN","A1AEK2M",427,0)
 ; . S DA=$$ADDPATCH^A1AEK2M0(A1AEPKIF,A1AEVR,.DERIVEDPATCH,MSGGLO,CANTLOAD,INFOONLY,ROOTPATH,TXTFIL,KIDFIL)
"RTN","A1AEK2M",428,0)
 ; . ; ZEXCEPT: A1AENB,A1AEPD
"RTN","A1AEK2M",429,0)
 ; . ; Assert that we obtained an IEN:
"RTN","A1AEK2M",430,0)
 ; . D ASSERT(DA)
"RTN","A1AEK2M",431,0)
 ; . ; Original designation should be retained in derived field:
"RTN","A1AEK2M",432,0)
 ; . D ASSERT($$GET1^DIQ(11005,DA,5.2)=DERIVEDPATCH("ORIG-DESIGNATION"))
"RTN","A1AEK2M",433,0)
 ; . D EN^DDIOL("Forked "_DERIVEDPATCH("ORIG-DESIGNATION")_" into "_DERIVEDPATCH("DESIGNATION"))
"RTN","A1AEK2M",434,0)
 ; . S RESULT(OLDDESIGNATION,"MSG",DA)="" ; ditto... see above.
"RTN","A1AEK2M",435,0)
 ;
"RTN","A1AEK2M",436,0)
 QUIT  ; end of ADD0
"RTN","A1AEK2M",437,0)
 ;
"RTN","A1AEK2M",438,0)
 ;
"RTN","A1AEK2M",439,0)
K2PMD(PATCH) ; convert patch id from kids to pm
"RTN","A1AEK2M",440,0)
 ; Private to package
"RTN","A1AEK2M",441,0)
 ; $$; Kids to Patch Module designation
"RTN","A1AEK2M",442,0)
 ; Code by Wally from A1AEHSVR.
"RTN","A1AEK2M",443,0)
 N %
"RTN","A1AEK2M",444,0)
 I PATCH[" " D
"RTN","A1AEK2M",445,0)
 . S %=$L(PATCH," ")
"RTN","A1AEK2M",446,0)
 . S PATCH=$P(PATCH," ",1,%-1)_"*"_$P(PATCH," ",%)_"*0"
"RTN","A1AEK2M",447,0)
 I $L(PATCH,"*")=3 D
"RTN","A1AEK2M",448,0)
 . S $P(PATCH,"*",2)=+$P(PATCH,"*",2)
"RTN","A1AEK2M",449,0)
 ;
"RTN","A1AEK2M",450,0)
 Q PATCH ; end of $$K2PMD ; return pm patch id
"RTN","A1AEK2M",451,0)
 ;
"RTN","A1AEK2M",452,0)
 ;
"RTN","A1AEK2M",453,0)
PKGADD(DESIGNATION) ; add pkg to pm
"RTN","A1AEK2M",454,0)
 ; Proc; Private to this routine
"RTN","A1AEK2M",455,0)
 ; Add package to Patch Module
"RTN","A1AEK2M",456,0)
 ; Input: Designation: Patch designation AAA*1*22; By value
"RTN","A1AEK2M",457,0)
 ; ZEXCEPT: A1AEPK,A1AEPKIF,A1AEPKNM - Created by PKG^A1AEUTL
"RTN","A1AEK2M",458,0)
 ;
"RTN","A1AEK2M",459,0)
 ; When doing lookups for laygo, only look in the Package file's
"RTN","A1AEK2M",460,0)
 ; C index for designation.
"RTN","A1AEK2M",461,0)
 N DIC S DIC("PTRIX",11007,.01,9.4)="C"
"RTN","A1AEK2M",462,0)
 N A1AE S A1AE(0)="XLM" ; eXact match, Laygo, Multiple Indexes
"RTN","A1AEK2M",463,0)
 N X S X=$P(DESIGNATION,"*") ; Input to ^DIC
"RTN","A1AEK2M",464,0)
 D PKG^A1AEUTL
"RTN","A1AEK2M",465,0)
 ; ZEXCEPT: Y leaks from PKG^A1AEUTL
"RTN","A1AEK2M",466,0)
 I $P($G(Y),U,3) D
"RTN","A1AEK2M",467,0)
 . D EN^DDIOL("Added Package "_DESIGNATION_" to "_$P(^A1AE(11007,0),U))
"RTN","A1AEK2M",468,0)
 ;
"RTN","A1AEK2M",469,0)
 ; Check that the output variables from PKG^A1AEUTL are defined.
"RTN","A1AEK2M",470,0)
 D ASSERT(A1AEPKIF) ; Must be positive
"RTN","A1AEK2M",471,0)
 D ASSERT(A1AEPK=$P(DESIGNATION,"*")) ; PK must be the AAA
"RTN","A1AEK2M",472,0)
 D ASSERT($L(A1AEPKNM)) ; Must be defined.
"RTN","A1AEK2M",473,0)
 ;
"RTN","A1AEK2M",474,0)
 QUIT  ; end of PKGADD
"RTN","A1AEK2M",475,0)
 ;
"RTN","A1AEK2M",476,0)
 ;
"RTN","A1AEK2M",477,0)
PKGSETUP(A1AEPKIF,TXTINFO) ; setup pkg in pm
"RTN","A1AEK2M",478,0)
 ; Private
"RTN","A1AEK2M",479,0)
 ;
"RTN","A1AEK2M",480,0)
 ; ZEXCEPT: A1AEPKIF - Created by PKGADD
"RTN","A1AEK2M",481,0)
 N IENS S IENS=A1AEPKIF_","
"RTN","A1AEK2M",482,0)
 N A1AEFDA,DIERR
"RTN","A1AEK2M",483,0)
 S A1AEFDA(11007,IENS,2)="NO" ; USER SELECTION PERMITTED//^S X="NO"
"RTN","A1AEK2M",484,0)
 S A1AEFDA(11007,IENS,4)="NO" ; FOR TEST SITE ONLY?//^S X="NO"
"RTN","A1AEK2M",485,0)
 S A1AEFDA(11007,IENS,5)="YES" ; ASK PATCH DESCRIPTION COPY
"RTN","A1AEK2M",486,0)
 D FILE^DIE("EKT",$NA(A1AEFDA)) ; External, lock, transact
"RTN","A1AEK2M",487,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M",488,0)
 ;
"RTN","A1AEK2M",489,0)
 N A1AEFDA
"RTN","A1AEK2M",490,0)
 D  ; SUPPORT & VERIFY PERSONNEL
"RTN","A1AEK2M",491,0)
 . N VER
"RTN","A1AEK2M",492,0)
 . S VER=TXTINFO("VER") S:VER="" VER="PATCHMODULE,VERIFIER"
"RTN","A1AEK2M",493,0)
 . S A1AEFDA(11007.02,"?+1,"_IENS,.01)="`"_$$MKUSR(VER,"A1AE PHVER") ; SUPPORT
"RTN","A1AEK2M",494,0)
 . S A1AEFDA(11007.02,"?+1,"_IENS,2)="V"  ; VERIFY
"RTN","A1AEK2M",495,0)
 . Q
"RTN","A1AEK2M",496,0)
 D  ; DEVELOPMENT PERSONNEL
"RTN","A1AEK2M",497,0)
 . N DEV
"RTN","A1AEK2M",498,0)
 . S DEV=TXTINFO("DEV") S:DEV="" DEV="PATCHMODULE,DEVELOPER"
"RTN","A1AEK2M",499,0)
 . S A1AEFDA(11007.03,"?+2,"_IENS,.01)="`"_$$MKUSR(DEV,"A1AE DEVELOPER")
"RTN","A1AEK2M",500,0)
 . Q
"RTN","A1AEK2M",501,0)
 D  ; COMPLETER
"RTN","A1AEK2M",502,0)
 . N COM
"RTN","A1AEK2M",503,0)
 . S COM=TXTINFO("COM") S:COM="" COM="PATCHMODULE,COMPLETER"
"RTN","A1AEK2M",504,0)
 . S A1AEFDA(11007.03,"?+3,"_IENS,.01)="`"_$$MKUSR(COM,"A1AE DEVELOPER")
"RTN","A1AEK2M",505,0)
 . Q
"RTN","A1AEK2M",506,0)
 I $D(A1AEFDA) D
"RTN","A1AEK2M",507,0)
 . D UPDATE^DIE("E",$NA(A1AEFDA))
"RTN","A1AEK2M",508,0)
 . I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M",509,0)
 . D ASSERT($D(^A1AE(11007,A1AEPKIF,"PB")))  ; Verifier Nodes
"RTN","A1AEK2M",510,0)
 . D ASSERT($D(^A1AE(11007,A1AEPKIF,"PH")))  ; Developer Nodes
"RTN","A1AEK2M",511,0)
 . Q
"RTN","A1AEK2M",512,0)
 ;
"RTN","A1AEK2M",513,0)
 QUIT  ; end of PKGSETUP
"RTN","A1AEK2M",514,0)
 ;
"RTN","A1AEK2M",515,0)
 ;
"RTN","A1AEK2M",516,0)
MKUSR(NAME,KEY) ; make users for the pm pkg
"RTN","A1AEK2M",517,0)
 ; Private
"RTN","A1AEK2M",518,0)
 Q:$O(^VA(200,"B",NAME,0)) $O(^(0)) ; Quit if the entry exists with entry
"RTN","A1AEK2M",519,0)
 ;
"RTN","A1AEK2M",520,0)
 ; Get initials
"RTN","A1AEK2M",521,0)
 D STDNAME^XLFNAME(.NAME,"CP")
"RTN","A1AEK2M",522,0)
 N INI S INI=$E(NAME("GIVEN"))_$E(NAME("MIDDLE"))_$E(NAME("FAMILY"))
"RTN","A1AEK2M",523,0)
 ;
"RTN","A1AEK2M",524,0)
 ; File user with key
"RTN","A1AEK2M",525,0)
 N A1AEFDA,A1AEIEN,A1AEERR,DIERR
"RTN","A1AEK2M",526,0)
 S A1AEFDA(200,"?+1,",.01)=NAME ; Name
"RTN","A1AEK2M",527,0)
 S A1AEFDA(200,"?+1,",1)=INI ; Initials
"RTN","A1AEK2M",528,0)
 S A1AEFDA(200,"?+1,",28)="NONE" ; Mail Code
"RTN","A1AEK2M",529,0)
 S:$L($G(KEY)) A1AEFDA(200.051,"?+3,?+1,",.01)=KEY
"RTN","A1AEK2M",530,0)
 ;
"RTN","A1AEK2M",531,0)
 N DIC S DIC(0)="" ; An XREF in File 200 requires this.
"RTN","A1AEK2M",532,0)
 D UPDATE^DIE("E",$NA(A1AEFDA),$NA(A1AEIEN),$NA(A1AEERR)) ; Typical UPDATE
"RTN","A1AEK2M",533,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M",534,0)
 ;
"RTN","A1AEK2M",535,0)
 Q A1AEIEN(1) ;end of $$MKUSER: return user ien
"RTN","A1AEK2M",536,0)
 ;
"RTN","A1AEK2M",537,0)
 ;
"RTN","A1AEK2M",538,0)
VERSETUP(A1AEPKIF,DESIGNATION) ; add pkg version
"RTN","A1AEK2M",539,0)
 ; Private
"RTN","A1AEK2M",540,0)
 ; setup version in 11007
"RTN","A1AEK2M",541,0)
 ; Input: - A1AEPKIF - Package IEN in 11007, value
"RTN","A1AEK2M",542,0)
 ;        - DESIGNATION - Package designation (XXX*1*3)
"RTN","A1AEK2M",543,0)
 ; Output: (In symbol table:) A1AEVR
"RTN","A1AEK2M",544,0)
 ;
"RTN","A1AEK2M",545,0)
 ; ZEXCEPT: A1AEVR - Created here by VER^A1AEUTL
"RTN","A1AEK2M",546,0)
 N X,A1AE S A1AE(0)="L" ; X is version number; input to ^DIC
"RTN","A1AEK2M",547,0)
 S X=$P(DESIGNATION,"*",2)
"RTN","A1AEK2M",548,0)
 D VER^A1AEUTL ; Internal API
"RTN","A1AEK2M",549,0)
 D ASSERT(A1AEVR=$P(DESIGNATION,"*",2))
"RTN","A1AEK2M",550,0)
 ;
"RTN","A1AEK2M",551,0)
 QUIT  ; end of VERSETUP
"RTN","A1AEK2M",552,0)
 ;
"RTN","A1AEK2M",553,0)
 ;
"RTN","A1AEK2M",554,0)
INFOONLY(TXTINFO) ; is patch info only?
"RTN","A1AEK2M",555,0)
 ; Private to Package
"RTN","A1AEK2M",556,0)
 N INFOONLY S INFOONLY=0
"RTN","A1AEK2M",557,0)
 N I F I=0:0 S I=$O(TXTINFO("CAT",I)) Q:'I  D
"RTN","A1AEK2M",558,0)
 . I TXTINFO("CAT",I)="Informational" S INFOONLY=1
"RTN","A1AEK2M",559,0)
 N I F I=0:0 S I=$O(TXTINFO("CAT",I)) Q:'I  D
"RTN","A1AEK2M",560,0)
 . I TXTINFO("CAT",I)="Routine" S INFOONLY=0
"RTN","A1AEK2M",561,0)
 . ; B/c somebody might screw up by adding additional stuff
"RTN","A1AEK2M",562,0)
 ;
"RTN","A1AEK2M",563,0)
 Q INFOONLY ; end of INFOONLY: return true if info-only
"RTN","A1AEK2M",564,0)
 ;
"RTN","A1AEK2M",565,0)
 ;
"RTN","A1AEK2M",566,0)
PREREQAD(TXTINFO) ; add dependencies in description
"RTN","A1AEK2M",567,0)
 ; Private to Package
"RTN","A1AEK2M",568,0)
 ; Add pre-requisites to txt message
"RTN","A1AEK2M",569,0)
 I $O(TXTINFO("PREREQ","")) D  ; If we have prerequisites:
"RTN","A1AEK2M",570,0)
 . N LS S LS=$O(TXTINFO("DESC"," "),-1) ; Get last sub
"RTN","A1AEK2M",571,0)
 . N NS S NS=LS+1 ; New Sub
"RTN","A1AEK2M",572,0)
 . S TXTINFO("DESC",NS)=" ",NS=NS+1 ; Empty line
"RTN","A1AEK2M",573,0)
 . ; Put the data into (this line and next):
"RTN","A1AEK2M",574,0)
 . S TXTINFO("DESC",NS)="Associated patches:",NS=NS+1
"RTN","A1AEK2M",575,0)
 . N I F I=1:1 Q:'$D(TXTINFO("PREREQ",I))  D
"RTN","A1AEK2M",576,0)
 . . S TXTINFO("DESC",NS)=" - "_TXTINFO("PREREQ",I),NS=NS+1
"RTN","A1AEK2M",577,0)
 ;
"RTN","A1AEK2M",578,0)
 QUIT  ; end of PREREQAD
"RTN","A1AEK2M",579,0)
 ;
"RTN","A1AEK2M",580,0)
 ;
"RTN","A1AEK2M",581,0)
ASSERT(X,Y) ; assertion engine
"RTN","A1AEK2M",582,0)
 ;
"RTN","A1AEK2M",583,0)
 ; ZEXCEPT: %ut - Newed on a lower level of the stack if using M-Unit
"RTN","A1AEK2M",584,0)
 ; I X="" BREAK
"RTN","A1AEK2M",585,0)
 I $D(%ut) D  Q  ; if we are inside M-Unit:
"RTN","A1AEK2M",586,0)
 . D CHKTF^%ut(X,$G(Y)) ; assert using that engine
"RTN","A1AEK2M",587,0)
 I 'X D  ; otherwise
"RTN","A1AEK2M",588,0)
 . D EN^DDIOL($G(Y))
"RTN","A1AEK2M",589,0)
 . S $EC=",U-ASSERTION-ERROR," ; throw error if assertion fails
"RTN","A1AEK2M",590,0)
 ;
"RTN","A1AEK2M",591,0)
 QUIT  ; end of ASSERT
"RTN","A1AEK2M0")
0^49^B242933845
"RTN","A1AEK2M0",1,0)
A1AEK2M0 ;ven/smh,toad-option A1AE import single dir ;2015-07-27  11:36 PM
"RTN","A1AEK2M0",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEK2M0",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEK2M0",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEK2M0",5,0)
 ;
"RTN","A1AEK2M0",6,0)
 ; CHANGE ven/lgc 2015 05 28
"RTN","A1AEK2M0",7,0)
 ;   ^XTMP set when routine called at top is for unit testing
"RTN","A1AEK2M0",8,0)
 ; 2015-05-30, ven/toad: fix bug in CLEANHF caused by refactoring:
"RTN","A1AEK2M0",9,0)
 ; <UNDEF>CLEANHF+7^A1AEK2M0, PATT undefined.
"RTN","A1AEK2M0",10,0)
 ;
"RTN","A1AEK2M0",11,0)
 S ^XTMP($J,"A1AEK2M0 FROM TOP")=$$HTFM^XLFDT($H,5)_"^"_$$HTFM^XLFDT($H,5)
"RTN","A1AEK2M0",12,0)
 Q
"RTN","A1AEK2M0",13,0)
 ;
"RTN","A1AEK2M0",14,0)
KIDFIL(ROOT,PATCH,TXTINFO,KIDGLO) ; load patch payload from .kid file
"RTN","A1AEK2M0",15,0)
 ; $$; Private
"RTN","A1AEK2M0",16,0)
 ; Find the KIDS file that corresponds to a patch designation
"RTN","A1AEK2M0",17,0)
 ; input:
"RTN","A1AEK2M0",18,0)
 ;   ROOT: Ref, File system roots (MP = Multibuild folder)
"RTN","A1AEK2M0",19,0)
 ;   PATCH: Val, Text file name
"RTN","A1AEK2M0",20,0)
 ;   TXTINFO: Ref, the analyzed Text array
"RTN","A1AEK2M0",21,0)
 ;   KIDGLO: Name, the Global into which to load the KIDS contents
"RTN","A1AEK2M0",22,0)
 ;      in PM format
"RTN","A1AEK2M0",23,0)
 ;
"RTN","A1AEK2M0",24,0)
 ; This code is pretty iterative.
"RTN","A1AEK2M0",25,0)
 ; It keeps trying different things until it finds the patch.
"RTN","A1AEK2M0",26,0)
 ;
"RTN","A1AEK2M0",27,0)
 N NOEXT S NOEXT=$P(PATCH,".",1,$L(PATCH,".")-1) ; no extension name
"RTN","A1AEK2M0",28,0)
 N KIDFIL0 ; Trial iteration variable
"RTN","A1AEK2M0",29,0)
 N DONE ; Loop exit
"RTN","A1AEK2M0",30,0)
 ;
"RTN","A1AEK2M0",31,0)
 ; 1. load based on .txt file name
"RTN","A1AEK2M0",32,0)
 ;
"RTN","A1AEK2M0",33,0)
 ; Try by file name!
"RTN","A1AEK2M0",34,0)
 N % F %="KID","kid","KIDS","kids","KIDs","kidS" D  Q:$G(DONE)
"RTN","A1AEK2M0",35,0)
 . S KIDFIL0=NOEXT_"."_%
"RTN","A1AEK2M0",36,0)
 . N POP
"RTN","A1AEK2M0",37,0)
 . D OPEN^%ZISH("KID0",ROOT("SB"),KIDFIL0,"R")
"RTN","A1AEK2M0",38,0)
 . I POP S KIDFIL0="" QUIT
"RTN","A1AEK2M0",39,0)
 . D CLOSE^%ZISH("KID0")
"RTN","A1AEK2M0",40,0)
 . ;
"RTN","A1AEK2M0",41,0)
 . ; Okay. At this point we confirmed that the file exists. Is it right though?
"RTN","A1AEK2M0",42,0)
 . K ^TMP($J,"TKID"),^("ANKID") ; Temp KID; Analysis KID
"RTN","A1AEK2M0",43,0)
 . N % S %=$$FTG^%ZISH(ROOT("SB"),KIDFIL0,$NA(^TMP($J,"TKID",1,0)),3)   ; To Global
"RTN","A1AEK2M0",44,0)
 . I '% S $EC=",U-FILE-DISAPPEARED,"
"RTN","A1AEK2M0",45,0)
 . D ANALYZE^A1AEK2M1($NA(^TMP($J,"ANKID")),$NA(^TMP($J,"TKID"))) ; Analyze the file
"RTN","A1AEK2M0",46,0)
 . ;
"RTN","A1AEK2M0",47,0)
 . ; Now, make sure that the TXT file's designation is the same as the KIDS' patch no.
"RTN","A1AEK2M0",48,0)
 . ; Loop through every patch in the file and make sure at least one matches.
"RTN","A1AEK2M0",49,0)
 . N P S P=""
"RTN","A1AEK2M0",50,0)
 . F  S P=$O(^TMP($J,"ANKID",P)) Q:P=""  I $$K2PMD^A1AEK2M(P)=TXTINFO("DESIGNATION") S DONE=1 QUIT
"RTN","A1AEK2M0",51,0)
 . I $G(DONE) DO  QUIT
"RTN","A1AEK2M0",52,0)
 . . M @KIDGLO=^TMP($J,"ANKID",P)
"RTN","A1AEK2M0",53,0)
 . . D EN^DDIOL("Found patch "_TXTINFO("DESIGNATION")_" in "_KIDFIL0)
"RTN","A1AEK2M0",54,0)
 ;
"RTN","A1AEK2M0",55,0)
 ; 2. search all .kid files for patch id & load
"RTN","A1AEK2M0",56,0)
 ;
"RTN","A1AEK2M0",57,0)
 ; If we don't have it, get all KIDS files and grab any one that has the
"RTN","A1AEK2M0",58,0)
 ; patch number in its name.
"RTN","A1AEK2M0",59,0)
 I $G(KIDFIL0)="" D  ; Still we don't have it.
"RTN","A1AEK2M0",60,0)
 . N A S A("*.kid")="",A("*.KID")=""  ; Search for these files
"RTN","A1AEK2M0",61,0)
 . S A("*.kid?")="",A("*.KID?")=""    ; and these too; but not the .json ones.
"RTN","A1AEK2M0",62,0)
 . N FILES  ; rtn array by name
"RTN","A1AEK2M0",63,0)
 . N % S %=$$LIST^%ZISH(ROOT("SB"),$NA(A),$NA(FILES)) ; ls
"RTN","A1AEK2M0",64,0)
 . ; I '% S $EC=",U-DIRECTORY-DISAPPEARED," ; should never happen; WRONG: It's a possibility.
"RTN","A1AEK2M0",65,0)
 . I '% QUIT  ; Try the multibuild directory next
"RTN","A1AEK2M0",66,0)
 . K %,A ; bye
"RTN","A1AEK2M0",67,0)
 . ;
"RTN","A1AEK2M0",68,0)
 . N F S F="" ; file looper
"RTN","A1AEK2M0",69,0)
 . N DONE ; control flag
"RTN","A1AEK2M0",70,0)
 . ; here's the core search for the file name containing a patch number
"RTN","A1AEK2M0",71,0)
 . ; Make sure that the patch doesn't contain spaces (package release)
"RTN","A1AEK2M0",72,0)
 . F  S F=$O(FILES(F)) Q:F=""  I TXTINFO("DESIGNATION")'[" ",F[$P(TXTINFO("DESIGNATION"),"*",3) D  Q:$G(DONE)
"RTN","A1AEK2M0",73,0)
 . . K ^TMP($J,"TKID"),^("ANKID") ; Temp KID; Analysis KID
"RTN","A1AEK2M0",74,0)
 . . N % S %=$$FTG^%ZISH(ROOT("SB"),F,$NA(^TMP($J,"TKID",1,0)),3)   ; To Global
"RTN","A1AEK2M0",75,0)
 . . I '% S $EC=",U-FILE-DISAPPEARED,"
"RTN","A1AEK2M0",76,0)
 . . D ANALYZE^A1AEK2M1($NA(^TMP($J,"ANKID")),$NA(^TMP($J,"TKID"))) ; Analyze the file
"RTN","A1AEK2M0",77,0)
 . . ;
"RTN","A1AEK2M0",78,0)
 . . ; Now, make sure that the TXT file's designation is the same as the KIDS' patch no.
"RTN","A1AEK2M0",79,0)
 . . ; Loop through every patch in the file and make sure at least one matches.
"RTN","A1AEK2M0",80,0)
 . . N P S P=""
"RTN","A1AEK2M0",81,0)
 . . F  S P=$O(^TMP($J,"ANKID",P)) Q:P=""  I $$K2PMD^A1AEK2M(P)=TXTINFO("DESIGNATION") S DONE=1 QUIT
"RTN","A1AEK2M0",82,0)
 . . I $G(DONE) DO  QUIT
"RTN","A1AEK2M0",83,0)
 . . . M @KIDGLO=^TMP($J,"ANKID",P)
"RTN","A1AEK2M0",84,0)
 . . . D EN^DDIOL("Found patch "_TXTINFO("DESIGNATION")_" in "_F)
"RTN","A1AEK2M0",85,0)
 . . . S KIDFIL0=F
"RTN","A1AEK2M0",86,0)
 . ;
"RTN","A1AEK2M0",87,0)
 . ; Patch zero special case (package release)
"RTN","A1AEK2M0",88,0)
 . ; If true, analyze each file for the patch zero notation
"RTN","A1AEK2M0",89,0)
 . I KIDFIL0="",(TXTINFO("DESIGNATION")'["*"!($P(TXTINFO("DESIGNATION"),"*",3)=0)) D
"RTN","A1AEK2M0",90,0)
 . . N F S F=""
"RTN","A1AEK2M0",91,0)
 . . F  S F=$O(FILES(F)) Q:F=""  D
"RTN","A1AEK2M0",92,0)
 . . . K ^TMP($J,"TKID"),^("ANKID") ; Temp KID; Analysis KID
"RTN","A1AEK2M0",93,0)
 . . . N % S %=$$FTG^%ZISH(ROOT("SB"),F,$NA(^TMP($J,"TKID",1,0)),3)   ; To Global
"RTN","A1AEK2M0",94,0)
 . . . I '% S $EC=",U-FILE-DISAPPEARED,"
"RTN","A1AEK2M0",95,0)
 . . . D ANALYZE^A1AEK2M1($NA(^TMP($J,"ANKID")),$NA(^TMP($J,"TKID"))) ; Analyze the file
"RTN","A1AEK2M0",96,0)
 . . . N P S P=""
"RTN","A1AEK2M0",97,0)
 . . . F  S P=$O(^TMP($J,"ANKID",P)) Q:P=""  I $$K2PMD^A1AEK2M(P)=$$K2PMD^A1AEK2M(TXTINFO("DESIGNATION")) S DONE=1 QUIT
"RTN","A1AEK2M0",98,0)
 . . . I $G(DONE) DO  QUIT
"RTN","A1AEK2M0",99,0)
 . . . . M @KIDGLO=^TMP($J,"ANKID",P)
"RTN","A1AEK2M0",100,0)
 . . . . D EN^DDIOL("Found patch "_TXTINFO("DESIGNATION")_" in "_F)
"RTN","A1AEK2M0",101,0)
 . . . . S KIDFIL0=F
"RTN","A1AEK2M0",102,0)
 ;
"RTN","A1AEK2M0",103,0)
 ; 3. search all multiblds for patch id & load
"RTN","A1AEK2M0",104,0)
 ;
"RTN","A1AEK2M0",105,0)
 ; Now we have the hard case. We still don't have the file.
"RTN","A1AEK2M0",106,0)
 ; Let's look in the Multibuilds directory
"RTN","A1AEK2M0",107,0)
 I $G(KIDFIL0)="" D
"RTN","A1AEK2M0",108,0)
 . ; Set-up XTMP
"RTN","A1AEK2M0",109,0)
 . ; NB: NO LOCKS B/C IT'S OKAY FOR MULTIPLE USERS TO FILE THIS SIMULTANEOUSLY
"RTN","A1AEK2M0",110,0)
 . ; NB (CONT): THERE ARE NO COUNTERS WHICH NEED TO BE SYNCHRONIZED.
"RTN","A1AEK2M0",111,0)
 . N XTMPS S XTMPS=$T(+0)
"RTN","A1AEK2M0",112,0)
 . N START S START=$$NOW^XLFDT()
"RTN","A1AEK2M0",113,0)
 . N PURGDT S PURGDT=$$FMADD^XLFDT(START,30)
"RTN","A1AEK2M0",114,0)
 . S ^XTMP(XTMPS,0)=PURGDT_U_START_U_"Analyzed Multibuilds Holding Area"
"RTN","A1AEK2M0",115,0)
 . ;
"RTN","A1AEK2M0",116,0)
 . ; Load the Multibuild file names
"RTN","A1AEK2M0",117,0)
 . N A S A("*.kid")="",A("*.KID")=""  ; Search for these files
"RTN","A1AEK2M0",118,0)
 . S A("*.kid?")="",A("*.KID?")=""    ; and these too; but not the .json ones.
"RTN","A1AEK2M0",119,0)
 . N FILES  ; rtn array by name
"RTN","A1AEK2M0",120,0)
 . N % S %=$$LIST^%ZISH(ROOT("MB"),$NA(A),$NA(FILES)) ; ls
"RTN","A1AEK2M0",121,0)
 . I '% S $EC=",U-DIRECTORY-DISAPPEARED," ; should never happen
"RTN","A1AEK2M0",122,0)
 . K %,A ; bye
"RTN","A1AEK2M0",123,0)
 . ;
"RTN","A1AEK2M0",124,0)
 . N F S F="" ; file looper
"RTN","A1AEK2M0",125,0)
 . N DONE ; control flag
"RTN","A1AEK2M0",126,0)
 . ; Analyze each Multibuild
"RTN","A1AEK2M0",127,0)
 . F  S F=$O(FILES(F)) Q:F=""  D  Q:$G(DONE)
"RTN","A1AEK2M0",128,0)
 . . D EN^DDIOL("Analyzing Multibuild file "_F) ; print out
"RTN","A1AEK2M0",129,0)
 . . I '$D(^XTMP(XTMPS,F)) D  ; If it isn't loaded already...
"RTN","A1AEK2M0",130,0)
 . . . K ^TMP($J,"TKID"),^("ANKID") ; Temp KID; Analysis KID
"RTN","A1AEK2M0",131,0)
 . . . N % S %=$$FTG^%ZISH(ROOT("MB"),F,$NA(^TMP($J,"TKID",1,0)),3)   ; To Global
"RTN","A1AEK2M0",132,0)
 . . . I '% S $EC=",U-FILE-DISAPPEARED,"
"RTN","A1AEK2M0",133,0)
 . . . D ANALYZE^A1AEK2M1($NA(^TMP($J,"ANKID")),$NA(^TMP($J,"TKID"))) ; Analyze the file
"RTN","A1AEK2M0",134,0)
 . . . M ^XTMP(XTMPS,F)=^TMP($J,"ANKID") ; Put into XTMP
"RTN","A1AEK2M0",135,0)
 . . ; Now, make sure that the TXT file's designation is the same as the KIDS' patch no.
"RTN","A1AEK2M0",136,0)
 . . ; Loop through every patch in the file and make sure at least one matches.
"RTN","A1AEK2M0",137,0)
 . . N P S P=""
"RTN","A1AEK2M0",138,0)
 . . F  S P=$O(^XTMP(XTMPS,F,P)) Q:P=""  I $$K2PMD^A1AEK2M(P)=TXTINFO("DESIGNATION") S DONE=1 QUIT
"RTN","A1AEK2M0",139,0)
 . . I $G(DONE) D  QUIT
"RTN","A1AEK2M0",140,0)
 . . . M @KIDGLO=^XTMP(XTMPS,F,P)
"RTN","A1AEK2M0",141,0)
 . . . D EN^DDIOL("Found patch "_TXTINFO("DESIGNATION")_" in "_F)
"RTN","A1AEK2M0",142,0)
 . . . S KIDFIL0=F
"RTN","A1AEK2M0",143,0)
 ;
"RTN","A1AEK2M0",144,0)
 ; If we still can't find it. Oh well! Can't do nuthin.
"RTN","A1AEK2M0",145,0)
 K ^TMP($J,"TKID"),^("ANKID")
"RTN","A1AEK2M0",146,0)
 ;
"RTN","A1AEK2M0",147,0)
 QUIT $G(KIDFIL0) ; end of $$KIDFILE: return name of .kid file
"RTN","A1AEK2M0",148,0)
 ;
"RTN","A1AEK2M0",149,0)
 ;
"RTN","A1AEK2M0",150,0)
GETSTRM(DESIGNATION) ; Private to package; $$; Get the Stream for a designation using a patch number
"RTN","A1AEK2M0",151,0)
 ; Input: DESIGNATION XXX*1.0*5
"RTN","A1AEK2M0",152,0)
 ; Output: Stream IEN in 11007.1
"RTN","A1AEK2M0",153,0)
 N PN
"RTN","A1AEK2M0",154,0)
 I $L(DESIGNATION,"*")>1 S PN=$P(DESIGNATION,"*",3)
"RTN","A1AEK2M0",155,0)
 E  S PN=0
"RTN","A1AEK2M0",156,0)
 I PN=0 QUIT 1  ; VA Patch Stream
"RTN","A1AEK2M0",157,0)
 N STRM
"RTN","A1AEK2M0",158,0)
 N I F I=0:0 S I=$O(^A1AE(11007.1,I)) Q:'I  D  Q:$G(STRM)
"RTN","A1AEK2M0",159,0)
 . N MIN S MIN=I-1 ; For Patch zero (e.g. package release XOBV*1.6*0)
"RTN","A1AEK2M0",160,0)
 . N MAX S MAX=I+998 ; up to 999
"RTN","A1AEK2M0",161,0)
 . I PN'<MIN&(PN'>MAX) S STRM=I  ; Really this is IF MIN<=PN<=MAX...
"RTN","A1AEK2M0",162,0)
 Q STRM
"RTN","A1AEK2M0",163,0)
 ;
"RTN","A1AEK2M0",164,0)
 ;
"RTN","A1AEK2M0",165,0)
CLEANHF(MSGGLO) ; load patch description from .txt file
"RTN","A1AEK2M0",166,0)
 ; Private
"RTN","A1AEK2M0",167,0)
 ; Clean header and footer in message global
"RTN","A1AEK2M0",168,0)
 ; WARNING - Naked all over inside the do block.
"RTN","A1AEK2M0",169,0)
 N S S S=$O(@MSGGLO@("")) ; first numeric sub.
"RTN","A1AEK2M0",170,0)
 I @MSGGLO@(S,0)'["$TXT Created by " D
"RTN","A1AEK2M0",171,0)
 . ; First line is invalid. Try various patterns.
"RTN","A1AEK2M0",172,0)
 . N PATT
"RTN","A1AEK2M0",173,0)
 . N I F I=1:1 D  Q:($$TRIM^XLFSTR(PATT)=">>END<<")
"RTN","A1AEK2M0",174,0)
 . . S PATT=$T(CLNPATT+I)
"RTN","A1AEK2M0",175,0)
 . . S PATT=$P(PATT,";;",2)
"RTN","A1AEK2M0",176,0)
 . . Q:($$TRIM^XLFSTR(PATT)=">>END<<")
"RTN","A1AEK2M0",177,0)
 . . I $$TRIM^XLFSTR(^(0))=$$TRIM^XLFSTR(PATT) D
"RTN","A1AEK2M0",178,0)
 . . . S ^(0)="$TXT Created by UNKNOWN,UNKNOWN at DOWNLOADS.VA.GOV  (KIDS)"
"RTN","A1AEK2M0",179,0)
 . ; If still not there, put in first node before the message.
"RTN","A1AEK2M0",180,0)
 . I ^(0)'["$TXT Created by " D
"RTN","A1AEK2M0",181,0)
 . . S @MSGGLO@(S-1,0)="$TXT Created by UNKNOWN,UNKNOWN at DOWNLOADS.VA.GOV  (KIDS)"
"RTN","A1AEK2M0",182,0)
 ;
"RTN","A1AEK2M0",183,0)
 N LASTSUB S LASTSUB=$O(@MSGGLO@(" "),-1)
"RTN","A1AEK2M0",184,0)
 I @MSGGLO@(LASTSUB,0)'["$END TXT" D
"RTN","A1AEK2M0",185,0)
 . S @MSGGLO@(LASTSUB+1,0)="$END TXT"
"RTN","A1AEK2M0",186,0)
 ;
"RTN","A1AEK2M0",187,0)
 QUIT  ; end of CLEANHF
"RTN","A1AEK2M0",188,0)
 ;
"RTN","A1AEK2M0",189,0)
 ;
"RTN","A1AEK2M0",190,0)
CLNPATT ;; Headers to substitute if present using a contains operator. 1st one is just a blank -- INTENTIONAL
"RTN","A1AEK2M0",191,0)
 ;;
"RTN","A1AEK2M0",192,0)
 ;;*********************
"RTN","A1AEK2M0",193,0)
 ;;Original message:
"RTN","A1AEK2M0",194,0)
 ;;This informational patch
"RTN","A1AEK2M0",195,0)
 ;;>>END<<
"RTN","A1AEK2M0",196,0)
 ;
"RTN","A1AEK2M0",197,0)
 ;
"RTN","A1AEK2M0",198,0)
ADDPATCH(A1AEPKIF,A1AEVR,TXTINFO,PATCHMSG,KIDMISSING,INFOONLY,ROOTPATH,TXTFIL,KIDFIL) ; add patch from msg to pm
"RTN","A1AEK2M0",199,0)
 ; Private $$
"RTN","A1AEK2M0",200,0)
 ; Add patch to 11005 (non-importing version is at NUM^A1AEUTL)
"RTN","A1AEK2M0",201,0)
 ; Input:
"RTN","A1AEK2M0",202,0)
 ;   A1AEPKIF = pkg ien
"RTN","A1AEK2M0",203,0)
 ;   A1AEVR = version #
"RTN","A1AEK2M0",204,0)
 ;  .TXTINFO
"RTN","A1AEK2M0",205,0)
 ;      ("DESIGNATION") = patch id
"RTN","A1AEK2M0",206,0)
 ;      ("ORIG-DESIGNATION") = patch id of original patch
"RTN","A1AEK2M0",207,0)
 ;   PATCHMSG = name of array containing patch msg, $NA(^TMP($J,"MSG"))
"RTN","A1AEK2M0",208,0)
 ;   KIDMISSING = 1 if not info-only but kids file missing
"RTN","A1AEK2M0",209,0)
 ;   INFOONLY = 1 if info-only
"RTN","A1AEK2M0",210,0)
 ;   ROOTPATH = full path to directory containing hfs distribution
"RTN","A1AEK2M0",211,0)
 ;   TXTFIL = name of .tst file
"RTN","A1AEK2M0",212,0)
 ;   KIDFIL = name of .kid file
"RTN","A1AEK2M0",213,0)
 ; output = ien of new record created in file 11005
"RTN","A1AEK2M0",214,0)
 ;
"RTN","A1AEK2M0",215,0)
 ; 1. don't add patch if already exists
"RTN","A1AEK2M0",216,0)
 ;
"RTN","A1AEK2M0",217,0)
 N DESIGNATION S DESIGNATION=TXTINFO("DESIGNATION")
"RTN","A1AEK2M0",218,0)
 ;
"RTN","A1AEK2M0",219,0)
 ; Don't add a patch if it already exists in the system
"RTN","A1AEK2M0",220,0)
 ; This first code is for derived patches
"RTN","A1AEK2M0",221,0)
 I $D(TXTINFO("ORIG-DESIGNATION")),$D(^A1AE(11005,"ADERIVED",TXTINFO("ORIG-DESIGNATION"))) DO  QUIT $O(^(TXTINFO("ORIG-DESIGNATION"),""))
"RTN","A1AEK2M0",222,0)
 . D EN^DDIOL($$RED^A1AEK2M1("Patch already exists. Not adding again."))
"RTN","A1AEK2M0",223,0)
 . S A1AENB=$P(DESIGNATION,"*",3) ; leak this
"RTN","A1AEK2M0",224,0)
 . S A1AEPD=DESIGNATION ; and also this
"RTN","A1AEK2M0",225,0)
 ;
"RTN","A1AEK2M0",226,0)
 ; This code is for original patches (not derived)
"RTN","A1AEK2M0",227,0)
 I '$D(TXTINFO("ORIG-DESIGNATION")),$D(^A1AE(11005,"B",DESIGNATION)) DO  QUIT $O(^(DESIGNATION,""))
"RTN","A1AEK2M0",228,0)
 . D EN^DDIOL($$RED^A1AEK2M1("Patch already exists. Not adding again."))
"RTN","A1AEK2M0",229,0)
 . S A1AENB=$P(DESIGNATION,"*",3) ; leak this
"RTN","A1AEK2M0",230,0)
 . S A1AEPD=DESIGNATION ; and also this
"RTN","A1AEK2M0",231,0)
 ;
"RTN","A1AEK2M0",232,0)
 ; 2. create patch
"RTN","A1AEK2M0",233,0)
 ;
"RTN","A1AEK2M0",234,0)
 ; This block adds the entry to 11005 using the SETNUM API.
"RTN","A1AEK2M0",235,0)
 N X S X=DESIGNATION
"RTN","A1AEK2M0",236,0)
 S A1AENB=$P(DESIGNATION,"*",3) ; ZEXCEPT: A1AENB leak this
"RTN","A1AEK2M0",237,0)
 N A1AETY S A1AETY="PH"
"RTN","A1AEK2M0",238,0)
 N A1AEFL S A1AEFL=11005
"RTN","A1AEK2M0",239,0)
 N DIC,Y S DIC(0)="LX" ; Laygo, Exact match
"RTN","A1AEK2M0",240,0)
 ; ZEXCEPT: DA,A1AEPD Leaked by A1AEUTL
"RTN","A1AEK2M0",241,0)
 I $D(TXTINFO("ORIG-DESIGNATION")) D  ; Derived patch!!
"RTN","A1AEK2M0",242,0)
 . D SETNUM^A1AEUTL   ; This adds the patch based on the latest patch number
"RTN","A1AEK2M0",243,0)
 . ; Derived from patch field:
"RTN","A1AEK2M0",244,0)
 . N FDA S FDA(11005,DA_",",5.2)=TXTINFO("ORIG-DESIGNATION")
"RTN","A1AEK2M0",245,0)
 . ; File--external b/c this is a pointer, lock:
"RTN","A1AEK2M0",246,0)
 . N DIERR D FILE^DIE("EK",$NA(FDA))
"RTN","A1AEK2M0",247,0)
 . I $D(DIERR) D
"RTN","A1AEK2M0",248,0)
 . . S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",249,0)
 E  D  ; original patch!!
"RTN","A1AEK2M0",250,0)
 . D SETNUM1^A1AEUTL ; This forces the current patch number in
"RTN","A1AEK2M0",251,0)
 ;
"RTN","A1AEK2M0",252,0)
 ; Lock the record
"RTN","A1AEK2M0",253,0)
 LOCK +^A1AE(11005,DA):0 E  S $EC=",U-FAILED-TO-LOCK," ; should never happen
"RTN","A1AEK2M0",254,0)
 ;
"RTN","A1AEK2M0",255,0)
 ; Put stream, and that we are currently loading, and some extra fields
"RTN","A1AEK2M0",256,0)
 N STREAM S STREAM=$$GETSTRM^A1AEK2M0(DESIGNATION) ; PATCH STREAM
"RTN","A1AEK2M0",257,0)
 N FDA
"RTN","A1AEK2M0",258,0)
 S FDA(11005,DA_",",.2)=STREAM      ; Current Stream
"RTN","A1AEK2M0",259,0)
 S FDA(11005,DA_",",.21)=1          ; Currently Importing
"RTN","A1AEK2M0",260,0)
 S FDA(11005,DA_",",6.1)=ROOTPATH   ; Import Path
"RTN","A1AEK2M0",261,0)
 S FDA(11005,DA_",",5.3)=TXTFIL     ; Text File Name
"RTN","A1AEK2M0",262,0)
 S FDA(11005,DA_",",5.4)=KIDFIL     ; KID File Name
"RTN","A1AEK2M0",263,0)
 S FDA(11005,DA_",",5.6)=KIDMISSING ; Are we missing the KID file?
"RTN","A1AEK2M0",264,0)
 N DIERR
"RTN","A1AEK2M0",265,0)
 D FILE^DIE("",$NA(FDA),$NA(ERR))
"RTN","A1AEK2M0",266,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",267,0)
 ;
"RTN","A1AEK2M0",268,0)
 ; Change status to Under Development and add developer in
"RTN","A1AEK2M0",269,0)
 S $P(^A1AE(11005,DA,0),U,8)="u" ; field Status of Patch (8)
"RTN","A1AEK2M0",270,0)
 ;
"RTN","A1AEK2M0",271,0)
 ; Get developer
"RTN","A1AEK2M0",272,0)
 N DEV
"RTN","A1AEK2M0",273,0)
 N NAME S NAME=TXTINFO("DEV")
"RTN","A1AEK2M0",274,0)
 D STDNAME^XLFNAME(.NAME) ; Remove funny stuff (like dots at the end)
"RTN","A1AEK2M0",275,0)
 S DEV=$$FIND1^DIC(200,"","QX",NAME,"B") ; Get developer
"RTN","A1AEK2M0",276,0)
 D ASSERT(DEV,"Developer "_TXTINFO("DEV")_" couldn't be resolved")
"RTN","A1AEK2M0",277,0)
 S $P(^A1AE(11005,DA,0),U,9)=DEV ; field User Entering (9)
"RTN","A1AEK2M0",278,0)
 ;
"RTN","A1AEK2M0",279,0)
 ; File Date
"RTN","A1AEK2M0",280,0)
 N X,Y S X=TXTINFO("DEV","DATE") D ^%DT
"RTN","A1AEK2M0",281,0)
 S $P(^A1AE(11005,DA,0),U,12)=Y ; field Date Patch First Entered (12)
"RTN","A1AEK2M0",282,0)
 ; Hand cross-reference
"RTN","A1AEK2M0",283,0)
 S ^A1AE(11005,"AS",A1AEPKIF,A1AEVR,"u",A1AENB,DA)=""
"RTN","A1AEK2M0",284,0)
 ;
"RTN","A1AEK2M0",285,0)
 ; Add subject and priority and a default and sequence number
"RTN","A1AEK2M0",286,0)
 N FDA,IENS
"RTN","A1AEK2M0",287,0)
 N DIERR
"RTN","A1AEK2M0",288,0)
 S IENS=DA_","
"RTN","A1AEK2M0",289,0)
 S FDA(11005,IENS,"PATCH SUBJECT")=TXTINFO("SUBJECT") ; field 5
"RTN","A1AEK2M0",290,0)
 S FDA(11005,IENS,"PRIORITY")=TXTINFO("PRIORITY") ; field 7
"RTN","A1AEK2M0",291,0)
 S FDA(11005,IENS,"DISPLAY ROUTINE PATCH LIST")="Yes" ; field 103
"RTN","A1AEK2M0",292,0)
 D FILE^DIE("E",$NA(FDA))
"RTN","A1AEK2M0",293,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",294,0)
 ;
"RTN","A1AEK2M0",295,0)
 ; Get Categories from DD (abstractable function; maybe do that)
"RTN","A1AEK2M0",296,0)
 N CATDD D FIELD^DID(11005.05,.01,,"POINTER",$NA(CATDD))  ; Categories DD
"RTN","A1AEK2M0",297,0)
 N CATS ; Categories
"RTN","A1AEK2M0",298,0)
 ; d:DATA DICTIONARY;i:INPUT TEMPLATE;
"RTN","A1AEK2M0",299,0)
 N I F I=1:1:$L(CATDD("POINTER"),";") D  ; for each
"RTN","A1AEK2M0",300,0)
 . N CATIE S CATIE=$P(CATDD("POINTER"),";",I) ; each
"RTN","A1AEK2M0",301,0)
 . Q:CATIE=""  ; last piece is empty. Make sure we aren't tripped up.
"RTN","A1AEK2M0",302,0)
 . N EXT,INT ; External Internal forms
"RTN","A1AEK2M0",303,0)
 . S INT=$P(CATIE,":"),EXT=$P(CATIE,":",2) ; get these
"RTN","A1AEK2M0",304,0)
 . S CATS(EXT)=INT ; set into array for use below
"RTN","A1AEK2M0",305,0)
 K CATDD
"RTN","A1AEK2M0",306,0)
 ;
"RTN","A1AEK2M0",307,0)
 N FDA
"RTN","A1AEK2M0",308,0)
 N I F I=1:1 Q:'$D(TXTINFO("CAT",I))  D  ; for each
"RTN","A1AEK2M0",309,0)
 . N CAT S CAT=TXTINFO("CAT",I) ; each
"RTN","A1AEK2M0",310,0)
 . S CAT=$$UP^XLFSTR(CAT) ; uppercase. PM Title cases them.
"RTN","A1AEK2M0",311,0)
 . ; Remove parens from 'Enhancement (Mandatory)':
"RTN","A1AEK2M0",312,0)
 . I CAT["ENHANCE" S CAT=$P(CAT," ")
"RTN","A1AEK2M0",313,0)
 . N INTCAT S INTCAT=CATS(CAT) ; Internal Category
"RTN","A1AEK2M0",314,0)
 . S FDA(11005.05,"+"_I_","_IENS,.01)=INTCAT ; Addition FDA
"RTN","A1AEK2M0",315,0)
 N DIERR ; Fileman error flag
"RTN","A1AEK2M0",316,0)
 D UPDATE^DIE("",$NA(FDA),$NA(ERR)) ; Add data
"RTN","A1AEK2M0",317,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR," ; Chk for error
"RTN","A1AEK2M0",318,0)
 ; Assert that there is at least one:
"RTN","A1AEK2M0",319,0)
 D ASSERT($O(^A1AE(11005,+IENS,"C",0)))
"RTN","A1AEK2M0",320,0)
 K FDA
"RTN","A1AEK2M0",321,0)
 K CATS ; don't need this anymore
"RTN","A1AEK2M0",322,0)
 ;
"RTN","A1AEK2M0",323,0)
 ; Add Description to the patch
"RTN","A1AEK2M0",324,0)
 ; Reference code is COPY^A1AECOPD, but this time we use Fileman
"RTN","A1AEK2M0",325,0)
 ;
"RTN","A1AEK2M0",326,0)
 ; Now put in the whole WP field in the file.
"RTN","A1AEK2M0",327,0)
 N DIERR
"RTN","A1AEK2M0",328,0)
 D WP^DIE(11005,IENS,5.5,"",$NA(TXTINFO("DESC")),$NA(ERR))
"RTN","A1AEK2M0",329,0)
 I $D(DIERR) D
"RTN","A1AEK2M0",330,0)
 . S $EC=",U-FILEMAN-ERROR,"         ; Chk for error
"RTN","A1AEK2M0",331,0)
 ; Assert that it was copied into PATCH DESCRIPTION:
"RTN","A1AEK2M0",332,0)
 D ASSERT($O(^A1AE(11005,DA,"D",0))>0)
"RTN","A1AEK2M0",333,0)
 ;
"RTN","A1AEK2M0",334,0)
 ; Now, load the full KIDS build
"RTN","A1AEK2M0",335,0)
 ; Reference code: ^A1AEM1
"RTN","A1AEK2M0",336,0)
 ;
"RTN","A1AEK2M0",337,0)
 ; 1st Create stub entry in 11005.1
"RTN","A1AEK2M0",338,0)
 ; whether or not we have KIDS file to populate
"RTN","A1AEK2M0",339,0)
 NEW DIC,X,DINUM,DD,DO,DE,DQ,DR
"RTN","A1AEK2M0",340,0)
 S DIC(0)="L"
"RTN","A1AEK2M0",341,0)
 S (X,DINUM)=DA
"RTN","A1AEK2M0",342,0)
 S DIC="^A1AE(11005.1,"
"RTN","A1AEK2M0",343,0)
 S DIC("DR")="20///"_"No routines included"
"RTN","A1AEK2M0",344,0)
 K DD,DO
"RTN","A1AEK2M0",345,0)
 D FILE^DICN
"RTN","A1AEK2M0",346,0)
 K DE,DQ,DR,DIC("DR")
"RTN","A1AEK2M0",347,0)
 ;
"RTN","A1AEK2M0",348,0)
 ; Now load either the KIDS file
"RTN","A1AEK2M0",349,0)
 ; or the HFS data from the remote system that was sent to us
"RTN","A1AEK2M0",350,0)
 I 'INFOONLY D
"RTN","A1AEK2M0",351,0)
 . D LDKID(PATCHMSG,DA,KIDMISSING) ; Load KIDS into 11005.1/11005.5
"RTN","A1AEK2M0",352,0)
 ;
"RTN","A1AEK2M0",353,0)
 ; Assertions
"RTN","A1AEK2M0",354,0)
 N HASRTN S HASRTN=0 ; Has Routines?
"RTN","A1AEK2M0",355,0)
 N I F I=1:1 Q:'$D(TXTINFO("CAT",I))  D
"RTN","A1AEK2M0",356,0)
 . I TXTINFO("CAT",I)="Routine" S HASRTN=1  ; oh yes it does
"RTN","A1AEK2M0",357,0)
 I HASRTN,'KIDMISSING D  ; Routine information in Patch
"RTN","A1AEK2M0",358,0)
 . D ASSERT($O(^A1AE(11005,DA,"P",0)),"Patch says routine must be present")
"RTN","A1AEK2M0",359,0)
 I 'KIDMISSING D
"RTN","A1AEK2M0",360,0)
 . D ASSERT($O(^A1AE(11005.1,DA,2,0)),"11005.1 entry must exist for each loaded patch")
"RTN","A1AEK2M0",361,0)
 ;
"RTN","A1AEK2M0",362,0)
 ; complete & verify patch
"RTN","A1AEK2M0",363,0)
 ; but don't run the input transforms b/c they send mail msgs
"RTN","A1AEK2M0",364,0)
 ; NB: B/c of the Daisy chain triggers,
"RTN","A1AEK2M0",365,0)
 ; the current DUZ and date will be used for users.
"RTN","A1AEK2M0",366,0)
 N N F N="COM","VER" D
"RTN","A1AEK2M0",367,0)
 . N DUZ
"RTN","A1AEK2M0",368,0)
 . N NAME S NAME=TXTINFO(N)
"RTN","A1AEK2M0",369,0)
 . D STDNAME^XLFNAME(.NAME) ; Remove funny stuff (like dots at the end)
"RTN","A1AEK2M0",370,0)
 . S DUZ=$$FIND1^DIC(200,"","QX",NAME,"B") ; Get developer
"RTN","A1AEK2M0",371,0)
 . D ASSERT(DUZ,"User "_NAME_" couldn't be resolved")
"RTN","A1AEK2M0",372,0)
 . N FDA,DIERR
"RTN","A1AEK2M0",373,0)
 . I N="COM" D
"RTN","A1AEK2M0",374,0)
 . . S FDA(11005,IENS,8)="c"
"RTN","A1AEK2M0",375,0)
 . . D FILE^DIE("",$NA(FDA))
"RTN","A1AEK2M0",376,0)
 . . I $D(DIERR) D
"RTN","A1AEK2M0",377,0)
 . . . S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",378,0)
 . I N="VER" D
"RTN","A1AEK2M0",379,0)
 . . S FDA(11005,IENS,8)="v"
"RTN","A1AEK2M0",380,0)
 . . D FILE^DIE("",$NA(FDA))
"RTN","A1AEK2M0",381,0)
 . . I $D(DIERR) D
"RTN","A1AEK2M0",382,0)
 . . . S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",383,0)
 . N X,Y S X=TXTINFO(N,"DATE")
"RTN","A1AEK2M0",384,0)
 . D ^%DT
"RTN","A1AEK2M0",385,0)
 . N FDA,DIERR
"RTN","A1AEK2M0",386,0)
 . ; 10=DATE PATCH COMPLETED; 11=DATE PATCH VERIFIED:
"RTN","A1AEK2M0",387,0)
 . S FDA(11005,IENS,$S(N="COM":10,1:11))=Y
"RTN","A1AEK2M0",388,0)
 . D FILE^DIE("",$NA(FDA))
"RTN","A1AEK2M0",389,0)
 . I $D(DIERR) D
"RTN","A1AEK2M0",390,0)
 . . S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",391,0)
 ;
"RTN","A1AEK2M0",392,0)
 ; Now, put the patches into a review status
"RTN","A1AEK2M0",393,0)
 ; and remove the currently importing flag
"RTN","A1AEK2M0",394,0)
 N FDA,DIERR
"RTN","A1AEK2M0",395,0)
 S FDA(11005,IENS,8)="i2" ; STATUS
"RTN","A1AEK2M0",396,0)
 S FDA(11005,IENS,.21)="@" ; CURRENTLY IMPORTING delete
"RTN","A1AEK2M0",397,0)
 D FILE^DIE("",$NA(FDA))
"RTN","A1AEK2M0",398,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",399,0)
 ;
"RTN","A1AEK2M0",400,0)
 ; Now keep associated patches for later filing in a holding area
"RTN","A1AEK2M0",401,0)
 ; No locks necessary since no increments used.
"RTN","A1AEK2M0",402,0)
 ; namespaced subscript in ^XTMP:
"RTN","A1AEK2M0",403,0)
 N XTMPS S XTMPS=$T(+0)_"-ASSOCIATED-PATCHES"
"RTN","A1AEK2M0",404,0)
 N START S START=$$NOW^XLFDT() ; Now
"RTN","A1AEK2M0",405,0)
 ; hold for two years:
"RTN","A1AEK2M0",406,0)
 N PURGDT S PURGDT=$$FMADD^XLFDT(START,365.24*2+1\1)
"RTN","A1AEK2M0",407,0)
 S ^XTMP(XTMPS,0)=PURGDT_U_START_U_"Associated Patches Holding Area"
"RTN","A1AEK2M0",408,0)
 ;
"RTN","A1AEK2M0",409,0)
 ; Here we add our dependents if they are there
"RTN","A1AEK2M0",410,0)
 N FDA,DIERR
"RTN","A1AEK2M0",411,0)
 N I F I=1:1 Q:'$D(TXTINFO("PREREQ",I))  D
"RTN","A1AEK2M0",412,0)
 . ; 1. Check that the destination patch exists (the dependent)
"RTN","A1AEK2M0",413,0)
 . I $D(^A1AE(11005,"B",TXTINFO("PREREQ",I))) D
"RTN","A1AEK2M0",414,0)
 .. N SUBIENS S SUBIENS="+"_I_","_IENS
"RTN","A1AEK2M0",415,0)
 .. S FDA(11005.09,SUBIENS,.01)=TXTINFO("PREREQ",I)
"RTN","A1AEK2M0",416,0)
 .. S FDA(11005.09,SUBIENS,2)=TXTINFO("PREREQ",I,"v")
"RTN","A1AEK2M0",417,0)
 .. K ^XTMP(XTMPS,DESIGNATION,TXTINFO("PREREQ",I))
"RTN","A1AEK2M0",418,0)
 .. K ^XTMP(XTMPS,"B",TXTINFO("PREREQ",I),DESIGNATION)
"RTN","A1AEK2M0",419,0)
 . E  D  ; 2. If it doesn't exist, put in ^XTMP
"RTN","A1AEK2M0",420,0)
 .. S ^XTMP(XTMPS,DESIGNATION,TXTINFO("PREREQ",I))=TXTINFO("PREREQ",I,"v")
"RTN","A1AEK2M0",421,0)
 .. S ^XTMP(XTMPS,"B",TXTINFO("PREREQ",I),DESIGNATION)=""
"RTN","A1AEK2M0",422,0)
 ; 3. File if we have located dependencies already in the patch file
"RTN","A1AEK2M0",423,0)
 D:$D(FDA) UPDATE^DIE("E",$NA(FDA))
"RTN","A1AEK2M0",424,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",425,0)
 ;
"RTN","A1AEK2M0",426,0)
 ; Here we add ourselves if you find 
"RTN","A1AEK2M0",427,0)
 ; If previously in ^XTMP, then we have a previously loaded patch
"RTN","A1AEK2M0",428,0)
 ; that does not have dependencies resolved.
"RTN","A1AEK2M0",429,0)
 N US S US=DESIGNATION
"RTN","A1AEK2M0",430,0)
 N THEM S THEM=""
"RTN","A1AEK2M0",431,0)
 F  S THEM=$O(^XTMP(XTMPS,"B",US,THEM)) Q:THEM=""  D
"RTN","A1AEK2M0",432,0)
 . N FDA,DIERR
"RTN","A1AEK2M0",433,0)
 . N PATCHIEN S PATCHIEN=$O(^A1AE(11005,"B",THEM,"")) ; get parent ien
"RTN","A1AEK2M0",434,0)
 . I 'PATCHIEN QUIT
"RTN","A1AEK2M0",435,0)
 . N SUBIENS S SUBIENS="+"_1_","_PATCHIEN_","                        ; prep to add
"RTN","A1AEK2M0",436,0)
 . S FDA(11005.09,SUBIENS,.01)=US
"RTN","A1AEK2M0",437,0)
 . S FDA(11005.09,SUBIENS,2)=^XTMP(XTMPS,THEM,US)
"RTN","A1AEK2M0",438,0)
 . K ^XTMP(XTMPS,THEM,US)
"RTN","A1AEK2M0",439,0)
 . K ^XTMP(XTMPS,"B",US,THEM)
"RTN","A1AEK2M0",440,0)
 . D:$D(FDA) UPDATE^DIE("E",$NA(FDA))
"RTN","A1AEK2M0",441,0)
 . I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",442,0)
 ;
"RTN","A1AEK2M0",443,0)
 ; 11. file sequence # for FOIA patches
"RTN","A1AEK2M0",444,0)
 ;
"RTN","A1AEK2M0",445,0)
 ; Sequence number
"RTN","A1AEK2M0",446,0)
 ; (only for VA patches and real patches not package releases)
"RTN","A1AEK2M0",447,0)
 N FDA,DIERR
"RTN","A1AEK2M0",448,0)
 I STREAM=1,$P(DESIGNATION,"*",3)'=0 D  ; only for VA patches
"RTN","A1AEK2M0",449,0)
 . S FDA(11005,IENS,"SEQUENTIAL RELEASE NUMBER")=TXTINFO("SEQ")
"RTN","A1AEK2M0",450,0)
 I $D(FDA) D
"RTN","A1AEK2M0",451,0)
 . D FILE^DIE("E",$NA(FDA))
"RTN","A1AEK2M0",452,0)
 I $D(DIERR) D
"RTN","A1AEK2M0",453,0)
 . S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",454,0)
 ;
"RTN","A1AEK2M0",455,0)
 LOCK -^A1AE(11005,DA) ; unlock new patch record
"RTN","A1AEK2M0",456,0)
 QUIT DA
"RTN","A1AEK2M0",457,0)
 ;
"RTN","A1AEK2M0",458,0)
 ;
"RTN","A1AEK2M0",459,0)
LDKID(PATCHMSG,DA,KIDMISSING) ; create patch payload
"RTN","A1AEK2M0",460,0)
 ; Private to package
"RTN","A1AEK2M0",461,0)
 ; Load KIDS into 11005.1/11005.5
"RTN","A1AEK2M0",462,0)
 ; new code
"RTN","A1AEK2M0",463,0)
 I KIDMISSING Q  ; if no kids file found:
"RTN","A1AEK2M0",464,0)
 ; old code
"RTN","A1AEK2M0",465,0)
 ; I KIDMISSING D  Q  ; if no kids file found:
"RTN","A1AEK2M0",466,0)
 ; D HFS2^A1AEM1(DA) ; nb: deletes 2 node (field 20) on 11005.1
"RTN","A1AEK2M0",467,0)
 ;
"RTN","A1AEK2M0",468,0)
 ; We have a KIDS file
"RTN","A1AEK2M0",469,0)
 ; FND+19  ; Type of message is KIDS not DIFROM:
"RTN","A1AEK2M0",470,0)
 S $P(^A1AE(11005.1,DA,0),U,11)="K"
"RTN","A1AEK2M0",471,0)
 ; TRASH+7 ; remove old KIDS build:
"RTN","A1AEK2M0",472,0)
 K ^A1AE(11005.1,DA,2)
"RTN","A1AEK2M0",473,0)
 ; FND+23  ; Load the new one in:
"RTN","A1AEK2M0",474,0)
 MERGE ^A1AE(11005.1,DA,2)=@PATCHMSG
"RTN","A1AEK2M0",475,0)
 ; DATE PATCH FIRST ENTERED (#12):
"RTN","A1AEK2M0",476,0)
 N DEVDATE S DEVDATE=$P(^A1AE(11005,DA,0),U,12)
"RTN","A1AEK2M0",477,0)
 ; FND+29  ; ditto:
"RTN","A1AEK2M0",478,0)
 S $P(^A1AE(11005.1,DA,2,0),U,5)=DEVDATE
"RTN","A1AEK2M0",479,0)
 ; FND+30  ; Message IEN; We didn't load this from Mailman:
"RTN","A1AEK2M0",480,0)
 S $P(^A1AE(11005.1,DA,2,0),U,2)=""
"RTN","A1AEK2M0",481,0)
 ; FND+31  ; Message date; ditto:
"RTN","A1AEK2M0",482,0)
 S $P(^A1AE(11005.1,DA,2,0),U,3)=""
"RTN","A1AEK2M0",483,0)
 ; FND+32  ; Load routine info into 11005 from kids msg:
"RTN","A1AEK2M0",484,0)
 D RTNBLD^A1AEM1(DA)
"RTN","A1AEK2M0",485,0)
 ; FND+34  ; if load kids get rid of hfs "shadow" copy:
"RTN","A1AEK2M0",486,0)
 I $D(^A1AE(11005.5,DA,0)) D
"RTN","A1AEK2M0",487,0)
 . N DIK S DIK="^A1AE(11005.5,"
"RTN","A1AEK2M0",488,0)
 . D ^DIK
"RTN","A1AEK2M0",489,0)
 ;
"RTN","A1AEK2M0",490,0)
 QUIT
"RTN","A1AEK2M0",491,0)
 ;
"RTN","A1AEK2M0",492,0)
 ;
"RTN","A1AEK2M0",493,0)
ASSERT(X,Y) ; assertion engine
"RTN","A1AEK2M0",494,0)
 ;
"RTN","A1AEK2M0",495,0)
 ; ZEXCEPT: %ut - Newed on a lower level of the stack if using M-Unit
"RTN","A1AEK2M0",496,0)
 I $D(%ut) D  Q
"RTN","A1AEK2M0",497,0)
 . D CHKTF^%ut(X,$G(Y)) ; assert using that engine
"RTN","A1AEK2M0",498,0)
 I 'X D  ; otherwise
"RTN","A1AEK2M0",499,0)
 . D EN^DDIOL($G(Y)) S:+$H=63703 ^TMP("MHERR")=$G(Y)
"RTN","A1AEK2M0",500,0)
 . S $EC=",U-ASSERTION-ERROR,"
"RTN","A1AEK2M0",501,0)
 ;
"RTN","A1AEK2M0",502,0)
 QUIT
"RTN","A1AEK2M1")
0^50^B26219651
"RTN","A1AEK2M1",1,0)
A1AEK2M1 ;ven/smh,toad-analyze kids file and extract info ;2015-05-30T14:53
"RTN","A1AEK2M1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEK2M1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEK2M1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEK2M1",5,0)
 ;
"RTN","A1AEK2M1",6,0)
 ;
"RTN","A1AEK2M1",7,0)
 ;primary change history
"RTN","A1AEK2M1",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEK2M1",9,0)
 ;
"RTN","A1AEK2M1",10,0)
 ;
"RTN","A1AEK2M1",11,0)
 ; Inspired by the VISTA XML Parser, a State Machine
"RTN","A1AEK2M1",12,0)
 ;
"RTN","A1AEK2M1",13,0)
 ; Conversion procedure from a VA PM HFS-extracted KIDS (complete):
"RTN","A1AEK2M1",14,0)
 ;^TMP(28177,1,0)="Released TIU*1*241 SEQ #237" <-- $TXT prepended
"RTN","A1AEK2M1",15,0)
 ;^TMP(28177,2,0)="Extracted from mail message" <-- this becomes the txt
"RTN","A1AEK2M1",16,0)
 ;^TMP(28177,3,0)="**KIDS**:TIU*1.0*241^"       <-- $END TXT replaced
"RTN","A1AEK2M1",17,0)
 ;^TMP(28177,4,0)="" --> becomes $KID append whatever is in 6
"RTN","A1AEK2M1",18,0)
 ;^TMP(28177,5,0)="**INSTALL NAME**"
"RTN","A1AEK2M1",19,0)
 ;^TMP(28177,6,0)="TIU*1.0*241"
"RTN","A1AEK2M1",20,0)
 ;---
"RTN","A1AEK2M1",21,0)
 ;^TMP(28177,1189,0)="**END**" --> becomes $END KID whatever is in 6
"RTN","A1AEK2M1",22,0)
 ;^TMP(28177,1190,0)="**END**" --> DELETED
"RTN","A1AEK2M1",23,0)
 ;
"RTN","A1AEK2M1",24,0)
 ; A few random notes on various KIDS issues
"RTN","A1AEK2M1",25,0)
 ; If the original is a mail message, it will looks like this
"RTN","A1AEK2M1",26,0)
 ;
"RTN","A1AEK2M1",27,0)
 ; >> Released GMRA*4*44 SEQ #41
"RTN","A1AEK2M1",28,0)
 ; >> Extracted from mail message
"RTN","A1AEK2M1",29,0)
 ; >> **KIDS**:GMRA*4.0*44^
"RTN","A1AEK2M1",30,0)
 ; >>
"RTN","A1AEK2M1",31,0)
 ; >> **INSTALL NAME** etc..
"RTN","A1AEK2M1",32,0)
 ; >> kids contents
"RTN","A1AEK2M1",33,0)
 ; >> **END**
"RTN","A1AEK2M1",34,0)
 ; >> **END**
"RTN","A1AEK2M1",35,0)
 ;
"RTN","A1AEK2M1",36,0)
 ; If the original isn't a PM HFS-extracted KIDS build, but a Straight from
"RTN","A1AEK2M1",37,0)
 ; KIDS KIDS-build, then the KIDS first line looks like this:
"RTN","A1AEK2M1",38,0)
 ;
"RTN","A1AEK2M1",39,0)
 ; >> KIDS Distribution saved on Apr 30, 2013@05:31:47
"RTN","A1AEK2M1",40,0)
 ; >> OR*371
"RTN","A1AEK2M1",41,0)
 ; >> **KIDS**:OR*3.0*371^
"RTN","A1AEK2M1",42,0)
 ; >> <blank line>
"RTN","A1AEK2M1",43,0)
 ; >> **INSTALL NAME**
"RTN","A1AEK2M1",44,0)
 ;
"RTN","A1AEK2M1",45,0)
 ; Multibuilds look like this:
"RTN","A1AEK2M1",46,0)
 ;
"RTN","A1AEK2M1",47,0)
 ; >> KIDS Distribution saved on Sep 23, 2011@17:42:57
"RTN","A1AEK2M1",48,0)
 ; >> IB/PRCA Remedy Ticket Fixes
"RTN","A1AEK2M1",49,0)
 ; >> **KIDS**:IB*2.0*459^PRCA*4.5*280^
"RTN","A1AEK2M1",50,0)
 ; >> <blank line>
"RTN","A1AEK2M1",51,0)
 ; >> **INSTALL NAME**
"RTN","A1AEK2M1",52,0)
 ; >> text of first KIDS build
"RTN","A1AEK2M1",53,0)
 ; >> **INSTALL NAME**
"RTN","A1AEK2M1",54,0)
 ; >> text of second KIDS build
"RTN","A1AEK2M1",55,0)
 ; >> **END**
"RTN","A1AEK2M1",56,0)
 ; >> **END**
"RTN","A1AEK2M1",57,0)
 ;
"RTN","A1AEK2M1",58,0)
 ; A KIDS sent from another system via KIDS/MM has the following contents.
"RTN","A1AEK2M1",59,0)
 ;$TXT Created by TESTMASTER,USER at VEN.SMH101.COM  (KIDS) on Thursday, 01/07/14 at 15:55
"RTN","A1AEK2M1",60,0)
 ; <contents>
"RTN","A1AEK2M1",61,0)
 ;$END TXT
"RTN","A1AEK2M1",62,0)
 ;$KID ZZZ*1.0*1
"RTN","A1AEK2M1",63,0)
 ;**INSTALL NAME**
"RTN","A1AEK2M1",64,0)
 ; <contents>
"RTN","A1AEK2M1",65,0)
 ;$END KID ZZZ*1.0*1
"RTN","A1AEK2M1",66,0)
 ;
"RTN","A1AEK2M1",67,0)
ANALYZE(RTN,MSGGREF,OPT) ; Public Proc ; Analyze a KIDS file in global MSGGREF. Return in RTN.
"RTN","A1AEK2M1",68,0)
 ; RTN - Global name - use with subscript indirection.
"RTN","A1AEK2M1",69,0)
 ; MSGREG - Global passed by name containing message. Use Sub Ind to get data.
"RTN","A1AEK2M1",70,0)
 ; OPT - Value - Options. Only supported one is "D" - debug. Prints out lines as they are read.
"RTN","A1AEK2M1",71,0)
 ;
"RTN","A1AEK2M1",72,0)
 N CREF ; Current global reference
"RTN","A1AEK2M1",73,0)
 N START,STATE,LINE,BUILD
"RTN","A1AEK2M1",74,0)
 S STATE="BEGIN"
"RTN","A1AEK2M1",75,0)
 N EOD S EOD=0 ; End of Document
"RTN","A1AEK2M1",76,0)
 S CREF=MSGGREF ; Current reference for $Q
"RTN","A1AEK2M1",77,0)
 N QL S QL=$QL(MSGGREF) ; QL of original global for quit next line.
"RTN","A1AEK2M1",78,0)
 F  QUIT:EOD  D SEEK() QUIT:EOD  D @STATE  ; CENTRAL READING LOOP
"RTN","A1AEK2M1",79,0)
 QUIT
"RTN","A1AEK2M1",80,0)
 ;
"RTN","A1AEK2M1",81,0)
 ; === REST OF EP'S ARE PRIVATE ===
"RTN","A1AEK2M1",82,0)
 ;
"RTN","A1AEK2M1",83,0)
SEEK(NOTRIM) ; Get next line
"RTN","A1AEK2M1",84,0)
 ; ZEXCEPT: CREF,EOD,LINE,QL - Newd above
"RTN","A1AEK2M1",85,0)
 ; ZEXCEPT: MSGGREF,OPT - Params
"RTN","A1AEK2M1",86,0)
 S CREF=$QUERY(@CREF)
"RTN","A1AEK2M1",87,0)
 I CREF="" S EOD=1 QUIT
"RTN","A1AEK2M1",88,0)
 I $NA(@CREF,QL)'=$NA(@MSGGREF,QL) S EOD=1 QUIT  ; $Q went beyond deep end.
"RTN","A1AEK2M1",89,0)
 S LINE=@CREF
"RTN","A1AEK2M1",90,0)
 I '$G(NOTRIM) S LINE=$$TRIM^XLFSTR(LINE,"R") ; Remove the spaces from the right
"RTN","A1AEK2M1",91,0)
 I $G(OPT)["D" WRITE LINE,! ; Debug mode
"RTN","A1AEK2M1",92,0)
 QUIT
"RTN","A1AEK2M1",93,0)
 ;
"RTN","A1AEK2M1",94,0)
BEGIN ; Begin State
"RTN","A1AEK2M1",95,0)
 ; ZEXCEPT: LINE,STATE
"RTN","A1AEK2M1",96,0)
 D SEEK() ; Second line; first line already read. Discard both.
"RTN","A1AEK2M1",97,0)
 S STATE="KIDSSS"
"RTN","A1AEK2M1",98,0)
 QUIT
"RTN","A1AEK2M1",99,0)
 ;
"RTN","A1AEK2M1",100,0)
KIDSSS ; Process **KIDS**
"RTN","A1AEK2M1",101,0)
 ; ZEXCEPT: LINE,STATE,RTN
"RTN","A1AEK2M1",102,0)
 D ASSERT($E(LINE,1,8)="**KIDS**")
"RTN","A1AEK2M1",103,0)
 N BUILDS S BUILDS=$P(LINE,"**KIDS**:",2)    ; Get the builds (even just one)
"RTN","A1AEK2M1",104,0)
 N I,BUILD F I=1:1:$L(BUILDS,U) S BUILD=$P(BUILDS,U,I) Q:BUILD=""  S @RTN@(BUILD,0)=BUILD  ; Put them into an array
"RTN","A1AEK2M1",105,0)
 D SEEK()                             ; Get rid of the blank line next.
"RTN","A1AEK2M1",106,0)
 S STATE="INSTLNM"                    ; Move to process **INSTALL NAME**
"RTN","A1AEK2M1",107,0)
 QUIT
"RTN","A1AEK2M1",108,0)
 ;
"RTN","A1AEK2M1",109,0)
INSTLNM ; Process **INSTALL NAME**
"RTN","A1AEK2M1",110,0)
 ; ZEXCEPT: LINE,STATE,RTN,BUILD
"RTN","A1AEK2M1",111,0)
 D ASSERT($E(LINE,1,$L("**INSTALL NAME**"))="**INSTALL NAME**")
"RTN","A1AEK2M1",112,0)
 N OLDLINE S OLDLINE=LINE             ; Just preserve this for convenience
"RTN","A1AEK2M1",113,0)
 D SEEK()                             ; Get the install Name
"RTN","A1AEK2M1",114,0)
 S BUILD=LINE                         ; Build name. Build var is shared below.
"RTN","A1AEK2M1",115,0)
 D ASSERT($D(@RTN@(BUILD)))           ; Must exist from KIDSSS
"RTN","A1AEK2M1",116,0)
 S @RTN@(BUILD,1)="$KID "_BUILD       ; Build name
"RTN","A1AEK2M1",117,0)
 S @RTN@(BUILD,2)=OLDLINE             ; **INSTALL NAME**
"RTN","A1AEK2M1",118,0)
 S @RTN@(BUILD,3)=LINE                ; Actual build name
"RTN","A1AEK2M1",119,0)
 S STATE="ZERO"                       ; Build file zero node
"RTN","A1AEK2M1",120,0)
 QUIT
"RTN","A1AEK2M1",121,0)
 ;
"RTN","A1AEK2M1",122,0)
ZERO ; Process the ZERO node of the Build
"RTN","A1AEK2M1",123,0)
 ; ZEXCEPT: LINE,STATE,RTN,BUILD
"RTN","A1AEK2M1",124,0)
 D ASSERT(LINE?1"""BLD"","1.N1",0)")         ; Must look like "BLD",8190,0)
"RTN","A1AEK2M1",125,0)
 N NS S NS=$O(@RTN@(BUILD," "),-1)+1         ; Next sub
"RTN","A1AEK2M1",126,0)
 S @RTN@(BUILD,NS)=LINE                      ; Load this
"RTN","A1AEK2M1",127,0)
 D SEEK()                                    ; Get next line
"RTN","A1AEK2M1",128,0)
 S @RTN@(BUILD,NS+1)=LINE                    ; Load this... BUT...
"RTN","A1AEK2M1",129,0)
 S @RTN@(BUILD,0)=LINE                       ; Put it also on our zero node
"RTN","A1AEK2M1",130,0)
 S STATE="CONTENT"                           ; Load the rest of it.
"RTN","A1AEK2M1",131,0)
 QUIT
"RTN","A1AEK2M1",132,0)
 ;
"RTN","A1AEK2M1",133,0)
CONTENT ; Process Content of KIDS build
"RTN","A1AEK2M1",134,0)
 ; ZEXCEPT: BUILD,EOD,INSTLNM,LINE,RTN
"RTN","A1AEK2M1",135,0)
 ; TODO: Load whether this is Multi-build or not from zero node.
"RTN","A1AEK2M1",136,0)
 N NS S NS=$O(@RTN@(BUILD," "),-1)+1         ; Next sub
"RTN","A1AEK2M1",137,0)
 ;
"RTN","A1AEK2M1",138,0)
 ; If we had reverse $QUERY on GT.M, I won't need to use Goto. I can go back a line.
"RTN","A1AEK2M1",139,0)
 I LINE="**INSTALL NAME**" DO  GOTO INSTLNM  ; Goto b/c we don't want to go back to SEEK in the main loop.
"RTN","A1AEK2M1",140,0)
 . S @RTN@(BUILD,NS)="$END KID "_BUILD       ; End this build
"RTN","A1AEK2M1",141,0)
 ;
"RTN","A1AEK2M1",142,0)
 I LINE="**END**" DO  S EOD=1 QUIT           ; End this build and stop reading the KIDS file
"RTN","A1AEK2M1",143,0)
 . S @RTN@(BUILD,NS)="$END KID "_BUILD       ; End this build
"RTN","A1AEK2M1",144,0)
 ;
"RTN","A1AEK2M1",145,0)
 S @RTN@(BUILD,NS)=LINE                      ; Just read the line
"RTN","A1AEK2M1",146,0)
 QUIT
"RTN","A1AEK2M1",147,0)
 ;
"RTN","A1AEK2M1",148,0)
NOP ; No-Op State - Just use for debugging
"RTN","A1AEK2M1",149,0)
 ; ZEXCEPT: LINE
"RTN","A1AEK2M1",150,0)
 W LINE,!
"RTN","A1AEK2M1",151,0)
 QUIT
"RTN","A1AEK2M1",152,0)
 ;
"RTN","A1AEK2M1",153,0)
ASSERT(X,Y) ; Assertion engine
"RTN","A1AEK2M1",154,0)
 I 'X D EN^DDIOL($G(Y)) S $EC=",U-ASSERTION-ERROR,"
"RTN","A1AEK2M1",155,0)
 QUIT
"RTN","A1AEK2M1",156,0)
 ;
"RTN","A1AEK2M1",157,0)
RED(X) ; Convenience method for Sam to see things on the screen.
"RTN","A1AEK2M1",158,0)
 Q $C(27)_"[41;1m"_X_$C(27)_"[0m"
"RTN","A1AEK2M1",159,0)
 ;
"RTN","A1AEK2M1",160,0)
 ;
"RTN","A1AEK2M1",161,0)
 ;
"RTN","A1AEK2M2")
0^51^B41222210
"RTN","A1AEK2M2",1,0)
A1AEK2M2 ;ven/smh-Analyze text message and extract information;2015-06-09  11:23 PM; 6/9/15 6:18pm ; 6/10/15 6:40pm
"RTN","A1AEK2M2",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEK2M2",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEK2M2",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEK2M2",5,0)
 ;
"RTN","A1AEK2M2",6,0)
 ;
"RTN","A1AEK2M2",7,0)
 ;primary change history
"RTN","A1AEK2M2",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEK2M2",9,0)
 ;
"RTN","A1AEK2M2",10,0)
 ;CHANGE 2015 06 07 VEN/LGC
"RTN","A1AEK2M2",11,0)
 ;  Modified USERS+20
"RTN","A1AEK2M2",12,0)
 ;  Should be only one space after "Date Entered" and ":"
"RTN","A1AEK2M2",13,0)
 ;
"RTN","A1AEK2M2",14,0)
 ;CHANGE 2015 06 10 VEN/LGC
"RTN","A1AEK2M2",15,0)
 ;  Added the new patch status codes at PREREQ ~+23
"RTN","A1AEK2M2",16,0)
 ;
"RTN","A1AEK2M2",17,0)
 ; Inspired by the VISTA XML Parser, a State Machine
"RTN","A1AEK2M2",18,0)
 ;
"RTN","A1AEK2M2",19,0)
ANALYZE(RTN,MSGGREF,OPT) ; Public Proc ; Analyze a message in global MSGGREF. Return in RTN.
"RTN","A1AEK2M2",20,0)
 ; RTN - Ref - Return variable.
"RTN","A1AEK2M2",21,0)
 ;    ("DESIGNATION") - Patch ID (x*2.0*1)
"RTN","A1AEK2M2",22,0)
 ;    ("$TXT") - $TXT line from original patch
"RTN","A1AEK2M2",23,0)
 ;    TODO: Fill in the rest later.
"RTN","A1AEK2M2",24,0)
 ; MSGREG - Global passed by name containing message. Use Sub Ind to get data.
"RTN","A1AEK2M2",25,0)
 ; OPT - Value - Options. Only supported one is "D" - debug. Prints out lines as they are read.
"RTN","A1AEK2M2",26,0)
 ;
"RTN","A1AEK2M2",27,0)
 N CREF ; Current global reference
"RTN","A1AEK2M2",28,0)
 N START,STATE,LINE
"RTN","A1AEK2M2",29,0)
 S STATE="BEGIN"
"RTN","A1AEK2M2",30,0)
 N EOD S EOD=0 ; End of Document
"RTN","A1AEK2M2",31,0)
 S CREF=MSGGREF ; Current reference for $Q
"RTN","A1AEK2M2",32,0)
 N QL S QL=$QL(MSGGREF) ; QL of original global for quit next line.
"RTN","A1AEK2M2",33,0)
 F  QUIT:EOD  D SEEK() QUIT:EOD  D @STATE  ; CENTRAL READING LOOP
"RTN","A1AEK2M2",34,0)
 QUIT
"RTN","A1AEK2M2",35,0)
 ;
"RTN","A1AEK2M2",36,0)
 ; === REST OF EP'S ARE PRIVATE ===
"RTN","A1AEK2M2",37,0)
 ;
"RTN","A1AEK2M2",38,0)
SEEK(NOTRIM) ; Get next line
"RTN","A1AEK2M2",39,0)
 ; ZEXCEPT: CREF,EOD,LINE,QL - Newd above
"RTN","A1AEK2M2",40,0)
 ; ZEXCEPT: MSGGREF,OPT - Params
"RTN","A1AEK2M2",41,0)
 S CREF=$QUERY(@CREF)
"RTN","A1AEK2M2",42,0)
 I CREF="" S EOD=1 QUIT
"RTN","A1AEK2M2",43,0)
 I $NA(@CREF,QL)'=$NA(@MSGGREF,QL) S EOD=1 QUIT
"RTN","A1AEK2M2",44,0)
 S LINE=@CREF
"RTN","A1AEK2M2",45,0)
 I '$G(NOTRIM) S LINE=$$TRIM^XLFSTR(LINE,"R") ; Remove the spaces from the right
"RTN","A1AEK2M2",46,0)
 I $G(OPT)["D" WRITE LINE,! ; Debug mode
"RTN","A1AEK2M2",47,0)
 QUIT
"RTN","A1AEK2M2",48,0)
 ;
"RTN","A1AEK2M2",49,0)
BEGIN ; Beginning of document
"RTN","A1AEK2M2",50,0)
 ; ZEXCEPT: START,EOD - Global vars
"RTN","A1AEK2M2",51,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",52,0)
 I $E(LINE,1,4)="$TXT" D  QUIT
"RTN","A1AEK2M2",53,0)
 . S START=1,STATE="HEADER"
"RTN","A1AEK2M2",54,0)
 . S RTN("$TXT")=$$TRIM^XLFSTR(LINE)
"RTN","A1AEK2M2",55,0)
 I 'START S $EC=",U-NOT-IN-TXT,"
"RTN","A1AEK2M2",56,0)
 QUIT
"RTN","A1AEK2M2",57,0)
 ;
"RTN","A1AEK2M2",58,0)
HEADER ; Process Header
"RTN","A1AEK2M2",59,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",60,0)
 I LINE'["========================" S $EC=",U-NOT-MESSAGE,"
"RTN","A1AEK2M2",61,0)
 D ASSERT(LINE["====")
"RTN","A1AEK2M2",62,0)
 ;
"RTN","A1AEK2M2",63,0)
 ; 1st line
"RTN","A1AEK2M2",64,0)
 D SEEK(),ASSERT($E(LINE,1,$L("Run Date:"))="Run Date:")
"RTN","A1AEK2M2",65,0)
 S RTN("DESIGNATION")=$P(LINE,"Designation: ",2)
"RTN","A1AEK2M2",66,0)
 S RTN("DESIGNATION")=$$TRIM^XLFSTR(RTN("DESIGNATION"))
"RTN","A1AEK2M2",67,0)
 ;
"RTN","A1AEK2M2",68,0)
 ; 2nd line
"RTN","A1AEK2M2",69,0)
 D SEEK(),ASSERT($E(LINE,1,$L("Package :"))="Package :")
"RTN","A1AEK2M2",70,0)
 S RTN("PRIORITY")=$P(LINE,"Priority: ",2)
"RTN","A1AEK2M2",71,0)
 S RTN("PRIORITY")=$$TRIM^XLFSTR(RTN("PRIORITY"))
"RTN","A1AEK2M2",72,0)
 ;
"RTN","A1AEK2M2",73,0)
 ; 3rd line
"RTN","A1AEK2M2",74,0)
 D SEEK(),ASSERT($E(LINE,1,$L("Version :"))="Version :")
"RTN","A1AEK2M2",75,0)
 S RTN("SEQ")=$P(LINE,"SEQ #",2)
"RTN","A1AEK2M2",76,0)
 S RTN("SEQ")=+RTN("SEQ") ; remove trailing spaces etc
"RTN","A1AEK2M2",77,0)
 ;
"RTN","A1AEK2M2",78,0)
 ; 4rd line (optional) compliance date; Discard. Read until ====
"RTN","A1AEK2M2",79,0)
 F  D SEEK() QUIT:(LINE["======")
"RTN","A1AEK2M2",80,0)
 ;
"RTN","A1AEK2M2",81,0)
 S STATE="PREREQ"
"RTN","A1AEK2M2",82,0)
 ;
"RTN","A1AEK2M2",83,0)
 QUIT
"RTN","A1AEK2M2",84,0)
 ;
"RTN","A1AEK2M2",85,0)
PREREQ ; Pre-requisite patches
"RTN","A1AEK2M2",86,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",87,0)
 ; Associated patches: (v)PSJ*5*111   <<= must be installed BEFORE `PSJ*5*216'
"RTN","A1AEK2M2",88,0)
 ;                     (v)PSJ*5*179   <<= must be installed BEFORE `PSJ*5*216'
"RTN","A1AEK2M2",89,0)
 ; -- OR --
"RTN","A1AEK2M2",90,0)
 ; Associated patches: (v)TIU*1*227       install with patch       `TIU*1*274'
"RTN","A1AEK2M2",91,0)
 ;                     (c)TIU*1*261       install with patch       `TIU*1*274'
"RTN","A1AEK2M2",92,0)
 ;
"RTN","A1AEK2M2",93,0)
 ;11005.09,2      REQUIRED FOR VERIFICATION 0;2 SET
"RTN","A1AEK2M2",94,0)
 ;
"RTN","A1AEK2M2",95,0)
 ;                              'y' FOR YES; 
"RTN","A1AEK2M2",96,0)
 ;                              'n' FOR NO; 
"RTN","A1AEK2M2",97,0)
 ;
"RTN","A1AEK2M2",98,0)
 I LINE="" D SEEK()  ; Get next line if it's empty
"RTN","A1AEK2M2",99,0)
 I LINE'["Associated patches:" S STATE="SUBJECT" QUIT
"RTN","A1AEK2M2",100,0)
 ;
"RTN","A1AEK2M2",101,0)
 ; Very trickisy line!!! Do, and loop and do
"RTN","A1AEK2M2",102,0)
 D  F  D SEEK() Q:LINE=""  D
"RTN","A1AEK2M2",103,0)
 . N I S I=$O(RTN("PREREQ",""),-1)+1
"RTN","A1AEK2M2",104,0)
 . N D F D="(v)","(c)","(u)","(r)","(x)","(i2)","(d2)" Q:LINE[D  ; Delimiter. Verified, completed, under development. Cycle logic.
"RTN","A1AEK2M2",105,0)
 . S RTN("PREREQ",I)=$P(LINE,D,2) ; get patch number
"RTN","A1AEK2M2",106,0)
 . I RTN("PREREQ",I)["<<=" D
"RTN","A1AEK2M2",107,0)
 .. S RTN("PREREQ",I)=$P(RTN("PREREQ",I),"<<=") ; remove the <<=
"RTN","A1AEK2M2",108,0)
 .. S RTN("PREREQ",I)=$$TRIM^XLFSTR(RTN("PREREQ",I))
"RTN","A1AEK2M2",109,0)
 .. S RTN("PREREQ",I,"v")="y" ; Required for verification is yes
"RTN","A1AEK2M2",110,0)
 . E  I RTN("PREREQ",I)["install with patch" D
"RTN","A1AEK2M2",111,0)
 .. S RTN("PREREQ",I)=$P(RTN("PREREQ",I),"install")
"RTN","A1AEK2M2",112,0)
 .. S RTN("PREREQ",I)=$$TRIM^XLFSTR(RTN("PREREQ",I))
"RTN","A1AEK2M2",113,0)
 .. S RTN("PREREQ",I,"v")="n" ; Required for verification is no
"RTN","A1AEK2M2",114,0)
 . E  S $EC=",U-INVALID-CODE-PATH,"
"RTN","A1AEK2M2",115,0)
 ;
"RTN","A1AEK2M2",116,0)
 S STATE="SUBJECT"
"RTN","A1AEK2M2",117,0)
 ;
"RTN","A1AEK2M2",118,0)
 QUIT
"RTN","A1AEK2M2",119,0)
 ;
"RTN","A1AEK2M2",120,0)
SUBJECT ; Subject
"RTN","A1AEK2M2",121,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",122,0)
 D ASSERT($E(LINE,1,$L("Subject: "))="Subject: ")
"RTN","A1AEK2M2",123,0)
 S RTN("SUBJECT")=$P(LINE,"Subject: ",2)
"RTN","A1AEK2M2",124,0)
 S RTN("SUBJECT")=$$TRIM^XLFSTR(RTN("SUBJECT"))
"RTN","A1AEK2M2",125,0)
 ;
"RTN","A1AEK2M2",126,0)
 D SEEK() ; Read empty line and discard
"RTN","A1AEK2M2",127,0)
 D ASSERT(LINE="")
"RTN","A1AEK2M2",128,0)
 S STATE="CAT"
"RTN","A1AEK2M2",129,0)
 ;
"RTN","A1AEK2M2",130,0)
 QUIT
"RTN","A1AEK2M2",131,0)
 ;
"RTN","A1AEK2M2",132,0)
CAT ; Category
"RTN","A1AEK2M2",133,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",134,0)
 D ASSERT($E(LINE,1,$L("Category:"))="Category:")
"RTN","A1AEK2M2",135,0)
 F  D SEEK() Q:LINE=""  D
"RTN","A1AEK2M2",136,0)
 . N I S I=$O(RTN("CAT",""),-1)+1
"RTN","A1AEK2M2",137,0)
 . S RTN("CAT",I)=$P(LINE,"- ",2)
"RTN","A1AEK2M2",138,0)
 S STATE="DESC"
"RTN","A1AEK2M2",139,0)
 QUIT
"RTN","A1AEK2M2",140,0)
 ;
"RTN","A1AEK2M2",141,0)
DESC ; Description
"RTN","A1AEK2M2",142,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",143,0)
 D ASSERT($E(LINE,1,$L("Description:"))="Description:")
"RTN","A1AEK2M2",144,0)
 D SEEK()
"RTN","A1AEK2M2",145,0)
 D ASSERT(LINE["====")
"RTN","A1AEK2M2",146,0)
 F  D SEEK(0) Q:$L(LINE)  ; Eat up empty lines
"RTN","A1AEK2M2",147,0)
 D  F  D SEEK(1) Q:($E(LINE)'=" ")  D
"RTN","A1AEK2M2",148,0)
 . N I S I=$O(RTN("DESC",""),-1)+1
"RTN","A1AEK2M2",149,0)
 . S RTN("DESC",I)=$P(LINE," ",2,999) ; Read the rest of the line removing the space.
"RTN","A1AEK2M2",150,0)
 S STATE="USERS"
"RTN","A1AEK2M2",151,0)
 QUIT
"RTN","A1AEK2M2",152,0)
 ;
"RTN","A1AEK2M2",153,0)
USERS ; Users
"RTN","A1AEK2M2",154,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",155,0)
 ; Entered By  : ROWLANDS,ELMER                Date Entered  : JUN 23, 2010
"RTN","A1AEK2M2",156,0)
 ; Completed By: SHERMAN,BILL                  Date Completed: AUG 23, 2013
"RTN","A1AEK2M2",157,0)
 ; Released By : PIERSON,YVONNE E              Date Released : SEP 04, 2013
"RTN","A1AEK2M2",158,0)
 F  D SEEK() Q:LINE["===================================="  ; Loop to this line
"RTN","A1AEK2M2",159,0)
 D SEEK(),ASSERT(LINE["User Information")
"RTN","A1AEK2M2",160,0)
 ;
"RTN","A1AEK2M2",161,0)
 N STR S STR="Entered By  : "
"RTN","A1AEK2M2",162,0)
 D SEEK(),ASSERT($E(LINE,1,$L(STR))=STR)
"RTN","A1AEK2M2",163,0)
 S RTN("DEV")=$P(LINE,STR,2,99)
"RTN","A1AEK2M2",164,0)
 S RTN("DEV")=$P(RTN("DEV"),"Date ")
"RTN","A1AEK2M2",165,0)
 S RTN("DEV")=$$TRIM^XLFSTR(RTN("DEV"))
"RTN","A1AEK2M2",166,0)
 S:RTN("DEV")="" RTN("DEV")="PATCHMODULE,DEVELOPER"
"RTN","A1AEK2M2",167,0)
 ; CHANGE 2015 06 07 VEN/LGC 
"RTN","A1AEK2M2",168,0)
 ;  Should be only one space after "Date Entered" and ":"
"RTN","A1AEK2M2",169,0)
 ; new code
"RTN","A1AEK2M2",170,0)
 S RTN("DEV","DATE")=$P(LINE,"Date Entered : ",2)
"RTN","A1AEK2M2",171,0)
 ; old code
"RTN","A1AEK2M2",172,0)
 ;S RTN("DEV","DATE")=$P(LINE,"Date Entered  : ",2)
"RTN","A1AEK2M2",173,0)
 ; CHANGE END
"RTN","A1AEK2M2",174,0)
 ;
"RTN","A1AEK2M2",175,0)
 N STR S STR="Completed By: "
"RTN","A1AEK2M2",176,0)
 D SEEK(),ASSERT($E(LINE,1,$L(STR))=STR)
"RTN","A1AEK2M2",177,0)
 S RTN("COM")=$P(LINE,STR,2,99)
"RTN","A1AEK2M2",178,0)
 S RTN("COM")=$P(RTN("COM"),"Date ")
"RTN","A1AEK2M2",179,0)
 S RTN("COM")=$$TRIM^XLFSTR(RTN("COM"))
"RTN","A1AEK2M2",180,0)
        S:RTN("COM")="" RTN("COM")="PATCHMODULE,COMPLETER"
"RTN","A1AEK2M2",181,0)
 S RTN("COM","DATE")=$P(LINE,"Date Completed: ",2)
"RTN","A1AEK2M2",182,0)
 ;
"RTN","A1AEK2M2",183,0)
 N STR S STR="Released By : "
"RTN","A1AEK2M2",184,0)
 D SEEK(),ASSERT($E(LINE,1,$L(STR))=STR)
"RTN","A1AEK2M2",185,0)
 S RTN("VER")=$P(LINE,STR,2,99)
"RTN","A1AEK2M2",186,0)
 S RTN("VER")=$P(RTN("VER"),"Date ")
"RTN","A1AEK2M2",187,0)
 S RTN("VER")=$$TRIM^XLFSTR(RTN("VER"))
"RTN","A1AEK2M2",188,0)
        S:RTN("VER")="" RTN("VER")="PATCHMODULE,VERIFIER"
"RTN","A1AEK2M2",189,0)
 S RTN("VER","DATE")=$P(LINE,"Date Released : ",2)
"RTN","A1AEK2M2",190,0)
 F  D SEEK() Q:LINE["===================================="  ; Loop to this line
"RTN","A1AEK2M2",191,0)
 ;
"RTN","A1AEK2M2",192,0)
 S STATE="FOOTER"
"RTN","A1AEK2M2",193,0)
 QUIT
"RTN","A1AEK2M2",194,0)
FOOTER ; Footer
"RTN","A1AEK2M2",195,0)
 ; ZEXCEPT: LINE,EOD,START
"RTN","A1AEK2M2",196,0)
 ; 
"RTN","A1AEK2M2",197,0)
 ; 
"RTN","A1AEK2M2",198,0)
 ; Packman Mail Message:
"RTN","A1AEK2M2",199,0)
 ; =====================
"RTN","A1AEK2M2",200,0)
 ; 
"RTN","A1AEK2M2",201,0)
 ; $END TXT
"RTN","A1AEK2M2",202,0)
 ;
"RTN","A1AEK2M2",203,0)
 F  D SEEK() Q:LINE="$END TXT"
"RTN","A1AEK2M2",204,0)
 S EOD=1,START=0
"RTN","A1AEK2M2",205,0)
 QUIT
"RTN","A1AEK2M2",206,0)
 ;
"RTN","A1AEK2M2",207,0)
NOP ; No-Op. Use this in debugging.
"RTN","A1AEK2M2",208,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",209,0)
 W LINE,!
"RTN","A1AEK2M2",210,0)
 QUIT
"RTN","A1AEK2M2",211,0)
ASSERT(X,Y) ; Assertion engine
"RTN","A1AEK2M2",212,0)
 I 'X D EN^DDIOL($G(Y)) S $EC=",U-ASSERTION-ERROR,"
"RTN","A1AEK2M2",213,0)
 QUIT
"RTN","A1AEK2M2",214,0)
 ;
"RTN","A1AEK2M2",215,0)
ANATRAP(PATCH) ; Analysis Trap -- use this to capture errors from ANALYZE^A1AEK2M2.
"RTN","A1AEK2M2",216,0)
 ; YOU MUST NEW $ET AND $ES AND SET $ET="DO ANATRAP^A1AEK2M2(PATCH)"
"RTN","A1AEK2M2",217,0)
 ; I $EC[",U-NOT-MESSAGE," DO EN^DDIOL(PATCH_" IS NOT A PATCH MESSAGE") S $ET="G UNWIND^ZU",$EC=",UQUIT," QUIT
"RTN","A1AEK2M2",218,0)
 I $EC[",U-NOT-MESSAGE," DO EN^DDIOL(PATCH_" IS NOT A PATCH MESSAGE") G UNWIND
"RTN","A1AEK2M2",219,0)
 QUIT
"RTN","A1AEK2M2",220,0)
 ;
"RTN","A1AEK2M2",221,0)
UNWIND ; Trap unwinder
"RTN","A1AEK2M2",222,0)
 S $ET="Q:($ES&$Q) -9  Q:$ES  S $EC="""""
"RTN","A1AEK2M2",223,0)
 S $EC=",UQUIT,"
"RTN","A1AEK2M2",224,0)
 QUIT  ; This is not hit
"RTN","A1AEK2M3")
0^61^B13955888
"RTN","A1AEK2M3",1,0)
A1AEK2M3 ;ven/smh-Interactive kids loading utilities ;2014-03-28T16:08
"RTN","A1AEK2M3",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEK2M3",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEK2M3",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEK2M3",5,0)
 ;
"RTN","A1AEK2M3",6,0)
 ;Called from A1AEM1. No other permitted callers.
"RTN","A1AEK2M3",7,0)
 ;
"RTN","A1AEK2M3",8,0)
 ;primary change history
"RTN","A1AEK2M3",9,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEK2M3",10,0)
 ;
"RTN","A1AEK2M3",11,0)
 ;
"RTN","A1AEK2M3",12,0)
SELFILQ(DA) ; Protected; Interactive entry point; Load a Patch from the File System
"RTN","A1AEK2M3",13,0)
 ; DA = DHCP PATCH IEN
"RTN","A1AEK2M3",14,0)
 ; Select a Patch from the File system for a KIDS build
"RTN","A1AEK2M3",15,0)
 N PATCH S PATCH=$$GET1^DIQ(11005,DA,.01)
"RTN","A1AEK2M3",16,0)
 N LISTINGOK
"RTN","A1AEK2M3",17,0)
 N KIDFIL S KIDFIL=""
"RTN","A1AEK2M3",18,0)
 N Y
"RTN","A1AEK2M3",19,0)
 N DONE
"RTN","A1AEK2M3",20,0)
 F  D  Q:$G(DONE)!(Y=U)
"RTN","A1AEK2M3",21,0)
 . N DIR,X,DIROUT,DIRUT,DTOUT,DUOUT,DIROUT ; fur DIR
"RTN","A1AEK2M3",22,0)
 . S DIR(0)="F^1:255"
"RTN","A1AEK2M3",23,0)
 . S DIR("A")="Import KIDS build from this directory"
"RTN","A1AEK2M3",24,0)
 . D ^DIR
"RTN","A1AEK2M3",25,0)
 . I $D(DTOUT)!$D(DUOUT)!(U[Y)!(Y[U) S Y=U QUIT
"RTN","A1AEK2M3",26,0)
 . N ARRAY S ARRAY("*.KI*")="",ARRAY("*.ki*")="",ARRAY("*.k")=""
"RTN","A1AEK2M3",27,0)
 . N FILE
"RTN","A1AEK2M3",28,0)
 . S LISTINGOK=$$LIST^%ZISH(Y,$NA(ARRAY),$NA(FILE))
"RTN","A1AEK2M3",29,0)
 . I 'LISTINGOK DO  QUIT
"RTN","A1AEK2M3",30,0)
 . . W "Couldn't find any KID files here. Try again or '^'."
"RTN","A1AEK2M3",31,0)
 . S KIDFIL=$$SELFIL(.FILE,,"Select a KIDS build to match to "_PATCH)
"RTN","A1AEK2M3",32,0)
 . ;
"RTN","A1AEK2M3",33,0)
 . I U[KIDFIL S Y=U QUIT
"RTN","A1AEK2M3",34,0)
 . ;
"RTN","A1AEK2M3",35,0)
 . K ^TMP($J,"TKID"),^("ANKID") ; Temp KID; Analysis KID
"RTN","A1AEK2M3",36,0)
 . N % S %=$$FTG^%ZISH(Y,KIDFIL,$NA(^TMP($J,"TKID",1,0)),3)   ; To Global
"RTN","A1AEK2M3",37,0)
 . I '% S $EC=",U-FILE-DISAPPEARED,"
"RTN","A1AEK2M3",38,0)
 . D ANALYZE^A1AEK2M1($NA(^TMP($J,"ANKID")),$NA(^TMP($J,"TKID"))) ; Analyze the file
"RTN","A1AEK2M3",39,0)
 . ;
"RTN","A1AEK2M3",40,0)
 . ; Loop through every patch in the file and make sure at least one matches.
"RTN","A1AEK2M3",41,0)
 . N P S P=""
"RTN","A1AEK2M3",42,0)
 .  F  S P=$O(^TMP($J,"ANKID",P)) Q:P=""  I $$K2PMD^A1AEK2M(P)=PATCH QUIT
"RTN","A1AEK2M3",43,0)
 . I P="" W !,"None of the patches in this KID file match "_PATCH,! QUIT
"RTN","A1AEK2M3",44,0)
 . ;
"RTN","A1AEK2M3",45,0)
 . ; Okay. Wow. We can finally load this baby into 11005.1. But we have to append it to the $TXT first.
"RTN","A1AEK2M3",46,0)
 . K ^TMP($J,"MSG")
"RTN","A1AEK2M3",47,0)
 . N % S %=$$GET1^DIQ(11005,DA,5.5,"Z",$NA(^TMP($J,"MSG")))  ; Load WP with zero nodes after each sub
"RTN","A1AEK2M3",48,0)
 . ;
"RTN","A1AEK2M3",49,0)
 . ; Move over one for the $TXT line added by CLEANHF
"RTN","A1AEK2M3",50,0)
 . K ^TMP($J,"MSG2")
"RTN","A1AEK2M3",51,0)
 . N I F I=0:0 S I=$O(^TMP($J,"MSG",I)) Q:'I  S ^TMP($J,"MSG2",I+1,0)=^(I,0)
"RTN","A1AEK2M3",52,0)
 . K ^TMP($J,"MSG") ; Make sure it dead so I won't use it by mistake
"RTN","A1AEK2M3",53,0)
 . ;
"RTN","A1AEK2M3",54,0)
 . D CLEANHF^A1AEK2M0($NA(^TMP($J,"MSG2")))
"RTN","A1AEK2M3",55,0)
 . N LS S LS=$O(^TMP($J,"MSG2"," "),-1)
"RTN","A1AEK2M3",56,0)
 . N NS S NS=LS+1
"RTN","A1AEK2M3",57,0)
 . ;
"RTN","A1AEK2M3",58,0)
 . N L,LN F L=0:0 S L=$O(^TMP($J,"ANKID",P,L)) Q:'L  S LN=^(L),^TMP($J,"MSG2",NS,0)=LN,NS=NS+1
"RTN","A1AEK2M3",59,0)
 . D LDKID^A1AEK2M0($NA(^TMP($J,"MSG2")),DA,0)
"RTN","A1AEK2M3",60,0)
 . S DONE=1
"RTN","A1AEK2M3",61,0)
 . S A1AEKIDS=1 ; ZEXCEPT: A1AEKIDS - Leak out as this operates the input template
"RTN","A1AEK2M3",62,0)
 K ^TMP($J,"TKID"),^("ANKID"),^("MSG"),^("MSG2")
"RTN","A1AEK2M3",63,0)
 QUIT
"RTN","A1AEK2M3",64,0)
 ;
"RTN","A1AEK2M3",65,0)
SELFIL(FILES,EXTFILTER,DIRA) ; Public; INTERACTIVE ; Select a file from a list
"RTN","A1AEK2M3",66,0)
 ; FILES = Ref List of files from LIST^%ZISH
"RTN","A1AEK2M3",67,0)
 ; EXTFILTER = Val .TXT or so
"RTN","A1AEK2M3",68,0)
 ; DIRA = Val What to ask the user for
"RTN","A1AEK2M3",69,0)
 ; Uses fileman calls to ease the pain of selecting stuff.
"RTN","A1AEK2M3",70,0)
 ;
"RTN","A1AEK2M3",71,0)
 N I S I=""
"RTN","A1AEK2M3",72,0)
 ; Filter away using the extension
"RTN","A1AEK2M3",73,0)
 I $L($G(EXTFILTER)) F  S I=$O(FILES(I)) Q:I=""  D
"RTN","A1AEK2M3",74,0)
 . I $E($RE(I),1,$L(EXTFILTER))'=$RE(EXTFILTER) K FILES(I)
"RTN","A1AEK2M3",75,0)
 ;
"RTN","A1AEK2M3",76,0)
 ; If no files left, quit with an empty string
"RTN","A1AEK2M3",77,0)
 Q:'$L($O(FILES(""))) ""
"RTN","A1AEK2M3",78,0)
 ;
"RTN","A1AEK2M3",79,0)
 ; Create a global for DIR/DIC
"RTN","A1AEK2M3",80,0)
 K ^TMP($J,"FILES")
"RTN","A1AEK2M3",81,0)
 S ^TMP($J,"FILES",0)="File List"
"RTN","A1AEK2M3",82,0)
 N CNT S CNT=1
"RTN","A1AEK2M3",83,0)
 F  S I=$O(FILES(I)) Q:I=""  S ^TMP($J,"FILES",CNT,0)=I,CNT=CNT+1
"RTN","A1AEK2M3",84,0)
 ;
"RTN","A1AEK2M3",85,0)
 ; Index
"RTN","A1AEK2M3",86,0)
 N DIK,DA S DIK="^TMP($J,""FILES""," D IXALL^DIK
"RTN","A1AEK2M3",87,0)
 ; Select
"RTN","A1AEK2M3",88,0)
 N DIR,X,Y,DIROUT,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","A1AEK2M3",89,0)
 S DIR(0)="P^TMP($J,""FILES"",",DIR("A")=$G(DIRA,"Select a file from the list") D ^DIR
"RTN","A1AEK2M3",90,0)
 I $D(DTOUT)!$D(DUOUT)!(U[Y)!(Y[U) S Y=U QUIT ""
"RTN","A1AEK2M3",91,0)
 ; Bye
"RTN","A1AEK2M3",92,0)
 K ^TMP($J,"FILES")
"RTN","A1AEK2M3",93,0)
 ;
"RTN","A1AEK2M3",94,0)
 I $L(Y,U)=2 Q $P(Y,U,2)
"RTN","A1AEK2M3",95,0)
 E  QUIT ""
"RTN","A1AEK2M3",96,0)
 ;
"RTN","A1AEK2MT")
0^52^B47328891
"RTN","A1AEK2MT",1,0)
A1AEK2MT ;ven/smh-kids hfs files to Patch Module testing code;2015-07-27  11:38 PM
"RTN","A1AEK2MT",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEK2MT",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEK2MT",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEK2MT",5,0)
 ;
"RTN","A1AEK2MT",6,0)
TEST D EN^%ut($T(+0),1) QUIT  ; 
"RTN","A1AEK2MT",7,0)
STARTUP ; M-Unit Start-up
"RTN","A1AEK2MT",8,0)
 ; ZEXCEPT: OLDPWD,A1AEK2MTIEN
"RTN","A1AEK2MT",9,0)
 I $D(DUZ)[0 D ^XUP ; X-New. Protect our variables from XUP's global kill.
"RTN","A1AEK2MT",10,0)
        S DUZ(0)="@" ; Need to create users
"RTN","A1AEK2MT",11,0)
 ; Make the user a surrogate to postmaster
"RTN","A1AEK2MT",12,0)
 N FDA
"RTN","A1AEK2MT",13,0)
 S FDA(3.703,"?+1,.5,",.01)="`"_DUZ
"RTN","A1AEK2MT",14,0)
 S FDA(3.703,"?+1,.5,",1)="y" ; Read Priv
"RTN","A1AEK2MT",15,0)
 S FDA(3.703,"?+1,.5,",2)="y" ; Send Priv
"RTN","A1AEK2MT",16,0)
 D UPDATE^DIE("E",$NA(FDA),$NA(A1AEK2MTIEN))
"RTN","A1AEK2MT",17,0)
 ;
"RTN","A1AEK2MT",18,0)
 I '$D(^XUSEC("A1AE IMPORT",DUZ)) D
"RTN","A1AEK2MT",19,0)
 . N FDA,DIERR
"RTN","A1AEK2MT",20,0)
 . S FDA(200.051,"+1,"_DUZ_",",.01)="A1AE IMPORT"
"RTN","A1AEK2MT",21,0)
 . D UPDATE^DIE("E",$NA(FDA))
"RTN","A1AEK2MT",22,0)
 . I $G(DIERR) S $EC=",U-ERROR,"
"RTN","A1AEK2MT",23,0)
 ;
"RTN","A1AEK2MT",24,0)
 ; *********************
"RTN","A1AEK2MT",25,0)
 ; ------ CAREFUL ------
"RTN","A1AEK2MT",26,0)
 ; Delete all the old data, ONLY IF WE ARE ON TEST
"RTN","A1AEK2MT",27,0)
 I '$$PROD^XUPROD() D
"RTN","A1AEK2MT",28,0)
 . D EN^DDIOL("Deleting all imported users.")
"RTN","A1AEK2MT",29,0)
 . N USR S USR=48
"RTN","A1AEK2MT",30,0)
 . N DA,DIK S DIK="^VA(200,"
"RTN","A1AEK2MT",31,0)
 . F  S USR=$O(^VA(200,USR)) Q:'USR  D
"RTN","A1AEK2MT",32,0)
 . . I $L($P(^VA(200,USR,0),U,3)) QUIT  ; Has access code... don't delete.
"RTN","A1AEK2MT",33,0)
 . . S DA=USR D ^DIK
"RTN","A1AEK2MT",34,0)
 . ;
"RTN","A1AEK2MT",35,0)
 . ; Now loop through the package file, and delete the A1AE Packages from our file
"RTN","A1AEK2MT",36,0)
 . D EN^DDIOL("Deleting imported package set-ups and imported patches")
"RTN","A1AEK2MT",37,0)
 . N PKG S PKG=0 F  S PKG=$O(^DIC(9.4,PKG)) Q:'PKG  D
"RTN","A1AEK2MT",38,0)
 . . N DA,DIK S DIK="^A1AE(11005,"
"RTN","A1AEK2MT",39,0)
 . . S DA="" F  S DA=$O(^A1AE(11005,"D",PKG,DA)) Q:'DA  F DIK="^A1AE(11005,","^A1AE(11005.1,","^A1AE(11005.5," D ^DIK
"RTN","A1AEK2MT",40,0)
 . . N DA,DIK S DIK="^A1AE(11007,"
"RTN","A1AEK2MT",41,0)
 . . I $D(^A1AE(11007,"B",PKG)) S DA=PKG D ^DIK
"RTN","A1AEK2MT",42,0)
 . S $P(^A1AE(11005,0),U,3,4)=0_U_0 ; Zero out the header node so we start counting at zero
"RTN","A1AEK2MT",43,0)
 ; /------ CAREFUL ------
"RTN","A1AEK2MT",44,0)
 ; **********************
"RTN","A1AEK2MT",45,0)
 ;
"RTN","A1AEK2MT",46,0)
 I +$SY'=47 QUIT  ; Test Works only on GT.M/Unix
"RTN","A1AEK2MT",47,0)
 S OLDPWD=$$PWD^A1AEOS()
"RTN","A1AEK2MT",48,0)
 D EN^DDIOL("Cloning the OSEHRA repository. This will take some time.")
"RTN","A1AEK2MT",49,0)
 N % S %=$$MKDIR^A1AEOS("osehra-repo")
"RTN","A1AEK2MT",50,0)
 I % S $EC=",U-MKDIR-FAILED,"
"RTN","A1AEK2MT",51,0)
 N D S D=$$D^A1AEOS()
"RTN","A1AEK2MT",52,0)
 N % S %=$$CD^A1AEOS(OLDPWD_D_"osehra-repo")
"RTN","A1AEK2MT",53,0)
 I %'["osehra" S $EC=",U-CD-FAILED,"
"RTN","A1AEK2MT",54,0)
 N % S %=$$RDPIPE^A1AEOS(,"git clone --depth=1 https://github.com/OSEHRA/VistA")
"RTN","A1AEK2MT",55,0)
 QUIT
"RTN","A1AEK2MT",56,0)
 ;
"RTN","A1AEK2MT",57,0)
SHUTDOWN ; M-Unit Shutdown
"RTN","A1AEK2MT",58,0)
 ; Delete surrogate for postmaster
"RTN","A1AEK2MT",59,0)
 ; ZEXCEPT: OLDPWD,A1AEK2MTIEN ; Created in STARTUP
"RTN","A1AEK2MT",60,0)
 N C S C=","
"RTN","A1AEK2MT",61,0)
 N FDA S FDA(3.703,A1AEK2MTIEN(1)_C_.5_C,.01)="@" D FILE^DIE("E",$NA(FDA))
"RTN","A1AEK2MT",62,0)
 ;
"RTN","A1AEK2MT",63,0)
 N P S P="cmdpipe"
"RTN","A1AEK2MT",64,0)
 N % S %=$$CD^A1AEOS(OLDPWD)
"RTN","A1AEK2MT",65,0)
 K OLDPWD,A1AEK2MTIEN
"RTN","A1AEK2MT",66,0)
 ; Don't delete. Takes forever to clone again.
"RTN","A1AEK2MT",67,0)
 ; O P:(shell="/bin/sh":command="rm -rf osehra-repo")::"pipe"
"RTN","A1AEK2MT",68,0)
 ; U P C P
"RTN","A1AEK2MT",69,0)
 QUIT
"RTN","A1AEK2MT",70,0)
 ;
"RTN","A1AEK2MT",71,0)
CLEANQP ; @TEST Clean Q-Patch Queue (Temporary until we make the code file into 11005/11005.1 directly)
"RTN","A1AEK2MT",72,0)
 N XMDUZ,XMK,XMZ
"RTN","A1AEK2MT",73,0)
 S XMDUZ=.5
"RTN","A1AEK2MT",74,0)
 N % S %=$O(^XMB(3.7,.5,2,"B","Q-PATCH"))
"RTN","A1AEK2MT",75,0)
 S XMK=$O(^XMB(3.7,.5,2,"B",%,0))
"RTN","A1AEK2MT",76,0)
 S XMZ=0 F  S XMZ=$O(^XMB(3.7,.5,2,XMK,1,XMZ)) Q:'XMZ  D KL^XMA1B
"RTN","A1AEK2MT",77,0)
 D ASSERT($O(^XMB(3.7,.5,2,XMK,1,0))="")
"RTN","A1AEK2MT",78,0)
 ;
"RTN","A1AEK2MT",79,0)
 ; Remove unreferenced messages from Mailman
"RTN","A1AEK2MT",80,0)
 N XMPARM
"RTN","A1AEK2MT",81,0)
 S (XMPARM("TYPE"),XMPARM("START"))=0
"RTN","A1AEK2MT",82,0)
 S (XMPARM("END"),XMPARM("PDATE"))=$$FMADD^XLFDT($$DT^XLFDT(),1)
"RTN","A1AEK2MT",83,0)
 D PURGEIT^XMA3(.XMPARM)
"RTN","A1AEK2MT",84,0)
 QUIT
"RTN","A1AEK2MT",85,0)
 ;
"RTN","A1AEK2MT",86,0)
GETSTRM ; @TEST Test GETSTRM^A1AEK2M
"RTN","A1AEK2MT",87,0)
 D CHKEQ^%ut($$GETSTRM^A1AEK2M0("AAA*2.0*55"),1)
"RTN","A1AEK2MT",88,0)
 D CHKEQ^%ut($$GETSTRM^A1AEK2M0("AAA*2.0*0"),1)
"RTN","A1AEK2MT",89,0)
 D CHKEQ^%ut($$GETSTRM^A1AEK2M0("AAA*2.0*10035"),10001)
"RTN","A1AEK2MT",90,0)
 QUIT
"RTN","A1AEK2MT",91,0)
 ;
"RTN","A1AEK2MT",92,0)
SELFILT ; ##TEST Test file selector - Can't use M-Unit... this is interactive.
"RTN","A1AEK2MT",93,0)
 N ROOT S ROOT="/home/forum/testkids/"
"RTN","A1AEK2MT",94,0)
 N ARRAY S ARRAY("*")=""
"RTN","A1AEK2MT",95,0)
 N FILE
"RTN","A1AEK2MT",96,0)
 N % S %=$$LIST^%ZISH(ROOT,"ARRAY","FILE")
"RTN","A1AEK2MT",97,0)
 I '% S $EC=",U-WRONG-DIRECTORY,"
"RTN","A1AEK2MT",98,0)
 N % S %=$$SELFIL^A1AEK2M3(.FILE)
"RTN","A1AEK2MT",99,0)
 W !,%
"RTN","A1AEK2MT",100,0)
 N % S %=$$SELFIL^A1AEK2M3(.FILE,".TXT")
"RTN","A1AEK2MT",101,0)
 W !,%
"RTN","A1AEK2MT",102,0)
 QUIT
"RTN","A1AEK2MT",103,0)
 ;
"RTN","A1AEK2MT",104,0)
ANALYZE1 ; ##TEST Test Analyze on just the TIU patches
"RTN","A1AEK2MT",105,0)
 N ROOT S ROOT="/home/forum/testkids/"
"RTN","A1AEK2MT",106,0)
 N A S A("*.TXT")=""
"RTN","A1AEK2MT",107,0)
 N FILE
"RTN","A1AEK2MT",108,0)
 N % S %=$$LIST^%ZISH(ROOT,$NA(A),$NA(FILE))
"RTN","A1AEK2MT",109,0)
 N J S J=""
"RTN","A1AEK2MT",110,0)
 F  S J=$O(FILE(J)) Q:J=""  D
"RTN","A1AEK2MT",111,0)
 . K ^TMP($J,"TXT")
"RTN","A1AEK2MT",112,0)
 . N Y S Y=$$FTG^%ZISH(ROOT,J,$NA(^TMP($J,"TXT",2,0)),3) I 'Y S $ECODE=",U-CANNOT-READ-FILE,"
"RTN","A1AEK2MT",113,0)
 . D CLEANHF^A1AEK2M0($NA(^TMP($J,"TXT")))
"RTN","A1AEK2MT",114,0)
 . N RTN
"RTN","A1AEK2MT",115,0)
 . D ANALYZE^A1AEK2M2(.RTN,$NA(^TMP($J,"TXT")),"")
"RTN","A1AEK2MT",116,0)
 . D ASSERT($L(RTN("SEQ")))
"RTN","A1AEK2MT",117,0)
 . D ASSERT($L(RTN("SUBJECT")))
"RTN","A1AEK2MT",118,0)
 QUIT
"RTN","A1AEK2MT",119,0)
 ;
"RTN","A1AEK2MT",120,0)
ANALYZE2 ; @TEST Analyze TIU patches on OSEHRA repo
"RTN","A1AEK2MT",121,0)
 N FILES N % S %=$$RDPIPE^A1AEOS(.FILES,"find . -name 'TIU*.TXT'")
"RTN","A1AEK2MT",122,0)
 N I F I=0:0 S I=$O(FILES(I)) Q:'I  D 
"RTN","A1AEK2MT",123,0)
 . K ^TMP($J,"TXT")
"RTN","A1AEK2MT",124,0)
 . N Y S Y=$$FTG^%ZISH($$PWD^A1AEOS(),FILES(I),$NA(^TMP($J,"TXT",2,0)),3) I 'Y S $ECODE=",U-CANNOT-READ-FILE,"
"RTN","A1AEK2MT",125,0)
 . D CLEANHF^A1AEK2M0($NA(^TMP($J,"TXT"))) ; Clean header and footer.
"RTN","A1AEK2MT",126,0)
 . N RTN
"RTN","A1AEK2MT",127,0)
 . N $ET,$ES ; We do a try catch with ANALYZE^A1AEK2M2
"RTN","A1AEK2MT",128,0)
 . S $ET="D ANATRAP^A1AEK2M2(FILES(I))"
"RTN","A1AEK2MT",129,0)
 . D ANALYZE^A1AEK2M2(.RTN,$NA(^TMP($J,"TXT")),"")
"RTN","A1AEK2MT",130,0)
 . D ASSERT($L(RTN("SEQ")))
"RTN","A1AEK2MT",131,0)
 . D ASSERT($L(RTN("SUBJECT")))
"RTN","A1AEK2MT",132,0)
 QUIT  ; /END ANALYZE2
"RTN","A1AEK2MT",133,0)
 ;
"RTN","A1AEK2MT",134,0)
MB ; @TEST Analyze Multibuild KIDS file
"RTN","A1AEK2MT",135,0)
 N FILES N % S %=$$RDPIPE^A1AEOS(.FILES,"find . -name 'TERATOGENIC_MEDICATIONS_ORDER_CHECKS.KID'")
"RTN","A1AEK2MT",136,0)
 N F S F=FILES(1)
"RTN","A1AEK2MT",137,0)
 N PATH S PATH=$P(F,"/",1,$L(F,"/")-1)
"RTN","A1AEK2MT",138,0)
 N FILE S FILE=$P(F,"/",$L(F,"/"))
"RTN","A1AEK2MT",139,0)
 ;
"RTN","A1AEK2MT",140,0)
 K ^TMP($J,"KID"),^("ANKID")
"RTN","A1AEK2MT",141,0)
 ;
"RTN","A1AEK2MT",142,0)
 N % S %=$$FTG^%ZISH(PATH,FILE,$NA(^TMP($J,"KID",1,0)),3)
"RTN","A1AEK2MT",143,0)
 I '% D FAIL^%ut("Can't open file") QUIT
"RTN","A1AEK2MT",144,0)
 ;
"RTN","A1AEK2MT",145,0)
 D ANALYZE^A1AEK2M1($NA(^TMP($J,"ANKID")),$NA(^TMP($J,"KID")))
"RTN","A1AEK2MT",146,0)
 D CHKTF^%ut($D(^TMP($J,"ANKID","OR*3.0*357")))
"RTN","A1AEK2MT",147,0)
 D CHKTF^%ut($D(^TMP($J,"ANKID","PXRM*2.0*22")))
"RTN","A1AEK2MT",148,0)
 D CHKTF^%ut($D(^TMP($J,"ANKID","TERATOGENIC MEDICATIONS ORDER CHECKS 1.0")))
"RTN","A1AEK2MT",149,0)
 QUIT
"RTN","A1AEK2MT",150,0)
 ;
"RTN","A1AEK2MT",151,0)
LOADALL ; @TEST Load sample patches from the testing directory into the PM.
"RTN","A1AEK2MT",152,0)
 ; N ROOT S (ROOT("SB"),ROOT("MB"))="/home/forum/testkids/"
"RTN","A1AEK2MT",153,0)
 N A1AEDELPREVPATCH S A1AEDELPREVPATCH=1 ; tells code that during unit tests go ahead and delete previous builds
"RTN","A1AEK2MT",154,0)
 ; D SILENT^A1AEK2M(.ROOT)
"RTN","A1AEK2MT",155,0)
 N PACKAGES,A S A("VistA/Packages/*")=""
"RTN","A1AEK2MT",156,0)
 N % S %=$$LIST^%ZISH($$PWD^A1AEOS(),$NA(A),$NA(PACKAGES))
"RTN","A1AEK2MT",157,0)
 I '% S $EC=",U-LISTER-FAILED,"
"RTN","A1AEK2MT",158,0)
 ;
"RTN","A1AEK2MT",159,0)
 ; Get MB directory
"RTN","A1AEK2MT",160,0)
 N PACKAGE S PACKAGE=""
"RTN","A1AEK2MT",161,0)
 F  S PACKAGE=$O(PACKAGES(PACKAGE)) Q:PACKAGE=""  D
"RTN","A1AEK2MT",162,0)
 . I $E(PACKAGE)="." QUIT  ; .gitignore
"RTN","A1AEK2MT",163,0)
 . I PACKAGE="MultiBuilds" S ROOT("MB")=$P($O(A("")),"*")_PACKAGE QUIT
"RTN","A1AEK2MT",164,0)
 . I PACKAGE="Uncategorized" QUIT
"RTN","A1AEK2MT",165,0)
 ;
"RTN","A1AEK2MT",166,0)
 ; Load each patch
"RTN","A1AEK2MT",167,0)
 F  S PACKAGE=$O(PACKAGES(PACKAGE)) Q:PACKAGE=""  D
"RTN","A1AEK2MT",168,0)
 . I PACKAGE'="Registration" QUIT
"RTN","A1AEK2MT",169,0)
 . I $E(PACKAGE)="." QUIT  ; .gitignore
"RTN","A1AEK2MT",170,0)
 . I PACKAGE="MultiBuilds" QUIT
"RTN","A1AEK2MT",171,0)
 . I PACKAGE="Uncategorized" QUIT
"RTN","A1AEK2MT",172,0)
 . N A S A("VistA/Packages/"_PACKAGE_"/Patches/*")=""
"RTN","A1AEK2MT",173,0)
 . N PATCHES
"RTN","A1AEK2MT",174,0)
 . N % S %=$$LIST^%ZISH($$PWD^A1AEOS(),$NA(A),$NA(PATCHES))
"RTN","A1AEK2MT",175,0)
 . I '% S $EC=",U-LISTER-FAILED,"
"RTN","A1AEK2MT",176,0)
 . N PATCH S PATCH=""
"RTN","A1AEK2MT",177,0)
 . F  S PATCH=$O(PATCHES(PATCH)) Q:PATCH=""  D
"RTN","A1AEK2MT",178,0)
 . . I PATCH="README.rst" QUIT
"RTN","A1AEK2MT",179,0)
 . . S ROOT("SB")="VistA/Packages/"_PACKAGE_"/Patches/"_PATCH_"/"
"RTN","A1AEK2MT",180,0)
 . . D SILENT^A1AEK2M(.ROOT)
"RTN","A1AEK2MT",181,0)
 QUIT
"RTN","A1AEK2MT",182,0)
 ;
"RTN","A1AEK2MT",183,0)
LOADDUP ; --TEST - Try to duplicate the loaded patches
"RTN","A1AEK2MT",184,0)
 N ROOT
"RTN","A1AEK2MT",185,0)
 S ROOT("SB")="/home/forum/testkids/"
"RTN","A1AEK2MT",186,0)
 S ROOT("MB")="/home/sam/VistA/Packages/MultiBuilds/"
"RTN","A1AEK2MT",187,0)
 D SILENT^A1AEK2M(.ROOT)
"RTN","A1AEK2MT",188,0)
 N %1,%2
"RTN","A1AEK2MT",189,0)
 S %1=$O(^A1AE(11005,"ADERIVED","TIU*1*272",""))
"RTN","A1AEK2MT",190,0)
 D ASSERT(%1,"Entry must exist")
"RTN","A1AEK2MT",191,0)
 S %2=$O(^A1AE(11005,"ADERIVED","TIU*1*272",%1))
"RTN","A1AEK2MT",192,0)
 D ASSERT(%2="","There should not be a duplicated entry")
"RTN","A1AEK2MT",193,0)
 QUIT
"RTN","A1AEK2MT",194,0)
 ;
"RTN","A1AEK2MT",195,0)
 ; Convenience methods for M-Unit.
"RTN","A1AEK2MT",196,0)
ASSERT(A,B) D CHKTF^%ut(A,$G(B)) QUIT
"RTN","A1AEK2MT",197,0)
CHKEQ(A,B,C) D CHKEQ^%ut(A,B,$G(C)) QUIT
"RTN","A1AEK2V0")
0^58^B67773739
"RTN","A1AEK2V0",1,0)
A1AEK2V0 ;ven/smh-Continuation of A1AEK2VC ;2014-03-24T15:46
"RTN","A1AEK2V0",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEK2V0",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEK2V0",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEK2V0",5,0)
 ;
"RTN","A1AEK2V0",6,0)
 ;
"RTN","A1AEK2V0",7,0)
 ;primary change history
"RTN","A1AEK2V0",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEK2V0",9,0)
 ;
"RTN","A1AEK2V0",10,0)
 ;
"RTN","A1AEK2V0",11,0)
RTN(FAIL,RTNGLO,ROOT) ; Routine Exporter
"RTN","A1AEK2V0",12,0)
 ; .FAIL - Output. Did we fail? Mostly b/c of filesystem issues.
"RTN","A1AEK2V0",13,0)
 ; RTNGLO - The KIDS global ending at "RTN". Use $NA to pass this.
"RTN","A1AEK2V0",14,0)
 ; ROOT - File system root where we are gonna make the Routines directory
"RTN","A1AEK2V0",15,0)
 ;
"RTN","A1AEK2V0",16,0)
 N RTNDIR S RTNDIR=ROOT_"Routines/"
"RTN","A1AEK2V0",17,0)
 N % S %=$$MKDIR^A1AEOS(RTNDIR)
"RTN","A1AEK2V0",18,0)
 I % S FAIL=1 QUIT
"RTN","A1AEK2V0",19,0)
 ;
"RTN","A1AEK2V0",20,0)
 D EN^DDIOL("Exporting these routines to Routines/")
"RTN","A1AEK2V0",21,0)
 ;
"RTN","A1AEK2V0",22,0)
 N POP
"RTN","A1AEK2V0",23,0)
 N RTN S RTN=""
"RTN","A1AEK2V0",24,0)
 N RTNDDIOL S RTNDDIOL="" ; Output message
"RTN","A1AEK2V0",25,0)
 F  S RTN=$O(@RTNGLO@(RTN)) Q:RTN=""  D  Q:POP
"RTN","A1AEK2V0",26,0)
 . D OPEN^%ZISH("RTNHDR",RTNDIR,RTN_".header","W")
"RTN","A1AEK2V0",27,0)
 . I POP S FAIL=1 QUIT
"RTN","A1AEK2V0",28,0)
 . U IO
"RTN","A1AEK2V0",29,0)
 . W @RTNGLO@(RTN) ; Header node.
"RTN","A1AEK2V0",30,0)
 . D CLOSE^%ZISH("RTNHDR")
"RTN","A1AEK2V0",31,0)
 . ;
"RTN","A1AEK2V0",32,0)
 . ; Now write the routine code
"RTN","A1AEK2V0",33,0)
 . D OPEN^%ZISH("RTNCODE",RTNDIR,RTN_".m","W")
"RTN","A1AEK2V0",34,0)
 . I POP S FAIL=1 QUIT
"RTN","A1AEK2V0",35,0)
 . U IO
"RTN","A1AEK2V0",36,0)
 . N LN F LN=0:0 S LN=$O(@RTNGLO@(RTN,LN)) Q:'LN  W ^(LN,0),!
"RTN","A1AEK2V0",37,0)
 . D CLOSE^%ZISH("RTNCODE")
"RTN","A1AEK2V0",38,0)
 . ; done!
"RTN","A1AEK2V0",39,0)
 . S RTNDDIOL=RTNDDIOL_" "_RTN ; Add to output message
"RTN","A1AEK2V0",40,0)
 S $E(RTNDDIOL)="" ; Remove leading space
"RTN","A1AEK2V0",41,0)
 ;
"RTN","A1AEK2V0",42,0)
 D EN^DDIOL(RTNDDIOL)
"RTN","A1AEK2V0",43,0)
 K @RTNGLO
"RTN","A1AEK2V0",44,0)
 QUIT
"RTN","A1AEK2V0",45,0)
 ;
"RTN","A1AEK2V0",46,0)
FIA(FAIL,KIDGLO,ROOT) ; Print FIA, UP, ^DD, ^DIC, SEC, IX, KEY, KEYPTR for each file
"RTN","A1AEK2V0",47,0)
 ; .FAIL - Output. Did we fail? Mostly b/c of filesystem issues.
"RTN","A1AEK2V0",48,0)
 ; KIDGLO - The KIDS global (not a sub). Use $NA to pass this.
"RTN","A1AEK2V0",49,0)
 ; ROOT - File system root where we are gonna export.
"RTN","A1AEK2V0",50,0)
 Q:'$D(@KIDGLO@("FIA"))  ; No files to export
"RTN","A1AEK2V0",51,0)
 ;
"RTN","A1AEK2V0",52,0)
 N POP
"RTN","A1AEK2V0",53,0)
 ;
"RTN","A1AEK2V0",54,0)
 N PATH S PATH=ROOT_"Files/"
"RTN","A1AEK2V0",55,0)
 S POP=$$MKDIR^A1AEOS(PATH)
"RTN","A1AEK2V0",56,0)
 I POP D EN^DDIOL($$RED("Couldn't create directory")) S FAIL=1 QUIT
"RTN","A1AEK2V0",57,0)
 ;
"RTN","A1AEK2V0",58,0)
 D EN^DDIOL("Exporting files DD and Data to Files/")
"RTN","A1AEK2V0",59,0)
 ;
"RTN","A1AEK2V0",60,0)
 N FILE F FILE=0:0 S FILE=$O(@KIDGLO@("FIA",FILE)) Q:'FILE  D  Q:$G(POP)   ; For each top file in "FIA"
"RTN","A1AEK2V0",61,0)
 . N FNUM S FNUM=FILE                                                      ; File Number
"RTN","A1AEK2V0",62,0)
 . N FNAM S FNAM=@KIDGLO@("FIA",FILE)                                      ; File Name (Value of the first FIA node)
"RTN","A1AEK2V0",63,0)
 . S FNAM=$TR(FNAM,"\/!@#$%^&*()","------------")                          ; Replace punc with dashes
"RTN","A1AEK2V0",64,0)
 . N HFSNAME S HFSNAME=FNUM_"+"_FNAM_".DD.zwr"                             ; File Name
"RTN","A1AEK2V0",65,0)
 . D OPEN^%ZISH("DD",PATH,HFSNAME,"W")                                     ; Open
"RTN","A1AEK2V0",66,0)
 . I POP S FAIL=1 QUIT                                                     ; Open failed
"RTN","A1AEK2V0",67,0)
 . U IO                                                                    ; Use device
"RTN","A1AEK2V0",68,0)
 . D ZWRITE($NA(@KIDGLO@("FIA",FILE)))                                     ; DIFROM FIA Array (data on what to send)
"RTN","A1AEK2V0",69,0)
 . I $D(@KIDGLO@("^DIC",FILE)) D ZWRITE($NA(^(FILE))) K @KIDGLO@("^DIC",FILE)              ; FOF Nodes.
"RTN","A1AEK2V0",70,0)
 . D ZWRITE($NA(@KIDGLO@("^DD",FILE))) K @KIDGLO@("^DD",FILE)                              ; Data Dictionary
"RTN","A1AEK2V0",71,0)
 . I $D(@KIDGLO@("SEC","^DIC",FILE)) D ZWRITE($NA(^(FILE))) K @KIDGLO@("SEC","^DIC",FILE)  ; ^DIC Security Nodes
"RTN","A1AEK2V0",72,0)
 . I $D(@KIDGLO@("SEC","^DD",FILE)) D ZWRITE($NA(^(FILE))) K @KIDGLO@("SEC","^DD",FILE)    ; ^DD Security Nodes
"RTN","A1AEK2V0",73,0)
 . I $D(@KIDGLO@("UP",FILE)) D ZWRITE($NA(^(FILE))) K @KIDGLO@("UP",FILE)              ; Subfile upward nodes to find parent files
"RTN","A1AEK2V0",74,0)
 . I $D(@KIDGLO@("IX",FILE)) D ZWRITE($NA(^(FILE))) K @KIDGLO@("IX",FILE)              ; New Style Indexes
"RTN","A1AEK2V0",75,0)
 . I $D(@KIDGLO@("KEY",FILE)) D                                            ; Keys?
"RTN","A1AEK2V0",76,0)
 . . D ZWRITE($NA(@KIDGLO@("KEY",FILE))) K @KIDGLO@("KEY",FILE)            ; Keys...
"RTN","A1AEK2V0",77,0)
 . . D ZWRITE($NA(@KIDGLO@("KEYPTR",FILE))) K @KIDGLO@("KEYPTR",FILE)      ; and pointer resolution to NS indexes
"RTN","A1AEK2V0",78,0)
 . N SUBFILE F SUBFILE=0:0 S SUBFILE=$O(@KIDGLO@("FIA",FILE,SUBFILE)) Q:'SUBFILE  D
"RTN","A1AEK2V0",79,0)
 . . I $D(@KIDGLO@("PGL",SUBFILE)) D ZWRITE($NA(@KIDGLO@("PGL",SUBFILE))) K @KIDGLO@("PGL",SUBFILE) ; Source system pointer resolution (not used at dest.)
"RTN","A1AEK2V0",80,0)
 . D CLOSE^%ZISH("DD")                                                     ; Close. Resets IO.
"RTN","A1AEK2V0",81,0)
 . D EN^DDIOL("Exported "_HFSNAME)
"RTN","A1AEK2V0",82,0)
 ;
"RTN","A1AEK2V0",83,0)
 ;
"RTN","A1AEK2V0",84,0)
 D DATA(.FAIL,KIDGLO,PATH)                                                 ; Now Data...
"RTN","A1AEK2V0",85,0)
 K @KIDGLO@("FIA")                                                         ; Kill this off now.
"RTN","A1AEK2V0",86,0)
 QUIT
"RTN","A1AEK2V0",87,0)
 ;
"RTN","A1AEK2V0",88,0)
DATA(FAIL,KIDGLO,ROOT) ; Print DATA, FRV1, FRVL, FRV1K subscripts
"RTN","A1AEK2V0",89,0)
 ; .FAIL - Output. Did we fail? Mostly b/c of filesystem issues.
"RTN","A1AEK2V0",90,0)
 ; KIDGLO - The KIDS global (not a sub). Use $NA to pass this.
"RTN","A1AEK2V0",91,0)
 ; ROOT - File system root where we are gonna export.
"RTN","A1AEK2V0",92,0)
 Q:'$D(@KIDGLO@("DATA"))
"RTN","A1AEK2V0",93,0)
 ;
"RTN","A1AEK2V0",94,0)
 N POP
"RTN","A1AEK2V0",95,0)
 N FILE F FILE=0:0 S FILE=$O(@KIDGLO@("FIA",FILE)) Q:'FILE  D  Q:$G(POP)   ; For each top file in "FIA"
"RTN","A1AEK2V0",96,0)
 . Q:'$D(@KIDGLO@("DATA",FILE))                                            ; No Data. Skip.
"RTN","A1AEK2V0",97,0)
 . N FNUM S FNUM=FILE                                                      ; File Number
"RTN","A1AEK2V0",98,0)
 . N FNAM S FNAM=@KIDGLO@("FIA",FILE)                                      ; File Name (Value of the first FIA node)
"RTN","A1AEK2V0",99,0)
 . S FNAM=$TR(FNAM,"\/!@#$%^&*()","------------")                          ; Replace punc with dashes
"RTN","A1AEK2V0",100,0)
 . N HFSNAME S HFSNAME=FNUM_"+"_FNAM_".Data.zwr"                           ; File Name
"RTN","A1AEK2V0",101,0)
 . D OPEN^%ZISH("DATA",ROOT,HFSNAME,"W")                                   ; Open
"RTN","A1AEK2V0",102,0)
 . I POP S FAIL=1 QUIT                                                     ; Open failed
"RTN","A1AEK2V0",103,0)
 . U IO                                                                    ; Use device
"RTN","A1AEK2V0",104,0)
 . D ZWRITE($NA(@KIDGLO@("DATA",FILE))) K @KIDGLO@("DATA",FILE)            ; Export Data
"RTN","A1AEK2V0",105,0)
 . I $D(@KIDGLO@("FRV1",FILE)) D                                           ; Pointer Resolution?
"RTN","A1AEK2V0",106,0)
 . . D ZWRITE($NA(@KIDGLO@("FRV1",FILE))) K @KIDGLO@("FRV1",FILE)          ; Operator node. See DIFROMSR.
"RTN","A1AEK2V0",107,0)
 . . D ZWRITE($NA(@KIDGLO@("FRVL",FILE))) K @KIDGLO@("FRVL",FILE)          ; Don't know what that is. See DIFROMSR.
"RTN","A1AEK2V0",108,0)
 . . D ZWRITE($NA(@KIDGLO@("FRV1K",FILE))) K @KIDGLO@("FRV1K",FILE)        ; ditto
"RTN","A1AEK2V0",109,0)
 . D CLOSE^%ZISH("DATA")                                                   ; Close. Resets IO.
"RTN","A1AEK2V0",110,0)
 . D EN^DDIOL("Exported "_HFSNAME)
"RTN","A1AEK2V0",111,0)
 K @KIDGLO@("DATA")
"RTN","A1AEK2V0",112,0)
 QUIT
"RTN","A1AEK2V0",113,0)
ZWRITE(NAME,QS,QSREP) ; Replacement for ZWRITE ; Public Proc
"RTN","A1AEK2V0",114,0)
ZWRITE0 ; Goto Entry point for A1AEK2VC (only permitted user)
"RTN","A1AEK2V0",115,0)
 ; Pass NAME by name as a closed reference. lvn and gvn are both supported.
"RTN","A1AEK2V0",116,0)
 ; QS = Query Subscript to replace. Optional.
"RTN","A1AEK2V0",117,0)
 ; QSREP = Query Subscrpt replacement. Optional, but must be passed if QS is.
"RTN","A1AEK2V0",118,0)
 ; : syntax is not supported (yet)
"RTN","A1AEK2V0",119,0)
 S QS=$G(QS),QSREP=$G(QSREP)
"RTN","A1AEK2V0",120,0)
 I QS,'$L(QSREP) S $EC=",U-INVALID-PARAMETERS,"
"RTN","A1AEK2V0",121,0)
 N INCEXPN S INCEXPN=""
"RTN","A1AEK2V0",122,0)
 I $L(QSREP) S INCEXPN="S $G("_QSREP_")="_QSREP_"+1"
"RTN","A1AEK2V0",123,0)
 N L S L=$L(NAME) ; Name length
"RTN","A1AEK2V0",124,0)
 I $E(NAME,L-2,L)=",*)" S NAME=$E(NAME,1,L-3)_")" ; If last sub is *, remove it and close the ref
"RTN","A1AEK2V0",125,0)
 N ORIGNAME S ORIGNAME=NAME          ; 
"RTN","A1AEK2V0",126,0)
 N ORIGQL S ORIGQL=$QL(NAME)         ; Number of subscripts in the original name
"RTN","A1AEK2V0",127,0)
 I $D(@NAME)#2 W $S(QS:$$SUBNAME(NAME,QS,QSREP),1:NAME),"=",$$FORMAT(@NAME),!        ; Write base if it exists
"RTN","A1AEK2V0",128,0)
 ; $QUERY through the name. 
"RTN","A1AEK2V0",129,0)
 ; Stop when we are out.
"RTN","A1AEK2V0",130,0)
 ; Stop when the last subscript of the original name isn't the same as 
"RTN","A1AEK2V0",131,0)
 ; the last subscript of the Name. 
"RTN","A1AEK2V0",132,0)
 F  S NAME=$Q(@NAME) Q:NAME=""  Q:$NA(@ORIGNAME,ORIGQL)'=$NA(@NAME,ORIGQL)  D
"RTN","A1AEK2V0",133,0)
 . W $S(QS:$$SUBNAME(NAME,QS,QSREP),1:NAME),"=",$$FORMAT(@NAME),!
"RTN","A1AEK2V0",134,0)
 QUIT
"RTN","A1AEK2V0",135,0)
 ;
"RTN","A1AEK2V0",136,0)
SUBNAME(N,QS,QSREP) ; Substitue subscript QS's value with QSREP in name reference N
"RTN","A1AEK2V0",137,0)
 N VARCR S VARCR=$NA(@N,QS-1) ; Closed reference of name up to the sub we want to change
"RTN","A1AEK2V0",138,0)
 N VAROR S VAROR=$S($E(VARCR,$L(VARCR))=")":$E(VARCR,1,$L(VARCR)-1)_",",1:VARCR_"(") ; Open ref
"RTN","A1AEK2V0",139,0)
 N B4 S B4=$NA(@N,QS),B4=$E(B4,1,$L(B4)-1) ; Before sub piece, only used in next line
"RTN","A1AEK2V0",140,0)
 N AF S AF=$P(N,B4,2,99) ; After sub piece
"RTN","A1AEK2V0",141,0)
 QUIT VAROR_QSREP_AF
"RTN","A1AEK2V0",142,0)
 ;
"RTN","A1AEK2V0",143,0)
FORMAT(V) ; Add quotes, replace control characters if necessary; Public $$
"RTN","A1AEK2V0",144,0)
 ;If numeric, nothing to do.
"RTN","A1AEK2V0",145,0)
 ;If no encoding required, then return as quoted string.
"RTN","A1AEK2V0",146,0)
 ;Otherwise, return as an expression with $C()'s and strings.
"RTN","A1AEK2V0",147,0)
 I +V=V Q V ; If numeric, just return the value.
"RTN","A1AEK2V0",148,0)
 N QT S QT="""" ; Quote
"RTN","A1AEK2V0",149,0)
 I $F(V,QT) D     ;chk if V contains any Quotes
"RTN","A1AEK2V0",150,0)
 . N P S P=0          ;position pointer into V
"RTN","A1AEK2V0",151,0)
 . F  S P=$F(V,QT,P) Q:'P  D  ;find next "
"RTN","A1AEK2V0",152,0)
 . . S $E(V,P-1)=QT_QT        ;double each "
"RTN","A1AEK2V0",153,0)
 . . S P=P+1                  ;skip over new "
"RTN","A1AEK2V0",154,0)
 I $$CCC(V) D  Q V  ; If control character is present do this and quit
"RTN","A1AEK2V0",155,0)
 . S V=$$RCC(QT_V_QT)  ; Replace control characters in "V"
"RTN","A1AEK2V0",156,0)
 . S:$E(V,1,3)="""""_" $E(V,1,3)="" ; Replace doubled up quotes at start
"RTN","A1AEK2V0",157,0)
 . N L S L=$L(V) S:$E(V,L-2,L)="_""""" $E(V,L-2,L)="" ; Replace doubled up quotes at end
"RTN","A1AEK2V0",158,0)
 Q QT_V_QT ; If no control charactrrs, quit with "V"
"RTN","A1AEK2V0",159,0)
 ;
"RTN","A1AEK2V0",160,0)
CCC(S) ;test if S Contains a Control Character or $C(255); Public $$
"RTN","A1AEK2V0",161,0)
 Q:S?.E1C.E 1
"RTN","A1AEK2V0",162,0)
 Q:$F(S,$C(255)) 1
"RTN","A1AEK2V0",163,0)
 Q 0
"RTN","A1AEK2V0",164,0)
 ;
"RTN","A1AEK2V0",165,0)
RCC(NA) ;Replace control chars in NA with $C( ). Returns encoded string; Public $$
"RTN","A1AEK2V0",166,0)
 Q:'$$CCC(NA) NA                         ;No embedded ctrl chars
"RTN","A1AEK2V0",167,0)
 N OUT S OUT=""                          ;holds output name
"RTN","A1AEK2V0",168,0)
 N CC S CC=0                             ;count ctrl chars in $C(
"RTN","A1AEK2V0",169,0)
 N C255 S C255=$C(255)                   ;$C(255) which Mumps may not classify as a Control
"RTN","A1AEK2V0",170,0)
 N C                                     ;temp hold each char
"RTN","A1AEK2V0",171,0)
 N I F I=1:1:$L(NA) S C=$E(NA,I) D           ;for each char C in NA
"RTN","A1AEK2V0",172,0)
 . I C'?1C,C'=C255 D  S OUT=OUT_C Q      ;not a ctrl char
"RTN","A1AEK2V0",173,0)
 . . I CC S OUT=OUT_")_""",CC=0          ;close up $C(... if one is open
"RTN","A1AEK2V0",174,0)
 . I CC D
"RTN","A1AEK2V0",175,0)
 . . I CC=256 S OUT=OUT_")_$C("_$A(C),CC=0  ;max args in one $C(
"RTN","A1AEK2V0",176,0)
 . . E  S OUT=OUT_","_$A(C)              ;add next ctrl char to $C(
"RTN","A1AEK2V0",177,0)
 . E  S OUT=OUT_"""_$C("_$A(C)
"RTN","A1AEK2V0",178,0)
 . S CC=CC+1
"RTN","A1AEK2V0",179,0)
 . Q
"RTN","A1AEK2V0",180,0)
 Q OUT
"RTN","A1AEK2V0",181,0)
 ;
"RTN","A1AEK2V0",182,0)
TEST D EN^%ut($T(+0),1,1) QUIT
"RTN","A1AEK2V0",183,0)
T1 ; @TEST subscript substitutions
"RTN","A1AEK2V0",184,0)
 D CHKEQ^%ut($$SUBNAME($NA(^DIPT(2332,0)),1,"IEN"),"^DIPT(IEN,0)")
"RTN","A1AEK2V0",185,0)
 D CHKEQ^%ut($$SUBNAME($NA(^DIPT("A",123,0)),2,"IEN"),"^DIPT(""A"",IEN,0)")
"RTN","A1AEK2V0",186,0)
 QUIT
"RTN","A1AEK2V0",187,0)
 ; 
"RTN","A1AEK2V0",188,0)
RED(X) ; Convenience method for Sam to see things on the screen.
"RTN","A1AEK2V0",189,0)
 Q $C(27)_"[41;1m"_X_$C(27)_"[0m"
"RTN","A1AEK2V0",190,0)
 ;
"RTN","A1AEK2VC")
0^59^B133350061
"RTN","A1AEK2VC",1,0)
A1AEK2VC ;ven/smh-kids to version control ;2014-03-24T15:17
"RTN","A1AEK2VC",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEK2VC",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEK2VC",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEK2VC",5,0)
 ;
"RTN","A1AEK2VC",6,0)
 ;
"RTN","A1AEK2VC",7,0)
 ;primary change history
"RTN","A1AEK2VC",8,0)
 ;2014-03-28: version 2.4, released
"RTN","A1AEK2VC",9,0)
 ;
"RTN","A1AEK2VC",10,0)
 ;
"RTN","A1AEK2VC",11,0)
IX(X,DA) ; Private Entry Point for file 11005 index
"RTN","A1AEK2VC",12,0)
 ; Set off from Field Status (#8)
"RTN","A1AEK2VC",13,0)
 ; i2 -> In review
"RTN","A1AEK2VC",14,0)
 N CURIMP S CURIMP=$P(^A1AE(11005,DA,0),U,21) ; Currently importing
"RTN","A1AEK2VC",15,0)
 I CURIMP,X'="i2" QUIT                        ; If we are currently importing, don't run until we are in-review.
"RTN","A1AEK2VC",16,0)
 D EN(DA)                                     ; Otherwise, always run
"RTN","A1AEK2VC",17,0)
 QUIT
"RTN","A1AEK2VC",18,0)
 ;
"RTN","A1AEK2VC",19,0)
EN(P11005IEN) ; Public Entry Point. Rest are private.
"RTN","A1AEK2VC",20,0)
 ; Break out a KIDS build in 11005.1 into Version Controlled Components
"RTN","A1AEK2VC",21,0)
 ; Input: 11005/11005.1 IEN
"RTN","A1AEK2VC",22,0)
 I '$O(^A1AE(11005.1,P11005IEN,2,0)) QUIT  ; No KIDS build.
"RTN","A1AEK2VC",23,0)
 ;
"RTN","A1AEK2VC",24,0)
 ; DEBUG
"RTN","A1AEK2VC",25,0)
 N DIQUIET  ; Trick Fileman into talking again... When we are trigerred by the DBS, we are silent by default
"RTN","A1AEK2VC",26,0)
 ; DEBUG
"RTN","A1AEK2VC",27,0)
 ;
"RTN","A1AEK2VC",28,0)
 ; Stanza: Find $KID; quit if we can't find it. Otherwise, rem where it is.
"RTN","A1AEK2VC",29,0)
 N I,T F I=0:0 S I=$O(^A1AE(11005.1,P11005IEN,2,I)) Q:'I  S T=^(I,0) Q:($E(T,1,4)="$KID")
"RTN","A1AEK2VC",30,0)
 I T'["$KID" QUIT
"RTN","A1AEK2VC",31,0)
 N SVLN S SVLN=I ; Saved line
"RTN","A1AEK2VC",32,0)
 K T
"RTN","A1AEK2VC",33,0)
 ;
"RTN","A1AEK2VC",34,0)
 ;
"RTN","A1AEK2VC",35,0)
 ; Get rid of the next two lines (**INSTALL NAME** and its value)
"RTN","A1AEK2VC",36,0)
 S SVLN=$O(^A1AE(11005.1,P11005IEN,2,SVLN))
"RTN","A1AEK2VC",37,0)
 S SVLN=$O(^A1AE(11005.1,P11005IEN,2,SVLN))
"RTN","A1AEK2VC",38,0)
 ;
"RTN","A1AEK2VC",39,0)
 ;
"RTN","A1AEK2VC",40,0)
 ; Stanza to Load the KIDS into a temp global.
"RTN","A1AEK2VC",41,0)
 ; Why? B/c KIDS export may scramble some nodes. (Like BLD).
"RTN","A1AEK2VC",42,0)
 ; We need to group them back together.
"RTN","A1AEK2VC",43,0)
 N PD S PD=$$GET1^DIQ(11005,P11005IEN,.01) ; Patch description
"RTN","A1AEK2VC",44,0)
 N ROOT S ROOT=$$GET1^DIQ(11005,P11005IEN,6.1) ; Patch path root
"RTN","A1AEK2VC",45,0)
 I ROOT="" QUIT                              ; No root path
"RTN","A1AEK2VC",46,0)
 K ^XTMP("K2VC")
"RTN","A1AEK2VC",47,0)
 S ^XTMP("K2VC",0)=$$FMADD^XLFDT(DT,1)_DT_U_"KIDS to Version Control"
"RTN","A1AEK2VC",48,0)
 N L1,L2
"RTN","A1AEK2VC",49,0)
 N DONE S DONE=0
"RTN","A1AEK2VC",50,0)
 F  D  Q:DONE
"RTN","A1AEK2VC",51,0)
 . S L1=$O(^A1AE(11005.1,P11005IEN,2,SVLN))  ; first line
"RTN","A1AEK2VC",52,0)
 . N L1TXT S L1TXT=^(L1,0)                   ; its text
"RTN","A1AEK2VC",53,0)
 . I $E(L1TXT,1,8)="$END KID" S DONE=1 QUIT  ; quit if we are at the end
"RTN","A1AEK2VC",54,0)
 . S L2=$O(^A1AE(11005.1,P11005IEN,2,L1))    ; second line
"RTN","A1AEK2VC",55,0)
 . N L2TXT S L2TXT=^(L2,0)                   ; its text
"RTN","A1AEK2VC",56,0)
 . S @("^XTMP(""K2VC"","""_PD_""","_L1TXT)=L2TXT      ; Set our data into our global
"RTN","A1AEK2VC",57,0)
 . S SVLN=L2                                 ; move data pointer to last accessed one
"RTN","A1AEK2VC",58,0)
 ;
"RTN","A1AEK2VC",59,0)
 ; 
"RTN","A1AEK2VC",60,0)
 ; Make directory for exporting KIDS compoents
"RTN","A1AEK2VC",61,0)
 S ROOT=ROOT_"KIDComponents/"
"RTN","A1AEK2VC",62,0)
 N % S %=$$MKDIR^A1AEOS(ROOT)
"RTN","A1AEK2VC",63,0)
 I % D EN^DDIOL($$RED("Couldn't create KIDCommponents directory")) QUIT
"RTN","A1AEK2VC",64,0)
 ; 
"RTN","A1AEK2VC",65,0)
 ; Say that we are exporting
"RTN","A1AEK2VC",66,0)
 N MSG S MSG(1)="Exporting Patch "_PD
"RTN","A1AEK2VC",67,0)
 S MSG(1,"F")="!!!!!"
"RTN","A1AEK2VC",68,0)
 S MSG(2)="Exporting at "_ROOT
"RTN","A1AEK2VC",69,0)
 S MSG(2,"F")="!"
"RTN","A1AEK2VC",70,0)
 D EN^DDIOL(.MSG)
"RTN","A1AEK2VC",71,0)
 ;
"RTN","A1AEK2VC",72,0)
 ; Stanza to process each component of loaded global
"RTN","A1AEK2VC",73,0)
 N A1AEFAIL S A1AEFAIL=0
"RTN","A1AEK2VC",74,0)
 N SN S SN=$NA(^XTMP("K2VC",PD)) ; Short name... I am tired of typing.
"RTN","A1AEK2VC",75,0)
 D EXPORT(.A1AEFAIL,SN,ROOT)
"RTN","A1AEK2VC",76,0)
 ; I $D(^XTMP("K2VC",PD,"DATA")) BREAK
"RTN","A1AEK2VC",77,0)
 I A1AEFAIL D EN^DDIOL($$RED("A failure has occured"))
"RTN","A1AEK2VC",78,0)
 QUIT
"RTN","A1AEK2VC",79,0)
 ;
"RTN","A1AEK2VC",80,0)
EXPORT(A1AEFAIL,SN,ROOT) ; Export KIDS patch to the File system
"RTN","A1AEK2VC",81,0)
 ; .A1AEFAIL = Catch failures
"RTN","A1AEK2VC",82,0)
 ; SN = Short name for Global
"RTN","A1AEK2VC",83,0)
 ; ROOT = File system Root
"RTN","A1AEK2VC",84,0)
 ;
"RTN","A1AEK2VC",85,0)
 ; BLD - Build
"RTN","A1AEK2VC",86,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("BLD")),ROOT,"Build.zwr",4,"IEN") ; Process BUILD Section
"RTN","A1AEK2VC",87,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export BLD")) QUIT
"RTN","A1AEK2VC",88,0)
 K @SN@("BLD")
"RTN","A1AEK2VC",89,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",90,0)
 ;
"RTN","A1AEK2VC",91,0)
 ; FIA, ^DD, ^DIC, SEC, DATA, FR* nodes
"RTN","A1AEK2VC",92,0)
 D FIA^A1AEK2V0(.A1AEFAIL,SN,ROOT)                  ; All file components (DD + data)... Killing done internally.
"RTN","A1AEK2VC",93,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export FIA, ^DD, ^DIC, SEC, DATA, FR*")) QUIT
"RTN","A1AEK2VC",94,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",95,0)
 ;
"RTN","A1AEK2VC",96,0)
 ; PKG - Package
"RTN","A1AEK2VC",97,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("PKG")),ROOT,"Package.zwr",4,"IEN")
"RTN","A1AEK2VC",98,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export PKG")) QUIT
"RTN","A1AEK2VC",99,0)
 K @SN@("PKG")
"RTN","A1AEK2VC",100,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",101,0)
 ;
"RTN","A1AEK2VC",102,0)
 ; VER - Kernel and Fileman Versions
"RTN","A1AEK2VC",103,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("VER")),ROOT,"KernelFMVersion.zwr")
"RTN","A1AEK2VC",104,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export VER")) QUIT
"RTN","A1AEK2VC",105,0)
 K @SN@("VER")
"RTN","A1AEK2VC",106,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",107,0)
 ;
"RTN","A1AEK2VC",108,0)
 ; PRE - Env Check
"RTN","A1AEK2VC",109,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("PRE")),ROOT,"EnvironmentCheck.zwr")
"RTN","A1AEK2VC",110,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export PRE")) QUIT
"RTN","A1AEK2VC",111,0)
 K @SN@("PRE")
"RTN","A1AEK2VC",112,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",113,0)
 ;
"RTN","A1AEK2VC",114,0)
 ; INI - Pre-Init
"RTN","A1AEK2VC",115,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("INI")),ROOT,"PreInit.zwr")
"RTN","A1AEK2VC",116,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export INI")) QUIT
"RTN","A1AEK2VC",117,0)
 K @SN@("INI")
"RTN","A1AEK2VC",118,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",119,0)
 ;
"RTN","A1AEK2VC",120,0)
 ; INIT - Post-Install
"RTN","A1AEK2VC",121,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("INIT")),ROOT,"PostInstall.zwr")
"RTN","A1AEK2VC",122,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export INIT")) QUIT
"RTN","A1AEK2VC",123,0)
 K @SN@("INIT")
"RTN","A1AEK2VC",124,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",125,0)
 ;
"RTN","A1AEK2VC",126,0)
 ; MBREQ - Required Build
"RTN","A1AEK2VC",127,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("MBREQ")),ROOT,"RequiredBuild.zwr")
"RTN","A1AEK2VC",128,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export MBREQ")) QUIT
"RTN","A1AEK2VC",129,0)
 K @SN@("MBREQ")
"RTN","A1AEK2VC",130,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",131,0)
 ;
"RTN","A1AEK2VC",132,0)
 ; QUES - Install Questions
"RTN","A1AEK2VC",133,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("QUES")),ROOT,"InstallQuestions.zwr")
"RTN","A1AEK2VC",134,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export QUES")) QUIT
"RTN","A1AEK2VC",135,0)
 K @SN@("QUES")
"RTN","A1AEK2VC",136,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",137,0)
 ;
"RTN","A1AEK2VC",138,0)
 ; RTN - Routines
"RTN","A1AEK2VC",139,0)
 D RTN^A1AEK2V0(.A1AEFAIL,$NA(@SN@("RTN")),ROOT)
"RTN","A1AEK2VC",140,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export RTN")) QUIT
"RTN","A1AEK2VC",141,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",142,0)
 ; Kill is done in RTN
"RTN","A1AEK2VC",143,0)
 ;
"RTN","A1AEK2VC",144,0)
 ; KRN and ORD - Kernel Components
"RTN","A1AEK2VC",145,0)
 D KRN(.A1AEFAIL,SN,ROOT)
"RTN","A1AEK2VC",146,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export KRN")) QUIT
"RTN","A1AEK2VC",147,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",148,0)
 ; Kill is done in KRN
"RTN","A1AEK2VC",149,0)
 ;
"RTN","A1AEK2VC",150,0)
 ; TEMP - Transport Global
"RTN","A1AEK2VC",151,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("TEMP")),ROOT,"TransportGlobal.zwr")
"RTN","A1AEK2VC",152,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export TEMP")) QUIT
"RTN","A1AEK2VC",153,0)
 K @SN@("TEMP")
"RTN","A1AEK2VC",154,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",155,0)
 ;
"RTN","A1AEK2VC",156,0)
 ; Make sure that the XTMP global is now empty. If there is anything there, we have a problem.
"RTN","A1AEK2VC",157,0)
 D ASSERT('$D(@SN))
"RTN","A1AEK2VC",158,0)
 ;
"RTN","A1AEK2VC",159,0)
 QUIT
"RTN","A1AEK2VC",160,0)
 ;
"RTN","A1AEK2VC",161,0)
 ;
"RTN","A1AEK2VC",162,0)
GENOUT(FAIL,EXGLO,ROOT,FN,QLSUB,SUBNAME) ; Generic Exporter
"RTN","A1AEK2VC",163,0)
 ; .FAIL - Output to tell us if we failed
"RTN","A1AEK2VC",164,0)
 ; EXGLO - Global NAME (use $NA) to export
"RTN","A1AEK2VC",165,0)
 ; ROOT - File system root where to write the file
"RTN","A1AEK2VC",166,0)
 ; FN - File name
"RTN","A1AEK2VC",167,0)
 ; QLSUB - Substitute this nth subscript WITH...
"RTN","A1AEK2VC",168,0)
 ; SUBNAME - ...subname
"RTN","A1AEK2VC",169,0)
 ;
"RTN","A1AEK2VC",170,0)
 I '$D(@EXGLO) QUIT  ; No data to export
"RTN","A1AEK2VC",171,0)
 ;
"RTN","A1AEK2VC",172,0)
 N POP
"RTN","A1AEK2VC",173,0)
 D OPEN^%ZISH("EXPORT",ROOT,FN,"W")
"RTN","A1AEK2VC",174,0)
 I POP S FAIL=1 QUIT
"RTN","A1AEK2VC",175,0)
 U IO
"RTN","A1AEK2VC",176,0)
 D ZWRITE(EXGLO,$G(QLSUB),$G(SUBNAME))
"RTN","A1AEK2VC",177,0)
 D CLOSE^%ZISH("EXPORT")
"RTN","A1AEK2VC",178,0)
 D EN^DDIOL("Wrote "_FN)
"RTN","A1AEK2VC",179,0)
 QUIT
"RTN","A1AEK2VC",180,0)
 ;
"RTN","A1AEK2VC",181,0)
 ;
"RTN","A1AEK2VC",182,0)
 ;
"RTN","A1AEK2VC",183,0)
 ;
"RTN","A1AEK2VC",184,0)
KRN(FAIL,KIDGLO,ROOT) ; Print OPT and KRN sections
"RTN","A1AEK2VC",185,0)
 ; .FAIL - Output. Did we fail? Mostly b/c of filesystem issues.
"RTN","A1AEK2VC",186,0)
 ; KIDGLO - The KIDS global (not a sub). Use $NA to pass this.
"RTN","A1AEK2VC",187,0)
 ; ROOT - File system root where we are gonna export.
"RTN","A1AEK2VC",188,0)
 N POP
"RTN","A1AEK2VC",189,0)
 N ORD S ORD="" F  S ORD=$O(@KIDGLO@("ORD",ORD)) Q:ORD=""  D  Q:$G(POP)    ; For each item in ORD
"RTN","A1AEK2VC",190,0)
 . N FNUM S FNUM=$O(@KIDGLO@("ORD",ORD,0))                                 ; File Number
"RTN","A1AEK2VC",191,0)
 . N FNAM S FNAM=^(FNUM,0) ; **NAKED to above line**                       ; File Name
"RTN","A1AEK2VC",192,0)
 . N PATH S PATH=ROOT_FNAM_"/"                                             ; Path to export to
"RTN","A1AEK2VC",193,0)
 . S POP=$$MKDIR^A1AEOS(PATH)                                                     ; Mk dir for the specific component
"RTN","A1AEK2VC",194,0)
 . I POP D EN^DDIOL($$RED("Couldn't create directory")) S FAIL=1 QUIT             ;
"RTN","A1AEK2VC",195,0)
 . D OPEN^%ZISH("ORD",PATH,"ORD.zwr","W")                                  ; Order Nodes
"RTN","A1AEK2VC",196,0)
 . I POP S FAIL=1 QUIT                                                     ; Open failed
"RTN","A1AEK2VC",197,0)
 . U IO                                                                    ;
"RTN","A1AEK2VC",198,0)
 . D ZWRITE($NA(@KIDGLO@("ORD",ORD,FNUM)))                                 ; Zwrite the ORD node
"RTN","A1AEK2VC",199,0)
 . D CLOSE^%ZISH("ORD")                                                    ; Done with ORD
"RTN","A1AEK2VC",200,0)
 . D EN^DDIOL("Wrote ORD.zwr for "_FNAM)                                   ; Say so                            
"RTN","A1AEK2VC",201,0)
 . K @KIDGLO@("ORD",ORD,FNUM)                                              ; KILL this entry
"RTN","A1AEK2VC",202,0)
 . ;
"RTN","A1AEK2VC",203,0)
 . N IENQL S IENQL=$QL($NA(@KIDGLO@("KRN",FNUM,0)))                        ; Where is the IEN sub?
"RTN","A1AEK2VC",204,0)
 . N CNT S CNT=0                                                           ; Sub counter for export
"RTN","A1AEK2VC",205,0)
 . N IEN F IEN=0:0 S IEN=$O(@KIDGLO@("KRN",FNUM,IEN)) Q:'IEN  D  Q:$G(POP)  ; For each Kernel component IEN
"RTN","A1AEK2VC",206,0)
 . . N ENTRYNAME S ENTRYNAME=$P(@KIDGLO@("KRN",FNUM,IEN,0),U)              ; .01 for the component
"RTN","A1AEK2VC",207,0)
 . . S ENTRYNAME=$TR(ENTRYNAME,"\/!@#$%^&*()","------------")              ; Replace punc with dashes
"RTN","A1AEK2VC",208,0)
 . . D OPEN^%ZISH("ENT",PATH,ENTRYNAME_".zwr","W")                         ; Open file
"RTN","A1AEK2VC",209,0)
 . . I POP S FAIL=1 QUIT
"RTN","A1AEK2VC",210,0)
 . . U IO
"RTN","A1AEK2VC",211,0)
 . . D ZWRITE($NA(@KIDGLO@("KRN",FNUM,IEN)),IENQL,"IEN+"_CNT) ; Zwrite, replacing the IEN with IEN+CNT
"RTN","A1AEK2VC",212,0)
 . . I FNUM=.403 D FORM(KIDGLO,IEN,IENQL)                     ; Special processing for Forms
"RTN","A1AEK2VC",213,0)
 . . I FNUM=8989.51 D PARM(KIDGLO,IEN,IENQL)                  ; Special processing for Parameters
"RTN","A1AEK2VC",214,0)
 . . I FNUM=8989.52 D PARM2(KIDGLO,IEN,IENQL)                 ; Special processing for Parameter templates
"RTN","A1AEK2VC",215,0)
 . . S CNT=CNT+1                                              ; ++
"RTN","A1AEK2VC",216,0)
 . . D CLOSE^%ZISH("ENT")                                     ; Done with this entry
"RTN","A1AEK2VC",217,0)
 . . D EN^DDIOL("Exported "_ENTRYNAME_".zwr"_" in "_FNAM)     ; Export
"RTN","A1AEK2VC",218,0)
 . . K @KIDGLO@("KRN",FNUM,IEN)                               ; KILL this entry
"RTN","A1AEK2VC",219,0)
 QUIT
"RTN","A1AEK2VC",220,0)
 ;
"RTN","A1AEK2VC",221,0)
FORM(KIDGLO,IEN,IENQL) ; Export Blocks
"RTN","A1AEK2VC",222,0)
 N CNT S CNT=0
"RTN","A1AEK2VC",223,0)
 N I F I=0:0 S I=$O(@KIDGLO@("KRN",.403,IEN,40,I)) Q:'I  D                 ; Loop thourgh pages
"RTN","A1AEK2VC",224,0)
 . N J F J=0:0 S J=$O(@KIDGLO@("KRN",.403,IEN,40,I,40,J)) Q:'J  D          ; Loop through blocks
"RTN","A1AEK2VC",225,0)
 . . N Z S Z=^(J,0)                                                        ; zero node of block
"RTN","A1AEK2VC",226,0)
 . . N BLNM1 S BLNM1=$P(Z,U)                                               ; its name
"RTN","A1AEK2VC",227,0)
 . . N BLOCKIEN S BLOCKIEN=$$FNDBLK(KIDGLO,BLNM1)                          ; Block IEN
"RTN","A1AEK2VC",228,0)
 . . I BLOCKIEN D                                                           ; if found, print it out and then
"RTN","A1AEK2VC",229,0)
 . . . D ZWRITE($NA(@KIDGLO@("KRN",.404,BLOCKIEN)),IENQL,"IEN+"_CNT)
"RTN","A1AEK2VC",230,0)
 . . . S CNT=CNT+1
"RTN","A1AEK2VC",231,0)
 . . . K @KIDGLO@("KRN",.404,BLOCKIEN)                                     ; delete block
"RTN","A1AEK2VC",232,0)
 . ;
"RTN","A1AEK2VC",233,0)
 . ;
"RTN","A1AEK2VC",234,0)
 . ; Export Header block if there is one...
"RTN","A1AEK2VC",235,0)
 . N P0 S P0=@KIDGLO@("KRN",.403,IEN,40,I,0)                               ; Page zero node
"RTN","A1AEK2VC",236,0)
 . N HB S HB=$P(P0,U,2)                                                    ; Header block
"RTN","A1AEK2VC",237,0)
 . I $L(HB) D                                                              ; If we have it
"RTN","A1AEK2VC",238,0)
 . . N BLOCKIEN S BLOCKIEN=$$FNDBLK(KIDGLO,HB)                             ; Find its IEN in the Transport Global
"RTN","A1AEK2VC",239,0)
 . . I BLOCKIEN D                                                          ; Print it out if we found it.
"RTN","A1AEK2VC",240,0)
 . . . D ZWRITE($NA(@KIDGLO@("KRN",.404,BLOCKIEN)),IENQL,"IEN+"_CNT)       ;
"RTN","A1AEK2VC",241,0)
 . . . S CNT=CNT+1
"RTN","A1AEK2VC",242,0)
 . . . K @KIDGLO@("KRN",.404,BLOCKIEN)                                     ; delete block
"RTN","A1AEK2VC",243,0)
 QUIT
"RTN","A1AEK2VC",244,0)
 ;
"RTN","A1AEK2VC",245,0)
FNDBLK(KIDGLO,BLNM) ; $$; Find a block in the transport global; Return block IEN
"RTN","A1AEK2VC",246,0)
 N SBN S SBN=""                                                   ; Searched block name
"RTN","A1AEK2VC",247,0)
 N K F K=0:0 S K=$O(@KIDGLO@("KRN",.404,K)) Q:'K  D  Q:(SBN=BLNM)  ; Now loop through transported blocks
"RTN","A1AEK2VC",248,0)
 . N Z S Z=^(K,0),SBN=$P(Z,U)                                     ; ...
"RTN","A1AEK2VC",249,0)
 . Q:(SBN=BLNM)                                                   ; until we find the block with our name
"RTN","A1AEK2VC",250,0)
 QUIT K
"RTN","A1AEK2VC",251,0)
 ;
"RTN","A1AEK2VC",252,0)
PARM(KIDGLO,IEN,IENQL) ; Export Parameter Definitions and Package level parameters exported by KIDS
"RTN","A1AEK2VC",253,0)
 N PARMNM S PARMNM=$P(@KIDGLO@("KRN",8989.51,IEN,0),U)      ; Get the param name
"RTN","A1AEK2VC",254,0)
 N PKGPARM D FNDPRM(.PKGPARM,KIDGLO,PARMNM)                 ; Find matching 8989.5 parameters
"RTN","A1AEK2VC",255,0)
 N CNT S CNT=0
"RTN","A1AEK2VC",256,0)
 N J F J=0:0 S J=$O(PKGPARM(J)) Q:'J  D                     ; for each one found
"RTN","A1AEK2VC",257,0)
 . D ZWRITE($NA(@KIDGLO@("KRN",8989.5,J)),IENQL,"IEN+"_CNT) ; print it out
"RTN","A1AEK2VC",258,0)
 . S CNT=CNT+1
"RTN","A1AEK2VC",259,0)
 . K @KIDGLO@("KRN",8989.5,J)                               ; and then remove it.
"RTN","A1AEK2VC",260,0)
 QUIT
"RTN","A1AEK2VC",261,0)
 ;
"RTN","A1AEK2VC",262,0)
FNDPRM(RTN,KIDGLO,PARMNM) ; Find exported parameters in 8989.5 in the transport global matching PARMNM
"RTN","A1AEK2VC",263,0)
 ; Turns out there is more than 1... so we have to catch them all...
"RTN","A1AEK2VC",264,0)
 N I F I=0:0 S I=$O(@KIDGLO@("KRN",8989.5,I)) Q:'I  D
"RTN","A1AEK2VC",265,0)
 . N Z S Z=^(I,0) ; **NAKED TO ABOVE**
"RTN","A1AEK2VC",266,0)
 . N THISNAME S THISNAME=$P(Z,U,2)
"RTN","A1AEK2VC",267,0)
 . I THISNAME=PARMNM S RTN(I)=""
"RTN","A1AEK2VC",268,0)
 QUIT
"RTN","A1AEK2VC",269,0)
 ;
"RTN","A1AEK2VC",270,0)
PARM2(KIDGLO,IEN,IENQL) ; Export Parameters in 8989.51 if sent as part of Parameter templates.
"RTN","A1AEK2VC",271,0)
 N CNT S CNT=0
"RTN","A1AEK2VC",272,0)
 N I F I=0:0 S I=$O(@KIDGLO@("KRN",8989.52,IEN,10,I)) Q:'I  D  ; for each parameter in the set
"RTN","A1AEK2VC",273,0)
 . N PARMNM S PARMNM=$P(^(I,0),U,2)                            ; Get Parameter name
"RTN","A1AEK2VC",274,0)
 . N P8989P51 S P8989P51=$$FNDPRM2(KIDGLO,PARMNM)              ; See if it is in 8989.51
"RTN","A1AEK2VC",275,0)
 . I P8989P51 D                                                ; if so, print and delete from our global
"RTN","A1AEK2VC",276,0)
 . . D ZWRITE($NA(@KIDGLO@("KRN",8989.51,P8989P51)),IENQL,"IEN+"_CNT)
"RTN","A1AEK2VC",277,0)
 . . K @KIDGLO@("KRN",8989.51,P8989P51)
"RTN","A1AEK2VC",278,0)
 . . S CNT=CNT+1
"RTN","A1AEK2VC",279,0)
 QUIT
"RTN","A1AEK2VC",280,0)
 ;
"RTN","A1AEK2VC",281,0)
FNDPRM2(KIDGLO,PARMNM) ; $$ ; Find IEN of parameter in 8989.51 matching PARMNM
"RTN","A1AEK2VC",282,0)
 N OUT S OUT=0
"RTN","A1AEK2VC",283,0)
 N I F I=0:0 S I=$O(@KIDGLO@("KRN",8989.51,I)) Q:'I  D  Q:OUT
"RTN","A1AEK2VC",284,0)
 . N NM S NM=$P(^(I,0),U)
"RTN","A1AEK2VC",285,0)
 . I NM=PARMNM S OUT=I
"RTN","A1AEK2VC",286,0)
 QUIT OUT
"RTN","A1AEK2VC",287,0)
 ;
"RTN","A1AEK2VC",288,0)
ZWRITE(NAME,QS,QSREP) ; Replacement for ZWRITE ; Public Proc
"RTN","A1AEK2VC",289,0)
 GOTO ZWRITE0^A1AEK2V0 ; Moved to extension routine for size
"RTN","A1AEK2VC",290,0)
 ;
"RTN","A1AEK2VC",291,0)
RED(X) ; Convenience method for Sam to see things on the screen.
"RTN","A1AEK2VC",292,0)
 Q $C(27)_"[41;1m"_X_$C(27)_"[0m"
"RTN","A1AEK2VC",293,0)
 ;
"RTN","A1AEK2VC",294,0)
TEST D EN^%ut($T(+0),1,1) QUIT
"RTN","A1AEK2VC",295,0)
 ;
"RTN","A1AEK2VC",296,0)
T3 ; @TEST Export components for one KIDS build
"RTN","A1AEK2VC",297,0)
 N I F I=0:0 S I=$O(^A1AE(11005,I)) Q:'I  D EN(I)
"RTN","A1AEK2VC",298,0)
 QUIT
"RTN","A1AEK2VC",299,0)
 ;
"RTN","A1AEK2VC",300,0)
ASSERT(X,Y) ; Internal assertion function
"RTN","A1AEK2VC",301,0)
 N MUNIT S MUNIT=$$INMUNIT()
"RTN","A1AEK2VC",302,0)
 I MUNIT D CHKTF^%ut(X,$G(Y))
"RTN","A1AEK2VC",303,0)
 E  I 'X S $EC=",U-ASSERTION-FAILED,"
"RTN","A1AEK2VC",304,0)
 QUIT
"RTN","A1AEK2VC",305,0)
 ;
"RTN","A1AEK2VC",306,0)
INMUNIT() ; Am I being invoked from M-Unit?
"RTN","A1AEK2VC",307,0)
 N MUNIT S MUNIT=0
"RTN","A1AEK2VC",308,0)
 N I F I=1:1:$ST I $ST(I,"PLACE")["%ut" S MUNIT=1
"RTN","A1AEK2VC",309,0)
 Q MUNIT
"RTN","A1AEK3")
0^84^B181435108
"RTN","A1AEK3",1,0)
A1AEK3 ;ven/lgc-site-forum subscription messaging ;2015-07-06  6:55 PM
"RTN","A1AEK3",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEK3",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEK3",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEK3",5,0)
 ;
"RTN","A1AEK3",6,0)
 ;
"RTN","A1AEK3",7,0)
 ;primary change history
"RTN","A1AEK3",8,0)
 ;2014-03-28: version 2.4, released
"RTN","A1AEK3",9,0)
 ;
"RTN","A1AEK3",10,0)
 ; CHANGE VEN/LGC 3/21/2015
"RTN","A1AEK3",11,0)
 ;    Set G.A1AEFMSC as the FORUM mail group name that
"RTN","A1AEK3",12,0)
 ;    will receive Patch Stream Change messaging
"RTN","A1AEK3",13,0)
 ;
"RTN","A1AEK3",14,0)
 ; CHANGE VEN/LGC 5/20/2015 
"RTN","A1AEK3",15,0)
 ;    Saved copy from 11:30 to KBAPAEK3 in case
"RTN","A1AEK3",16,0)
 ;    KIDS install overwrites during debugging
"RTN","A1AEK3",17,0)
 ;
"RTN","A1AEK3",18,0)
 S ^XTMP($J,"A1AEK3 FROM TOP")=""
"RTN","A1AEK3",19,0)
 Q  ; Not from top
"RTN","A1AEK3",20,0)
 ;
"RTN","A1AEK3",21,0)
 ;
"RTN","A1AEK3",22,0)
 ;
"RTN","A1AEK3",23,0)
 ;S.A1AEFMSC receives emails coming in through G.A1AEFMSC
"RTN","A1AEK3",24,0)
 ; and calls the PRCSMAIL linetag below
"RTN","A1AEK3",25,0)
 ; Get first line of incoming mail
"RTN","A1AEK3",26,0)
 ;  1. Incoming email from site requesting new stream
"RTN","A1AEK3",27,0)
 ;           SUBJ["SUBSCRIPTION CHNG REQUEST"
"RTN","A1AEK3",28,0)
 ;  2. Outgoing approval/disapproval email from FORUM
"RTN","A1AEK3",29,0)
 ;           SUBJ["SUBSCRIPTION CHNG APPR" or
"RTN","A1AEK3",30,0)
 ;           SUBJ["SUBSCRIPTION CHNG NOT APPR"
"RTN","A1AEK3",31,0)
 ;  3. Incoming email from site to FORUM confirm change
"RTN","A1AEK3",32,0)
 ;           SUBJ["SUBSCRIPTION CHNG COMPLETED" or
"RTN","A1AEK3",33,0)
 ;           SUBJ["SUBSCRIPTION CHNG FAILED"
"RTN","A1AEK3",34,0)
 ;  4. Outgoing confirmation to client from FORUM
"RTN","A1AEK3",35,0)
 ;           SUBJ["SUBSCRIPTION CHNG CONFIRMED"
"RTN","A1AEK3",36,0)
 ; ENTER
"RTN","A1AEK3",37,0)
 ;   XMZ  =  IEN of mail in ^XMB(3.9
"RTN","A1AEK3",38,0)
 ;   emails arriving into this mailgroup are ignored by
"RTN","A1AEK3",39,0)
 ;    server if SUBJECT not identified.
"RTN","A1AEK3",40,0)
 ; EXIT
"RTN","A1AEK3",41,0)
 ;   * Returns TXT value ONLY if called as extrinsic
"RTN","A1AEK3",42,0)
 ;       TXT="" if subj processed, "*END*" if not
"RTN","A1AEK3",43,0)
 ;   Takes appropriate action on email requests,confirmations
"RTN","A1AEK3",44,0)
PRCSMAIL(A1AESTR) ; Process mail concerning changing site's Patch Stream
"RTN","A1AEK3",45,0)
 K ^XTMP("POO","PRCSMAIL") S ^XTMP("POO","PRCSMAIL")=$$HTFM^XLFDT($H)
"RTN","A1AEK3",46,0)
 Q:'$G(XMZ)
"RTN","A1AEK3",47,0)
 N XTBMLN1 S XTBMLN1=$G(^XMB(3.9,XMZ,0))
"RTN","A1AEK3",48,0)
 N TXT,CNT S CNT=0
"RTN","A1AEK3",49,0)
 F  S TXT=$P($T(FMSUBJ+CNT),";;",2) Q:TXT["*END*"  D  Q:TXT=""
"RTN","A1AEK3",50,0)
 . I TXT'="",XTBMLN1[$P(TXT,"^") D @$P(TXT,"^",2) S TXT="" Q
"RTN","A1AEK3",51,0)
 . S CNT=CNT+1
"RTN","A1AEK3",52,0)
 S A1AESTR=TXT
"RTN","A1AEK3",53,0)
 Q:$Q A1AESTR Q
"RTN","A1AEK3",54,0)
 ;
"RTN","A1AEK3",55,0)
 ;
"RTN","A1AEK3",56,0)
 ; Now deal with contents of structured email line one
"RTN","A1AEK3",57,0)
 ;
"RTN","A1AEK3",58,0)
 ;SUBJ["SUBSCRIPTION CHNG REQUEST" 
"RTN","A1AEK3",59,0)
 ;ENTER
"RTN","A1AEK3",60,0)
 ;  XMZ  =  IEN of message in 3.9
"RTN","A1AEK3",61,0)
 ;RETURNS
"RTN","A1AEK3",62,0)
 ;  Builds a new entry in PATCH STREAM HISTORY for this DOMAIN
"RTN","A1AEK3",63,0)
 ;    detailing request
"RTN","A1AEK3",64,0)
 ;
"RTN","A1AEK3",65,0)
 ; example expected text in subscription change request email
"RTN","A1AEK3",66,0)
 ;    SERVER:::CLIENT SERVER NAME
"RTN","A1AEK3",67,0)
 ;    ACTIVE SUBSCRIPTION:::1 or 10001
"RTN","A1AEK3",68,0)
 ;    DATE SUBSCRIPTION ACTIVE:::DATE PRESENT SUBSCRIPTION BEGAN
"RTN","A1AEK3",69,0)
 ;    REQUESTOR DUZ:::DUZ
"RTN","A1AEK3",70,0)
 ;    SWITCH TO SUBSCRIPTION:::FOR NOW 1 or 10001
"RTN","A1AEK3",71,0)
 ;    SWITCH REQUEST DATE:::DATE SITE INITIATED THIS PROCESS
"RTN","A1AEK3",72,0)
 ; trapped by server PRCSMAIL
"RTN","A1AEK3",73,0)
FCNF1 ; Process INCOMING Sendsubscription change request from CLIENT
"RTN","A1AEK3",74,0)
 ;     Check domain exists in 11007.2
"RTN","A1AEK3",75,0)
 K ^XTMP("POO","FCNF1") S ^XTMP("POO","FCNF1")=$$HTFM^XLFDT($H)
"RTN","A1AEK3",76,0)
 D EMDATA(XMZ,.DATA) ; build email data array
"RTN","A1AEK3",77,0)
 N SERV S SERV=$$FND^A1AEK3(.DATA,"SERVER")
"RTN","A1AEK3",78,0)
 Q:'$L(SERV)  ; SERVER not in email so bail out
"RTN","A1AEK3",79,0)
 N A1AE42I S A1AE42I=$O(^DIC(4.2,"B",SERV,0))
"RTN","A1AEK3",80,0)
 Q:'A1AE42I  ; SERVER not in domain file so bail out
"RTN","A1AEK3",81,0)
 ; Check domain doesn't already have request in the queue
"RTN","A1AEK3",82,0)
 Q:($O(^A1AE(11007.2,"C",A1AE42I,0))=1)
"RTN","A1AEK3",83,0)
 Q:($O(^A1AE(11007.2,"C",A1AE42I,0))=2)
"RTN","A1AEK3",84,0)
 ;     Log info in 11007.2 setting STREAM CHANGE STATUS to
"RTN","A1AEK3",85,0)
 ;       waiting for forum approval
"RTN","A1AEK3",86,0)
 S DATA("SCS")=2
"RTN","A1AEK3",87,0)
 N X S X=$$UPDDOMA(.DATA)
"RTN","A1AEK3",88,0)
 Q
"RTN","A1AEK3",89,0)
 ;
"RTN","A1AEK3",90,0)
 ; SUBSCRIPTION CHNG COMPLETED
"RTN","A1AEK3",91,0)
 ;  forward to FORUM
"RTN","A1AEK3",92,0)
 ;    SERVER:::FORUM.OSEHRA.ORG
"RTN","A1AEK3",93,0)
 ;    ACTIVE SUBSCRIPTION:::1
"RTN","A1AEK3",94,0)
 ;    DATE SUBSCRIPTION ACTIVE:::3150305.004002
"RTN","A1AEK3",95,0)
 ;    REQUESTOR DUZ:::799
"RTN","A1AEK3",96,0)
 ;    SWITCH TO SUBSCRIPTION:::10001
"RTN","A1AEK3",97,0)
 ;    SWITCH REQUEST DATE:::3150305.23481
"RTN","A1AEK3",98,0)
 ;    APPROVED:::YES
"RTN","A1AEK3",99,0)
 ;    FORUM ACTION EDIT:::SUCCESSFUL
"RTN","A1AEK3",100,0)
 ;    NEW SUBSCRIPTION DATE:::3150306.123456
"RTN","A1AEK3",101,0)
 ;    NEW ACTIVE SUBSCRIPTION:::1001
"RTN","A1AEK3",102,0)
 ;
"RTN","A1AEK3",103,0)
FCNF2 ; FORUM receives subscription change completed message
"RTN","A1AEK3",104,0)
 ;   capture text of incoming message from VistA
"RTN","A1AEK3",105,0)
 ; Note: This does allow updating of a client even
"RTN","A1AEK3",106,0)
 ;       when the SCS is still at WAITING FORUM APPROVAL
"RTN","A1AEK3",107,0)
 ;       However, there is a check run on the incoming
"RTN","A1AEK3",108,0)
 ;       message to be certain the structured text 
"RTN","A1AEK3",109,0)
 ;       indicates Forum approval.
"RTN","A1AEK3",110,0)
 K ^XTMP("POO","FCNF2") S ^XTMP("POO","FCNF2","A")=$G(XMZ)_" "_$$HTFM^XLFDT($H)
"RTN","A1AEK3",111,0)
 N UT S UT=(^XMB(3.9,XMZ,0)["A1AE:::")
"RTN","A1AEK3",112,0)
 D EMDATA(XMZ,.DATA)
"RTN","A1AEK3",113,0)
 M ^XTMP("POO","FCNF2","B")=DATA
"RTN","A1AEK3",114,0)
 ; Check data matches entry in 11007.2 for this domain
"RTN","A1AEK3",115,0)
 Q:'$$CHKMTCH(XMZ,.DATA)
"RTN","A1AEK3",116,0)
 S ^XTMP("POO","FCNF2","C")="PASSED CHKMTCH"
"RTN","A1AEK3",117,0)
 ; Update entry in 11007.2
"RTN","A1AEK3",118,0)
 S DATA("SCS")=3
"RTN","A1AEK3",119,0)
 S DATA("STRM")=DATA("NASTRM")
"RTN","A1AEK3",120,0)
 S DATA("STRMD")=DATA("NSTRMD")
"RTN","A1AEK3",121,0)
 M ^XTMP("POO","FCNF2","D")=DATA
"RTN","A1AEK3",122,0)
 N UPD S UPD=$$UPDDOMA(.DATA)
"RTN","A1AEK3",123,0)
 ; Fire off outging confirmation message to client
"RTN","A1AEK3",124,0)
 N FDATA M FDATA=DATA
"RTN","A1AEK3",125,0)
 K DATA
"RTN","A1AEK3",126,0)
 F I=0:1:10 S DATA(I)=FDATA(I)
"RTN","A1AEK3",127,0)
 S DATA(11)="SUBSCRIPTION CHANGE CONFIRMED:::"_FDATA("NSTRMD")
"RTN","A1AEK3",128,0)
 S DATA(0)=11
"RTN","A1AEK3",129,0)
 S XMSUBJ="SUBSCRIPTION CHNG CONFIRMED"
"RTN","A1AEK3",130,0)
 S:UT XMSUBJ="A1AE:::"_XMSUBJ
"RTN","A1AEK3",131,0)
 N VAP S:UT VAP="T+1"
"RTN","A1AEK3",132,0)
 ; *** And this email should be sent to each FORUM
"RTN","A1AEK3",133,0)
 ;     domain in 11007.1 to alert their previous
"RTN","A1AEK3",134,0)
 ;     parent Domain of their switch.
"RTN","A1AEK3",135,0)
 ; Add mailgroup for client
"RTN","A1AEK3",136,0)
 N MGRP S MGRP="G.A1AESTRMCHG@"_$$FND(.DATA,"SERVER")
"RTN","A1AEK3",137,0)
 ; If UT only wish sent to user
"RTN","A1AEK3",138,0)
 I UT S MGRP=DUZ
"RTN","A1AEK3",139,0)
 M ^XTMP("POO","FCNF2","E")=DATA
"RTN","A1AEK3",140,0)
 N XMZ S XMZ=$$SNDMAIL(XMSUBJ,.DATA,.MGRP,.VAP)
"RTN","A1AEK3",141,0)
 H 10
"RTN","A1AEK3",142,0)
 ; Now update entry in 11007.2 once more to show Forum 
"RTN","A1AEK3",143,0)
 ;   response email
"RTN","A1AEK3",144,0)
 D EMDATA^A1AEK3(XMZ,.DATA)
"RTN","A1AEK3",145,0)
 ; Note that Forum correctly responds with text being
"RTN","A1AEK3",146,0)
 ;  loaded from the previous message dialog.  In this
"RTN","A1AEK3",147,0)
 ;  case it would be the message from the client stating
"RTN","A1AEK3",148,0)
 ;  that the update on their system was successful.
"RTN","A1AEK3",149,0)
 ;  Then one more line was added:
"RTN","A1AEK3",150,0)
 ;   "SUBSCRIPTION CHNG CONFIRMED:::"_new Patch Stream
"RTN","A1AEK3",151,0)
 ;  and has already forwarded this to the Client.
"RTN","A1AEK3",152,0)
 ; The last thing to do is to update our database with
"RTN","A1AEK3",153,0)
 ;  the pointer to this most recent communication.
"RTN","A1AEK3",154,0)
 ;  Since we have an update API in this routine, rather
"RTN","A1AEK3",155,0)
 ;  than build a new one just to update this field,
"RTN","A1AEK3",156,0)
 ;  we will use our API.  However, that means we need
"RTN","A1AEK3",157,0)
 ;  to correct a few pieces of information relating to
"RTN","A1AEK3",158,0)
 ;  the new patch stream already updated in our file
"RTN","A1AEK3",159,0)
 ;  to prevent the API from incorrectly updating old
"RTN","A1AEK3",160,0)
 ;  patch stream information.
"RTN","A1AEK3",161,0)
 ; This is the ONLY time we break the rule of maintaining
"RTN","A1AEK3",162,0)
 ;  the lines of the email as recieved in the initial
"RTN","A1AEK3",163,0)
 ;  SUBSCRIPTION CHNG REQUEST.  This is necessary as
"RTN","A1AEK3",164,0)
 ;  this outgoing SUBSCRIPTION CHNG CONFIRMED message
"RTN","A1AEK3",165,0)
 ;  will be sent to other FORUM servers and used to
"RTN","A1AEK3",166,0)
 ;  update their PATCH STREAM HISTORY [#11007.2] file.
"RTN","A1AEK3",167,0)
 S DATA("SCS")=3
"RTN","A1AEK3",168,0)
 S DATA("STRM")=$$FND^A1AEK3(.DATA,"SWITCH TO SUBSCRIPTION")
"RTN","A1AEK3",169,0)
 S DATA("STRMD")=$$FND^A1AEK3(.DATA,"NEW SUBSCRIPTION DATE")
"RTN","A1AEK3",170,0)
 S DATA(3)="ACTIVE SUBSCRIPTION:::"_$G(DATA("STRM"))
"RTN","A1AEK3",171,0)
 S DATA(4)="DATE SUBSCRIPTION ACTIVE:::"_$G(DATA("STRMD"))
"RTN","A1AEK3",172,0)
 M ^XTMP("POO","FCNF2","F")=DATA
"RTN","A1AEK3",173,0)
 S UPD=$$UPDDOMA^A1AEK3(.DATA)
"RTN","A1AEK3",174,0)
 Q
"RTN","A1AEK3",175,0)
 ;
"RTN","A1AEK3",176,0)
 ;
"RTN","A1AEK3",177,0)
 ;
"RTN","A1AEK3",178,0)
 ; SUBSCRIPTION CHNG FAILED 
"RTN","A1AEK3",179,0)
 ;  forward to FORUM
"RTN","A1AEK3",180,0)
 ; Copy of authorization with FAIL entry in text
"RTN","A1AEK3",181,0)
 ;   DATA(0)=7
"RTN","A1AEK3",182,0)
 ;   DATA(1)="SERVER:::"_SERVER
"RTN","A1AEK3",183,0)
 ;   DATA(2)="ACTIVE SUBSCRIPTION:::"_ACTIVE SUBSCRIPTION
"RTN","A1AEK3",184,0)
 ;   DATA(3)="DATE SUBSCRIPTION ACTIVE:::"_SUBSCRIPTION ACTIVE DATE
"RTN","A1AEK3",185,0)
 ;   DATA(4)="REQUESTOR DUZ:::"_DUZ
"RTN","A1AEK3",186,0)
 ;   DATA(5)="SWITCH TO SUBSCRIPTION:::"_NEW SUBSCRIPTION REQUESTED
"RTN","A1AEK3",187,0)
 ;   DATA(6)="SWITCH REQUEST DATA:::"_DATE REQUESTED
"RTN","A1AEK3",188,0)
 ;   DATA(7)="APPROVED:::YES"
"RTN","A1AEK3",189,0)
 ;   DATA(8)="***FORUM ACTION TO SWITCH FAILED***:::"_DATE
"RTN","A1AEK3",190,0)
FCNF3 ; FORUM receives subscription change failed message
"RTN","A1AEK3",191,0)
 ; Pull text from email into DATA array
"RTN","A1AEK3",192,0)
 K ^XTMP("POO","FCNF3") S ^XTMP("POO","FCNF3")=$$HTFM^XLFDT($H)
"RTN","A1AEK3",193,0)
 N UT S UT=(^XMB(3.9,XMZ,0)["A1AE:::")
"RTN","A1AEK3",194,0)
 D EMDATA(XMZ,.DATA)
"RTN","A1AEK3",195,0)
 ; Check data matches entry in 11007.2 for this domain
"RTN","A1AEK3",196,0)
 Q:'$$CHKMTCH(XMZ,.DATA)
"RTN","A1AEK3",197,0)
 ; Update entry in 11007.2.  Leave SCS=1 [in review]
"RTN","A1AEK3",198,0)
 S DATA("FAEDIT")=DATA(8)
"RTN","A1AEK3",199,0)
 S DATA("SCS")=3
"RTN","A1AEK3",200,0)
 N UPD S UPD=$$UPDDOMA^A1AEK3(.DATA)
"RTN","A1AEK3",201,0)
 ; Fire off outging failure confirmation message to client
"RTN","A1AEK3",202,0)
 S DATA(9)="NEW SUBSCRIPTION DATE:::"
"RTN","A1AEK3",203,0)
 S DATA(10)="NEW ACTIVE SUBSCRIPTION:::"
"RTN","A1AEK3",204,0)
 S DATA(11)="SUBSCRIPTION CHANGE CONFIRMED:::FAILED"
"RTN","A1AEK3",205,0)
 S XMSUBJ="SUBSCRIPTION CHNG FAILED CONFIRM"
"RTN","A1AEK3",206,0)
 N VAP S:UT VAP="T+1"
"RTN","A1AEK3",207,0)
 ; Add mailgroup for client
"RTN","A1AEK3",208,0)
 N MGRP S MGRP="G.A1AESTRMCHG@"_$$FND(.DATA,"SERVER")
"RTN","A1AEK3",209,0)
 S:UT MGRP=DUZ
"RTN","A1AEK3",210,0)
 N XMZ S XMZ=$$SNDMAIL(XMSUBJ,.DATA,.MGRP,.VAP)
"RTN","A1AEK3",211,0)
 ; Now update 11007.2 entry with fail confirmed by Forum
"RTN","A1AEK3",212,0)
 D EMDATA(XMZ,.DATA)
"RTN","A1AEK3",213,0)
 S DATA("NSTRMD")="FAILED"
"RTN","A1AEK3",214,0)
 S UPD=$$UPDDOMA^A1AEK3(.DATA)
"RTN","A1AEK3",215,0)
 Q
"RTN","A1AEK3",216,0)
 ;
"RTN","A1AEK3",217,0)
 ; ENTER
"RTN","A1AEK3",218,0)
 ;    XMZ  =  IEN of confirmation message in 3.9
"RTN","A1AEK3",219,0)
 ; EXIT
"RTN","A1AEK3",220,0)
 ;    MSG forwarded to other Forums
"RTN","A1AEK3",221,0)
FCNF4 ; Notify other Forums of SUBSCRIPTION CHANG CONFIRMED msg
"RTN","A1AEK3",222,0)
 ; When site requests change Patch Stream, request
"RTN","A1AEK3",223,0)
 ;  is sent to the Forum controlling Patch Stream they
"RTN","A1AEK3",224,0)
 ;  desire.  When Patch Stream change is successfully
"RTN","A1AEK3",225,0)
 ;  concluded, a SUBSCRIPTION CHANGE CONFIRMED message is
"RTN","A1AEK3",226,0)
 ;  sent to CLIENT for human viewing.
"RTN","A1AEK3",227,0)
 ; However, this leaves FORUM that was parent of
"RTN","A1AEK3",228,0)
 ;  client in dark as to their NEW Stream Status.
"RTN","A1AEK3",229,0)
 ; So, the SUBSCRIPTION CHANG CONFIRMED message is also
"RTN","A1AEK3",230,0)
 ;  forwarded to all OTHER Forums (see FCNF2)
"RTN","A1AEK3",231,0)
 ;  e.g. If the client has switch to OSEHRA, the confirmation
"RTN","A1AEK3",232,0)
 ;       msg is sent from FORUM.OSEHRA.ORG to the new client
"RTN","A1AEK3",233,0)
 ;       AND to other Forums such as FORUM.VA.GOV.
"RTN","A1AEK3",234,0)
 ; When received at the(se) other Forum sites, their 
"RTN","A1AEK3",235,0)
 ;   PATCH STREAM HISTORY [#11007.2] file needs updated 
"RTN","A1AEK3",236,0)
 ;   to show they no longer support this client.  This 
"RTN","A1AEK3",237,0)
 ;   could be left up to Forum personnel or performed 
"RTN","A1AEK3",238,0)
 ;   automatically
"RTN","A1AEK3",239,0)
 ; Note if we have gotten here, message
"RTN","A1AEK3",240,0)
 ;   has been received at FORUM site and is being 
"RTN","A1AEK3",241,0)
 ;   processed via G.A1AEFMSC as notification from
"RTN","A1AEK3",242,0)
 ;   another FORUM of client's change subscription.
"RTN","A1AEK3",243,0)
 ; NB: (Important): messsage is not sent to
"RTN","A1AEK3",244,0)
 ;  originating Forum or we have infinite loop.
"RTN","A1AEK3",245,0)
 ;  this message (see FCNF2)
"RTN","A1AEK3",246,0)
 K ^XTMP("POO","FCNF4") S ^XTMP("POO","FCNF4")=$$HTFM^XLFDT($H)
"RTN","A1AEK3",247,0)
 ; Is this message from unit testing
"RTN","A1AEK3",248,0)
 N UT S UT=(^XMB(3.9,XMZ,0)["A1AE:::")
"RTN","A1AEK3",249,0)
 ; Pull all the structured text out of the confirmation
"RTN","A1AEK3",250,0)
 ;  message
"RTN","A1AEK3",251,0)
 D EMDATA(XMZ,.DATA)
"RTN","A1AEK3",252,0)
 N NASTRM S NASTRM=$$FND(.DATA,"NEW ACTIVE SUBSCRIPTION")
"RTN","A1AEK3",253,0)
 ; Quit if we can't identify a new patch stream
"RTN","A1AEK3",254,0)
 Q:'$G(NASTRM)
"RTN","A1AEK3",255,0)
 N SFORUM S SFORUM=$$GET1^DIQ(11007.1,NASTRM_",",.07)
"RTN","A1AEK3",256,0)
 ; Quit if we can't identify this patch stream's Forum
"RTN","A1AEK3",257,0)
 Q:'$L($G(SFORUM))
"RTN","A1AEK3",258,0)
 ; Quit if for some reason the identified server isn't a Forum
"RTN","A1AEK3",259,0)
 Q:(SFORUM'["FORUM")
"RTN","A1AEK3",260,0)
 N EMSERV S EMSERV=$$FND(.DATA,"SERVER")
"RTN","A1AEK3",261,0)
 N SERVER S SERVER=$$GET1^DIQ(8989.3,1_",",.01)
"RTN","A1AEK3",262,0)
 ; If NOT unit test, and email was
"RTN","A1AEK3",263,0)
 ;   spawned by this server, quit to prevent looping
"RTN","A1AEK3",264,0)
 I 'UT,(SFORUM=SERVER) Q
"RTN","A1AEK3",265,0)
 ; If not unit test, then update PATCH STREAM HISTORY file
"RTN","A1AEK3",266,0)
 ;   of recipient
"RTN","A1AEK3",267,0)
 ; Change any necessary parts of DATA
"RTN","A1AEK3",268,0)
 ; If unit test send email to DUZ
"RTN","A1AEK3",269,0)
 I UT D
"RTN","A1AEK3",270,0)
 . N MGRP S MGRP=DUZ
"RTN","A1AEK3",271,0)
 . N VAP S VAP="T+1"
"RTN","A1AEK3",272,0)
 . S XMSUBJ="A1AE:::UNIT TEST FCNF4"
"RTN","A1AEK3",273,0)
 . S XMZ=$$SNDMAIL(XMSUBJ,.DATA,.MGRP,.VAP)
"RTN","A1AEK3",274,0)
 Q
"RTN","A1AEK3",275,0)
 ;
"RTN","A1AEK3",276,0)
 ;
"RTN","A1AEK3",277,0)
EMDATA(XMZ,DATA) ; Build data array from email
"RTN","A1AEK3",278,0)
 K ^XTMP("POO","EMDATA") S ^XTMP("POO","EMDATA")=$$HTFM^XLFDT($H)
"RTN","A1AEK3",279,0)
 ; Set I to skip over addressing nodes
"RTN","A1AEK3",280,0)
 K DATA
"RTN","A1AEK3",281,0)
 Q:'XMZ
"RTN","A1AEK3",282,0)
 ; Pull lines in message with indicator string ":::" starting
"RTN","A1AEK3",283,0)
 ;   with "SERVER:::"
"RTN","A1AEK3",284,0)
 N BGN,NODE,SNODE
"RTN","A1AEK3",285,0)
 S BGN=0,NODE=$NA(^XMB(3.9,XMZ,2)),SNODE=$P(NODE,")")
"RTN","A1AEK3",286,0)
 F  S NODE=$Q(@NODE) Q:NODE'[SNODE  I @NODE[":::" D
"RTN","A1AEK3",287,0)
 . S:@NODE["SERVER:::" BGN=1
"RTN","A1AEK3",288,0)
 . I BGN S DATA(0)=$G(DATA(0))+1,DATA(DATA(0))=@NODE
"RTN","A1AEK3",289,0)
 ;
"RTN","A1AEK3",290,0)
 N SERV S SERV=$$FND^A1AEK3(.DATA,"SERVER")
"RTN","A1AEK3",291,0)
 Q:'$L(SERV)
"RTN","A1AEK3",292,0)
 N RDOMAIN S RDOMAIN=$O(^DIC(4.2,"B",SERV,0))
"RTN","A1AEK3",293,0)
 Q:'RDOMAIN
"RTN","A1AEK3",294,0)
 N A1AE72 S A1AE72=$O(^A1AE(11007.2,"B",RDOMAIN,0)) Q:'A1AE72
"RTN","A1AEK3",295,0)
 S DATA("DOMAIN")=RDOMAIN
"RTN","A1AEK3",296,0)
 S DATA("STRM")=$$FND^A1AEK3(.DATA,"ACTIVE SUBSCRIPTION")
"RTN","A1AEK3",297,0)
 S DATA("STRMD")=$$FND^A1AEK3(.DATA,"DATE SUBSCRIPTION ACTIVE")
"RTN","A1AEK3",298,0)
 S DATA("IR")=$$GET1^DIQ(11007.2,A1AE72,.04,"I")
"RTN","A1AEK3",299,0)
 S DATA("IS")=$$GET1^DIQ(11007.2,A1AE72,.05,"I")
"RTN","A1AEK3",300,0)
 S DATA("SCS")=$$GET1^DIQ(11007.2,A1AE72,.06,"I")
"RTN","A1AEK3",301,0)
 S DATA("SERV")=$$FND^A1AEK3(.DATA,"SERVER")
"RTN","A1AEK3",302,0)
 S DATA("ASTRM")=$$FND^A1AEK3(.DATA,"ACTIVE SUBSCRIPTION")
"RTN","A1AEK3",303,0)
 S DATA("ASTRMD")=$$FND^A1AEK3(.DATA,"DATE SUBSCRIPTION ACTIVE")
"RTN","A1AEK3",304,0)
 S DATA("RDUZ")=$$FND^A1AEK3(.DATA,"REQUESTOR DUZ")
"RTN","A1AEK3",305,0)
 S DATA("RSTRM")=$$FND^A1AEK3(.DATA,"SWITCH TO SUBSCRIPTION")
"RTN","A1AEK3",306,0)
 S DATA("RSTRMD")=$$FND^A1AEK3(.DATA,"SWITCH REQUEST DATE")
"RTN","A1AEK3",307,0)
 S DATA("APPROVED")=$$FND^A1AEK3(.DATA,"APPROVED")
"RTN","A1AEK3",308,0)
 S DATA("FAEDIT")=$$FND^A1AEK3(.DATA,"FORUM ACTION EDIT")
"RTN","A1AEK3",309,0)
 S DATA("NSTRMD")=$$FND^A1AEK3(.DATA,"NEW SUBSCRIPTION DATE")
"RTN","A1AEK3",310,0)
 S DATA("NASTRM")=$$FND^A1AEK3(.DATA,"NEW ACTIVE SUBSCRIPTION")
"RTN","A1AEK3",311,0)
 S DATA("XMZ")=XMZ
"RTN","A1AEK3",312,0)
 Q
"RTN","A1AEK3",313,0)
 ;
"RTN","A1AEK3",314,0)
 ; W $$UPDDOMA(.DATA)
"RTN","A1AEK3",315,0)
 ; UPDATE ENTRY IN 11007.2
"RTN","A1AEK3",316,0)
UPDDOMA(DATA) ;
"RTN","A1AEK3",317,0)
 K ^XTMP("POO","UPDDOMA") S ^XTMP("POO","UPDDOMA")=$$HTFM^XLFDT($H)
"RTN","A1AEK3",318,0)
 K ^XTMP("POO","DATA") M ^XTMP("POO","DATA")=DATA
"RTN","A1AEK3",319,0)
 N A1AEFOAP S A1AEFOAP=1 ; Required by INPUT TRANSFORMS
"RTN","A1AEK3",320,0)
 N FDA,DIERR,FDAIEN
"RTN","A1AEK3",321,0)
 S FDA(3,11007.2,"?+1,",.01)=$G(DATA("DOMAIN"))
"RTN","A1AEK3",322,0)
 S FDA(3,11007.2,"?+1,",.02)=$G(DATA("STRM"))
"RTN","A1AEK3",323,0)
 S FDA(3,11007.2,"?+1,",.03)=$G(DATA("STRMD"))
"RTN","A1AEK3",324,0)
 S FDA(3,11007.2,"?+1,",.04)=$G(DATA("IR"))
"RTN","A1AEK3",325,0)
 S FDA(3,11007.2,"?+1,",.05)=$G(DATA("IS"))
"RTN","A1AEK3",326,0)
 S FDA(3,11007.2,"?+1,",.06)=$G(DATA("SCS"))
"RTN","A1AEK3",327,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEK3",328,0)
 Q:$D(DIERR) 0
"RTN","A1AEK3",329,0)
 ;
"RTN","A1AEK3",330,0)
 N FD2IEN S FD2IEN=+FDAIEN(1)
"RTN","A1AEK3",331,0)
 K FDA
"RTN","A1AEK3",332,0)
 S FDA(3,11007.21,"?+1,"_FD2IEN_",",.01)=$G(DATA("RSTRMD"))
"RTN","A1AEK3",333,0)
 S FDA(3,11007.21,"?+1,"_FD2IEN_",",1)=$G(DATA("SERV"))
"RTN","A1AEK3",334,0)
 S FDA(3,11007.21,"?+1,"_FD2IEN_",",2)=$G(DATA("ASTRM"))
"RTN","A1AEK3",335,0)
 S FDA(3,11007.21,"?+1,"_FD2IEN_",",3)=$G(DATA("ASTRMD"))
"RTN","A1AEK3",336,0)
 S FDA(3,11007.21,"?+1,"_FD2IEN_",",4)=$G(DATA("RDUZ"))
"RTN","A1AEK3",337,0)
 S FDA(3,11007.21,"?+1,"_FD2IEN_",",5)=$G(DATA("RSTRM"))
"RTN","A1AEK3",338,0)
 S FDA(3,11007.21,"?+1,"_FD2IEN_",",6)=$G(DATA("RSTRMD"))
"RTN","A1AEK3",339,0)
 S FDA(3,11007.21,"?+1,"_FD2IEN_",",7)=$G(DATA("APPROVED"))
"RTN","A1AEK3",340,0)
 S FDA(3,11007.21,"?+1,"_FD2IEN_",",8)=$G(DATA("FAEDIT"))
"RTN","A1AEK3",341,0)
 S FDA(3,11007.21,"?+1,"_FD2IEN_",",9)=$G(DATA("NSTRMD"))
"RTN","A1AEK3",342,0)
 S FDA(3,11007.21,"?+1,"_FD2IEN_",",10)=$G(DATA("NASTRM"))
"RTN","A1AEK3",343,0)
 S FDA(3,11007.21,"?+1,"_FD2IEN_",",11)=$G(DATA("NSTRMD"))
"RTN","A1AEK3",344,0)
 S FDA(3,11007.21,"?+1,"_FD2IEN_",",12)=$G(DATA("XMZ"))
"RTN","A1AEK3",345,0)
 K DIERR D UPDATE^DIE("","FDA(3)","FD2IEN")
"RTN","A1AEK3",346,0)
 Q:$D(DIERR) 0
"RTN","A1AEK3",347,0)
 Q $G(FDAIEN(1))_"^"_$G(FD2IEN(1))
"RTN","A1AEK3",348,0)
 ;
"RTN","A1AEK3",349,0)
 ;
"RTN","A1AEK3",350,0)
 ;send mail from postmaster to mailgroup
"RTN","A1AEK3",351,0)
 ;ENTER
"RTN","A1AEK3",352,0)
 ;  XMSUBJ  = Subject of email
"RTN","A1AEK3",353,0)
 ;  DATA    = Data array for text
"RTN","A1AEK3",354,0)
 ;  MGRP    = Mailgroup recipient
"RTN","A1AEK3",355,0)
 ;RETURN
"RTN","A1AEK3",356,0)
 ;  0^COMMENT if error, XMZ if mail sent
"RTN","A1AEK3",357,0)
SNDMAIL(XMSUBJ,DATA,MGRP,VAP) ;
"RTN","A1AEK3",358,0)
 K ^XTMP("POO","SNDMAIL1") S ^XTMP("POO","SNDMAIL1")="DUZ:"_$G(DUZ)_" "_$$HTFM^XLFDT($H)
"RTN","A1AEK3",359,0)
 Q:'$G(DUZ) "0^MSG SEND ERROR ENTERED WITHOUT DUZ"
"RTN","A1AEK3",360,0)
 Q:'$D(^VA(200,DUZ)) "0^MSG SEND ERROR DUZ NOT IN 200"
"RTN","A1AEK3",361,0)
 N X,Y,DI
"RTN","A1AEK3",362,0)
 ; New DUZ, set mail to come from Postmaster
"RTN","A1AEK3",363,0)
 N DUZ S DUZ=0.5 D DUZ^XUP(.5)
"RTN","A1AEK3",364,0)
 K ^XTMP("POO","SNDMAIL2") S ^XTMP("POO","SNDMAIL2")="DUZ:"_$G(DUZ)_"  "_$$HTFM^XLFDT($H)
"RTN","A1AEK3",365,0)
 N SNDAPP,XMERR
"RTN","A1AEK3",366,0)
 N XMTO S XMTO(MGRP)=""
"RTN","A1AEK3",367,0)
 N XMZ S XMZ=""
"RTN","A1AEK3",368,0)
 N XMDUZ S XMDUZ=DUZ
"RTN","A1AEK3",369,0)
 N XMBODY S XMBODY="DATA"
"RTN","A1AEK3",370,0)
 S VAP=$S($D(VAP):VAP,1:"T+100")
"RTN","A1AEK3",371,0)
 N XMINSTR S XMINSTR("VAPOR")=VAP
"RTN","A1AEK3",372,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,.XMINSTR,.XMZ)
"RTN","A1AEK3",373,0)
 Q:$D(XMERR) "0^MSG SEND ERROR(S) ENCOUNTERED"
"RTN","A1AEK3",374,0)
 K ^XTMP("POO","SNDMAIL3") S ^XTMP("POO","SNDMAIL3")="DUZ:"_$G(DUZ)_" "_$$HTFM^XLFDT($H)
"RTN","A1AEK3",375,0)
 Q XMZ
"RTN","A1AEK3",376,0)
 ;
"RTN","A1AEK3",377,0)
 ; ENTER
"RTN","A1AEK3",378,0)
 ;    DATA   = array of email's text by reference
"RTN","A1AEK3",379,0)
 ;    HDR    = structured text in email to find
"RTN","A1AEK3",380,0)
 ; RETURN
"RTN","A1AEK3",381,0)
 ;    Data following HDR identified in array
"RTN","A1AEK3",382,0)
 ;      - or NULL if HDR not found
"RTN","A1AEK3",383,0)
 ; example
"RTN","A1AEK3",384,0)
 ;    DATA(3)="DATE SUBSCRIPTION ACTIVE:::"_3150401.123456
"RTN","A1AEK3",385,0)
 ;    HDR ="DATE SUBSCRIPTION ACTIVE"
"RTN","A1AEK3",386,0)
 ;    3150401.123456 returned to caller
"RTN","A1AEK3",387,0)
FND(DATA,HDR) ;Find HDR in DATA array, return data
"RTN","A1AEK3",388,0)
 N NODE,RSLT S NODE=$NA(DATA),RSLT=""
"RTN","A1AEK3",389,0)
 F  S NODE=$Q(@NODE) Q:NODE'["DATA("  Q:($P(@NODE,":::")=HDR)
"RTN","A1AEK3",390,0)
 I NODE["DATA(" D
"RTN","A1AEK3",391,0)
 . S RSLT=$P(@NODE,":::",2)
"RTN","A1AEK3",392,0)
 Q RSLT
"RTN","A1AEK3",393,0)
 ;
"RTN","A1AEK3",394,0)
 ;
"RTN","A1AEK3",395,0)
 ; This entered after Forum personnel edit SCS field
"RTN","A1AEK3",396,0)
 ;  of active stream change request for Domain
"RTN","A1AEK3",397,0)
 ;  Fired off by an action cross-reference.
"RTN","A1AEK3",398,0)
 ; ENTER
"RTN","A1AEK3",399,0)
 ;    X1   =  Previous entry (2)
"RTN","A1AEK3",400,0)
 ;    X2   =  New entry (1=approval, 3 or 4 is disapproval)
"RTN","A1AEK3",401,0)
 ;    D    =  string from FM with 1st piece = DOMAIN IEN in 4.2
"RTN","A1AEK3",402,0)
 ; EXIT
"RTN","A1AEK3",403,0)
 ;    If approved, sends approval email to requesting domain
"RTN","A1AEK3",404,0)
 ;       and updates entry in 11007.2
"RTN","A1AEK3",405,0)
 ;    If disapproval, sends disapproval email to requesting
"RTN","A1AEK3",406,0)
 ;       domain and updates entry in 11007.2
"RTN","A1AEK3",407,0)
 ;
"RTN","A1AEK3",408,0)
FRMAPPR(X1,X2,D) ;
"RTN","A1AEK3",409,0)
 Q:'$L($G(X1))
"RTN","A1AEK3",410,0)
 Q:'$L($G(X2))
"RTN","A1AEK3",411,0)
 N UT S UT=($G(D)["A1AE:::")
"RTN","A1AEK3",412,0)
 W:'UT " One moment. Sending email to Client. "
"RTN","A1AEK3",413,0)
 N A1AE72I
"RTN","A1AEK3",414,0)
 I UT S A1AE72I=$O(^A1AE(11007.2,"B",+D,0))
"RTN","A1AEK3",415,0)
 E  S A1AE72I=DA
"RTN","A1AEK3",416,0)
 N NODE S NODE=$NA(^A1AE(11007.2,A1AE72I,1,"B","A"))
"RTN","A1AEK3",417,0)
 N A1AEDT S A1AEDT=$O(@NODE,-1)
"RTN","A1AEK3",418,0)
 N A1AEDTI S A1AEDTI=$O(^A1AE(11007.2,A1AE72I,1,"B",A1AEDT,0))
"RTN","A1AEK3",419,0)
 N IENS S IENS=A1AEDTI_","_A1AE72I_","
"RTN","A1AEK3",420,0)
 N A1AEDSRZ
"RTN","A1AEK3",421,0)
 S A1AEDSRZ=$$GET1^DIQ(11007.21,IENS,12,"I")
"RTN","A1AEK3",422,0)
 Q:'$D(^XMB(3.9,A1AEDSRZ)) 0
"RTN","A1AEK3",423,0)
 N FDATA
"RTN","A1AEK3",424,0)
 D EMDATA(A1AEDSRZ,.FDATA)
"RTN","A1AEK3",425,0)
 ; edit DATA("FORUM APPROVAL" to be YES or NO"
"RTN","A1AEK3",426,0)
 ; build DATA array for EMAIL send
"RTN","A1AEK3",427,0)
 ; Remember to set I to skip over addressing nodes in message
"RTN","A1AEK3",428,0)
 N DATA,I S I=0
"RTN","A1AEK3",429,0)
 F  S I=$O(FDATA(I)) Q:'I  S DATA(I)=FDATA(I),DATA(0)=I
"RTN","A1AEK3",430,0)
 K FDATA
"RTN","A1AEK3",431,0)
 N SUBJ,MGRP
"RTN","A1AEK3",432,0)
 I X2=1 D
"RTN","A1AEK3",433,0)
 . S DATA(0)=DATA(0)+1,DATA(DATA(0))="APPROVED:::YES"
"RTN","A1AEK3",434,0)
 . S SUBJ="SUBSCRIPTION CHNG APPROVED"
"RTN","A1AEK3",435,0)
 E  D
"RTN","A1AEK3",436,0)
 . S DATA(0)=DATA(0)+1,DATA(DATA(0))="APPROVED:::NO"
"RTN","A1AEK3",437,0)
 . S SUBJ="SUBSCRIPTION CHNG NOT APPROVED"
"RTN","A1AEK3",438,0)
 ; Mail group should be that of the domain requesting
"RTN","A1AEK3",439,0)
 ;   the stream change.  For now, I will leave at Forum
"RTN","A1AEK3",440,0)
 N MGRP S MGRP="G.A1AESTRMCHG@"_$$FND(.DATA,"SERVER")
"RTN","A1AEK3",441,0)
 ; Fix for Unit Testing
"RTN","A1AEK3",442,0)
 I UT S MGRP=DUZ N VAP S VAP="T+1"
"RTN","A1AEK3",443,0)
 S XMZ=$$SNDMAIL(SUBJ,.DATA,.MGRP,.VAP)
"RTN","A1AEK3",444,0)
 ;
"RTN","A1AEK3",445,0)
 I $G(UT) H 15 ; Wait for slow system
"RTN","A1AEK3",446,0)
 ;
"RTN","A1AEK3",447,0)
 D EMDATA^A1AEK3(XMZ,.DATA)
"RTN","A1AEK3",448,0)
 S X=$$UPDDOMA^A1AEK3(.DATA)
"RTN","A1AEK3",449,0)
 Q
"RTN","A1AEK3",450,0)
 ;
"RTN","A1AEK3",451,0)
 ;
"RTN","A1AEK3",452,0)
 ;ENTER
"RTN","A1AEK3",453,0)
 ;    XMZ    = IEN into 3.9 of incoming email
"RTN","A1AEK3",454,0)
 ;    DATA   = Array of all variables pulled from 
"RTN","A1AEK3",455,0)
 ;             the incoming email
"RTN","A1AEK3",456,0)
 ;EXIT
"RTN","A1AEK3",457,0)
 ;    0  = email DOES NOT match entry in 11007.2 in progress
"RTN","A1AEK3",458,0)
 ;    LXMZ^IENS = email variables match entry in progress
"RTN","A1AEK3",459,0)
 ;                LXMZ = IEN into 3.9 of the last email
"RTN","A1AEK3",460,0)
 ;                       filed in entry in 11007.2 in progress
"RTN","A1AEK3",461,0)
 ;                IENS = IENS for this entry in 11007.2
"RTN","A1AEK3",462,0)
 ;                       to be used in $$GET1 calls
"RTN","A1AEK3",463,0)
 ;    e.g. to pull the date the patch stream change was
"RTN","A1AEK3",464,0)
 ;         requested in the most recent earlier email
"RTN","A1AEK3",465,0)
 ;         $$GET1^DIQ(11007.21,IENS,12,"I")
"RTN","A1AEK3",466,0)
 ;  By pulling all DATA array variables from previously
"RTN","A1AEK3",467,0)
 ;  received message from this DOMAIN to Forum and comparing
"RTN","A1AEK3",468,0)
 ;  array to DATA array of just received message
"RTN","A1AEK3",469,0)
 ;  we assure ourselves client and forum are working
"RTN","A1AEK3",470,0)
 ;  on same change patch stream request.
"RTN","A1AEK3",471,0)
CHKMTCH(XMZ,DATA) ; Check incoming mail matches active Forum entry
"RTN","A1AEK3",472,0)
 K ^XTMP("POO","CHKMTCH")
"RTN","A1AEK3",473,0)
 S ^XTMP("POO","CHKMTCH","A")="XMZ:"_$G(XMZ)_" "_$$HTFM^XLFDT($H)
"RTN","A1AEK3",474,0)
 Q:'$G(XMZ) 0
"RTN","A1AEK3",475,0)
 Q:'$D(^XMB(3.9,XMZ)) 0
"RTN","A1AEK3",476,0)
 Q:'$D(DATA) 0
"RTN","A1AEK3",477,0)
 S ^XTMP("POO","CHKMTCH","B")="XMZ:"_$G(XMZ)_" "_$$HTFM^XLFDT($H)
"RTN","A1AEK3",478,0)
 N A1AEDOM S A1AEDOM=$G(DATA("SERV")) Q:'$L(A1AEDOM) 0
"RTN","A1AEK3",479,0)
 N A1AE42 S A1AE42=$O(^DIC(4.2,"B",A1AEDOM,0)) Q:'$G(A1AE42) 0
"RTN","A1AEK3",480,0)
 N A1AE72 S A1AE72=$O(^A1AE(11007.2,"B",A1AE42,0))
"RTN","A1AEK3",481,0)
 N NODE S NODE=$NA(^A1AE(11007.2,A1AE72,1,"B","A"))
"RTN","A1AEK3",482,0)
 N A1AEDT S A1AEDT=$O(@NODE,-1)
"RTN","A1AEK3",483,0)
 N A1AEDTI S A1AEDTI=$O(^A1AE(11007.2,A1AE72,1,"B",A1AEDT,0))
"RTN","A1AEK3",484,0)
 N IENS S IENS=A1AEDTI_","_A1AE72_","
"RTN","A1AEK3",485,0)
 N A1AEDSRZ
"RTN","A1AEK3",486,0)
 S ^XTMP("POO","CHKMTCH","C")=IENS
"RTN","A1AEK3",487,0)
 S A1AEDSRZ=$$GET1^DIQ(11007.21,IENS,12,"I")
"RTN","A1AEK3",488,0)
 S ^XTMP("POO","CHKMTCH","E")="A1AEDSRZ:"_$G(A1AEDSRZ)
"RTN","A1AEK3",489,0)
 Q:'$D(^XMB(3.9,A1AEDSRZ)) 0
"RTN","A1AEK3",490,0)
 S ^XTMP("POO","CHKMTCH","D")=IENS
"RTN","A1AEK3",491,0)
 N FDATA D EMDATA(A1AEDSRZ,.FDATA)
"RTN","A1AEK3",492,0)
 M ^XTMP("POO","CHKMTCH","E")=DATA
"RTN","A1AEK3",493,0)
 M ^XTMP("POO","CHKMTCH","F")=FDATA
"RTN","A1AEK3",494,0)
 ; Now match some of DATA and FDATA
"RTN","A1AEK3",495,0)
 N X
"RTN","A1AEK3",496,0)
 S X=(DATA("DOMAIN")=FDATA("DOMAIN"))
"RTN","A1AEK3",497,0)
 S X=(DATA("STRM")=FDATA("STRM"))_X
"RTN","A1AEK3",498,0)
 S X=(DATA("STRMD")=FDATA("STRMD"))_X
"RTN","A1AEK3",499,0)
 S X=(DATA("SERV")=FDATA("SERV"))_X
"RTN","A1AEK3",500,0)
 S X=(DATA("RDUZ")=FDATA("RDUZ"))_X
"RTN","A1AEK3",501,0)
 S X=(DATA("RSTRM")=FDATA("RSTRM"))_X
"RTN","A1AEK3",502,0)
 S X=(DATA("RSTRMD")=FDATA("RSTRMD"))_X
"RTN","A1AEK3",503,0)
 S ^XTMP("POO","CHKMTCH","G")="X="_$G(X)
"RTN","A1AEK3",504,0)
 Q:X["0" 0 Q A1AEDSRZ_"^"_IENS
"RTN","A1AEK3",505,0)
 ;
"RTN","A1AEK3",506,0)
FMSUBJ ;;SUBSCRIPTION CHNG REQUEST^FCNF1
"RTN","A1AEK3",507,0)
 ;;SUBSCRIPTION CHNG COMPLETED^FCNF2
"RTN","A1AEK3",508,0)
 ;;SUBSCRIPTION CHNG FAILED^FCNF3
"RTN","A1AEK3",509,0)
 ;;SUBSCRIPTION CHNG CONFIRMED^FCNF4
"RTN","A1AEK3",510,0)
 ;;*END*
"RTN","A1AEK3",511,0)
 ;
"RTN","A1AEK3",512,0)
EOR ; end of routine A1AEK3
"RTN","A1AEKEY")
0^8^B22612335
"RTN","A1AEKEY",1,0)
A1AEKEY ;isa/rmo,mjk ;2014-04-18T12:49 ;
"RTN","A1AEKEY",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEKEY",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEKEY",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEKEY",5,0)
 ;
"RTN","A1AEKEY",6,0)
 ;
"RTN","A1AEKEY",7,0)
 ;primary change history
"RTN","A1AEKEY",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEKEY",9,0)
 ;1992-12-02: version 2.2 released
"RTN","A1AEKEY",10,0)
 ;
"RTN","A1AEKEY",11,0)
 ;
"RTN","A1AEKEY",12,0)
 ;----------------------------------------------------------------
"RTN","A1AEKEY",13,0)
 ; This module has two separate entry points:
"RTN","A1AEKEY",14,0)
 ;      ASKKEY -- is used to prompt the patch user for patch keys
"RTN","A1AEKEY",15,0)
 ;                and to enter/edit holders
"RTN","A1AEKEY",16,0)
 ;      KEY    -- for automatic allocation of patch keys to users
"RTN","A1AEKEY",17,0)
 ;                in a specific package
"RTN","A1AEKEY",18,0)
 ;----------------------------------------------------------------
"RTN","A1AEKEY",19,0)
ASKKEY ;Prompt for patch function key
"RTN","A1AEKEY",20,0)
 S DIC("A")="Select PATCH KEY: ",DIC("S")="S A1AEX=^(0) I $E($P(^(0),U,1),1,4)=""A1AE"",$S($D(^XUSEC(""A1AE MGR"",DUZ)):1,($P(A1AEX,U,1)'=""A1AE XUSEC"")&($P(A1AEX,U,1)'=""A1AE MGR""):1,1:0) K A1AEX",DIC="^DIC(19.1,",DIC(0)="AEMQZ"
"RTN","A1AEKEY",21,0)
 W ! D ^DIC K DIC("A"),DIC("S") Q:Y<0  S A1AEKYIF=+Y,A1AEKEY=$P(Y,U,2)
"RTN","A1AEKEY",22,0)
 D ASKHLD K A1AEDUZ0,A1AEPK,A1AEPKIF,A1AEPKNM,A1AEKEY,A1AEUSR,A1AEXRF,A1AEDES,A1AEKYIF,A1AEHDIF,A1AEUSNM Q:X="^"  G ASKKEY
"RTN","A1AEKEY",23,0)
 ;
"RTN","A1AEKEY",24,0)
ASKHLD ;Prompt for key holder
"RTN","A1AEKEY",25,0)
 S A1AEDUZ0=DUZ(0),DUZ(0)="@"
"RTN","A1AEKEY",26,0)
 S DIC="^VA(200,",DIC(0)="AEQ",DIC("A")="Select Patch user: " W ! D ^DIC K DIC Q:Y<0
"RTN","A1AEKEY",27,0)
 S A1AEUSR=+Y,A1AEUSNM=$P(Y,"^",2)
"RTN","A1AEKEY",28,0)
 I '$D(^VA(200,A1AEUSR,51,A1AEKYIF)) DO  G ASKHLD
"RTN","A1AEKEY",29,0)
 .S DIC(0)="NMQ" S:'$D(^VA(200,A1AEUSR,51,0)) ^(0)="^200.051PA^^"
"RTN","A1AEKEY",30,0)
 .S DIC="^VA(200,"_A1AEUSR_",51,",DA(1)=A1AEUSR,X=A1AEKYIF,DINUM=X
"RTN","A1AEKEY",31,0)
 .K DO,DD D FILE^DICN S DUZ(0)=A1AEDUZ0 K A1AEDUZ0,DO,DD,DA,DE,DQ
"RTN","A1AEKEY",32,0)
 .I '$P(Y,"^",3) Q
"RTN","A1AEKEY",33,0)
 .W !?3,"..",A1AEUSNM,"...added as an ",A1AEKEY," key holder"
"RTN","A1AEKEY",34,0)
 .Q
"RTN","A1AEKEY",35,0)
 D LIST:A1AEKEY="A1AE DEVELOPER"!(A1AEKEY="A1AE SUPPORT")!(A1AEKEY="A1AE PHVER"),ASKDEL G ASKHLD
"RTN","A1AEKEY",36,0)
 ;
"RTN","A1AEKEY",37,0)
LIST ;List the packages the selected holder may require this key for
"RTN","A1AEKEY",38,0)
 S A1AEXRF=$S(A1AEKEY="A1AE DEVELOPER":"AD",A1AEKEY="A1AE SUPPORT":"AS",A1AEKEY="A1AE PHVER":"AV",1:""),A1AEDES=$S(A1AEXRF="AD":"developer",A1AEXRF="AS":"support person",A1AEXRF="AV":"verifier",1:"")
"RTN","A1AEKEY",39,0)
 I '$D(^A1AE(11007,A1AEXRF,A1AEUSR)) W !!?3,A1AEUSNM," is not a ",A1AEDES," for any package in the Patch file." Q
"RTN","A1AEKEY",40,0)
 I $D(^A1AE(11007,A1AEXRF,A1AEUSR)) W !!?3,A1AEUSNM," is a ",A1AEDES," for:" F A1AEPKIF=0:0 S A1AEPKIF=+$O(^A1AE(11007,A1AEXRF,A1AEUSR,A1AEPKIF)) Q:'A1AEPKIF  I $D(^DIC(9.4,A1AEPKIF,0)) W !?7,$P(^(0),"^",2),?12,"-",?14,$P(^(0),"^",1)
"RTN","A1AEKEY",41,0)
 Q
"RTN","A1AEKEY",42,0)
ASKDEL ;Prompt for deleting the key holder
"RTN","A1AEKEY",43,0)
 S A1AERD("A")="Do you want to delete "_A1AEUSNM_" as an "_A1AEKEY_" key holder? ",A1AERD(0)="S",A1AERD(1)="Yes^delete key holder",A1AERD(2)="No^not delete",A1AERD("B")=2 D SET^A1AERD K A1AERD Q:X="^"!("N"[$E(X,1))
"RTN","A1AEKEY",44,0)
 S DIK="^VA(200,"_A1AEUSR_",51,",DA(1)=A1AEUSR,DA=A1AEKYIF
"RTN","A1AEKEY",45,0)
 D ^DIK K DIK,DA,D0
"RTN","A1AEKEY",46,0)
 W !?3,"...deleted as an ",A1AEKEY," key holder" Q
"RTN","A1AEKEY",47,0)
 ;
"RTN","A1AEKEY",48,0)
KEY ;Automatic allocation of A1AE SUPPORT, A1AE PHVER, A1AE DEVELOPER keys
"RTN","A1AEKEY",49,0)
 ;for a specific package
"RTN","A1AEKEY",50,0)
 W !!?3,"...allocating A1AE SUPPORT, A1AE PHVER, and A1AE DEVELOPER keys" S A1AESKY=+$O(^DIC(19.1,"B","A1AE SUPPORT",0)),A1AEVKY=+$O(^DIC(19.1,"B","A1AE PHVER",0)),A1AEDKY=+$O(^DIC(19.1,"B","A1AE DEVELOPER",0))
"RTN","A1AEKEY",51,0)
 D SUPPORT:A1AESKY,DEVELOP:A1AEDKY W:'A1AESKY !?6,"A1AE SUPPORT key does not exist" W:'A1AEVKY !?6,"A1AE DEVELOPER key does not exist" W:'A1AEDKY !?6,"A1AE DEVELOPER key does not exist"
"RTN","A1AEKEY",52,0)
 K A1AESKY,A1AEVKY,A1AEDKY,A1AEUSR,A1AEVR,A1AEUSNM
"RTN","A1AEKEY",53,0)
 Q
"RTN","A1AEKEY",54,0)
 ;
"RTN","A1AEKEY",55,0)
SUPPORT F A1AEUSR=0:0 S A1AEUSR=+$O(^A1AE(11007,A1AEPKIF,"PB",A1AEUSR)) Q:'A1AEUSR  S A1AEVR=$P(^(A1AEUSR,0),"^",2),DA=A1AESKY D SETKEY:'$D(^XUSEC("A1AE SUPPORT",A1AEUSR)) I A1AEVR="V",A1AEVKY D VERIFY
"RTN","A1AEKEY",56,0)
 Q
"RTN","A1AEKEY",57,0)
 ;
"RTN","A1AEKEY",58,0)
VERIFY S DA=A1AEVKY D SETKEY:'$D(^XUSEC("A1AE PHVER",A1AEUSR))
"RTN","A1AEKEY",59,0)
 Q
"RTN","A1AEKEY",60,0)
 ;
"RTN","A1AEKEY",61,0)
DEVELOP F A1AEUSR=0:0 S A1AEUSR=+$O(^A1AE(11007,A1AEPKIF,"PH",A1AEUSR)) Q:'A1AEUSR  S DA=A1AEDKY D SETKEY:'$D(^XUSEC("A1AE DEVELOPER",A1AEUSR))
"RTN","A1AEKEY",62,0)
 Q
"RTN","A1AEKEY",63,0)
 ;
"RTN","A1AEKEY",64,0)
SETKEY S X=DA K DA
"RTN","A1AEKEY",65,0)
 S A1AEUSNM=$S($D(^VA(200,A1AEUSR,0)):$E($P(^(0),"^"),1,20),1:"UNKNOWN")
"RTN","A1AEKEY",66,0)
 S A1AEDUZ0=DUZ(0),DUZ(0)="@"
"RTN","A1AEKEY",67,0)
 S:'$D(^VA(200,A1AEUSR,51,0)) ^(0)="^200.051PA^0^-1"
"RTN","A1AEKEY",68,0)
 S DIC(0)="NMQ"
"RTN","A1AEKEY",69,0)
 S DIC="^VA(200,"_A1AEUSR_",51,",DA(1)=A1AEUSR,DINUM=X
"RTN","A1AEKEY",70,0)
 K DO,DD D FILE^DICN S DUZ(0)=A1AEDUZ0 K DO,DD,DA,A1AEDUZ0,DE,DQ  I $P(Y,"^",3) W "."
"RTN","A1AEKEY",71,0)
 Q
"RTN","A1AEM")
0^10^B44398882
"RTN","A1AEM",1,0)
A1AEM ;isa/pke-called entries for mailing patches ;2014-03-31T13:00
"RTN","A1AEM",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEM",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEM",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEM",5,0)
 ;
"RTN","A1AEM",6,0)
 ;
"RTN","A1AEM",7,0)
 ; change history
"RTN","A1AEM",8,0)
 ;
"RTN","A1AEM",9,0)
 ; 2007 01 10 (??/??): last change prior to v2.4
"RTN","A1AEM",10,0)
 ;
"RTN","A1AEM",11,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEM",12,0)
 ;
"RTN","A1AEM",13,0)
 ; 2014 03 31 (ven/toad): Rick Marshall of the VISTA Expertise Network
"RTN","A1AEM",14,0)
 ; added subroutine CONTS2 to handle input template A1AE AD/EDIT
"RTN","A1AEM",15,0)
 ; PATCHES's confirmation about changing the status from secondary
"RTN","A1AEM",16,0)
 ; development (s2)
"RTN","A1AEM",17,0)
 ;
"RTN","A1AEM",18,0)
DD ;
"RTN","A1AEM",19,0)
 I $D(X),X="db",$P(^A1AE(11005,D0,0),"^",3)'=999 W !?3,"The 'DATABASE' category is only for DBA patches." K X Q
"RTN","A1AEM",20,0)
 I $D(X),"Ee"[$E(X_1),"em"'[$E($P(^A1AE(11005,D0,0),"^",7)_1) W !?3,"The 'ENHANCEMENT' category must have PRIORITY of EMERGENCY or MANDATORY." K X Q
"RTN","A1AEM",21,0)
 Q
"RTN","A1AEM",22,0)
 ;I $D(X),"PApp"[$E(X_1,1,2),"em"'[$E($P(^A1AE(11005,D0,0),"^",7)_1) W !?3,"The 'PATCH FOR A PATCH' category must have PRIORITY of EMERGENCY or MANDATORY." K X Q
"RTN","A1AEM",23,0)
 Q
"RTN","A1AEM",24,0)
CREC D NOW^%DTC I $D(^A1AE(11005.1,DA,0)) S $P(^(0),U,4,5)=AXMZ_"^"_%
"RTN","A1AEM",25,0)
 K %
"RTN","A1AEM",26,0)
 Q
"RTN","A1AEM",27,0)
VREC D NOW^%DTC I $D(^A1AE(11005.1,DA,0)) S $P(^(0),U,6,7)=AXMZ_"^"_%
"RTN","A1AEM",28,0)
 K %
"RTN","A1AEM",29,0)
 Q
"RTN","A1AEM",30,0)
 ;
"RTN","A1AEM",31,0)
 ;
"RTN","A1AEM",32,0)
CONT ; prompt for input template A1AE ADD/EDIT PATCHES to confirm
"RTN","A1AEM",33,0)
 ; changing status from Completed/Unreleased (c)
"RTN","A1AEM",34,0)
 ;
"RTN","A1AEM",35,0)
 S SAVX=X
"RTN","A1AEM",36,0)
 W !?2,"This patch has already been 'Completed', editing will change "
"RTN","A1AEM",37,0)
 S A1AERD("A")="  the status back to 'UNDER DEVELOPMENT' continue ? "
"RTN","A1AEM",38,0)
 S A1AERD(1)="Yes^continue editing with status as 'UNDER DEVELOPMENT'"
"RTN","A1AEM",39,0)
 S A1AERD(2)="No^quit and keep the status as 'COMPLETE/NOT RELEASED'"
"RTN","A1AEM",40,0)
 S A1AERD(0)="S"
"RTN","A1AEM",41,0)
 S A1AERD("B")=2
"RTN","A1AEM",42,0)
 D ^A1AERD ; call to primitive reader (pre-DIR)
"RTN","A1AEM",43,0)
 K A1AERD
"RTN","A1AEM",44,0)
 I X'["Y" S Y=""
"RTN","A1AEM",45,0)
 S X=SAVX
"RTN","A1AEM",46,0)
 ;
"RTN","A1AEM",47,0)
 QUIT  ; end of CONT
"RTN","A1AEM",48,0)
 ;
"RTN","A1AEM",49,0)
 ;
"RTN","A1AEM",50,0)
CONTS2 ; two prompts for input template A1AE ADD/EDIT PATCHES to confirm
"RTN","A1AEM",51,0)
 ; changing status from Sec Completion (s2)
"RTN","A1AEM",52,0)
 ;;private;procedure;interactive;clean;SAC compliant
"RTN","A1AEM",53,0)
 ; called by input template A1AE ADD/EDIT PATCHES
"RTN","A1AEM",54,0)
 ; calls ^DIR (Fileman Readermaid)
"RTN","A1AEM",55,0)
 ; input: none
"RTN","A1AEM",56,0)
 ; output:
"RTN","A1AEM",57,0)
 ;   A1AEMNEW = new code (i2, r2, or n2) or "" to exit template
"RTN","A1AEM",58,0)
 ;
"RTN","A1AEM",59,0)
 ; 1) prompt to confirm changing status from s2
"RTN","A1AEM",60,0)
 ;
"RTN","A1AEM",61,0)
 K A1AEMNEW D
"RTN","A1AEM",62,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","A1AEM",63,0)
 . W !?2,"This patch has already been 'Secondarily Completed',"
"RTN","A1AEM",64,0)
 . W " editing will "
"RTN","A1AEM",65,0)
 . W !?2,"require you to select a new status for this patch."
"RTN","A1AEM",66,0)
 . S DIR("A")="Are you sure you want to continue?"
"RTN","A1AEM",67,0)
 . S DIR("B")="NO"
"RTN","A1AEM",68,0)
 . S DIR(0)="S^YES:Continue editing with a new status you select;"
"RTN","A1AEM",69,0)
 . S DIR(0)=DIR(0)_"NO:Quit and keep status 'Sec Completion'"
"RTN","A1AEM",70,0)
 . D ^DIR ; confirm status change
"RTN","A1AEM",71,0)
 . S A1AEMNEW=Y
"RTN","A1AEM",72,0)
 I A1AEMNEW'="YES" D  Q  ; exit template if change not confirmed
"RTN","A1AEM",73,0)
 . S A1AEMNEW=""
"RTN","A1AEM",74,0)
 ;
"RTN","A1AEM",75,0)
 ; 2) prompt to choose new status (i2, r2, or n2)
"RTN","A1AEM",76,0)
 ;
"RTN","A1AEM",77,0)
 S A1AEMNEW="" D
"RTN","A1AEM",78,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","A1AEM",79,0)
 . S DIR("A")="New STATUS OF PATCH"
"RTN","A1AEM",80,0)
 . S DIR("B")="SEC RELEASE"
"RTN","A1AEM",81,0)
 . S DIR(0)="SB^I2:IN REVIEW;R2:SEC RELEASE;N2:NOT FOR SEC RELEASE"
"RTN","A1AEM",82,0)
 . D ^DIR ; confirm status change
"RTN","A1AEM",83,0)
 . S A1AEMNEW=Y
"RTN","A1AEM",84,0)
 ;
"RTN","A1AEM",85,0)
 QUIT  ; end of CONTS2
"RTN","A1AEM",86,0)
 ;
"RTN","A1AEM",87,0)
 ;
"RTN","A1AEM",88,0)
TRASH ;Remove old message from queue
"RTN","A1AEM",89,0)
 Q:'$D(AXMZ)
"RTN","A1AEM",90,0)
 N QUE,XMDUZ,X
"RTN","A1AEM",91,0)
 D QUE I $D(QUE),QUE S (XMKD,XMK)=QUE,XMZ=AXMZ,XMDUZ=.5 D KLQ
"RTN","A1AEM",92,0)
 K AXMDUZ,XMKD,XMK,XMZ,XMDI
"RTN","A1AEM",93,0)
 Q
"RTN","A1AEM",94,0)
KLQ ;
"RTN","A1AEM",95,0)
 D KLQ^XMA1B Q
"RTN","A1AEM",96,0)
 ;
"RTN","A1AEM",97,0)
TRASHALL(AXMZ) ;Remove other entries in QUE with same start
"RTN","A1AEM",98,0)
 N XMKD,XMK,XMZ,XMDUZ,DA,X1,XMSUB
"RTN","A1AEM",99,0)
 S XMSUB=$P($G(^XMB(3.9,AXMZ,0)),U) Q:'$L(XMSUB)
"RTN","A1AEM",100,0)
 S XMSUB=$P(XMSUB," "),DA=0
"RTN","A1AEM",101,0)
 F  S DA=$O(^XMB(3.7,.5,2,QUE,1,DA)) Q:'DA  S X=^(DA,0) D
"RTN","A1AEM",102,0)
 . S XMZ=+X,X=$G(^XMB(3.9,XMZ,0)),X1=$P($P(X,U)," ")
"RTN","A1AEM",103,0)
 . I XMSUB=X1 D
"RTN","A1AEM",104,0)
 . . N XMKD,XMK S (XMKD,XMK)=QUE,XMDUZ=.5 D KLQ
"RTN","A1AEM",105,0)
 Q 
"RTN","A1AEM",106,0)
 ;
"RTN","A1AEM",107,0)
XM I '$D(XMDUZ) S XMDUZ=DUZ
"RTN","A1AEM",108,0)
 S XMDUN=$P(^VA(200,XMDUZ,0),U),(XMKN,XMLOCK)="",(XMK,XMZ)=0
"RTN","A1AEM",109,0)
 Q
"RTN","A1AEM",110,0)
 ;
"RTN","A1AEM",111,0)
AGN R !?3,"Enter Subject: ",X:DTIME Q:X=""!(X["^")  I X?1"R"1N.N!($L(X)>64)!($L(X)<3) W *7 W:X["?" "      Use namespace*version anything 'AAAA*n.nn ....'" G AGN
"RTN","A1AEM",112,0)
 S XMSUB=X K ^UTILITY($J) X ^%ZOSF("RSEL")
"RTN","A1AEM",113,0)
 S AZ="" F I=0:0 S AZ=$O(^UTILITY($J,AZ)) Q:AZ=""  S XMROU(AZ)=""
"RTN","A1AEM",114,0)
 I $D(XMROU)<10 W !?3,"No routines selected" H 2 Q
"RTN","A1AEM",115,0)
 S XMTEXT="X(",X(1)=""
"RTN","A1AEM",116,0)
 S XMY(XMDUN_"@Q-PATCH.VA.GOV")=""
"RTN","A1AEM",117,0)
 D ^XMD W !?3,"message queued to 'Q-PATCH.VA.GOV' "
"RTN","A1AEM",118,0)
 Q
"RTN","A1AEM",119,0)
 ;
"RTN","A1AEM",120,0)
PACK ;Build a packman message
"RTN","A1AEM",121,0)
 D XM,AGN G QPK
"RTN","A1AEM",122,0)
 ;
"RTN","A1AEM",123,0)
QPK D KILL^XM K AZ,XMROU,^UTILITY($J)
"RTN","A1AEM",124,0)
 Q
"RTN","A1AEM",125,0)
 ;
"RTN","A1AEM",126,0)
MMM ;ov x=val domain, "",x9
"RTN","A1AEM",127,0)
 S DIC="^DIC(4.2,",DIC(0)="",X9="" F Y=0:0 D ^DIC Q:Y>0  S X9=X9_$S($L(X9):".",1:"")_$P(X,"."),X=$P(X,".",2,999) I X="" W !,*7,"Domain not found." Q
"RTN","A1AEM",128,0)
 Q
"RTN","A1AEM",129,0)
DOMAIN ;out xxmy("user or group @ domain")
"RTN","A1AEM",130,0)
 ;
"RTN","A1AEM",131,0)
 ;
"RTN","A1AEM",132,0)
 ;Send to the NETWORK ROUTING list in the 11007 file for A1AE package.
"RTN","A1AEM",133,0)
VER K XMY,AXMY S AN=$O(^DIC(9.4,"C","A1AE",0)) Q:'AN
"RTN","A1AEM",134,0)
 F AZ=0:0 S AZ=$O(^A1AE(11007,AN,"NT",AZ)) Q:'AZ  I $D(^(AZ,0)),'$P(^(0),U,3) S AXMY($TR($P(^(0),U,1,2),"^","@"))=""
"RTN","A1AEM",135,0)
 D XMYCHK
"RTN","A1AEM",136,0)
 Q
"RTN","A1AEM",137,0)
COM K XMY,AXMY
"RTN","A1AEM",138,0)
 F AZ=0:0 S AZ=$O(^A1AE(11007,AN,"PB",AZ)) Q:'AZ  I $D(^(AZ,0)),$P(^(0),U,2)="V" S DOM=$P(^(0),U,3),NAM=$P(^VA(200,AZ,0),U),AXMY(NAM_"@"_DOM)=""
"RTN","A1AEM",139,0)
 D XMYCHK
"RTN","A1AEM",140,0)
 Q
"RTN","A1AEM",141,0)
 ;tst ste
"RTN","A1AEM",142,0)
TST K XMY,AXMY
"RTN","A1AEM",143,0)
 F AZ=0:0 S AZ=$O(^A1AE(11007,AN,1,AZ)) Q:'AZ  I $D(^(AZ,0)),$L($P(^(0),U,3)) S DOM=$P(^(0),U,3),NAM=$P(^VA(200,AZ,0),U),AXMY(NAM_"@"_DOM)=""
"RTN","A1AEM",144,0)
 ;
"RTN","A1AEM",145,0)
XMYCHK S AN="" F  S AN=$O(AXMY(AN)) Q:AN=""  I $E(AN,$L(AN))="@" K AXMY(AN)
"RTN","A1AEM",146,0)
 MERGE XMY=AXMY
"RTN","A1AEM",147,0)
 ;should not be necessary with new mailman
"RTN","A1AEM",148,0)
 ;S (AN,XMN)=0,XMDUZ=DUZ F AZ=0:0 S AN=$O(AXMY(AN)) Q:AN=""  S X=AN D INST^XMA21 I '$D(ZTQUEUED) W "." R ZZ:0
"RTN","A1AEM",149,0)
 I '$D(ZTQUEUED) W "." R ZZ:0
"RTN","A1AEM",150,0)
 K DOM,NAM,AZ,AN,AXMY,XMN,XMDUZ
"RTN","A1AEM",151,0)
 Q
"RTN","A1AEM",152,0)
QUE ;ov xminst, 1st mess
"RTN","A1AEM",153,0)
 N %
"RTN","A1AEM",154,0)
 ;S QUE="Q-PATCH.VA.GOV"
"RTN","A1AEM",155,0)
 S %=$L(^XMB("NETNAME"),"."),%=$P(^XMB("NETNAME"),".",%-1,%),QUE="Q-PATCH."_%
"RTN","A1AEM",156,0)
 S QUE=$O(^XMB(3.7,.5,2,"B",QUE,0)) I 'QUE W !,"No queue 'Q-PATCH'" K QUE Q
"RTN","A1AEM",157,0)
 I '$D(^XMB(3.7,.5,2,QUE,0)) W !,"No queue 'Q-PATCH'" K QUE Q
"RTN","A1AEM",158,0)
 I QUE<1001 W !,"No queue 'Q-PATCH'" K QUE Q
"RTN","A1AEM",159,0)
 S QMES=$O(^XMB(3.7,.5,2,QUE,1,0)) I 'QMES W !,"No messages in Q-PATCH" K QUE,QMES Q
"RTN","A1AEM",160,0)
 Q
"RTN","A1AEM",161,0)
LOC ;ov a1aerd(),x()=axmz,a1aerd(2)=last
"RTN","A1AEM",162,0)
 Q:'$D(QUE)
"RTN","A1AEM",163,0)
 S QMESUB=$P(A1AEPD,"*",1,2)
"RTN","A1AEM",164,0)
 S QMES=0,AN=0,ADD=^DD("DD")
"RTN","A1AEM",165,0)
 F AZ=0:0 S QMES=$O(^XMB(3.7,.5,2,QUE,1,QMES)) Q:'QMES  I $D(^XMB(3.9,QMES,0)),$P(^(0),U)[QMESUB S A0=^(0) D EXTR
"RTN","A1AEM",166,0)
 K ADD,A0,AN,AZ,SHOW,QMES Q
"RTN","A1AEM",167,0)
EXTR S AN=AN+1,A1AERD(AN)=AN_U_"Copy message ' "_$P(A0,U)_" '",X(AN)=QMES,A1AERD("B")=AN
"RTN","A1AEM",168,0)
 I $D(SHOW) W !,?SHOW,"(",AN,")",?SHOW+5,$E($P(A0,U),1,25),?SHOW+32,$E($S('$P(A0,U,2):$P(A0,U,2),1:$P(^VA(200,$P(A0,U,2),0),U,1)),1,25),?SHOW+59 S Y=$P($P(A0,"^",3),".") X ADD W Y
"RTN","A1AEM",169,0)
 Q
"RTN","A1AEM",170,0)
 ;
"RTN","A1AEM",171,0)
FCOPY ;ivAXMZ,A1AEROU,ovRNAM^start^end
"RTN","A1AEM",172,0)
 S AROU=A1AEROU
"RTN","A1AEM",173,0)
 S BEG="$ROU "_AROU,END="$END ROU "_AROU
"RTN","A1AEM",174,0)
 S L1=5+$L(AROU),L2=9+$L(AROU)
"RTN","A1AEM",175,0)
 F AZ=0:0 S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)),$E(^(0),1,L1)=BEG!($E(^(0),1,L2)=END) S AP=$E(^(0),1,20) S:AP=BEG RNAM=AROU_"^"_AZ I AP=END,$D(RNAM) S $P(RNAM,"^",3)=AZ Q
"RTN","A1AEM",176,0)
 K BEG,END,AROU,AZ,AP,AZ
"RTN","A1AEM",177,0)
 Q
"RTN","A1AEM",178,0)
 ;
"RTN","A1AEM",179,0)
44 F XQ=1:1 Q:$P(X,".",XQ,99)=""  I X[$P(X,".",XQ,99) S $P(X,".",1,XQ-1)=XX Q
"RTN","A1AEM",180,0)
 Q
"RTN","A1AEM",181,0)
 ;
"RTN","A1AEM",182,0)
 ;
"RTN","A1AEM",183,0)
EOR ; end of routine A1AEM
"RTN","A1AEM1")
0^11^B60911745
"RTN","A1AEM1",1,0)
A1AEM1 ;isa/pke-copy message ;2014-03-24T22:23
"RTN","A1AEM1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEM1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEM1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEM1",5,0)
 ;
"RTN","A1AEM1",6,0)
 ;
"RTN","A1AEM1",7,0)
 ;primary change history
"RTN","A1AEM1",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEM1",9,0)
 ;
"RTN","A1AEM1",10,0)
 ;
"RTN","A1AEM1",11,0)
MES ;copy mesage into file #11005.1
"RTN","A1AEM1",12,0)
 N X,Y,A1AERD,AN,GLOBAL,GLOBAL0,RTXT,RSTART,RVER,LINE2
"RTN","A1AEM1",13,0)
 S A1AERD("A")="Do you want to copy "_$S($D(QMSUB):"'"_QMSUB_"'",1:"a packman message")_" into the Message Text? "
"RTN","A1AEM1",14,0)
 S A1AERD(1)="Yes^copy a message "_$S($D(QMSUB):"'"_QMSUB_"'",1:" containing "_$P(A1AEPD,"*",1,2))
"RTN","A1AEM1",15,0)
 S A1AERD(2)="No^Do not copy a message"
"RTN","A1AEM1",16,0)
        S A1AERD(3)="Load^Load a KIDS build from the File system or the Web"
"RTN","A1AEM1",17,0)
 S A1AERD(0)="S"
"RTN","A1AEM1",18,0)
 S A1AERD("B")=2 D SET^A1AERD K A1AERD
"RTN","A1AEM1",19,0)
 S A1AEKIDS=0 ;Used to jump in the DIE template
"RTN","A1AEM1",20,0)
 I X["Y" D ASKS ;Get KIDS message
"RTN","A1AEM1",21,0)
 I X'["Y" D HFS ;Get HFS message
"RTN","A1AEM1",22,0)
        I X["L" D SELFILQ^A1AEK2M3(DA)
"RTN","A1AEM1",23,0)
QMES K A1AERD,AN,AXMY,GLOBAL,GLOBAL0,RTXT,RSTART,RVER,REND,RVER,MARK,AXMZ,RNAM,QMSUB,QUE
"RTN","A1AEM1",24,0)
 Q
"RTN","A1AEM1",25,0)
 ;
"RTN","A1AEM1",26,0)
ASKS ;at this point AXMZ defined will avoid the select question
"RTN","A1AEM1",27,0)
 N X
"RTN","A1AEM1",28,0)
 I $D(AXMZ) S QMSUB=$P(^XMB(3.9,AXMZ,0),U) D FND Q
"RTN","A1AEM1",29,0)
 ;this is for AXMZ
"RTN","A1AEM1",30,0)
 S SHOW=10 D QUE^A1AEM,LOC^A1AEM I '$D(QUE) Q
"RTN","A1AEM1",31,0)
 I $D(X)<10 W !!?3,"No message in queue has subject containing ",$P(A1AEPD,"*",1,2) Q
"RTN","A1AEM1",32,0)
 S A1AERD(0)="S",A1AERD("A")="Select Message to copy : "
"RTN","A1AEM1",33,0)
 D SET^A1AERD
"RTN","A1AEM1",34,0)
 I X["^" Q
"RTN","A1AEM1",35,0)
 S AXMZ=X(X),QMSUB=$P(^XMB(3.9,AXMZ,0),U)
"RTN","A1AEM1",36,0)
FND W !?5,"Using message '",QMSUB,"'  "
"RTN","A1AEM1",37,0)
 ;
"RTN","A1AEM1",38,0)
 S RTXT="$TXT Created by",LINE2=""
"RTN","A1AEM1",39,0)
 ;bug in textprint
"RTN","A1AEM1",40,0)
 S RTXTEND="$END TXT"
"RTN","A1AEM1",41,0)
 S RSTART="$ROU "
"RTN","A1AEM1",42,0)
 S REND="$END ROU "
"RTN","A1AEM1",43,0)
 S GLOBAL="^A1AE(11005.1,"_DA_",2,"
"RTN","A1AEM1",44,0)
 ;
"RTN","A1AEM1",45,0)
 W "Checking the input .." ;find $txt in case message was edited
"RTN","A1AEM1",46,0)
 S AZ=0
"RTN","A1AEM1",47,0)
 F  S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)),$E(^(0),1,15)="$TXT Created by" S RTXT(1)=AZ Q
"RTN","A1AEM1",48,0)
 ;
"RTN","A1AEM1",49,0)
 I '$D(RTXT(1)) DO  D KIL QUIT
"RTN","A1AEM1",50,0)
 .W !?5,*7,"Input message missing standard text '",RTXT,"'"
"RTN","A1AEM1",51,0)
 .W !,"           Message NOT copied!!"
"RTN","A1AEM1",52,0)
 ;
"RTN","A1AEM1",53,0)
 ;kids here
"RTN","A1AEM1",54,0)
 I "XK"[$E($P(^XMB(3.9,AXMZ,0),"^",7)_0) DO  QUIT
"RTN","A1AEM1",55,0)
 . S $P(^A1AE(11005.1,DA,0),"^",11)=$P(^XMB(3.9,AXMZ,0),"^",7) ;Copy Message type
"RTN","A1AEM1",56,0)
 . ;
"RTN","A1AEM1",57,0)
 . D TRASH
"RTN","A1AEM1",58,0)
 . W !?3,"Merge KIDS message into patch message text",!
"RTN","A1AEM1",59,0)
 . MERGE ^A1AE(11005.1,DA,2)=^XMB(3.9,AXMZ,2)
"RTN","A1AEM1",60,0)
 . ;get rid of .00n nodes
"RTN","A1AEM1",61,0)
 . S AZ=0 F  S AZ=$O(^A1AE(11005.1,DA,2,AZ)) Q:AZ'<1  DO
"RTN","A1AEM1",62,0)
 . . K ^A1AE(11005.1,DA,2,AZ)
"RTN","A1AEM1",63,0)
 . ;
"RTN","A1AEM1",64,0)
 . S A1AEKIDS=1
"RTN","A1AEM1",65,0)
 . S $P(^A1AE(11005.1,DA,2,0),"^",5)=DT
"RTN","A1AEM1",66,0)
 . S $P(^A1AE(11005.1,DA,2,0),"^",2)=""
"RTN","A1AEM1",67,0)
 . S $P(^A1AE(11005.1,DA,0),"^",2,3)=AXMZ_"^"_DT
"RTN","A1AEM1",68,0)
 . D RTNBLD(DA) ;Build RTN multiple
"RTN","A1AEM1",69,0)
 . ;If we load from a message get rid of the HFS data.
"RTN","A1AEM1",70,0)
 . I $D(^A1AE(11005.5,DA,0)) N DIK S DIK="^A1AE(11005.5," D ^DIK
"RTN","A1AEM1",71,0)
 . Q
"RTN","A1AEM1",72,0)
 ;
"RTN","A1AEM1",73,0)
 ;packman here
"RTN","A1AEM1",74,0)
 E  DO  I '$D(RSTART) QUIT
"RTN","A1AEM1",75,0)
 .S $P(^A1AE(11005.1,DA,0),"^",11)="P" ;message type
"RTN","A1AEM1",76,0)
 .F AZ=RTXT(1):0 S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)),$E(^(0),1,5)="$ROU " S:$E(^(0),1,5)=RSTART RSTART(AZ)=^(0) I $E(^(0),1,5)'=RSTART S RSTART(0)=^(0)
"RTN","A1AEM1",77,0)
 .I $D(RSTART)<10 W *7,"Input message missing '",RSTART,"..'" D KIL Q
"RTN","A1AEM1",78,0)
 .D TRASH
"RTN","A1AEM1",79,0)
 .S AN=1,@(GLOBAL_AN_",0)")=^XMB(3.9,AXMZ,2,RTXT(1),0)
"RTN","A1AEM1",80,0)
 .S AN=2,@(GLOBAL_AN_",0)")=""
"RTN","A1AEM1",81,0)
 .S AN=3,@(GLOBAL_AN_",0)")="$END TXT"
"RTN","A1AEM1",82,0)
 .;$o(rstart(0))=1st az  of $rou line in XMB  , A1AE.1 can get offset
"RTN","A1AEM1",83,0)
 .F AZ=$O(RSTART(0))-1:0 S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)) S AN=AN+1,@(GLOBAL_AN_",0)")=^(0)
"RTN","A1AEM1",84,0)
 .;set zero node
"RTN","A1AEM1",85,0)
 .I AN>1 S GLOBAL0=GLOBAL_"0)" S $P(@(GLOBAL0),"^",3,5)=AN_"^"_AN_"^"_DT S $P(^A1AE(11005.1,DA,0),U,2,3)=AXMZ_"^"_DT
"RTN","A1AEM1",86,0)
 .E  W !,?5,*7,"Message not copied "
"RTN","A1AEM1",87,0)
 S MARK=1
"RTN","A1AEM1",88,0)
MARK ;this is entered from above and at mark for release of verified
"RTN","A1AEM1",89,0)
 S AN=1,AP=$P(A1AEPD,"*",3),NV="<<= NOT VERIFIED >"
"RTN","A1AEM1",90,0)
 S RSTART="$ROU "
"RTN","A1AEM1",91,0)
 ;
"RTN","A1AEM1",92,0)
CHANG ;
"RTN","A1AEM1",93,0)
 I "KX"[$E($P($G(^A1AE(11005.1,DA,0)),"^",11)_0) K RVER,FL Q
"RTN","A1AEM1",94,0)
 I MARK W !?10,"Adding  <<= NOT VERIFIED > to the first line"
"RTN","A1AEM1",95,0)
 E  W !?10,"Removing  <<= NOT VERIFIED > from the first line"
"RTN","A1AEM1",96,0)
 ;
"RTN","A1AEM1",97,0)
 F AZ=0:0 S AZ=$O(^A1AE(11005.1,DA,2,AZ)) Q:'AZ  I $D(^(AZ,0)),$E(^(0),1,5)=RSTART S:$D(^A1AE(11005.1,DA,2,AZ+1,0)) FL=^(0) D FL S:$D(FL) ^(0)=FL I MARK S:$D(^A1AE(11005.1,DA,2,AZ+2,0)) RVER=^(0) D CHECK I $D(RVER) S ^(0)=RVER D WR S AZ=AZ+3
"RTN","A1AEM1",98,0)
 ;
"RTN","A1AEM1",99,0)
KIL K RVER,AZ,PC,NV,AP,MARK,RNSPACE,LCASE,Y,Y1,RSTART
"RTN","A1AEM1",100,0)
 Q
"RTN","A1AEM1",101,0)
 ;
"RTN","A1AEM1",102,0)
WR W !,$J("line ("_(AZ+2)_")",20),"  ",RVER
"RTN","A1AEM1",103,0)
 Q
"RTN","A1AEM1",104,0)
 ;
"RTN","A1AEM1",105,0)
CHECK ;fix for RVER ok check+1
"RTN","A1AEM1",106,0)
 I $E($G(FL),1,8)="XPDPINIT" K RVER,FL Q
"RTN","A1AEM1",107,0)
 S ZZN=$S($D(A1AEPD):$P(A1AEPD,"*",3),1:0) I ZZN,$S($F(RVER,"**"_ZZN_"**"):1,$F(RVER,","_ZZN_"**"):1,$F(RVER,","_ZZN_","):1,$F(RVER,"**"_ZZN_","):1,1:0) K RVER Q
"RTN","A1AEM1",108,0)
 I $L(RVER)>240 W !,*7,"Version line too long to modify " H 2 K RVER Q
"RTN","A1AEM1",109,0)
 ; ;v or ;;v
"RTN","A1AEM1",110,0)
 ;S PC=4 I RVER?1" ;;".E S PC=5
"RTN","A1AEM1",111,0)
 S PC=4 I $P(RVER," ",2)?1";;".E S PC=5
"RTN","A1AEM1",112,0)
 I RVER'["**" S $P(RVER,";",PC)="**"_AP_"**" D LST Q
"RTN","A1AEM1",113,0)
 E  S $P(RVER,"**",2)=$P(RVER,"**",2)_","_AP D LST Q
"RTN","A1AEM1",114,0)
 W !,"Unable to mark version line '",RVER,"'" K RVER
"RTN","A1AEM1",115,0)
 Q
"RTN","A1AEM1",116,0)
 ;
"RTN","A1AEM1",117,0)
LST I '$F(RVER,";",$F(RVER,"**")) S RVER=RVER_";" Q
"RTN","A1AEM1",118,0)
 Q
"RTN","A1AEM1",119,0)
 ;
"RTN","A1AEM1",120,0)
LCASE ; cvrts 2 + % if there
"RTN","A1AEM1",121,0)
 S Y=$P(LCASE,"$ROU ",2),Y=$E(Y,1,$S($E(Y)'="%":2,1:3)),Y1=Y
"RTN","A1AEM1",122,0)
 S Y=$TR(Y,"ABCDEFGHIJKLMNOPQRSTUVWXYZ%","abcdefghijklmnopqrstuvwxyz%")
"RTN","A1AEM1",123,0)
 S LCASE="$ROU "_Y_$P(LCASE,Y1,2) K:'$L(LCASE) LCASE Q
"RTN","A1AEM1",124,0)
 Q
"RTN","A1AEM1",125,0)
FL ;1st line
"RTN","A1AEM1",126,0)
 I 'MARK S FL=$P(FL,NV) Q
"RTN","A1AEM1",127,0)
 I $E(FL,1,8)="XPDPINIT" W !?10,"Skipping XPDPINIT" Q
"RTN","A1AEM1",128,0)
 I $L(FL)>240 W !,*7,"First line too long to add '<<= NOT VERIFIED >'" H 2 K FL Q
"RTN","A1AEM1",129,0)
 I FL[NV Q
"RTN","A1AEM1",130,0)
 S FL=FL_NV Q
"RTN","A1AEM1",131,0)
 ;
"RTN","A1AEM1",132,0)
TRASH ;Remove old msg from queue.
"RTN","A1AEM1",133,0)
 I $D(^A1AE(11005.1,DA,0)),$P(^(0),"^",2),$P(^(0),"^",2)'=AXMZ DO
"RTN","A1AEM1",134,0)
 .N AXMZ S AXMZ=$P(^(0),"^",2) D TRASH^A1AEM
"RTN","A1AEM1",135,0)
 .W !?3,"Removing old message from que"
"RTN","A1AEM1",136,0)
 ;
"RTN","A1AEM1",137,0)
 W "   Deleting old text .."
"RTN","A1AEM1",138,0)
 ;S AZ=0 F  S AZ=$O(@(GLOBAL_AZ_")")) Q:'AZ  K ^(AZ)
"RTN","A1AEM1",139,0)
 K ^A1AE(11005.1,DA,2) Q
"RTN","A1AEM1",140,0)
 ;
"RTN","A1AEM1",141,0)
RTNBLD(A1AEDA) ;Build Routine multiple
"RTN","A1AEM1",142,0)
 N FDA,IEN,A1,A2,A3,A4,DIK,DA
"RTN","A1AEM1",143,0)
 ;Load
"RTN","A1AEM1",144,0)
 S A1=1,LINE2=""
"RTN","A1AEM1",145,0)
 F  S A1=$O(^A1AE(11005.1,A1AEDA,2,A1)) Q:'A1  I $E(^(A1,0),1,5)="""RTN""" Q
"RTN","A1AEM1",146,0)
 Q:'A1  ;At start of routines.
"RTN","A1AEM1",147,0)
 K ^TMP("A1AE",$J)
"RTN","A1AEM1",148,0)
 S A1=$O(^A1AE(11005.1,A1AEDA,2,A1))
"RTN","A1AEM1",149,0)
 F  S A1=$O(^A1AE(11005.1,A1AEDA,2,A1)) Q:'A1  D
"RTN","A1AEM1",150,0)
 . S X=^A1AE(11005.1,A1AEDA,2,A1,0) I $E(X,2,4)'="RTN" S A1=" " Q
"RTN","A1AEM1",151,0)
 . S A1=$O(^A1AE(11005.1,A1AEDA,2,A1)),Y=^(A1,0)
"RTN","A1AEM1",152,0)
 . S @("^TMP(""A1AE"",$J,"_X)=Y ;Build global
"RTN","A1AEM1",153,0)
 . Q
"RTN","A1AEM1",154,0)
 S A1="",A3=0
"RTN","A1AEM1",155,0)
 F  S A1=$O(^TMP("A1AE",$J,"RTN",A1)) Q:A1=""  S A2=^(A1) D
"RTN","A1AEM1",156,0)
 . S A4=$G(^TMP("A1AE",$J,"RTN",A1,2,0)) S:'$L(LINE2) LINE2=A4 S A4=$P(A4,";",5)
"RTN","A1AEM1",157,0)
 . ;.01 RTN name, 3 RSUM, 4 Patch List, 5 Old Rsum - set at Release
"RTN","A1AEM1",158,0)
 . S A3=A3+1,IEN="?+"_A3_","_A1AEDA_",",FDA(11005.03,IEN,.01)=A1
"RTN","A1AEM1",159,0)
 . S FDA(11005.03,IEN,3)=$S(+A2:"Delete",1:$P(A2,"^",3)) ;Only set if sending routine
"RTN","A1AEM1",160,0)
 . S FDA(11005.03,IEN,4)=A4
"RTN","A1AEM1",161,0)
 . I A3>99 D UPDATE^DIE("","FDA") S A3=0 K FDA
"RTN","A1AEM1",162,0)
 . Q
"RTN","A1AEM1",163,0)
 I A3 D UPDATE^DIE("","FDA")
"RTN","A1AEM1",164,0)
 I $L(LINE2) S ^A1AE(11005,A1AEDA,"P2")=$P(LINE2,";",1,4)_";**[Patch List]**;"_$P(LINE2,";",6,99)
"RTN","A1AEM1",165,0)
 ;Remove Unused ROUTINE's from multiple
"RTN","A1AEM1",166,0)
 D RTNREM
"RTN","A1AEM1",167,0)
 K ^TMP("A1AE",$J)
"RTN","A1AEM1",168,0)
 Q
"RTN","A1AEM1",169,0)
 ;
"RTN","A1AEM1",170,0)
RTNREM ;Remove routines from the Routine multipule
"RTN","A1AEM1",171,0)
 ;Will not remove a routine name in ^TMP("A1AE",$J,"RTN",name)
"RTN","A1AEM1",172,0)
 N DIK,DA
"RTN","A1AEM1",173,0)
 S DIK="^A1AE(11005,"_A1AEDA_",""P"",",DA(1)=A1AEDA,DA=0
"RTN","A1AEM1",174,0)
 F  S DA=$O(^A1AE(11005,DA(1),"P",DA)) Q:'DA  S A1=$P($G(^(DA,0)),U) I '$D(^TMP("A1AE",$J,"RTN",A1)) D ^DIK
"RTN","A1AEM1",175,0)
 Q
"RTN","A1AEM1",176,0)
HFS ;
"RTN","A1AEM1",177,0)
 N X,MZ
"RTN","A1AEM1",178,0)
 S X=$G(^A1AE(11005.5,DA,0)),MZ=$G(^XMB(3.9,+$P(X,U,2),0))
"RTN","A1AEM1",179,0)
 Q:'$L(X)
"RTN","A1AEM1",180,0)
 I MZ="" S $P(MZ,U,2)=$P(X,U,5),$P(MZ,U,3)=$$FMTE^XLFDT($P(X,U,3))
"RTN","A1AEM1",181,0)
 W !,"Want to copy HFS cache,",!,"  From: ",$P(MZ,U,2),!,"    On: ",$P(MZ,U,3)
"RTN","A1AEM1",182,0)
 S A1AERD("A")="Do you want to copy Routine Names and Checksums from the HFS cache file. "
"RTN","A1AEM1",183,0)
 S A1AERD(1)="Yes^Copy Routine Names and Checksums."
"RTN","A1AEM1",184,0)
 S A1AERD(2)="No^Do not copy Routine data."
"RTN","A1AEM1",185,0)
 S A1AERD(0)="S"
"RTN","A1AEM1",186,0)
 S A1AERD("B")=$S($D(^A1AE(11005.1,DA,0)):2,1:1) D SET^A1AERD
"RTN","A1AEM1",187,0)
 I X["Y" D HFS2(DA)
"RTN","A1AEM1",188,0)
 Q
"RTN","A1AEM1",189,0)
 ;
"RTN","A1AEM1",190,0)
HFS2(A1AEDA) ;Move Routine Info from HFS file to Routine sub-file.
"RTN","A1AEM1",191,0)
 N A1,A2,A3,FDA,DA,IEN,DIK
"RTN","A1AEM1",192,0)
 S A1AEKIDS=1 ;Can skip Routine multiple
"RTN","A1AEM1",193,0)
 ;Remove any Message Text
"RTN","A1AEM1",194,0)
 ;S DA=A1AEDA,DIK="^A1AE(11005.1," D ^DIK
"RTN","A1AEM1",195,0)
 K ^A1AE(11005.1,A1AEDA,2)
"RTN","A1AEM1",196,0)
 ;Clear out any current Routine data
"RTN","A1AEM1",197,0)
 K ^TMP("A1AE",$J)
"RTN","A1AEM1",198,0)
 D RTNREM
"RTN","A1AEM1",199,0)
 ;.01 RTN name, 3 RSUM, 4 Patch List
"RTN","A1AEM1",200,0)
 ;^A1AE(11005.5,DA(1),1,DA,0)= RTN name^Send^^Checksum^Patch List
"RTN","A1AEM1",201,0)
 ;MOVE
"RTN","A1AEM1",202,0)
 S A1=0,A3=0
"RTN","A1AEM1",203,0)
 F  S A1=$O(^A1AE(11005.5,A1AEDA,1,A1)) Q:'A1  S A2=$G(^(A1,0)) D
"RTN","A1AEM1",204,0)
 . S A3=A3+1,IEN="?+"_A1_","_A1AEDA_","
"RTN","A1AEM1",205,0)
 . S FDA(11005.03,IEN,.01)=$P(A2,U),FDA(11005.03,IEN,3)=$S($P(A1,U,2):"Delete",1:$P(A2,U,4))
"RTN","A1AEM1",206,0)
 . S FDA(11005.03,IEN,4)=$P(A2,U,5)
"RTN","A1AEM1",207,0)
 . I A3>99 D UPDATE^DIE("","FDA") S A3=0 K FDA
"RTN","A1AEM1",208,0)
 . Q
"RTN","A1AEM1",209,0)
 I A3 D UPDATE^DIE("","FDA") K FDA
"RTN","A1AEM1",210,0)
 D EN^DDIOL("Routine Name's and Checksums moved.")
"RTN","A1AEM1",211,0)
 Q
"RTN","A1AEM2")
0^12^B10308899
"RTN","A1AEM2",1,0)
A1AEM2 ;isa/pke-forward a patch message ;1990-04-15
"RTN","A1AEM2",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEM2",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEM2",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEM2",5,0)
 ;
"RTN","A1AEM2",6,0)
 ;
"RTN","A1AEM2",7,0)
 ;primary change history
"RTN","A1AEM2",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEM2",9,0)
 ;1992-12-02: version 2.2 released
"RTN","A1AEM2",10,0)
 ;
"RTN","A1AEM2",11,0)
 ;
"RTN","A1AEM2",12,0)
 ;change FCOM,FVER dic 11005.1 ,scrn lookup
"RTN","A1AEM2",13,0)
RCHK ;input transform on routine name x
"RTN","A1AEM2",14,0)
 Q:'$D(A1AEPD)  S:'$D(TAB) TAB=42
"RTN","A1AEM2",15,0)
 N VERS,APD,BEEP,AZ
"RTN","A1AEM2",16,0)
 S APD=A1AEPD,VERS=$P(APD,"*",2) I VERS="DBA" S VERS=999,$P(APD,"*",2)=999
"RTN","A1AEM2",17,0)
 S BEEP=" routine has previous Patches: "_$C(7)
"RTN","A1AEM2",18,0)
 F AZ=0:0 S AZ=$O(^A1AE(11005,"R",X,AZ)) Q:'AZ  I $D(^A1AE(11005,AZ,0)),$P($P(^(0),"^"),"*",2)[VERS,$P(^(0),"^")'=APD DO
"RTN","A1AEM2",19,0)
WR .I $D(BEEP) W !!,"'",X,"'",BEEP,?TAB K BEEP
"RTN","A1AEM2",20,0)
 .I $X>TAB W ", "
"RTN","A1AEM2",21,0)
 .W "(",$TR($P(^(0),"^",8),"ucver","ucver"),")",$P(^(0),"^")
"RTN","A1AEM2",22,0)
 .I $X>65 W !?TAB-1
"RTN","A1AEM2",23,0)
 I '$D(BEEP) W !
"RTN","A1AEM2",24,0)
 Q
"RTN","A1AEM2",25,0)
FCOM ;
"RTN","A1AEM2",26,0)
 S PXMZ=4 D DICC,PAT
"RTN","A1AEM2",27,0)
 G Q
"RTN","A1AEM2",28,0)
FVER ;
"RTN","A1AEM2",29,0)
 S PXMZ=6 D DICV,PAT
"RTN","A1AEM2",30,0)
 G Q
"RTN","A1AEM2",31,0)
Q K PXMZ,XMZ,A1AEIFN,DIC,A1AEPD,Y D KILL^XM
"RTN","A1AEM2",32,0)
 Q
"RTN","A1AEM2",33,0)
 ;duz,xmz,xmy(), xmdun,xmduz ;;;Change lookup to 11005.1 dinum
"RTN","A1AEM2",34,0)
PAT ;
"RTN","A1AEM2",35,0)
 S DIC("A")="Select PATCH to forward: "
"RTN","A1AEM2",36,0)
 S DIC="^A1AE(11005.1,",DIC(0)="AEMQ"
"RTN","A1AEM2",37,0)
 ;S DIC("S")="I $P(^A1AE(11005,+Y,0),U,8)'=""e"""
"RTN","A1AEM2",38,0)
 S DIC("S")="I $P(^A1AE(11005,+Y,0),U,8)=$S(PXMZ=4:""c"",1:""v"")"
"RTN","A1AEM2",39,0)
 D ^DIC K DIC Q:Y<0
"RTN","A1AEM2",40,0)
 S A1AEIFN=+Y,A1AEPD=$P(^A1AE(11005,+Y,0),U,1)
"RTN","A1AEM2",41,0)
 I $P(A1AEPD,"*",2)=999 S $P(A1AEPD,"*",2)="DBA"
"RTN","A1AEM2",42,0)
 S XMZ=$P($G(^A1AE(11005.1,A1AEIFN,0)),U,PXMZ)
"RTN","A1AEM2",43,0)
 I 'XMZ W !?8,"No message available" G PAT
"RTN","A1AEM2",44,0)
 I '$D(^XMB(3.9,XMZ,0)) D  G:'$D(XMZ) PAT
"RTN","A1AEM2",45,0)
 . N A1AERCR8,SAVX,X,A1AENEW,SEQ,D0,DA
"RTN","A1AEM2",46,0)
 . W !,$C(7),"The message no longer exists."
"RTN","A1AEM2",47,0)
 . K XMZ
"RTN","A1AEM2",48,0)
 . I $P(^A1AE(11005,A1AEIFN,0),U,8)'="v" D  Q
"RTN","A1AEM2",49,0)
 . . W !,"That patch is not released."
"RTN","A1AEM2",50,0)
 . . W !,"We only create new messages for released patches."
"RTN","A1AEM2",51,0)
 . W !,"That's OK - we'll create a new one.  This won't take long."
"RTN","A1AEM2",52,0)
 . S A1AERCR8=1 ; Indicates that we are recreating a message.
"RTN","A1AEM2",53,0)
 . S DA=A1AEIFN,(A1AENEW,SAVX)="v"
"RTN","A1AEM2",54,0)
 . D EN^A1AEMAL Q:'$D(XMZ)
"RTN","A1AEM2",55,0)
 . D MES^A1AEMAL
"RTN","A1AEM2",56,0)
 ;Ask Rcpts / XMDF means programmer call MailMan ignores KSP limits
"RTN","A1AEM2",57,0)
 D XM
"RTN","A1AEM2",58,0)
 N XMDF
"RTN","A1AEM2",59,0)
 D DEST^XMA21 Q:$D(XMOUT)  ; Don't forward to closed domains
"RTN","A1AEM2",60,0)
 D ENT1^XMD W !?8,"Message ",XMZ," has been forwarded."
"RTN","A1AEM2",61,0)
 Q
"RTN","A1AEM2",62,0)
XM ;
"RTN","A1AEM2",63,0)
 I '$D(XMDUZ) S XMDUZ=DUZ
"RTN","A1AEM2",64,0)
 S XMDUN=$P(^VA(200,XMDUZ,0),U)
"RTN","A1AEM2",65,0)
 Q
"RTN","A1AEM2",66,0)
DICC ; Completed/Unverified ;;;change screen to 11005.1
"RTN","A1AEM2",67,0)
 ;S DIC("S")="I $P(^(0),U,8)=""c"",$S($D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0)):1,'$D(^A1AE(11007,+$P(^A1AE(11005,+Y,0),U,2),""PB"",DUZ,0)):0,$P(^(0),U,2)=""V"":1,1:0)"
"RTN","A1AEM2",68,0)
 S DIC("S")="I $P(^(0),U,PXMZ),$S($D(^A1AE(11007,+$P(^A1AE(11005,+Y,0),U,2),""PH"",DUZ,0)):1,'$D(^A1AE(11007,+$P(^A1AE(11005,+Y,0),U,2),""PB"",DUZ,0)):0,$P(^(0),U,2)=""V"":1,1:0)"
"RTN","A1AEM2",69,0)
 Q
"RTN","A1AEM2",70,0)
DICV ; Verified Patch ;;; change screen to 11005.1
"RTN","A1AEM2",71,0)
 ;S DIC("S")="I ($P(^(0),U,8)=""v"")&($S('$D(^A1AE(11007,+$P(^(0),U,2),0)):0,$P(^(0),U,2)=""Y"":1,$P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+$P(^A1AE(11005,+Y,0),U,2)))):1,1:0))"
"RTN","A1AEM2",72,0)
 S DIC("S")="I $P(^(0),U,PXMZ),$S('$D(^A1AE(11007,+$P(^A1AE(11005,+Y,0),U,2),0)):0,$P(^(0),U,2)=""Y"":1,$P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+$P(^A1AE(11005,+Y,0),U,2)))):1,1:0)"
"RTN","A1AEM2",73,0)
 Q
"RTN","A1AEM2K")
0^57^B55230631
"RTN","A1AEM2K",1,0)
A1AEM2K ;ven/smh-save patches to hfs files ; 6/12/15 7:13pm
"RTN","A1AEM2K",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEM2K",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEM2K",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEM2K",5,0)
 ;
"RTN","A1AEM2K",6,0)
 ;
"RTN","A1AEM2K",7,0)
 ;primary change history
"RTN","A1AEM2K",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEM2K",9,0)
 ; Original by Dr. Cameron Schleheuber
"RTN","A1AEM2K",10,0)
 ;
"RTN","A1AEM2K",11,0)
 ; Run by Option : A1AE EXPORT PATCH TO HFS
"RTN","A1AEM2K",12,0)
 ;
"RTN","A1AEM2K",13,0)
 ; CHANGE ven/lgc 2015 05 28
"RTN","A1AEM2K",14,0)
 ;   ^XTMP set when routine called at top is for unit testing
"RTN","A1AEM2K",15,0)
 S ^XTMP($J,"A1AEM2K FROM TOP")=$$HTFM^XLFDT($H,5)_"^"_$$HTFM^XLFDT($H,5)
"RTN","A1AEM2K",16,0)
 Q
"RTN","A1AEM2K",17,0)
 ;
"RTN","A1AEM2K",18,0)
 ; CHANGE ven/lgc 2015 05 28
"RTN","A1AEM2K",19,0)
 ;   Added EN linetag to allow a silent call
"RTN","A1AEM2K",20,0)
 ;   Enter with:
"RTN","A1AEM2K",21,0)
 ;     PATCHES   =   Number of patches to export
"RTN","A1AEM2K",22,0)
 ;     PATCHES() =   Array of patches [e.g. PATCHES(123456)=""
"RTN","A1AEM2K",23,0)
 ;     ROOT      =   Where to write out files [e.g. ROOT="/tmp/"
"RTN","A1AEM2K",24,0)
 ;     A1AEOV    =   Toggle to use referenced variables
"RTN","A1AEM2K",25,0)
 ;                   1=YES
"RTN","A1AEM2K",26,0)
EN(PATCHES,ROOT,A1AEOV) ;
"RTN","A1AEM2K",27,0)
 ; CHANGE ven/lgc 2015 05 29
"RTN","A1AEM2K",28,0)
 ;   Changed A1AEM2K to allow entering with PATCHES array
"RTN","A1AEM2K",29,0)
 ;   and ROOT set. [e.g. PATCHES=1,PATCHES(123456)="",ROOT="/tmp/"
"RTN","A1AEM2K",30,0)
 ;
"RTN","A1AEM2K",31,0)
 ;
"RTN","A1AEM2K",32,0)
 ; Set UT to show if we are calling this from inside
"RTN","A1AEM2K",33,0)
 ;  a UNIT TEST
"RTN","A1AEM2K",34,0)
 N UT S UT=$$ISUTEST^%ut
"RTN","A1AEM2K",35,0)
 ;
"RTN","A1AEM2K",36,0)
 ; Get User
"RTN","A1AEM2K",37,0)
 I '$D(DUZ) D ^XUP
"RTN","A1AEM2K",38,0)
 ;
"RTN","A1AEM2K",39,0)
 I '$G(A1AEOV) N PATCHES S PATCHES=0
"RTN","A1AEM2K",40,0)
 ;
"RTN","A1AEM2K",41,0)
 ; TODO: Move the DIC("S") in a central location in A1AEPH6
"RTN","A1AEM2K",42,0)
 ; Ask the user to the pats to export and stores in LV PATCHES
"RTN","A1AEM2K",43,0)
 D:'$D(A1AEOV) EN^DDIOL("Select the patches to export.")
"RTN","A1AEM2K",44,0)
 D:'$D(A1AEOV) EN^DDIOL("PLEASE NOTE: Multiple patches will be concatenated together into a Multibuild")
"RTN","A1AEM2K",45,0)
 ;
"RTN","A1AEM2K",46,0)
 N Y ; DIC Output
"RTN","A1AEM2K",47,0)
 F  D  Q:Y<0
"RTN","A1AEM2K",48,0)
 . N DIC
"RTN","A1AEM2K",49,0)
 . ; Verified      !ent.in err!retired    &
"RTN","A1AEM2K",50,0)
 . ; ( not no 11007 record for package ! user selection permitted !
"RTN","A1AEM2K",51,0)
 . ;   ("test site only"& user is [self]"selected" for package )
"RTN","A1AEM2K",52,0)
 . S DIC("S")="I ($P(^(0),U,8)=""v""!($P(^(0),U,8)=""e"")!($P(^(0),U,8)=""r""))&($S('$D(^A1AE(11007,+$P(^(0),U,2),0)):0,$P(^(0),U,2)=""Y"":1,$P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+$P(^A1AE(11005,+Y,0),U,2)))):1,1:0))"
"RTN","A1AEM2K",53,0)
 . S DIC("S")=DIC("S")_"!$D(^A1AE(11007,""AD"",DUZ,+$P(^A1AE(11005,+Y,0),U,2)))"
"RTN","A1AEM2K",54,0)
 . S DIC="^A1AE(11005,",DIC(0)="AEMQZ",DIC("A")="Select Patch/Package: "
"RTN","A1AEM2K",55,0)
 . I '$D(A1AEOV) D ^DIC Q:(Y<0)
"RTN","A1AEM2K",56,0)
 . S:'$D(A1AEOV) PATCHES(+Y)="",PATCHES=PATCHES+1
"RTN","A1AEM2K",57,0)
 . I $D(A1AEOV) S Y=-1  ; Unit testing
"RTN","A1AEM2K",58,0)
 . Q
"RTN","A1AEM2K",59,0)
 ;
"RTN","A1AEM2K",60,0)
 I 'PATCHES QUIT  ; Done. No patches selected.
"RTN","A1AEM2K",61,0)
 ;
"RTN","A1AEM2K",62,0)
 ;
"RTN","A1AEM2K",63,0)
 ; Ask where to export these patches
"RTN","A1AEM2K",64,0)
 N DIR,Y
"RTN","A1AEM2K",65,0)
 I '$D(A1AEOV) N ROOT ; Where we export these
"RTN","A1AEM2K",66,0)
 D:'$D(A1AEOV) EN^DDIOL("Enter where I should export these patches.")
"RTN","A1AEM2K",67,0)
 S DIR("B")=$$DEFDIR^%ZISH()
"RTN","A1AEM2K",68,0)
 S DIR(0)="F^2:255",DIR("A")="Full path, up to but not including patch names"
"RTN","A1AEM2K",69,0)
 I '$D(A1AEOV) D ^DIR QUIT:Y="^"  S ROOT=Y
"RTN","A1AEM2K",70,0)
 I '$D(ROOT) S ROOT=DIR("B")
"RTN","A1AEM2K",71,0)
 ;
"RTN","A1AEM2K",72,0)
 ; CHANGE ven/lgc 2015 05 28
"RTN","A1AEM2K",73,0)
 ;   Added to allow a silent call
"RTN","A1AEM2K",74,0)
 ;   Enter with:
"RTN","A1AEM2K",75,0)
 ;     PATCHES   =   Number of patches to export
"RTN","A1AEM2K",76,0)
 ;     PATCHES() =   Array of patches [e.g. PATCHES(123456)=""
"RTN","A1AEM2K",77,0)
 ;     ROOT      =   Where to write out files [e.g. ROOT="/tmp/"
"RTN","A1AEM2K",78,0)
 ;
"RTN","A1AEM2K",79,0)
 ; Entire stanza below to get Filename. Abstractable.
"RTN","A1AEM2K",80,0)
 N DIR
"RTN","A1AEM2K",81,0)
 N FN ; File name
"RTN","A1AEM2K",82,0)
 I PATCHES>1 D  QUIT:Y="^"  S FN=Y
"RTN","A1AEM2K",83,0)
 . D EN^DDIOL("Because you are exporting more than one patch, you have to pick a name for your file. Don't include the extension as we will append .TXT or .KID to the name you give us.")
"RTN","A1AEM2K",84,0)
 . S DIR(0)="F^2:255",DIR("A")="File name for Multibuild" D ^DIR
"RTN","A1AEM2K",85,0)
 E  D
"RTN","A1AEM2K",86,0)
 . N PATCH S PATCH=$O(PATCHES(""))
"RTN","A1AEM2K",87,0)
 . N DESIGNATION S DESIGNATION=$$GET1^DIQ(11005,PATCH,.01) ; Designation
"RTN","A1AEM2K",88,0)
 . N PKABBR S PKABBR=$P(DESIGNATION,"*")                   ; Get package abbreviation
"RTN","A1AEM2K",89,0)
 . Q:'$O(^DIC(9.4,"C",PKABBR,""))                          ; Quit if it isn't a valid package
"RTN","A1AEM2K",90,0)
 . N VER S VER=$P(DESIGNATION,"*",2)                       ; Version number
"RTN","A1AEM2K",91,0)
 . N NUM S NUM=$P(DESIGNATION,"*",3)                       ; Patch Number
"RTN","A1AEM2K",92,0)
 . N SEQ S SEQ=$$GET1^DIQ(11005,PATCH,"SEQUENTIAL RELEASE NUMBER")
"RTN","A1AEM2K",93,0)
 . I SEQ="",NUM'=0 S SEQ="NOSEQ"                           ; If not package release and no SEQ, say so.
"RTN","A1AEM2K",94,0)
 . S FN=PKABBR_"-"_$TR(VER,".","P")_"_SEQ-"_SEQ_"_PAT-"_NUM
"RTN","A1AEM2K",95,0)
 ;
"RTN","A1AEM2K",96,0)
 ; Stanza to open File.
"RTN","A1AEM2K",97,0)
 N POP
"RTN","A1AEM2K",98,0)
 D EN^DDIOL("Writing: "_$$DEFDIR^%ZISH(ROOT)_FN_".TXT")
"RTN","A1AEM2K",99,0)
 D OPEN^%ZISH("TXTFIL",ROOT,FN_".TXT","W")
"RTN","A1AEM2K",100,0)
 I POP D EN^DDIOL("Can't open file "_FN_" in path "_ROOT) QUIT
"RTN","A1AEM2K",101,0)
 U IO
"RTN","A1AEM2K",102,0)
 ;
"RTN","A1AEM2K",103,0)
 ; Stanza to write text file. Reuses code in A1AEPH6
"RTN","A1AEM2K",104,0)
 N PATCH F PATCH=0:0 S PATCH=$O(PATCHES(PATCH)) Q:'PATCH  D
"RTN","A1AEM2K",105,0)
 . N A1AEIFN,D0 S (A1AEIFN,D0)=PATCH
"RTN","A1AEM2K",106,0)
 . N A1AEPD S A1AEPD=$$GET1^DIQ(11005,PATCH,.01)
"RTN","A1AEM2K",107,0)
 . N A1AEVPR S A1AEVPR=""
"RTN","A1AEM2K",108,0)
 .; Temporary change lgc 20150530
"RTN","A1AEM2K",109,0)
 .; N A1AEHD S A1AEHD="DHCP Patch Export"
"RTN","A1AEM2K",110,0)
 . N A1AEHD S A1AEHD=$G(^A1AE(11005.1,A1AEIFN,2,1,0))
"RTN","A1AEM2K",111,0)
 . I ($E(A1AEHD,1,4)'="$TXT") S A1AEHD="DHCP Patch Export"
"RTN","A1AEM2K",112,0)
 .; end temp change
"RTN","A1AEM2K",113,0)
 . S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEM2K",114,0)
 . I $P(^A1AE(11005,A1AEIFN,0),"^",8)="e"!($P(^(0),"^",8)="r") D
"RTN","A1AEM2K",115,0)
 . . N DHD S DHD="@"
"RTN","A1AEM2K",116,0)
 . . N L S L=0
"RTN","A1AEM2K",117,0)
 . . N DIC S DIC="^A1AE(11005,"
"RTN","A1AEM2K",118,0)
 . . D SETFLDS^A1AEPH6
"RTN","A1AEM2K",119,0)
 . . N BY,FR,TO S BY="",(FR,TO)=A1AEIFN
"RTN","A1AEM2K",120,0)
 . . D EN1^DIP
"RTN","A1AEM2K",121,0)
 . I $P(^A1AE(11005,A1AEIFN,0),"^",8)="v"!$D(^A1AE(11007,"AD",DUZ,+$P(^A1AE(11005,+A1AEIFN,0),U,2))) D
"RTN","A1AEM2K",122,0)
 . . N A1AEPGE S A1AEPGE=0
"RTN","A1AEM2K",123,0)
 . . ; S ^UTILITY($J,1)="D HD^A1AEPH2" ; Don't print headers at the end of IOSL.
"RTN","A1AEM2K",124,0)
 . . N DIWF S DIWF="B4X"
"RTN","A1AEM2K",125,0)
 . . N DN,DXS
"RTN","A1AEM2K",126,0)
 . . K ^UTILITY($J,"W")
"RTN","A1AEM2K",127,0)
 . . D HD^A1AEPH2,^A1AEP
"RTN","A1AEM2K",128,0)
 D CLOSE^%ZISH()
"RTN","A1AEM2K",129,0)
 D Q^A1AEPH6 ; Kill variables, and Reset to Home Device
"RTN","A1AEM2K",130,0)
 ;
"RTN","A1AEM2K",131,0)
 ;
"RTN","A1AEM2K",132,0)
 ;
"RTN","A1AEM2K",133,0)
 ; Now export the KIDS file
"RTN","A1AEM2K",134,0)
 ;
"RTN","A1AEM2K",135,0)
 ; Block to open File.
"RTN","A1AEM2K",136,0)
 N POP
"RTN","A1AEM2K",137,0)
 D EN^DDIOL("Writing: "_$$DEFDIR^%ZISH(ROOT)_FN_".KID")
"RTN","A1AEM2K",138,0)
 D OPEN^%ZISH("KIDFIL",ROOT,FN_".KID","W")
"RTN","A1AEM2K",139,0)
 I POP D EN^DDIOL("Can't open file "_FN_" in path "_ROOT) QUIT
"RTN","A1AEM2K",140,0)
 U IO
"RTN","A1AEM2K",141,0)
 ; 
"RTN","A1AEM2K",142,0)
 ; Header (2 lines)
"RTN","A1AEM2K",143,0)
 W "KIDS Distributions saved on "_$$FMTE^XLFDT($$NOW^XLFDT())_" by the Patch Module on "_^XMB("NETNAME"),!
"RTN","A1AEM2K",144,0)
 W "Patches/Packages: "
"RTN","A1AEM2K",145,0)
 N PATCH F PATCH=0:0 S PATCH=$O(PATCHES(PATCH)) Q:'PATCH  D
"RTN","A1AEM2K",146,0)
 . N PN S PN=$$PM2KD($$GET1^DIQ(11005,PATCH,.01))
"RTN","A1AEM2K",147,0)
 . N KIDGLO S KIDGLO=$NA(^TMP($J,"KID",PATCH))
"RTN","A1AEM2K",148,0)
 . D KIDGLO(KIDGLO,PATCH)
"RTN","A1AEM2K",149,0)
 . I '$D(KIDGLO) U IO(0) D EN^DDIOL("No global for "_PN) U IO K PATCHES(PATCH) QUIT
"RTN","A1AEM2K",150,0)
 . N SEQ S SEQ=$$GET1^DIQ(11005,PATCH,"SEQUENTIAL RELEASE NUMBER")
"RTN","A1AEM2K",151,0)
 . W PN_" SEQ# "_SEQ
"RTN","A1AEM2K",152,0)
 . W:$O(PATCHES(PATCH)) ", " ; If more, write a comma
"RTN","A1AEM2K",153,0)
 W !
"RTN","A1AEM2K",154,0)
 ;
"RTN","A1AEM2K",155,0)
 ; **KIDS** line and blank line.
"RTN","A1AEM2K",156,0)
 W "**KIDS**:"
"RTN","A1AEM2K",157,0)
 N PATCH F PATCH=0:0 S PATCH=$O(PATCHES(PATCH)) Q:'PATCH  D
"RTN","A1AEM2K",158,0)
 . W $$PM2KD($$GET1^DIQ(11005,PATCH,.01))_"^"
"RTN","A1AEM2K",159,0)
 W !!
"RTN","A1AEM2K",160,0)
 ;
"RTN","A1AEM2K",161,0)
 ; Write the contents of each KIDS build in sequence
"RTN","A1AEM2K",162,0)
 N PATCH F PATCH=0:0 S PATCH=$O(PATCHES(PATCH)) Q:'PATCH  D
"RTN","A1AEM2K",163,0)
 . N I F I=0:0 S I=$O(^TMP($J,"KID",PATCH,I)) Q:'I  W ^(I),!
"RTN","A1AEM2K",164,0)
 ;
"RTN","A1AEM2K",165,0)
 ; KIDS trailer
"RTN","A1AEM2K",166,0)
 W "**END**",!,"**END**",!
"RTN","A1AEM2K",167,0)
 D CLOSE^%ZISH()
"RTN","A1AEM2K",168,0)
 W !,"Done..."
"RTN","A1AEM2K",169,0)
 K ^TMP($J,"KID")
"RTN","A1AEM2K",170,0)
 QUIT
"RTN","A1AEM2K",171,0)
 ;
"RTN","A1AEM2K",172,0)
PM2KD(X) ; $$ Private PM to KIDS designation
"RTN","A1AEM2K",173,0)
 N PKABBR,VER,NUM
"RTN","A1AEM2K",174,0)
 S PKABBR=$P(X,"*",1)
"RTN","A1AEM2K",175,0)
 S VER=$P(X,"*",2)
"RTN","A1AEM2K",176,0)
 S NUM=$P(X,"*",3)
"RTN","A1AEM2K",177,0)
 I VER[".",VER<1 S VER=0_VER ; .1 => 0.1
"RTN","A1AEM2K",178,0)
 I VER'["." S VER=VER_".0" ; 2 => 2.0
"RTN","A1AEM2K",179,0)
 I NUM'=0 Q PKABBR_"*"_VER_"*"_NUM
"RTN","A1AEM2K",180,0)
 I NUM=0 N PN D  Q PN
"RTN","A1AEM2K",181,0)
 . N PK S PK=$O(^DIC(9.4,"C",PKABBR,""))
"RTN","A1AEM2K",182,0)
 . N PKNM S PKNM=$P(^DIC(9.4,PK,0),U)
"RTN","A1AEM2K",183,0)
 . S PN=PKNM_" "_VER
"RTN","A1AEM2K",184,0)
 QUIT
"RTN","A1AEM2K",185,0)
 ;
"RTN","A1AEM2K",186,0)
KIDGLO(OUTGLO,IEN) ; Private; Load KID contents from 11005.1 to OUTGLO
"RTN","A1AEM2K",187,0)
 ; OUTGLO - Global Name
"RTN","A1AEM2K",188,0)
 ; IEN - IEN in 11005/11005.1
"RTN","A1AEM2K",189,0)
 K @OUTGLO
"RTN","A1AEM2K",190,0)
 I '$D(^A1AE(11005.1,IEN,2)) QUIT
"RTN","A1AEM2K",191,0)
 N LINE S LINE=0
"RTN","A1AEM2K",192,0)
 N TEXT
"RTN","A1AEM2K",193,0)
 F  S LINE=$O(^A1AE(11005.1,IEN,2,LINE)) Q:'LINE  S TEXT=^(LINE,0) Q:TEXT["$END TXT"  ; spin to $END TXT
"RTN","A1AEM2K",194,0)
 I 'LINE QUIT  ; This line isn't needed but is here for clarity
"RTN","A1AEM2K",195,0)
 S LINE=$O(^A1AE(11005.1,IEN,2,LINE)),TEXT=^(LINE,0)        ; Get next line
"RTN","A1AEM2K",196,0)
 I $E(TEXT,1,4)'="$KID" QUIT  ; Must be $KID line
"RTN","A1AEM2K",197,0)
 F  S LINE=$O(^A1AE(11005.1,IEN,2,LINE)) Q:'LINE  S TEXT=^(LINE,0) Q:TEXT["$END KID"  S @OUTGLO@(LINE)=TEXT  ; load all until $END KID
"RTN","A1AEM2K",198,0)
 QUIT
"RTN","A1AEM2K",199,0)
 ;
"RTN","A1AEM2K",200,0)
TEST D EN^%ut($T(+0),1) QUIT
"RTN","A1AEM2K",201,0)
PM2KDT ; @TEST PM to KIDS designation works properly
"RTN","A1AEM2K",202,0)
 D CHKEQ^%ut($$PM2KD("LR*.1*3"),"LR*0.1*3")
"RTN","A1AEM2K",203,0)
 D CHKEQ^%ut($$PM2KD("LR*1.5*3"),"LR*1.5*3")
"RTN","A1AEM2K",204,0)
 D CHKEQ^%ut($$PM2KD("LR*3*3"),"LR*3.0*3")
"RTN","A1AEM2K",205,0)
 D CHKEQ^%ut($$PM2KD("LR*3*0"),"LAB SERVICE 3.0")
"RTN","A1AEM2K",206,0)
 QUIT
"RTN","A1AEM2K",207,0)
 ;
"RTN","A1AEM2K",208,0)
EOR ;end of routine A1AEM2K
"RTN","A1AEMAL")
0^13^B48135569
"RTN","A1AEMAL",1,0)
A1AEMAL ;isc/jlu-creates the mail message when v or c ;2015-05-30T21:01
"RTN","A1AEMAL",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEMAL",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEMAL",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEMAL",5,0)
 ;
"RTN","A1AEMAL",6,0)
 ;
"RTN","A1AEMAL",7,0)
 ;primary change history
"RTN","A1AEMAL",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEMAL",9,0)
 ;
"RTN","A1AEMAL",10,0)
 ;
"RTN","A1AEMAL",11,0)
GET ;Called from A1AEPHS
"RTN","A1AEMAL",12,0)
 I $D(X) S SAVX=X
"RTN","A1AEMAL",13,0)
 ;verified or test remove <<not verified
"RTN","A1AEMAL",14,0)
 I SAVX="v" S MARK=0 D MARK^A1AEM1
"RTN","A1AEMAL",15,0)
 I SAVX="t" S MARK=0 D MARK^A1AEM1
"RTN","A1AEMAL",16,0)
EN ;
"RTN","A1AEMAL",17,0)
 K A1AEPD2
"RTN","A1AEMAL",18,0)
 S $P(AEQ,"=",78)=""
"RTN","A1AEMAL",19,0)
 S A1AEJH=^A1AE(11005,DA,0)
"RTN","A1AEMAL",20,0)
 S A1AEPD=$P(A1AEJH,U),A1AEVR=$P(A1AEPD,"*",2)
"RTN","A1AEMAL",21,0)
 I '$P(A1AEPD,"*",3) S A1AEPD2=$P($G(^A1AE(11005,DA,4)),U)
"RTN","A1AEMAL",22,0)
 S XMSUB=$S($P(A1AEJH,U,7)="e":"EMERGENCY ",1:"")_$S(A1AENEW="v":"Released",1:"Completed/NotReleased")_" "_$S($D(A1AEPD2):A1AEPD2,1:A1AEPD)
"RTN","A1AEMAL",23,0)
 I A1AEVR=999 S XMSUB=$P(XMSUB,"999")_"DBA"_$P(XMSUB,"999",2)
"RTN","A1AEMAL",24,0)
 I $G(TESTMES) S XMSUB=$S($D(A1AEPD2):A1AEPD2,1:A1AEPD)_" "_TXVER
"RTN","A1AEMAL",25,0)
 ;if not called from a1aephs must have pkif
"RTN","A1AEMAL",26,0)
 S SEQ=$P(A1AEJH,"^",6) I SEQ S SEQ="SEQ #"_SEQ
"RTN","A1AEMAL",27,0)
 ;seq "" till verified when not adding seq to complete
"RTN","A1AEMAL",28,0)
 K XMZ S XMDUZ="National Patch Module",XMSUB=XMSUB_" "_SEQ
"RTN","A1AEMAL",29,0)
 D XMZ^XMA2 K XMDUZ I XMZ=-1 W !?5,"Failed to get get message number",! K SEQ,XMZ
"RTN","A1AEMAL",30,0)
 Q
"RTN","A1AEMAL",31,0)
 ;
"RTN","A1AEMAL",32,0)
ADD(T) ;Inc E, Add text to Message. Also called from A1AEUTL2
"RTN","A1AEMAL",33,0)
        I $G(A1AEPRNT)=1 W T,! Q  ; From A1AE STANDARD PRINT template
"RTN","A1AEMAL",34,0)
 S E=E+1,^XMB(3.9,XMZ,2,E,0)=T
"RTN","A1AEMAL",35,0)
 Q
"RTN","A1AEMAL",36,0)
 ;
"RTN","A1AEMAL",37,0)
MES ;Build message, Called from A1AEPHS
"RTN","A1AEMAL",38,0)
 S JL=A1AENEW,E=1 ;Start E at 1, Line 1 gets $TXT
"RTN","A1AEMAL",39,0)
 D ADD(AEQ)
"RTN","A1AEMAL",40,0)
        N STRMABBR S STRMABBR=$$STRMABBR^A1AEPH2(DA)
"RTN","A1AEMAL",41,0)
        N RD
"RTN","A1AEMAL",42,0)
        S RD="Run Date: "_$$LJ^XLFSTR($$EDT($S($G(A1AERCR8):$P(A1AEJH,U,11),1:$$DT^XLFDT)),33)
"RTN","A1AEMAL",43,0)
        I $L(STRMABBR) D
"RTN","A1AEMAL",44,0)
        . N STRM S STRM="Stream: "_$$LJ^XLFSTR(STRMABBR,10)
"RTN","A1AEMAL",45,0)
        . S RD=$E(RD,1,25)_STRM
"RTN","A1AEMAL",46,0)
        ;
"RTN","A1AEMAL",47,0)
 D ADD(RD_"Designation: "_$S($D(A1AEPD2):A1AEPD2,1:A1AEPD))
"RTN","A1AEMAL",48,0)
        K RD
"RTN","A1AEMAL",49,0)
 S A1AEJ1=^DIC(9.4,$P(A1AEJH,U,2),0),A1AEJP=$P(A1AEJH,U,7),A1AEJP=$S(A1AEJP="p":"Patch for a Patch",A1AEJP="n":"Not Urgent",A1AEJP="m":"Mandatory",A1AEJP="e":"EMERGENCY",A1AEJP="i":"Informational",1:"")
"RTN","A1AEMAL",50,0)
 S AJL=$P(A1AEJ1,U,2)_" - "_$P(A1AEJ1,U)
"RTN","A1AEMAL",51,0)
 S AJL=$$LJ^XLFSTR($E(AJL,1,35),36)
"RTN","A1AEMAL",52,0)
 D ADD("Package : "_AJL_"Priority: "_A1AEJP)
"RTN","A1AEMAL",53,0)
 S AJL=$$LJ^XLFSTR($P(A1AEJH,U,3)_$J(SEQ,15),38)
"RTN","A1AEMAL",54,0)
 D ADD("Version : "_AJL_"Status: "_$$STATUS2E^A1AEPH2(JL))
"RTN","A1AEMAL",55,0)
 I $P(A1AEJH,U,18) D ADD("                  Compliance Date: "_$$EDT($P(A1AEJH,U,18)))
"RTN","A1AEMAL",56,0)
 D ADD(AEQ)
"RTN","A1AEMAL",57,0)
 D ADD("")
"RTN","A1AEMAL",58,0)
 I $D(^A1AE(11005,DA,"Q","B")) K AZ S D0=DA D PCHK^A1AEUTL1 ;Returns AZ
"RTN","A1AEMAL",59,0)
 I $D(AZ)=11 D PCHK^A1AEMAL1 K AZ,AN
"RTN","A1AEMAL",60,0)
        ; VEN/SMH - Next lines are new. Mirror what's in the Print Template A1AE STANDARD PRINT
"RTN","A1AEMAL",61,0)
        I $P(^A1AE(11005,DA,0),U,20) D  ; Print Patch Stream
"RTN","A1AEMAL",62,0)
        . N %,Y
"RTN","A1AEMAL",63,0)
        . D ADD("")
"RTN","A1AEMAL",64,0)
        . S %=$G(^A1AE(11005,DA,0)),Y=$P(%,U,20),Y=$S(Y="":Y,$D(^A1AE(11007.1,Y,0))#2:$P(^(0),U),1:Y)
"RTN","A1AEMAL",65,0)
        . D ADD("Source: "_Y)
"RTN","A1AEMAL",66,0)
        I $P(^A1AE(11005,DA,5),U,2) D  ; Print Dervied From Patch
"RTN","A1AEMAL",67,0)
        . N %,Y
"RTN","A1AEMAL",68,0)
        . D ADD("")
"RTN","A1AEMAL",69,0)
        . S %=$G(^A1AE(11005,DA,5)),Y=$P(%,U,2),Y=$S(Y="":Y,$D(^A1AE(11005,Y,0))#2:$P(^(0),U),1:Y)
"RTN","A1AEMAL",70,0)
        . D ADD("Derived from Patch: "_Y)
"RTN","A1AEMAL",71,0)
        ; VEN/SMH - End
"RTN","A1AEMAL",72,0)
 D ADD("")
"RTN","A1AEMAL",73,0)
 D ADD("Subject: "_$P(A1AEJH,U,5))
"RTN","A1AEMAL",74,0)
 D ADD("")
"RTN","A1AEMAL",75,0)
 D ADD("Category: ")
"RTN","A1AEMAL",76,0)
 I '$D(ZTQUEUED) W !?3,"." R ZZ:0
"RTN","A1AEMAL",77,0)
 S D1=0,A1B="  - "
"RTN","A1AEMAL",78,0)
 F  S D1=$O(^A1AE(11005,DA,"C",D1)) Q:'D1  D SJ D ADD(A1B_J)
"RTN","A1AEMAL",79,0)
 D ADD("")
"RTN","A1AEMAL",80,0)
 ;
"RTN","A1AEMAL",81,0)
 D ADD("Description:")
"RTN","A1AEMAL",82,0)
 D ADD("============")
"RTN","A1AEMAL",83,0)
 D ADD("")
"RTN","A1AEMAL",84,0)
 S D1=0
"RTN","A1AEMAL",85,0)
 F  S D1=$O(^A1AE(11005,DA,"D",D1)) Q:'D1  D ADD(" "_^(D1,0))
"RTN","A1AEMAL",86,0)
 D ADD("")
"RTN","A1AEMAL",87,0)
 ;
"RTN","A1AEMAL",88,0)
 D ADD("Routine Information:")
"RTN","A1AEMAL",89,0)
 D ADD("====================")
"RTN","A1AEMAL",90,0)
 D RTNINFO
"RTN","A1AEMAL",91,0)
 D ADD("")
"RTN","A1AEMAL",92,0)
 ;
"RTN","A1AEMAL",93,0)
 D ADD(AEQ)
"RTN","A1AEMAL",94,0)
 D ADD("User Information:"_$S($P(A1AEJH,U,17):$$RJ^XLFSTR("Hold Date     : ",42)_$$EDT($P(A1AEJH,U,17)),1:""))
"RTN","A1AEMAL",95,0)
 D ADD($$WHOWHEN("Entered",$P(A1AEJH,U,9),$P(A1AEJH,U,12)))
"RTN","A1AEMAL",96,0)
 D ADD($$WHOWHEN("Completed",$S(JL="c":DUZ,JL="v":$P(A1AEJH,U,13),1:""),$S(JL="c":$P(DT,"."),JL="v":$P(A1AEJH,U,10),1:"")))
"RTN","A1AEMAL",97,0)
 D ADD($$WHOWHEN("Released",$S($G(A1AERCR8):$P(A1AEJH,U,14),JL="v":DUZ,1:""),$S($G(A1AERCR8):$P(A1AEJH,U,11),JL="v":$P(DT,"."),1:"")))
"RTN","A1AEMAL",98,0)
        ;
"RTN","A1AEMAL",99,0)
        I "^i2^d2^s2^r2^n2^"[(U_JL_U) D USERS(DA)
"RTN","A1AEMAL",100,0)
        ;
"RTN","A1AEMAL",101,0)
 D ADD(AEQ)
"RTN","A1AEMAL",102,0)
 I '$D(ZTQUEUED) W " ." R ZZ:0
"RTN","A1AEMAL",103,0)
 ;Add the KIDS build to Mail message
"RTN","A1AEMAL",104,0)
 D ^A1AEMAL1
"RTN","A1AEMAL",105,0)
 ;
"RTN","A1AEMAL",106,0)
 I '$G(A1AERCR8) D
"RTN","A1AEMAL",107,0)
 . K XMZ
"RTN","A1AEMAL",108,0)
 . W !,"NOTE: A message has been sent to the",$S(A1AENEW="c":" CS Team",A1AENEW="v":" Network Mail groups",1:" Test Site Users")_$S(A1AENEW="c":" for this package",1:" for distribution.")
"RTN","A1AEMAL",109,0)
 K A1AEPD,A1AEVR,%H,A1AED,A1AEDC,A1AEDV,A1AEJ1,A1AEJH,A1AEJP,A1B,A1CB,A1CV,A1US,AJL,AJL1,E,J,JL,JSP,XMTEXT,XMY,D2,D1,AN,ZZ,AEQ
"RTN","A1AEMAL",110,0)
 I $G(TESTMES) W !,"      Please use mailman if you need to forward this message again."
"RTN","A1AEMAL",111,0)
 W ! I $D(SAVX) S X=SAVX K SAVX
"RTN","A1AEMAL",112,0)
 Q
"RTN","A1AEMAL",113,0)
SJ ;
"RTN","A1AEMAL",114,0)
 S J=^A1AE(11005,DA,"C",D1,0),J=$S(J="d":"Data Dictionary",J="i":"Input Template",J="p":"Print Template",J="r":"Routine",J="s":"Sort Template",J="o":"Other",J="db":"Database",J="e":"e",J="pp":"PATCH FOR A PATCH",J="inf":"Informational",1:"")
"RTN","A1AEMAL",115,0)
 I J="e" S J="Enhancement ("_$S($P(^A1AE(11005,DA,0),"^",7)="m":"Mandatory",$P(^(0),"^",7)="n":"Optional",1:"")_")"
"RTN","A1AEMAL",116,0)
 Q
"RTN","A1AEMAL",117,0)
 ;
"RTN","A1AEMAL",118,0)
EDT(FMDT) ;
"RTN","A1AEMAL",119,0)
 Q $$UP^XLFSTR($$FMTE^XLFDT(FMDT))
"RTN","A1AEMAL",120,0)
 ;
"RTN","A1AEMAL",121,0)
USERS(DA)   ; Extra users
"RTN","A1AEMAL",122,0)
        ; VEN/SMH - This is new for the new statuses
"RTN","A1AEMAL",123,0)
        ; TODO: This happens during input transform. These fields WILL NOT be populated yet on the first pass.
"RTN","A1AEMAL",124,0)
        ; Fileman filing happens after the input transform but b4 xreffing.
"RTN","A1AEMAL",125,0)
        N USER,DATE
"RTN","A1AEMAL",126,0)
        S USER=$$GET1^DIQ(11005,DA,8.1,"I") ; Rev usr
"RTN","A1AEMAL",127,0)
        S DATE=$$GET1^DIQ(11005,DA,8.09,"I") ; Rev Date
"RTN","A1AEMAL",128,0)
        D ADD($$WHOWHEN("Reviewed",USER,DATE)) ; Always print
"RTN","A1AEMAL",129,0)
        S USER=$$GET1^DIQ(11005,DA,8.12,"I") ; Sec Dev usr
"RTN","A1AEMAL",130,0)
        S DATE=$$GET1^DIQ(11005,DA,8.11,"I") ; Sec Dev date
"RTN","A1AEMAL",131,0)
        I DATE D ADD($$WHOWHEN("Sec Dev",USER,DATE)) ; print if there is a value
"RTN","A1AEMAL",132,0)
        S USER=$$GET1^DIQ(11005,DA,8.14,"I") ; Sec Com usr
"RTN","A1AEMAL",133,0)
        S DATE=$$GET1^DIQ(11005,DA,8.13,"I") ; Sec Com date
"RTN","A1AEMAL",134,0)
        I DATE D ADD($$WHOWHEN("Sec Com",USER,DATE)) ; ditto
"RTN","A1AEMAL",135,0)
        S USER=$$GET1^DIQ(11005,DA,8.16,"I") ; Sec Rel usr
"RTN","A1AEMAL",136,0)
        S DATE=$$GET1^DIQ(11005,DA,8.15,"I") ; Sec Rel date
"RTN","A1AEMAL",137,0)
        I DATE D ADD($$WHOWHEN("Sec Rel",USER,DATE)) ; ditto
"RTN","A1AEMAL",138,0)
        S USER=$$GET1^DIQ(11005,DA,8.18,"I") ; Sec Deny usr
"RTN","A1AEMAL",139,0)
        S DATE=$$GET1^DIQ(11005,DA,8.17,"I") ; Sec Deny date
"RTN","A1AEMAL",140,0)
        I DATE D ADD($$WHOWHEN("Denied",USER,DATE)) ; ditto
"RTN","A1AEMAL",141,0)
        QUIT
"RTN","A1AEMAL",142,0)
        ;
"RTN","A1AEMAL",143,0)
WHOWHEN(WHAT,WHO,WHEN) ;
"RTN","A1AEMAL",144,0)
 N LINE
"RTN","A1AEMAL",145,0)
 S LINE=$$LJ^XLFSTR(WHAT_" By",12)_": "
"RTN","A1AEMAL",146,0)
 S LINE=LINE_$$LJ^XLFSTR($S(+WHO:$E($$NAME^XMXUTIL(WHO),1,29),1:""),30)
"RTN","A1AEMAL",147,0)
 S LINE=LINE_$$LJ^XLFSTR("Date "_WHAT,14)_": "
"RTN","A1AEMAL",148,0)
 Q LINE_$S(+WHEN:$$EDT(WHEN),1:"")
"RTN","A1AEMAL",149,0)
 ;
"RTN","A1AEMAL",150,0)
RTNINFO ;Put the routine info out
"RTN","A1AEMAL",151,0)
 N D0 S D0=DA D RTNINFO^A1AEUTL2(1)
"RTN","A1AEMAL",152,0)
 Q
"RTN","A1AEMAL1")
0^14^B26664026
"RTN","A1AEMAL1",1,0)
A1AEMAL1 ;isa/jlu-creates the patch mail message ;2014-03-08T15:35
"RTN","A1AEMAL1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEMAL1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEMAL1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEMAL1",5,0)
 ;
"RTN","A1AEMAL1",6,0)
 ;
"RTN","A1AEMAL1",7,0)
 ;primary change history
"RTN","A1AEMAL1",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEMAL1",9,0)
 ;
"RTN","A1AEMAL1",10,0)
 ;
"RTN","A1AEMAL1",11,0)
 I $G(A1AERCR8) D
"RTN","A1AEMAL1",12,0)
 . S $P(^XMB(3.9,XMZ,0),"^",7)=$S($P(^A1AE(11005.1,DA,0),U,11)="K":"K",1:"X")
"RTN","A1AEMAL1",13,0)
 E  D
"RTN","A1AEMAL1",14,0)
 . ;Address Message
"RTN","A1AEMAL1",15,0)
 . S AN=$P(A1AEJH,U,2),TEST=$P(^A1AE(11007,AN,0),U,4)
"RTN","A1AEMAL1",16,0)
 . I AN D VER^A1AEM:SAVX="v" D:TEST'="y" COM^A1AEM:SAVX="c" D:TEST="y" TST^A1AEM:SAVX="c"
"RTN","A1AEMAL1",17,0)
 . I $G(TESTMES) K XMY
"RTN","A1AEMAL1",18,0)
 . I '$G(TESTMES) S XMY(DUZ)="" ;'? to hid xmy(n)
"RTN","A1AEMAL1",19,0)
 . I '$G(TESTMES) S JL2="" F JL=1:0 S JL2=$O(XMY(JL2)) Q:JL2=""  S A1AETX(JL)="                     "_JL2 S:JL=1 A1AETX(1)="     Recipient     : "_JL2 I JL2'?1N.N S JL=JL+1
"RTN","A1AEMAL1",20,0)
 I '$D(ZTQUEUED) W " ." R ZZ:0
"RTN","A1AEMAL1",21,0)
 ;Load the KIDS Message Text
"RTN","A1AEMAL1",22,0)
 I $D(^A1AE(11005.1,DA,0)) D RO
"RTN","A1AEMAL1",23,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92A^"_E_"^"_E_"^"_DT
"RTN","A1AEMAL1",24,0)
 ;kids patches always difrom
"RTN","A1AEMAL1",25,0)
 I SAVX="v",$D(^DIC(19,"B","A1AE SERVER VERIFIED")) S XMY("S.A1AE SERVER VERIFIED")=""
"RTN","A1AEMAL1",26,0)
 I $P(^XMB(3.9,XMZ,0),"^",2)="National Patch Module",SAVX="c" S $P(^(0),"^",2)="NPM   [#"_XMZ_"]"
"RTN","A1AEMAL1",27,0)
 I $P(^XMB(3.9,XMZ,0),"^",2)="National Patch Module",$G(TESTMES) S $P(^(0),"^",2)="NPM   [#"_XMZ_"]"
"RTN","A1AEMAL1",28,0)
 ;Send Msg
"RTN","A1AEMAL1",29,0)
 I '$G(TESTMES) N XMDF S XMDF=1 S ZTQUEUED="" D ENT1^XMD K ZTQUEUED,XMDF
"RTN","A1AEMAL1",30,0)
 I $G(TESTMES) DO
"RTN","A1AEMAL1",31,0)
 . S (XMDUN,XMDUZ)=$P(^VA(200,DUZ,0),"^"),XMY(DUZ)=""
"RTN","A1AEMAL1",32,0)
 . W !!,"Please add recipients for `",$P(A1AE0,"^"),"' test message"
"RTN","A1AEMAL1",33,0)
 . D ENT2^XMD K XMDUN,XMDUZ
"RTN","A1AEMAL1",34,0)
 . W !,"message number [#",XMZ,"]"
"RTN","A1AEMAL1",35,0)
 . S $P(^A1AE(11005.1,DA,0),"^",12)=TVER
"RTN","A1AEMAL1",36,0)
 ;record message, dt
"RTN","A1AEMAL1",37,0)
 I $G(A1AERCR8) S $P(^A1AE(11005.1,DA,0),U,6)=XMZ Q
"RTN","A1AEMAL1",38,0)
 S A1AESUB=XMSUB
"RTN","A1AEMAL1",39,0)
 S (AXMZ,A1AEXMZ)=XMZ
"RTN","A1AEMAL1",40,0)
 D VREC^A1AEM:SAVX="v",CREC^A1AEM:SAVX="c" K AXMZ
"RTN","A1AEMAL1",41,0)
 ;
"RTN","A1AEMAL1",42,0)
 ;remove input message from que ;do this on Completed ??/release
"RTN","A1AEMAL1",43,0)
 I SAVX="c",$D(^A1AE(11005.1,DA,0)) S AXMZ=$P(^(0),U,2) I AXMZ D TRASH^A1AEM
"RTN","A1AEMAL1",44,0)
 ;test the new kids import logic
"RTN","A1AEMAL1",45,0)
 I $P($G(^A1AE(11005.1,DA,0)),"^",11)="K" D  Q
"RTN","A1AEMAL1",46,0)
 . S $P(^XMB(3.9,A1AEXMZ,0),"^",7)="K"
"RTN","A1AEMAL1",47,0)
 I $P($G(^A1AE(11005.1,DA,0)),"^",11)="X" D  Q
"RTN","A1AEMAL1",48,0)
 . S $P(^XMB(3.9,A1AEXMZ,0),"^",7)="X"
"RTN","A1AEMAL1",49,0)
 Q
"RTN","A1AEMAL1",50,0)
 ;
"RTN","A1AEMAL1",51,0)
 ;Removed code testing for current patches
"RTN","A1AEMAL1",52,0)
ADD(T) ;Inc E, Add text to Message.
"RTN","A1AEMAL1",53,0)
 S E=E+1,^XMB(3.9,XMZ,2,E,0)=T
"RTN","A1AEMAL1",54,0)
 Q
"RTN","A1AEMAL1",55,0)
 ;
"RTN","A1AEMAL1",56,0)
RO ;Add KIDS message
"RTN","A1AEMAL1",57,0)
 ;1st line $txt
"RTN","A1AEMAL1",58,0)
 ;fix for <undef> when 11005.1 stub not getting set
"RTN","A1AEMAL1",59,0)
 S ^XMB(3.9,XMZ,2,1,0)=$G(^A1AE(11005.1,DA,2,1,0)) ; VEN/SMH - THIS IS THE LINE THAT PUTS '$TXT Created By' etc...
"RTN","A1AEMAL1",60,0)
 D ADD(""),ADD("")
"RTN","A1AEMAL1",61,0)
 D ADD("Packman Mail Message:")
"RTN","A1AEMAL1",62,0)
 D ADD("=====================")
"RTN","A1AEMAL1",63,0)
 D ADD("")
"RTN","A1AEMAL1",64,0)
 I $G(^A1AE(11005.1,DA,2,1,0))["No routines included" D  Q
"RTN","A1AEMAL1",65,0)
 . D ADD(^(0)) ; naked ref to $G above.
"RTN","A1AEMAL1",66,0)
 . S ^XMB(3.9,XMZ,2,1,0)=""
"RTN","A1AEMAL1",67,0)
 I '$D(^A1AE(11005.1,DA,2,1)),'$D(^(2)),'$D(^(3)),'$D(^(4)),'$D(^(5)) D  Q
"RTN","A1AEMAL1",68,0)
 . D ADD("No routines included")
"RTN","A1AEMAL1",69,0)
 ;
"RTN","A1AEMAL1",70,0)
 N ZA,ZB,ZC,RN,BCS
"RTN","A1AEMAL1",71,0)
 S Z=0,ZA=0,ZB=0,RN="",BCS=""
"RTN","A1AEMAL1",72,0)
 ;skip any txt loaded in with message
"RTN","A1AEMAL1",73,0)
 F  S Z=$O(^A1AE(11005.1,DA,2,Z)) Q:'Z  I $E(^(Z,0),1,8)="$END TXT",^(0)'["KIDS" Q
"RTN","A1AEMAL1",74,0)
 ;
"RTN","A1AEMAL1",75,0)
 I Z D
"RTN","A1AEMAL1",76,0)
 . S Z=$O(^A1AE(11005.1,DA,2,Z),-1) ;backup 1 to get $end txt  
"RTN","A1AEMAL1",77,0)
 . ;Find the build number for later
"RTN","A1AEMAL1",78,0)
 . S ZA=Z F  S ZA=$O(^A1AE(11005.1,DA,2,ZA)) Q:'ZA  I $E(^(ZA,0),1,5)="""BLD""" Q
"RTN","A1AEMAL1",79,0)
 . ;Move Message Text into Message Stop at $END KID
"RTN","A1AEMAL1",80,0)
        . ;VEN/SMH - Old checksum gets put here.
"RTN","A1AEMAL1",81,0)
 . F  S Z=$O(^A1AE(11005.1,DA,2,Z)) Q:'Z  S ZB=^(Z,0) DO  Q:$E(ZB,1,8)="$END KID"
"RTN","A1AEMAL1",82,0)
 . . I $E(ZB,1,5)="""RTN""",RN'=$P(ZB,$C(34),4) S RN=$P(ZB,$C(34),4),BCS=$$BCS^A1AEUTL2(DA,RN)
"RTN","A1AEMAL1",83,0)
 . . D ADD(ZB) ;node
"RTN","A1AEMAL1",84,0)
 . . S Z=$O(^A1AE(11005.1,DA,2,Z)) Q:'Z  S ZC=^(Z,0)
"RTN","A1AEMAL1",85,0)
 . . I $L(BCS),'$L($P(ZC,U,4)) S $P(ZC,U,4)=BCS ; VEN/SMH - Don't update the old checksum if we have one
"RTN","A1AEMAL1",86,0)
        . . S BCS="" ; empty for the next time in the loop.
"RTN","A1AEMAL1",87,0)
 . . D ADD(ZC) ;value
"RTN","A1AEMAL1",88,0)
 . . I Z#66=0,'$D(ZTQUEUED) W "." R ZZ:0
"RTN","A1AEMAL1",89,0)
 . Q
"RTN","A1AEMAL1",90,0)
 ;Add Test and SEQ to BLD section
"RTN","A1AEMAL1",91,0)
 I '$D(A1AEPKV),ZA D
"RTN","A1AEMAL1",92,0)
 . N ZAA
"RTN","A1AEMAL1",93,0)
 . S ZAA=^A1AE(11005.1,DA,2,ZA,0),ZA(1)=$P(ZAA,",",1),ZA(2)=$P(ZAA,",",2)
"RTN","A1AEMAL1",94,0)
 . S ZZA(1)=ZA(1)_","_ZA(2)_",6)"
"RTN","A1AEMAL1",95,0)
 . S ZZA(9)=^XMB(3.9,XMZ,2,E,0),E=E-1 ;Backup one
"RTN","A1AEMAL1",96,0)
 . D ADD(ZZA(1)) ;Replaces last line
"RTN","A1AEMAL1",97,0)
 . D ADD($G(TVER)_"^"_$P($G(SEQ),"#",2))
"RTN","A1AEMAL1",98,0)
 . D ADD(ZZA(9))
"RTN","A1AEMAL1",99,0)
 Q
"RTN","A1AEMAL1",100,0)
 ;
"RTN","A1AEMAL1",101,0)
PCHK ;Called from A1AEMAL
"RTN","A1AEMAL1",102,0)
 S AN=0
"RTN","A1AEMAL1",103,0)
 S AZ=0 F  S AZ=$O(AZ(AZ)) Q:'AZ  I AZ(AZ)'["<<" DO PSET
"RTN","A1AEMAL1",104,0)
 S AZ=0 F  S AZ=$O(AZ(AZ)) Q:'AZ  I AZ(AZ)["<<" DO PSET
"RTN","A1AEMAL1",105,0)
 Q
"RTN","A1AEMAL1",106,0)
 ;
"RTN","A1AEMAL1",107,0)
PSET ;
"RTN","A1AEMAL1",108,0)
 I $D(AZ("TX",1)) D ADD(AZ("TX",1)_AZ(AZ)) K AZ("TX",1) Q
"RTN","A1AEMAL1",109,0)
 E  D ADD("                    "_AZ(AZ))
"RTN","A1AEMAL1",110,0)
 Q
"RTN","A1AEMAL1",111,0)
 ;
"RTN","A1AEMAL1",112,0)
NOMESS ;from a1aephs write warning that released message already sent
"RTN","A1AEMAL1",113,0)
 W !!?3,"A Released Patch message `",$P(A1AE0,"^"),"' #"
"RTN","A1AEMAL1",114,0)
 W $P(^A1AE(11005.1,DA,0),"^",6),"  " S Y=$P(^(0),"^",7) D DT^DIQ
"RTN","A1AEMAL1",115,0)
 W !?3,"has already been sent."
"RTN","A1AEMAL1",116,0)
 W !!?3,"NO additional message or bulletin will be generated."
"RTN","A1AEMAL1",117,0)
 W !?3,"It is assummed that the previous release was interrupted"
"RTN","A1AEMAL1",118,0)
 W !?3,"by a system disconnect.  PLEASE CHECK this message for "
"RTN","A1AEMAL1",119,0)
 W !?3,"correct SEQ# and content."
"RTN","A1AEMAL1",120,0)
 W !!?3,"If this message does NOT exist the Patch status will have"
"RTN","A1AEMAL1",121,0)
 W !?3,"to be reset manually,  please notify Patch Developers."
"RTN","A1AEMAL1",122,0)
 W !!?3,"The Patch status of `",$P(A1AE0,"^"),"' will now be reset to Released."
"RTN","A1AEMAL1",123,0)
 W !,$C(7) H 3
"RTN","A1AEMAL1",124,0)
 Q
"RTN","A1AEMGR")
0^15^B11186398
"RTN","A1AEMGR",1,0)
A1AEMGR ;isa/rmo ;2014-03-28T17:11
"RTN","A1AEMGR",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEMGR",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEMGR",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEMGR",5,0)
 ;
"RTN","A1AEMGR",6,0)
 ;
"RTN","A1AEMGR",7,0)
 ;primary change history
"RTN","A1AEMGR",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEMGR",9,0)
 ;*** NOT FOR GENERAL DISTRIBUTION- Sent to Milt on FORUM 3/23/88 ***
"RTN","A1AEMGR",10,0)
 ;
"RTN","A1AEMGR",11,0)
SELUSR ;Update patches as printed for ALL selected packages for a select user
"RTN","A1AEMGR",12,0)
 G Q:'$D(^XUSEC("A1AE MGR",DUZ)) S DIC="^VA(200,",DIC(0)="AEMQ" W ! D ^DIC G Q:Y<0 S A1AEUSR=+Y,A1AEUSNM=$P(Y,"^",2) I '$D(^A1AE(11007,"AU",A1AEUSR)) W !!?3,*7,"This user has no packages currently selected." G SELUSR
"RTN","A1AEMGR",13,0)
 S A1AERD("A")="Are you sure you want to update the print status for "_A1AEUSNM_"? ",A1AERD(0)="S",A1AERD(1)="Yes^update print status of verified patches for user",A1AERD(2)="No^do not update print status for user"
"RTN","A1AEMGR",14,0)
 S A1AERD("B")=2 D SET^A1AERD G SELUSR:"N"[$E(X,1)!(X["^") D UPDATE:"Y"[$E(X,1)
"RTN","A1AEMGR",15,0)
 ;
"RTN","A1AEMGR",16,0)
Q K A1AEUSNM,A1AEDTV,A1AEIFN,A1AEPKIF,A1AEUSR
"RTN","A1AEMGR",17,0)
 Q
"RTN","A1AEMGR",18,0)
 ;
"RTN","A1AEMGR",19,0)
UPDATE W !!,"Overriding patch print status for ",A1AEUSNM,"'s selected packages.",! S %DT="",X="T" D ^%DT S DT=Y
"RTN","A1AEMGR",20,0)
 F A1AEPKIF=0:0 S A1AEPKIF=$O(^A1AE(11007,"AU",A1AEUSR,A1AEPKIF)) Q:'A1AEPKIF  I $D(^A1AE(11007,A1AEPKIF,0)),$P(^(0),"^",2)="Y",$D(^DIC(9.4,A1AEPKIF,0)) W !?3,"Updating print status for ",$P(^(0),"^",2)," patches..." D CHKDTV
"RTN","A1AEMGR",21,0)
 Q
"RTN","A1AEMGR",22,0)
 ;
"RTN","A1AEMGR",23,0)
CHKDTV F A1AEDTV=0:0 S A1AEDTV=+$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV)) Q:'A1AEDTV  F A1AEIFN=0:0 S A1AEIFN=+$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV,A1AEIFN)) Q:'A1AEIFN  I '$D(^A1AE(11005,A1AEIFN,2,A1AEUSR)) D SETPRT
"RTN","A1AEMGR",24,0)
 Q
"RTN","A1AEMGR",25,0)
 ;
"RTN","A1AEMGR",26,0)
SETPRT W !?6,$P(^A1AE(11005,A1AEIFN,0),"^")
"RTN","A1AEMGR",27,0)
 L +^A1AE(11005,A1AEIFN,2):0 E  W $C(7),"Couldn't lock at "_$ST($ST,"PLACE")_". Try again later.",! QUIT
"RTN","A1AEMGR",28,0)
 S:'$D(^A1AE(11005,A1AEIFN,2,0)) ^(0)="^11005.02P^^"
"RTN","A1AEMGR",29,0)
 S:'$D(^A1AE(11005,A1AEIFN,2,A1AEUSR,0)) $P(^(0),"^",1,2)=A1AEUSR_"^"_DT,$P(^(0),"^",4)=$P(^A1AE(11005,A1AEIFN,2,0),"^",4)+1
"RTN","A1AEMGR",30,0)
 S $P(^A1AE(11005,A1AEIFN,2,A1AEUSR,0),"^",3)=DT
"RTN","A1AEMGR",31,0)
 S $P(^A1AE(11005,A1AEIFN,2,0),"^",3)=A1AEUSR
"RTN","A1AEMGR",32,0)
 S ^A1AE(11005,"AU",A1AEUSR,+$P(^A1AE(11005,A1AEIFN,0),"^",2),(9999999-DT))=""
"RTN","A1AEMGR",33,0)
 L -^A1AE(11005,A1AEIFN,2)
"RTN","A1AEMGR",34,0)
 Q
"RTN","A1AEOS")
0^60^B5762396
"RTN","A1AEOS",1,0)
A1AEOS ;ven/smh-patch module operating system interface;2015-07-27  10:41 PM
"RTN","A1AEOS",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEOS",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEOS",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEOS",5,0)
 ;
"RTN","A1AEOS",6,0)
 ;
"RTN","A1AEOS",7,0)
 ;primary change history
"RTN","A1AEOS",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEOS",9,0)
 ;
"RTN","A1AEOS",10,0)
 ; This routine is not SAC compliant
"RTN","A1AEOS",11,0)
 ;
"RTN","A1AEOS",12,0)
MKDIR(DIR) ; [PUBLIC] - $$; mkdir DIR name. Unix output for success and failure.
"RTN","A1AEOS",13,0)
 N CMD S CMD="mkdir -p '"_DIR_"'" ; mk sure that we take in account spaces
"RTN","A1AEOS",14,0)
 N OUT ; Exit value of command.
"RTN","A1AEOS",15,0)
 I +$SY=47 D  ; GT.M
"RTN","A1AEOS",16,0)
 . O "p":(shell="/bin/sh":command=CMD)::"pipe" U "p" C "p"
"RTN","A1AEOS",17,0)
 . I $$VERSION^%ZOSV(0)'<6.1 S OUT=$ZCLOSE ; GT.M 6.1 only returns the status!!
"RTN","A1AEOS",18,0)
 . E  S OUT=0
"RTN","A1AEOS",19,0)
 I +$SY=0 S OUT=$ZF(-1,CMD) ; Cache
"RTN","A1AEOS",20,0)
 QUIT OUT
"RTN","A1AEOS",21,0)
 ;
"RTN","A1AEOS",22,0)
T2 ; @TEST Make a directory
"RTN","A1AEOS",23,0)
 N % S %=$$MKDIR("/tmp/test/sam")
"RTN","A1AEOS",24,0)
 D CHKEQ^%ut(%,0,"Status of mkdir should be zero")
"RTN","A1AEOS",25,0)
 N % S %=$$MKDIR("/lksjdfkjsdf/")
"RTN","A1AEOS",26,0)
 D CHKEQ^%ut(%,1,"Status of failed mkdir should be one")
"RTN","A1AEOS",27,0)
 QUIT
"RTN","A1AEOS",28,0)
 ;
"RTN","A1AEOS",29,0)
PWD() ; [PUBLIC] $$ - Current directory
"RTN","A1AEOS",30,0)
 I +$SY=47 Q $ZD
"RTN","A1AEOS",31,0)
 I +$SY=0 Q $ZU(168)
"RTN","A1AEOS",32,0)
 S $EC=",U-M-VM-NOT-SUPPORTED,"
"RTN","A1AEOS",33,0)
 QUIT
"RTN","A1AEOS",34,0)
 ;
"RTN","A1AEOS",35,0)
D() ; [PUBLIC] $$ - Delimiter
"RTN","A1AEOS",36,0)
 N OS S OS=$$OS^%ZOSV
"RTN","A1AEOS",37,0)
 I $$UP^XLFSTR(OS)["UNIX" Q "/"
"RTN","A1AEOS",38,0)
 I $$UP^XLFSTR(OS)["NT" Q "\"
"RTN","A1AEOS",39,0)
 S $EC=",U-M-VM-NOT-SUPPORTED,"
"RTN","A1AEOS",40,0)
 QUIT
"RTN","A1AEOS",41,0)
 ;
"RTN","A1AEOS",42,0)
CD(ND) ; [PUBLIC] $$ - Change directory
"RTN","A1AEOS",43,0)
 I +$SY=47 S $ZD=ND Q $$PWD()
"RTN","A1AEOS",44,0)
 I +$SY=0 N % S %=$ZU(168,ND) Q $$PWD()
"RTN","A1AEOS",45,0)
 S $EC=",U-M-VM-NOT-SUPPORTED,"
"RTN","A1AEOS",46,0)
 ;
"RTN","A1AEOS",47,0)
RDPIPE(RTN,CMD) ; [PUBLIC] $$ - Execute a read only (non-interactive) command as a pipe
"RTN","A1AEOS",48,0)
 I +$SY=47 D  QUIT:($$VERSION^%ZOSV(0)'<6.1) $ZCLOSE QUIT 0
"RTN","A1AEOS",49,0)
 . N P S P="pipe"
"RTN","A1AEOS",50,0)
 . O P:(shell="/bin/sh":command=CMD:PARSE:READONLY)::"pipe"
"RTN","A1AEOS",51,0)
 . U P
"RTN","A1AEOS",52,0)
 . N CNT S CNT=1
"RTN","A1AEOS",53,0)
 . N X F  R X:1 Q:$ZEOF  U $P D EN^DDIOL(X) S RTN(CNT)=X,CNT=CNT+1 U P  ; just loop around until we are done.
"RTN","A1AEOS",54,0)
 . C P
"RTN","A1AEOS",55,0)
 I +$SY=0 D  Q 0
"RTN","A1AEOS",56,0)
 . O CMD:"QR"
"RTN","A1AEOS",57,0)
 . U CMD
"RTN","A1AEOS",58,0)
 . N CNT S CNT=1
"RTN","A1AEOS",59,0)
 . N X F  R X:1 Q:$ZEOF  U $P D EN^DDIOL(X) S RTN(CNT)=X,CNT=CNT+1 U CMD  ; ditto
"RTN","A1AEOS",60,0)
 . C CMD
"RTN","A1AEOS",61,0)
 S $EC=",U-M-VM-NOT-SUPPORTED,"
"RTN","A1AEOS",62,0)
 QUIT
"RTN","A1AEP")
0^105^B21231210
"RTN","A1AEP",1,0)
A1AEP ; VEN/LGC - GENERATED FROM 'A1AE STANDARD PRINT' PRINT TEMPLATE and subsequently modified ;2015-06-14  12:48 AM
"RTN","A1AEP",2,0)
 ;;2.5;PATCH MODULE;;Jun 05, 2015;Build 48
"RTN","A1AEP",3,0)
 ;
"RTN","A1AEP",4,0)
 ; CHANGE VEN/LGC 2015 06 15
"RTN","A1AEP",5,0)
 ;  Modified to print properly formated export
"RTN","A1AEP",6,0)
 ;
"RTN","A1AEP",7,0)
 G BEGIN
"RTN","A1AEP",8,0)
 ; Write new line
"RTN","A1AEP",9,0)
N W !
"RTN","A1AEP",10,0)
T W:$X ! I '$D(DIOT(2)),DN,$D(IOSL),$S('$D(DIWF):1,$P(DIWF,"B",2):$P(DIWF,"B",2),1:1)+$Y'<IOSL,$D(^UTILITY($J,1))#2,^(1)?1U1P1E.E X ^(1)
"RTN","A1AEP",11,0)
 S DISTP=DISTP+1,DILCT=DILCT+1 D:'(DISTP#100) CSTP^DIO2
"RTN","A1AEP",12,0)
 Q
"RTN","A1AEP",13,0)
DT I $G(DUZ("LANG"))>1,Y W $$OUT^DIALOGU(Y,"DD") Q
"RTN","A1AEP",14,0)
 X ^DD("DD")
"RTN","A1AEP",15,0)
 W Y Q
"RTN","A1AEP",16,0)
M D @DIXX
"RTN","A1AEP",17,0)
 Q
"RTN","A1AEP",18,0)
BEGIN ;
"RTN","A1AEP",19,0)
 S:'$D(DN) DN=1 S DISTP=$G(DISTP),DILCT=$G(DILCT)
"RTN","A1AEP",20,0)
 I $D(DXS)<9 M DXS=^DIPT(1533,"DXS")
"RTN","A1AEP",21,0)
 S I(0)="^A1AE(11005,",J(0)=11005
"RTN","A1AEP",22,0)
 ; new code
"RTN","A1AEP",23,0)
 ; Do not print the three below for now/lgc
"RTN","A1AEP",24,0)
 ; old code
"RTN","A1AEP",25,0)
 ;W ?0 X DXS(1,9) K DIP K:DN Y
"RTN","A1AEP",26,0)
 ;W ?11 X DXS(2,9) K DIP K:DN Y
"RTN","A1AEP",27,0)
 ;W ?22 X DXS(3,9) K DIP K:DN Y
"RTN","A1AEP",28,0)
 ; new code
"RTN","A1AEP",29,0)
 ; added "Associated patches", which are found in the 
"RTN","A1AEP",30,0)
 ; "Q" nodes of the D0 entry
"RTN","A1AEP",31,0)
 N D1,ASPIEN,ASPNM,REQ4VER,ASPSTAT,SPC,EXPTCH S D1=0
"RTN","A1AEP",32,0)
 F  S D1=$O(^A1AE(11005,D0,"Q",D1)) Q:'D1  D
"RTN","A1AEP",33,0)
 . S ASPIEN=$P(^A1AE(11005,D0,"Q",D1,0),"^") ; Associated Patch
"RTN","A1AEP",34,0)
 . S ASPNM=$P(^A1AE(11005,ASPIEN,0),"^")
"RTN","A1AEP",35,0)
 . S REQ4VER=$P(^A1AE(11005,D0,"Q",D1,0),"^",2) ; Reqd for verific
"RTN","A1AEP",36,0)
 . S REQ4VER=$S(REQ4VER["y":"<<= must be installed BEFORE",1:"install with patch")
"RTN","A1AEP",37,0)
 . S SPC=$S($L(REQ4VER)<20:39,1:35)
"RTN","A1AEP",38,0)
 . S ASPSTAT=$$GET1^DIQ(11005,ASPIEN,8,"I") ; Status of patch
"RTN","A1AEP",39,0)
 . S EXPTCH=$P(^A1AE(11005,D0,0),"^")
"RTN","A1AEP",40,0)
 . I D1=1 W !,?0,"Associated patches:",?20,"(",ASPSTAT,")",ASPNM,?SPC,REQ4VER,?64,"`",EXPTCH,"'" Q
"RTN","A1AEP",41,0)
 . W !,?20,"(",ASPSTAT,")",ASPNM,?SPC,REQ4VER,?64,"`",EXPTCH,"'" Q
"RTN","A1AEP",42,0)
 ;
"RTN","A1AEP",43,0)
 ; Print "Subject" and "Category"
"RTN","A1AEP",44,0)
 D T Q:'DN  D N D N:$X>0 Q:'DN  W ?0 W "Subject:"
"RTN","A1AEP",45,0)
 S X=$G(^A1AE(11005,D0,0)) W ?10,$E($P(X,U,5),1,70)
"RTN","A1AEP",46,0)
 D T Q:'DN  D N D N:$X>0 Q:'DN  W ?0 W "Category:"
"RTN","A1AEP",47,0)
 ; new code
"RTN","A1AEP",48,0)
 W !
"RTN","A1AEP",49,0)
 ; 
"RTN","A1AEP",50,0)
 S I(1)="""C""",J(1)=11005.05 F D1=0:0 Q:$O(^A1AE(11005,D0,"C",D1))'>0  X $G(DSC(11005.05))  S D1=$O(^(D1)) Q:D1'>0   D:$X>11 T Q:'DN  D A1
"RTN","A1AEP",51,0)
 G A1R
"RTN","A1AEP",52,0)
 ;
"RTN","A1AEP",53,0)
A1 ;Prints Category(ies)
"RTN","A1AEP",54,0)
 ; new code
"RTN","A1AEP",55,0)
 S X=$G(^A1AE(11005,D0,"C",D1,0)),Y=$P(X,U,1)
"RTN","A1AEP",56,0)
 W ?2 W:Y]"" "- ",$$TITLE^XLFSTR($E($$SET^DIQ(11005.05,.01,Y),1,17))
"RTN","A1AEP",57,0)
 ; old code
"RTN","A1AEP",58,0)
 ;S X=$G(^A1AE(11005,D0,"C",D1,0)) W ?11 S Y=$P(X,U,1) W:Y]"" $E($$SET^DIQ(11005.05,.01,Y),1,17)
"RTN","A1AEP",59,0)
 Q
"RTN","A1AEP",60,0)
 ; Prints Patch Description
"RTN","A1AEP",61,0)
A1R ;
"RTN","A1AEP",62,0)
 D T Q:'DN  D N D N:$X>0 Q:'DN  W ?0 W "Description:"
"RTN","A1AEP",63,0)
 D N:$X>0 Q:'DN  W ?0 W "==========="
"RTN","A1AEP",64,0)
 D N:$X>0 Q:'DN  W ?0 W " "
"RTN","A1AEP",65,0)
 ; new code
"RTN","A1AEP",66,0)
 N A1AESTOP S A1AESTOP=0
"RTN","A1AEP",67,0)
 D N:$X>0 Q:'DN  W ?0 S:'$D(DIWF) DIWF="" S:DIWF'["N" DIWF=DIWF_"N"
"RTN","A1AEP",68,0)
 S X="" S I(1)="""D""",J(1)=11005.01
"RTN","A1AEP",69,0)
 F D1=0:0 Q:$O(^A1AE(11005,D0,"D",D1))'>0  D
"RTN","A1AEP",70,0)
 . S D1=$O(^(D1)) D:$X>3 T Q:'DN  D:'A1AESTOP B1
"RTN","A1AEP",71,0)
 ; old code
"RTN","A1AEP",72,0)
 ;D N:$X>0 Q:'DN  W ?0 S:'$D(DIWF) DIWF="" S:DIWF'["N" DIWF=DIWF_"N" S X="" S I(1)="""D""",J(1)=11005.01 F D1=0:0 Q:$O(^A1AE(11005,D0,"D",D1))'>0  S D1=$O(^(D1)) D:$X>3 T Q:'DN  D B1
"RTN","A1AEP",73,0)
 ;
"RTN","A1AEP",74,0)
 G B1R
"RTN","A1AEP",75,0)
B1 ;
"RTN","A1AEP",76,0)
 ; new code
"RTN","A1AEP",77,0)
 S X=" "_$G(^A1AE(11005,D0,"D",D1,0))
"RTN","A1AEP",78,0)
 S:X["Associated patches:" A1AESTOP=1
"RTN","A1AEP",79,0)
 I 'A1AESTOP S DIWL=1,DIWR=78 D ^DIWP
"RTN","A1AEP",80,0)
 ; old code
"RTN","A1AEP",81,0)
 ;S X=$G(^A1AE(11005,D0,"D",D1,0)) S DIWL=1,DIWR=78 D ^DIWP
"RTN","A1AEP",82,0)
 Q
"RTN","A1AEP",83,0)
B1R ;
"RTN","A1AEP",84,0)
 D 0^DIWW
"RTN","A1AEP",85,0)
 D ^DIWW
"RTN","A1AEP",86,0)
 D T Q:'DN  D N D N D N:$X>0 Q:'DN  W ?0 W "Routine Information:"
"RTN","A1AEP",87,0)
 D N:$X>0 Q:'DN  W ?0 W "===================="
"RTN","A1AEP",88,0)
 D T Q:'DN  D N D N:$X>0 Q:'DN  W ?0 D RTNINFO^A1AEUTL2() K DIP K:DN Y
"RTN","A1AEP",89,0)
 D T Q:'DN  D N D N D N:$X>0 Q:'DN  W ?0 W "============================================================================="
"RTN","A1AEP",90,0)
 D N:$X>0 Q:'DN  W ?0 W "User Information:"
"RTN","A1AEP",91,0)
 W ?19 S Y=$P(^A1AE(11005,D0,0),"^",17) I Y X ^DD("DD") W ?40,"   Hold Date :   "_Y K DIP K:DN Y
"RTN","A1AEP",92,0)
 ; new code - do not indent
"RTN","A1AEP",93,0)
 D N:$X>2 Q:'DN  W ?0 W "Entered By  : "
"RTN","A1AEP",94,0)
 ; old code
"RTN","A1AEP",95,0)
 ;D N:$X>2 Q:'DN  W ?2 W "Entered By  : "
"RTN","A1AEP",96,0)
 ;
"RTN","A1AEP",97,0)
 S X=$G(^A1AE(11005,D0,0)) W ?14 S Y=$P(X,U,9) S Y=$S(Y="":Y,$D(^VA(200,Y,0))#2:$P(^(0),U),1:Y) W $E(Y,1,20)
"RTN","A1AEP",98,0)
 D N:$X>39 Q:'DN  W ?45 W "Date Entered : "
"RTN","A1AEP",99,0)
 ; new code (Date First Entered field may be -1 or blank in 11005)
"RTN","A1AEP",100,0)
 ;  if Y is not a date, leave blank
"RTN","A1AEP",101,0)
 W ?60 S Y=$P(X,U,12) D:(Y>0) DT
"RTN","A1AEP",102,0)
 ; old code
"RTN","A1AEP",103,0)
 ;W ?57 S Y=$P(X,U,12) D DT
"RTN","A1AEP",104,0)
 ;
"RTN","A1AEP",105,0)
 ; new code - do not indent
"RTN","A1AEP",106,0)
 D N:$X>2 Q:'DN  W "Completed By: "
"RTN","A1AEP",107,0)
 ; old code
"RTN","A1AEP",108,0)
 ;D N:$X>2 Q:'DN  W ?2 W "Completed By: "
"RTN","A1AEP",109,0)
 ;
"RTN","A1AEP",110,0)
 W ?14 S Y=$P(X,U,13) S Y=$S(Y="":Y,$D(^VA(200,Y,0))#2:$P(^(0),U),1:Y) W $E(Y,1,20)
"RTN","A1AEP",111,0)
 D N:$X>39 Q:'DN  W ?44 W "Date Completed: "
"RTN","A1AEP",112,0)
 W ?60 S Y=$P(X,U,10) D DT
"RTN","A1AEP",113,0)
 ; new code - do not indent
"RTN","A1AEP",114,0)
 D N:$X>2 Q:'DN  W "Released By : "
"RTN","A1AEP",115,0)
 ; old code
"RTN","A1AEP",116,0)
 ;D N:$X>2 Q:'DN  W ?2 W "Released By : "
"RTN","A1AEP",117,0)
 ;
"RTN","A1AEP",118,0)
 W ?14 S Y=$P(X,U,14) S Y=$S(Y="":Y,$D(^VA(200,Y,0))#2:$P(^(0),U),1:Y) W $E(Y,1,20)
"RTN","A1AEP",119,0)
 D N:$X>39 Q:'DN  W ?44 W "Date Released : "
"RTN","A1AEP",120,0)
 W ?60 S Y=$P(X,U,11) D DT
"RTN","A1AEP",121,0)
 D T Q:'DN  D N D N:$X>0 Q:'DN  W ?0 N A1AEPRNT S A1AEPRNT=1 D USERS^A1AEMAL(D0) K DIP K:DN Y
"RTN","A1AEP",122,0)
 D N:$X>0 Q:'DN  W ?0 W "============================================================================="
"RTN","A1AEP",123,0)
 S:'$D(A1AEHD) A1AEHD="Patch Details" D PRT^A1AEUTL:A1AEHD'["Display"&(A1AEOUT'["^") K DIP K:DN Y
"RTN","A1AEP",124,0)
 K Y K DIWF
"RTN","A1AEP",125,0)
 Q
"RTN","A1AEP",126,0)
HEAD ;
"RTN","A1AEP",127,0)
 W !,"--------------------------------------------------------------------------------",!!
"RTN","A1AEPB1")
0^19^B14446124
"RTN","A1AEPB1",1,0)
A1AEPB1 ;ise/rmo,mjk-Entry/Edit Problem Menu ;1987-11-24T11:00
"RTN","A1AEPB1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEPB1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEPB1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEPB1",5,0)
 ;
"RTN","A1AEPB1",6,0)
 ;
"RTN","A1AEPB1",7,0)
 ;primary change history
"RTN","A1AEPB1",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEPB1",9,0)
 ;1992-11-23: version 2.2 released
"RTN","A1AEPB1",10,0)
 ;
"RTN","A1AEPB1",11,0)
 ;
"RTN","A1AEPB1",12,0)
 G:$D(^DOPT("A1AEPB1",5)) A S ^DOPT("A1AEPB1",0)="Entry/Edit Problem Menu Option^1N^" F I=1:1 S X=$T(@I) Q:X=""  S ^DOPT("A1AEPB1",I,0)=$P(X,";;",2,99)
"RTN","A1AEPB1",13,0)
 S DIK="^DOPT(""A1AEPB1""," D IXALL^DIK
"RTN","A1AEPB1",14,0)
A W !! S DIC="^DOPT(""A1AEPB1"",",DIC(0)="AEQM" D ^DIC Q:Y<0  D @+Y G A
"RTN","A1AEPB1",15,0)
 ;
"RTN","A1AEPB1",16,0)
1 ;;Add a New Problem
"RTN","A1AEPB1",17,0)
 S A1AEFL=11006,A1AETY="PB",DIC("S")="I $D(^A1AE(11007,+Y,A1AETY,DUZ,0))" D PKG^A1AEUTL G Q:'($D(A1AEPK)&$D(A1AEVR)) D NUM^A1AEUTL G Q:'$D(A1AEPD)
"RTN","A1AEPB1",18,0)
 W !!,"Adding Problem: ",A1AEPD,! S $P(^A1AE(A1AEFL,DA,0),"^",8)=DUZ,$P(^(0),"^",9)=DT,$P(^(0),"^",10)="n",DIE="^A1AE(A1AEFL,",DR="[A1AE ADD/EDIT PROBLEMS]" D ^DIE
"RTN","A1AEPB1",19,0)
 G Q
"RTN","A1AEPB1",20,0)
 ;
"RTN","A1AEPB1",21,0)
2 ;;Delete an Existing Problem
"RTN","A1AEPB1",22,0)
 S A1AEFL=11006,DIC("A")="Select PROBLEM: ",DIC("S")="I $P(^(0),U,8)=DUZ,($P(^(0),U,10)=""c""!($P(^(0),U,10)=""n""))",DIC="^A1AE(A1AEFL,",DIC(0)="AEMQ" W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S DA=+Y,A1AEPD=$P(Y,U,2)
"RTN","A1AEPB1",23,0)
PMT2 W !!,"Are you sure you want to delete problem "_A1AEPD_"? N// " R X:DTIME G Q:'$T!(X="^")!("Nn"[$E(X,1)) G DEL2:"Yy"[$E(X,1) W:X'["?" *7 W !!,"Enter Y to delete the selected problem, or N to exit." G PMT2
"RTN","A1AEPB1",24,0)
DEL2 S DIK="^A1AE(A1AEFL," D ^DIK W !!?3,"...deletion of "_A1AEPD_" from 'Problem File completed"
"RTN","A1AEPB1",25,0)
 G Q
"RTN","A1AEPB1",26,0)
 ;
"RTN","A1AEPB1",27,0)
3 ;;Edit an Existing Problem
"RTN","A1AEPB1",28,0)
 S A1AEFL=11006,DIC("A")="Select PROBLEM: ",DIC("S")="I $P(^(0),U,8)=DUZ,($P(^(0),U,10)=""c""!($P(^(0),U,10)=""n""))",DIC="^A1AE(A1AEFL,",DIC(0)="AEQM" W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S DA=+Y,A1AEPD=$P(Y,U,2)
"RTN","A1AEPB1",29,0)
 W !!,"Editing Problem: ",A1AEPD,! S DIE="^A1AE(A1AEFL,",DR="[A1AE ADD/EDIT PROBLEMS]" D ^DIE
"RTN","A1AEPB1",30,0)
 G Q
"RTN","A1AEPB1",31,0)
 ;
"RTN","A1AEPB1",32,0)
4 ;;Resolve/Review an Existing Problem
"RTN","A1AEPB1",33,0)
 S A1AEFL=11006,DIC("A")="Select PROBLEM: ",DIC("S")="I $P(^(0),U,10)'=""n"",$D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0))",DIC="^A1AE(A1AEFL,",DIC(0)="AEMQ" W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S A1AEIFN=+Y,A1AEPD=$P(Y,U,2)
"RTN","A1AEPB1",34,0)
 W ! S L=0,DIC="^A1AE(A1AEFL,",FLDS="[A1AE PROBLEM DETAILS]",BY="@.01",FR=A1AEPD,TO=A1AEPD S IOP="HOME" D EN1^DIP K FLDS,BY,L,FR,TO,IOP
"RTN","A1AEPB1",35,0)
 R !!,"Do you want to Change the Status of this Problem? N// ",X:DTIME G Q:'$T!(X="^")!("Nn"[$E(X,1)) S DA=A1AEIFN,DIE="^A1AE(A1AEFL,",DR="[A1AE CHANGE PROBLEM STATUS]" D ^DIE
"RTN","A1AEPB1",36,0)
 ;
"RTN","A1AEPB1",37,0)
Q K A1AEIFN,A1AEPKIF,A1AEPKNM,A1AEONE,A1AEPD,A1AEPK,A1AEVR,A1AENB,A1AEFL,A1AETY
"RTN","A1AEPH1")
0^22^B48225759
"RTN","A1AEPH1",1,0)
A1AEPH1 ;isa/rmo,mjk,ven/toad-patch control ;2015-05-29T22:26
"RTN","A1AEPH1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEPH1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEPH1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEPH1",5,0)
 ;
"RTN","A1AEPH1",6,0)
 ;
"RTN","A1AEPH1",7,0)
 ;primary change history
"RTN","A1AEPH1",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEPH1",9,0)
 ;
"RTN","A1AEPH1",10,0)
 ; contents:
"RTN","A1AEPH1",11,0)
 ;
"RTN","A1AEPH1",12,0)
 ; 1. Add a Patch
"RTN","A1AEPH1",13,0)
 ; 2. Delete a Patch
"RTN","A1AEPH1",14,0)
 ; 3. Edit a Patch
"RTN","A1AEPH1",15,0)
 ; 4. Verify a Patch
"RTN","A1AEPH1",16,0)
 ; 5. Copy a Patch into a New Patch => ^A1AEPH8
"RTN","A1AEPH1",17,0)
 ; 6. Create a Packman Message => PACK^A1AEM
"RTN","A1AEPH1",18,0)
 ; 7. Forward a Complete/unverified Message => FCOM^A1AEM2
"RTN","A1AEPH1",19,0)
 ; 8. Forward a Verified Patch Message => FVER^A1AEM2
"RTN","A1AEPH1",20,0)
 ;
"RTN","A1AEPH1",21,0)
 ; change history:
"RTN","A1AEPH1",22,0)
 ;
"RTN","A1AEPH1",23,0)
 ; 2014-03-28, ven/toad: Rick Marshall of the VISTA Expertise Network
"RTN","A1AEPH1",24,0)
 ; refactored 1 to make clearer if and where the .2 field of file 11005
"RTN","A1AEPH1",25,0)
 ; is being set.
"RTN","A1AEPH1",26,0)
 ;
"RTN","A1AEPH1",27,0)
 ; 2015-05-26/9, ven/toad: initial refactoring of subroutine 1 for readability.
"RTN","A1AEPH1",28,0)
 ; Refactor subroutines A1AEPH1 & 2 for readability.
"RTN","A1AEPH1",29,0)
 ;
"RTN","A1AEPH1",30,0)
 ; TO DO: comment it.
"RTN","A1AEPH1",31,0)
 ;
"RTN","A1AEPH1",32,0)
 I '$D(^DOPT("A1AEPH1",5)) D
"RTN","A1AEPH1",33,0)
 . S ^DOPT("A1AEPH1",0)="Entry/Edit Patch Menu Option^1N^"
"RTN","A1AEPH1",34,0)
 . F I=1:1 D  Q:X=""
"RTN","A1AEPH1",35,0)
 . . S X=$T(@I)
"RTN","A1AEPH1",36,0)
 . . Q:X=""
"RTN","A1AEPH1",37,0)
 . . S ^DOPT("A1AEPH1",I,0)=$P(X,";;",2,99)
"RTN","A1AEPH1",38,0)
 . . Q
"RTN","A1AEPH1",39,0)
 . ;
"RTN","A1AEPH1",40,0)
 . S DIK="^DOPT(""A1AEPH1"","
"RTN","A1AEPH1",41,0)
 . D IXALL^DIK
"RTN","A1AEPH1",42,0)
 . Q
"RTN","A1AEPH1",43,0)
 ;
"RTN","A1AEPH1",44,0)
 F  D  Q:Y<0
"RTN","A1AEPH1",45,0)
 . W !!
"RTN","A1AEPH1",46,0)
 . S DIC="^DOPT(""A1AEPH1"","
"RTN","A1AEPH1",47,0)
 . S DIC(0)="AEMQ"
"RTN","A1AEPH1",48,0)
 . D ^DIC
"RTN","A1AEPH1",49,0)
 . Q:Y<0
"RTN","A1AEPH1",50,0)
 . D @+Y
"RTN","A1AEPH1",51,0)
 . Q
"RTN","A1AEPH1",52,0)
 ;
"RTN","A1AEPH1",53,0)
 QUIT  ; end of A1AEPH1
"RTN","A1AEPH1",54,0)
 ;
"RTN","A1AEPH1",55,0)
 ;
"RTN","A1AEPH1",56,0)
1 ;;Add a Patch
"RTN","A1AEPH1",57,0)
 ; option add a patch [A1AE PHADD]
"RTN","A1AEPH1",58,0)
 ;
"RTN","A1AEPH1",59,0)
 S A1AEFL=11005
"RTN","A1AEPH1",60,0)
 S A1AETY="PH"
"RTN","A1AEPH1",61,0)
 S DIC("S")="I $D(^A1AE(11007,+Y,A1AETY,DUZ,0))"
"RTN","A1AEPH1",62,0)
 D PKG^A1AEUTL
"RTN","A1AEPH1",63,0)
 G Q:'$D(A1AEPK)
"RTN","A1AEPH1",64,0)
 ;
"RTN","A1AEPH1",65,0)
 S A1AE(0)="AEQL"
"RTN","A1AEPH1",66,0)
 D VER^A1AEUTL
"RTN","A1AEPH1",67,0)
 G Q:'$D(A1AEVR)
"RTN","A1AEPH1",68,0)
 ;
"RTN","A1AEPH1",69,0)
 D NUM^A1AEUTL
"RTN","A1AEPH1",70,0)
 G Q:'$D(A1AEPD)
"RTN","A1AEPH1",71,0)
 S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEPH1",72,0)
 ;
"RTN","A1AEPH1",73,0)
 W !!,"Patch Added: ",A1AEPD,!
"RTN","A1AEPH1",74,0)
 S $P(^A1AE(11005,DA,0),U,8)="u"
"RTN","A1AEPH1",75,0)
 S $P(^(0),U,9)=DUZ
"RTN","A1AEPH1",76,0)
 S $P(^(0),U,12)=DT
"RTN","A1AEPH1",77,0)
 S ^A1AE(11005,"AS",A1AEPKIF,A1AEVR,"u",A1AENB,DA)=""
"RTN","A1AEPH1",78,0)
 ;
"RTN","A1AEPH1",79,0)
 S DIE="^A1AE(11005,"
"RTN","A1AEPH1",80,0)
 I $P(A1AEPD,"*",2)="DBA" D
"RTN","A1AEPH1",81,0)
 . S DR="6.5///db"
"RTN","A1AEPH1",82,0)
 . D ^DIE
"RTN","A1AEPH1",83,0)
 . K DE,DQ,DR
"RTN","A1AEPH1",84,0)
 ;
"RTN","A1AEPH1",85,0)
 S (X,DINUM)=DA
"RTN","A1AEPH1",86,0)
 S DIC="^A1AE(11005.1,"
"RTN","A1AEPH1",87,0)
 S DIC("DR")="20///"_"No routines included"
"RTN","A1AEPH1",88,0)
 K DD,DO
"RTN","A1AEPH1",89,0)
 D FILE^DICN
"RTN","A1AEPH1",90,0)
 K DE,DQ,DR,DIC("DR")
"RTN","A1AEPH1",91,0)
 ;
"RTN","A1AEPH1",92,0)
 S DR="[A1AE ADD/EDIT PATCHES]"
"RTN","A1AEPH1",93,0)
 D ^DIE
"RTN","A1AEPH1",94,0)
 K DQ,DE,DIE
"RTN","A1AEPH1",95,0)
 D Q
"RTN","A1AEPH1",96,0)
 ;
"RTN","A1AEPH1",97,0)
 GOTO 1 ; end of 1
"RTN","A1AEPH1",98,0)
 ;
"RTN","A1AEPH1",99,0)
 ;
"RTN","A1AEPH1",100,0)
2 ;;Delete a Patch
"RTN","A1AEPH1",101,0)
 ; option delete a patch [A1AE PHDEL]
"RTN","A1AEPH1",102,0)
 ; no longer called by Menuman, which now directly calls option^A1AEPHD
"RTN","A1AEPH1",103,0)
 ;
"RTN","A1AEPH1",104,0)
 D OPTION^A1AEPHD
"RTN","A1AEPH1",105,0)
 ;
"RTN","A1AEPH1",106,0)
 quit  ; end of 2
"RTN","A1AEPH1",107,0)
 ;
"RTN","A1AEPH1",108,0)
 ;
"RTN","A1AEPH1",109,0)
3 ;;Edit a Patch
"RTN","A1AEPH1",110,0)
 ; option edit a patch [A1AE PHEDIT]
"RTN","A1AEPH1",111,0)
 ;
"RTN","A1AEPH1",112,0)
 N A1AESTOP
"RTN","A1AEPH1",113,0)
 S A1AESTOP=0
"RTN","A1AEPH1",114,0)
 F  D  D Q Q:A1AESTOP
"RTN","A1AEPH1",115,0)
 . N DIC,X,Y,DA,A1AEPD
"RTN","A1AEPH1",116,0)
 . S DIC("A")="Select PATCH: "
"RTN","A1AEPH1",117,0)
 . S DIC("S")="I $D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0))"
"RTN","A1AEPH1",118,0)
 . S DIC="^A1AE(11005,",DIC(0)="AEMQ"
"RTN","A1AEPH1",119,0)
 . W !
"RTN","A1AEPH1",120,0)
 . D ^DIC I Y<0 S A1AESTOP=1 Q
"RTN","A1AEPH1",121,0)
 . S DA=+Y,A1AEPD=$P(Y,U,2) K DIC
"RTN","A1AEPH1",122,0)
 . I $P(A1AEPD,"*",2)=999 S $P(A1AEPD,"*",2)="DBA"
"RTN","A1AEPH1",123,0)
 . I '$D(^A1AE(11005.1,DA,0)) D
"RTN","A1AEPH1",124,0)
 . . N DINUM,DD,DO,DIC
"RTN","A1AEPH1",125,0)
 . . S (X,DINUM)=DA,DIC(0)="LE",DIC="^A1AE(11005.1,"
"RTN","A1AEPH1",126,0)
 . . S DIC("DR")="20///No routines included"
"RTN","A1AEPH1",127,0)
 . . D FILE^DICN
"RTN","A1AEPH1",128,0)
 . W !!,"Editing Patch: ",A1AEPD,!
"RTN","A1AEPH1",129,0)
 . L +^A1AE(11005,DA):5 E  D  Q
"RTN","A1AEPH1",130,0)
 . . W !,$C(7),"This patch is being edited by another user" H 3
"RTN","A1AEPH1",131,0)
 . N A1AEOLD
"RTN","A1AEPH1",132,0)
 . S A1AEOLD=$P($G(^A1AE(11005,DA,0)),U,8)
"RTN","A1AEPH1",133,0)
 . D
"RTN","A1AEPH1",134,0)
 . . N A1AEOLD,DIE,DR ; Preserve A1AEOLD.  It's killed in Q^A1AEPHS
"RTN","A1AEPH1",135,0)
 . . S DIE="^A1AE(11005,",DR="[A1AE ADD/EDIT PATCHES]"
"RTN","A1AEPH1",136,0)
 . . D ^DIE
"RTN","A1AEPH1",137,0)
 . N A1AE0,A1AENEW
"RTN","A1AEPH1",138,0)
 . S A1AE0=$G(^A1AE(11005,DA,0))
"RTN","A1AEPH1",139,0)
 . L -^A1AE(11005,DA)
"RTN","A1AEPH1",140,0)
 . S A1AENEW=$P(A1AE0,U,8)
"RTN","A1AEPH1",141,0)
 . I A1AEOLD'="v"!(A1AENEW'="e") Q
"RTN","A1AEPH1",142,0)
 . ; Send the 'Entered in Error' bulletin
"RTN","A1AEPH1",143,0)
 . N A1AETX,X,A1AEOPT
"RTN","A1AEPH1",144,0)
 . S A1AEOPT="'Entered in Error'"
"RTN","A1AEPH1",145,0)
 . S X=$$GET1^DIQ(11005,DA_",",8.5,"Z","A1AETX")
"RTN","A1AEPH1",146,0)
 . S A1AETX(.1,0)=""
"RTN","A1AEPH1",147,0)
 . S A1AETX(.2,0)="Entered in Error Description:"
"RTN","A1AEPH1",148,0)
 . D BOTH^A1AEPHS
"RTN","A1AEPH1",149,0)
 ;
"RTN","A1AEPH1",150,0)
 QUIT  ; end of 3
"RTN","A1AEPH1",151,0)
 ;
"RTN","A1AEPH1",152,0)
 ;
"RTN","A1AEPH1",153,0)
4 ;;Verify a Patch
"RTN","A1AEPH1",154,0)
 ; option release a patch (and/or edit internal comments) [A1AE PHVER]
"RTN","A1AEPH1",155,0)
 ;
"RTN","A1AEPH1",156,0)
 K A1AEPKV
"RTN","A1AEPH1",157,0)
 S DIC("A")="Select PATCH: ",DIC("S")="I $P(^(0),U,8)=""c"",$D(^A1AE(11007,+$P(^(0),U,2),""PB"",DUZ,0)),$P(^(0),U,2)=""V""",DIC="^A1AE(11005,",DIC(0)="AEMQZ" W ! D ^DIC K DIC G Q:Y<0 S (A1AEIFN,DA)=+Y,A1AEPD=$P(Y,U,2)
"RTN","A1AEPH1",158,0)
 I $L($P($G(^A1AE(11005,DA,4)),U,1)) W !,"This is a Package Release, You need to use the Package Release option." D Q G 4
"RTN","A1AEPH1",159,0)
 S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEPH1",160,0)
 ;
"RTN","A1AEPH1",161,0)
 S Y=$P(Y(0),U,17) I Y,Y>DT W !!,"Do not release until: " D DT^DIQ
"RTN","A1AEPH1",162,0)
 S A1AEST=$S($P(Y(0),U,7)="e":2,1:31) ;get status
"RTN","A1AEPH1",163,0)
 ;
"RTN","A1AEPH1",164,0)
 W !!,"Internal Comments to developers/releasers for: ",A1AEPD,! K Y S DIE="^A1AE(11005,",DR="16;" D ^DIE K DQ,DE,DIE,DIC,DR,D0,DA
"RTN","A1AEPH1",165,0)
 W ! S DIR(0)="Y",DIR("B")="No",DIR("A")="Continue and Display Patch " D ^DIR K DIR I 'Y D Q G 4
"RTN","A1AEPH1",166,0)
 ;check routine patches
"RTN","A1AEPH1",167,0)
 F AX=0:0 S AX=$O(^A1AE(11005,A1AEIFN,"P",AX)) Q:'AX  I $D(^(AX,0)) S X=^(0) D RCHK^A1AEM2
"RTN","A1AEPH1",168,0)
 W ! S DIR(0)="E" D ^DIR K DIR I 'Y D Q G 4
"RTN","A1AEPH1",169,0)
 ;
"RTN","A1AEPH1",170,0)
 S D0=A1AEIFN,A1AEVPR="",A1AEHD="DHCP Completed/NotReleased Patch Display"
"RTN","A1AEPH1",171,0)
 W ! S %ZIS="",A1AEPGE=0 D ^%ZIS G Q:POP K IOP,%ZIS U IO S ^UTILITY($J,1)="D HD^A1AEPH2",DIWF="B4X" K ^UTILITY($J,"W"),DXS D HD^A1AEPH2,^A1AEP ;SO DI*22*152
"RTN","A1AEPH1",172,0)
 K DN,DXS,DIWF ;;; I A1AEOUT'[U B  G Q
"RTN","A1AEPH1",173,0)
 K A1AEHD,A1AELNE,A1AEOUT,A1AEPGE,A1AEVPR D CLOSE^A1AEUTL1
"RTN","A1AEPH1",174,0)
 ;S X2=A1AEST,X1=DT D C^%DTC S Y=X D DD^%DT S A1AEST=Y
"RTN","A1AEPH1",175,0)
 S X=$$FMADD^XLFDT(DT,A1AEST),A1AEST=$$FMTE^XLFDT(X) ;Get Compliance date
"RTN","A1AEPH1",176,0)
 W !!,"Releasing Patch: ",A1AEPD,! K Y S DA=A1AEIFN,DIE="^A1AE(11005,",DR="18//^S X=A1AEST;8;S Y=$S(X=""e"":""@10"",1:"""");@10;8.5" ;;;D ^DIE K DQ,DE
"RTN","A1AEPH1",177,0)
 L +@(DIE_DA_")"):5
"RTN","A1AEPH1",178,0)
 I '$T W !,$C(7),"This patch is being released by another user" H 3
"RTN","A1AEPH1",179,0)
 E  D ^DIE K DQ,DE L -@(DIE_DA_")")
"RTN","A1AEPH1",180,0)
 D Q
"RTN","A1AEPH1",181,0)
 ;
"RTN","A1AEPH1",182,0)
 GOTO 4 ; end of 4
"RTN","A1AEPH1",183,0)
 ;
"RTN","A1AEPH1",184,0)
 ;
"RTN","A1AEPH1",185,0)
5 ;;Copy a patch into a new patch
"RTN","A1AEPH1",186,0)
 ; option copy a patch into a new patch [A1AE COPY PATCH]
"RTN","A1AEPH1",187,0)
 ;
"RTN","A1AEPH1",188,0)
 G ^A1AEPH8
"RTN","A1AEPH1",189,0)
 ;
"RTN","A1AEPH1",190,0)
 ;
"RTN","A1AEPH1",191,0)
6 ;;Create a packman message
"RTN","A1AEPH1",192,0)
 ; option create a packman message [A1AE DEV CREATE]
"RTN","A1AEPH1",193,0)
 ;
"RTN","A1AEPH1",194,0)
 G PACK^A1AEM
"RTN","A1AEPH1",195,0)
 ;
"RTN","A1AEPH1",196,0)
 ;
"RTN","A1AEPH1",197,0)
7 ;;Forward a Complete/unverified message
"RTN","A1AEPH1",198,0)
 ; option forward a completed/notreleased patch message [A1AE DEV FORWARD]
"RTN","A1AEPH1",199,0)
 ;
"RTN","A1AEPH1",200,0)
 G FCOM^A1AEM2
"RTN","A1AEPH1",201,0)
 ;
"RTN","A1AEPH1",202,0)
 ;
"RTN","A1AEPH1",203,0)
8 ;;Forward a Verified patch message
"RTN","A1AEPH1",204,0)
 ; option forward a released patch message [A1AE FORWARD]
"RTN","A1AEPH1",205,0)
 ;
"RTN","A1AEPH1",206,0)
 G FVER^A1AEM2
"RTN","A1AEPH1",207,0)
 ;
"RTN","A1AEPH1",208,0)
 ;
"RTN","A1AEPH1",209,0)
Q ; cleanup and quit for ^A1AEPH1 and ^A1AEUTL
"RTN","A1AEPH1",210,0)
 ;
"RTN","A1AEPH1",211,0)
 K ^UTILITY($J,"A1AECOP"),A1AEOLPD,A1AE0,A1AEPKIF,A1AEPKNM,A1AEPD,A1AEPK,A1AEVR,A1AENB,A1AEFL,A1AETY
"RTN","A1AEPH1",212,0)
 K DIK,A1AEHD,A1AEIFN,A1AELNE,A1AEOUT,A1AEPGE,A1AEVPR
"RTN","A1AEPH1",213,0)
 K AEQ,A1AESUB,A1AETX,A1AEXMZ,A1NAM,A1NAM1,AX,AXMZ,A1AEST,A1AETVR
"RTN","A1AEPH1",214,0)
 K JL2,SAVEX,C,D0,DA,DI,DIG,DIH,DIW,DIV,DR,XMB,XMDT,XMDUZ,XMM,XMSUB
"RTN","A1AEPH1",215,0)
 ;
"RTN","A1AEPH1",216,0)
 QUIT  ; end of Q
"RTN","A1AEPH1",217,0)
 ;
"RTN","A1AEPH1",218,0)
 ;
"RTN","A1AEPH1",219,0)
EOR ; end of routine A1AEPH1
"RTN","A1AEPH2")
0^23^B126703731
"RTN","A1AEPH2",1,0)
A1AEPH2 ;isw/rew,isa/rmo,mjk ;2015-06-12  10:38 PM
"RTN","A1AEPH2",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEPH2",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEPH2",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEPH2",5,0)
 ;
"RTN","A1AEPH2",6,0)
 ;
"RTN","A1AEPH2",7,0)
 ;primary change history
"RTN","A1AEPH2",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEPH2",9,0)
 ;1992-11-23: version 2.2 released
"RTN","A1AEPH2",10,0)
 ;
"RTN","A1AEPH2",11,0)
 ; CHANGE VEN/LGC 2015 06 12
"RTN","A1AEPH2",12,0)
 ;  HD header modified to support correct export format
"RTN","A1AEPH2",13,0)
 ;
"RTN","A1AEPH2",14,0)
 G:$D(^DOPT("A1AEPH2",11)) A S ^DOPT("A1AEPH2",0)="Print Patch Menu Option^1N^" F I=1:1 S X=$T(@I) Q:X=""  S ^DOPT("A1AEPH2",I,0)=$P(X,";",2,99)
"RTN","A1AEPH2",15,0)
 S DIK="^DOPT(""A1AEPH2""," D IXALL^DIK
"RTN","A1AEPH2",16,0)
A W !! S DIC="^DOPT(""A1AEPH2"",",DIC(0)="AEMQ" D ^DIC Q:Y<0  D @+Y G A
"RTN","A1AEPH2",17,0)
 ;
"RTN","A1AEPH2",18,0)
1 ;Completed/unverified Patch Report
"RTN","A1AEPH2",19,0)
 S DIS(0)="I $P(^A1AE(11005,D0,0),U,8)=""c""",A1AEHD="Completed/NotReleased DHCP Patches Report",A1AES=""
"RTN","A1AEPH2",20,0)
 S DIC("S")="I $S($D(^A1AE(11007,+Y,""PH"",DUZ,0)):1,'$D(^A1AE(11007,+Y,""PB"",DUZ,0)):0,$P(^(0),U,2)=""V"":1,1:0)" G DIP^A1AEPH3
"RTN","A1AEPH2",21,0)
 ;
"RTN","A1AEPH2",22,0)
2 ;New Patch Report
"RTN","A1AEPH2",23,0)
 G PRTNEW^A1AEVP
"RTN","A1AEPH2",24,0)
 ;
"RTN","A1AEPH2",25,0)
3 ;Under Development Patch Report
"RTN","A1AEPH2",26,0)
 S DIS(0)="I $P(^A1AE(11005,D0,0),U,8)=""u""",A1AEHD="Under Development DHCP Patches Report",A1AES=""
"RTN","A1AEPH2",27,0)
 S DIC("S")="I $D(^A1AE(11007,+Y,""PH"",DUZ,0))" G DIP^A1AEPH3
"RTN","A1AEPH2",28,0)
 ;
"RTN","A1AEPH2",29,0)
4 ;Display a Completed/NotReleased Patch
"RTN","A1AEPH2",30,0)
 G COMDIS^A1AEPH6
"RTN","A1AEPH2",31,0)
 ;
"RTN","A1AEPH2",32,0)
5 ;Summary Report for a Package
"RTN","A1AEPH2",33,0)
 ;replace .01 sort with 3 in template
"RTN","A1AEPH2",34,0)
 N A1AEPK,A1AEPKIF,A1AEPKNM,A1AEVR,A1AEREV,X,Y,DIR,ZTSK,%ZIS,A1AEDEV
"RTN","A1AEPH2",35,0)
 D PKG^A1AEUTL G Q:'$D(A1AEPK) D VER^A1AEUTL G Q:'$D(A1AEVR)
"RTN","A1AEPH2",36,0)
 N DIC,X,Y S DIC(0)="AEMQ",DIC=11007.1,DIC("A")="Select Stream (enter to see all streams): " D ^DIC
"RTN","A1AEPH2",37,0)
 I Y>0 N A1AESTRM S A1AESTRM=+Y
"RTN","A1AEPH2",38,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Sort by reverse SEQ # "
"RTN","A1AEPH2",39,0)
 D ^DIR Q:$D(DIRUT)
"RTN","A1AEPH2",40,0)
 S A1AEREV=Y
"RTN","A1AEPH2",41,0)
 S %ZIS="QN"
"RTN","A1AEPH2",42,0)
 D ^%ZIS Q:POP
"RTN","A1AEPH2",43,0)
 S A1AEDEV=ION_";"_IOM_";"_IOSL
"RTN","A1AEPH2",44,0)
 I '$D(IO("Q")) D
"RTN","A1AEPH2",45,0)
 . D DQ5
"RTN","A1AEPH2",46,0)
 E  D
"RTN","A1AEPH2",47,0)
 . N ZTRTN,ZTSAVE,ZTDESC,ZTSK,ZTDTH,ZTIO,I
"RTN","A1AEPH2",48,0)
 . S ZTDESC="A1AE Patch Summary"
"RTN","A1AEPH2",49,0)
 . S ZTRTN="DQ5^A1AEPH2"
"RTN","A1AEPH2",50,0)
 . F I="A1AEPK","A1AEPKIF","A1AEPKNM","A1AEVR","A1AEREV","A1AEDEV" S ZTSAVE(I)=""
"RTN","A1AEPH2",51,0)
 . I $D(A1AESTAR) S ZTSAVE("A1AESTAR")=""
"RTN","A1AEPH2",52,0)
 . I $D(A1AESTRM) S ZTSAVE("A1AESTRM")=""
"RTN","A1AEPH2",53,0)
 . S ZTIO=""
"RTN","A1AEPH2",54,0)
 . D ^%ZTLOAD
"RTN","A1AEPH2",55,0)
 . K IO("Q")
"RTN","A1AEPH2",56,0)
 . I $D(ZTSK) W !,"Request queued.  Task number: ",ZTSK
"RTN","A1AEPH2",57,0)
 D HOME^%ZIS
"RTN","A1AEPH2",58,0)
 Q
"RTN","A1AEPH2",59,0)
DQ5 ;
"RTN","A1AEPH2",60,0)
 N L,DIC,FLDS,BY,TO,FR,TREV,FREV,TMP,A1AEDJDH
"RTN","A1AEPH2",61,0)
 S L=0,DIC="^A1AE(11005,"
"RTN","A1AEPH2",62,0)
 S FLDS="[A1AE VERIFIED PATCH SUMMARY]"
"RTN","A1AEPH2",63,0)
 ;
"RTN","A1AEPH2",64,0)
 I '$D(DIS(0)) S DIC("S")="I $P(^(0),U,2)=""Y""!($P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+Y))))"
"RTN","A1AEPH2",65,0)
 I $D(A1AESTRM) D  ; If we have a stream, put in DIS(0) or 1 if 0 is occupied.
"RTN","A1AEPH2",66,0)
 . N SCN S SCN="I $P(^(0),U,20)=A1AESTRM"
"RTN","A1AEPH2",67,0)
 . I $D(DIS(0)) S DIS(1)=SCN
"RTN","A1AEPH2",68,0)
 . E  S DIS(0)=SCN
"RTN","A1AEPH2",69,0)
 ;
"RTN","A1AEPH2",70,0)
 ;fix for fileman BY restriction -- can't use format BY with BY(0)
"RTN","A1AEPH2",71,0)
 S BY=$S(A1AEREV:"@INTERNAL(#3),-6",1:"@INTERNAL(#3),6")
"RTN","A1AEPH2",72,0)
 S FR="0,@",TO="99999,99999"
"RTN","A1AEPH2",73,0)
 ;use entry# of print driver for namespace
"RTN","A1AEPH2",74,0)
 S A1AEDJDH=$J_"."_$P($H,",",2) K ^TMP("A1AE5",A1AEDJDH) S TMP="" ; REW added seconds in case user tries to run a second listing before the first finishes
"RTN","A1AEPH2",75,0)
 ;
"RTN","A1AEPH2",76,0)
 ; VEN/SMH - Changed logic here for v 2.4 with new AB index
"RTN","A1AEPH2",77,0)
 ; Regular Patches
"RTN","A1AEPH2",78,0)
 N I S I=""
"RTN","A1AEPH2",79,0)
 F  S I=$O(^A1AE(11005,"AB",A1AEPK,A1AEVR,I)) Q:'I  S ^TMP("A1AE5",A1AEDJDH,$O(^(I,0)))=""
"RTN","A1AEPH2",80,0)
 ; DBA Patches (DBA = version 999)
"RTN","A1AEPH2",81,0)
 N I S I=""
"RTN","A1AEPH2",82,0)
 I A1AEPK'="XM" F  S I=$O(^A1AE(11005,"AB",A1AEPK,999,I)) Q:'I  S ^TMP("A1AE5",A1AEDJDH,$O(^(I,0)))=""
"RTN","A1AEPH2",83,0)
DIP5 ;
"RTN","A1AEPH2",84,0)
 ;I '$D(^TMP("A1AE5",A1AEDJDH)) W !?10,"No summary available" Q
"RTN","A1AEPH2",85,0)
 K FREV,TREV S BY(0)="^TMP(""A1AE5"","_A1AEDJDH_",",L(0)=1
"RTN","A1AEPH2",86,0)
 S IOP=A1AEDEV
"RTN","A1AEPH2",87,0)
 D EN1^DIP
"RTN","A1AEPH2",88,0)
 K ^TMP("A1AE5",A1AEDJDH),DIS
"RTN","A1AEPH2",89,0)
 Q
"RTN","A1AEPH2",90,0)
 ;
"RTN","A1AEPH2",91,0)
6 ;Display a Patch
"RTN","A1AEPH2",92,0)
 G PATDIS^A1AEPH6
"RTN","A1AEPH2",93,0)
 ;
"RTN","A1AEPH2",94,0)
7 ;All Verified Patches for a Package
"RTN","A1AEPH2",95,0)
 N A1AESTRM
"RTN","A1AEPH2",96,0)
 N DIC,X,Y S DIC(0)="AEMQ",DIC=11007.1,DIC("A")="Select a Stream: " D ^DIC
"RTN","A1AEPH2",97,0)
 I Y'>0 QUIT
"RTN","A1AEPH2",98,0)
 S A1AESTRM=+Y
"RTN","A1AEPH2",99,0)
 S DIS(0)="I $P(^(0),U,8)=""v"",$P(^(0),U,20)=A1AESTRM",A1AEHD="Released DHCP Patches",DIC("S")="I $P(^(0),U,2)=""Y""!($P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+Y))))" G DIP^A1AEPH3
"RTN","A1AEPH2",100,0)
 ;
"RTN","A1AEPH2",101,0)
8 ;Extended Display of a Patch
"RTN","A1AEPH2",102,0)
 G EXTDIS^A1AEPH6
"RTN","A1AEPH2",103,0)
 ;
"RTN","A1AEPH2",104,0)
9 ;Verified Patch Summary Report by Date
"RTN","A1AEPH2",105,0)
 G ^A1AEPH4
"RTN","A1AEPH2",106,0)
 ;
"RTN","A1AEPH2",107,0)
10 ;Detailed Report of Verified Patches by Date
"RTN","A1AEPH2",108,0)
 G ^A1AEPH5
"RTN","A1AEPH2",109,0)
 ;
"RTN","A1AEPH2",110,0)
11 ;Display Number of New Patches
"RTN","A1AEPH2",111,0)
 G DSPNEW^A1AEVP
"RTN","A1AEPH2",112,0)
 ;
"RTN","A1AEPH2",113,0)
12 ;Update patches as printed for a User's packages
"RTN","A1AEPH2",114,0)
 G ^A1AEVP1
"RTN","A1AEPH2",115,0)
 ;
"RTN","A1AEPH2",116,0)
13 ;Complete/unverified Summary Report for Assigned Packages
"RTN","A1AEPH2",117,0)
 W !
"RTN","A1AEPH2",118,0)
 ; VEN/SMH - Added selection fo patch stream
"RTN","A1AEPH2",119,0)
 N STRM
"RTN","A1AEPH2",120,0)
 N DIC,X,Y S DIC(0)="AEMQ",DIC=11007.1,DIC("A")="Select a Stream: " D ^DIC
"RTN","A1AEPH2",121,0)
 I Y'>0 QUIT
"RTN","A1AEPH2",122,0)
 S STRM=+Y
"RTN","A1AEPH2",123,0)
 D ^%ZIS S AIOP=IO G PKG
"RTN","A1AEPH2",124,0)
 ;
"RTN","A1AEPH2",125,0)
14 ;Summary Report (OLD 5)
"RTN","A1AEPH2",126,0)
 ;
"RTN","A1AEPH2",127,0)
PKG K AN S PKG=0
"RTN","A1AEPH2",128,0)
 F  S PKG=$O(^A1AE(11007,"AV",DUZ,PKG)) Q:'PKG  DO
"RTN","A1AEPH2",129,0)
 .I $D(^DIC(9.4,PKG,0)) S (AN(PKG),A1AEPK)=$P(^(0),"^",2) DO
"RTN","A1AEPH2",130,0)
 ..S A1AEVR=0
"RTN","A1AEPH2",131,0)
 ..F  S A1AEVR=$O(^A1AE(11007,PKG,"V",A1AEVR)) Q:'A1AEVR  DO 
"RTN","A1AEPH2",132,0)
 ...S AN(PKG,A1AEVR)=""
"RTN","A1AEPH2",133,0)
 S PKG=0
"RTN","A1AEPH2",134,0)
 F  S PKG=$O(AN(PKG)) Q:'PKG  S A1AEPK=AN(PKG) DO
"RTN","A1AEPH2",135,0)
 .S A1AEVR=0
"RTN","A1AEPH2",136,0)
 .F  S A1AEVR=$O(AN(PKG,A1AEVR)) Q:'A1AEVR  DO
"RTN","A1AEPH2",137,0)
 ..I '$D(^A1AE(11005,"AS",PKG,A1AEVR,"c")) K AN(PKG,A1AEVR) Q
"RTN","A1AEPH2",138,0)
 ..D PRT
"RTN","A1AEPH2",139,0)
 K AN G Q
"RTN","A1AEPH2",140,0)
PRT S DHD="DHCP Patch Summary Report for "_A1AEPK_"*"_A1AEVR_" Complete/NotReleased Patches",FLDS="[A1AE VERIFIED PATCH SUMMARY]",L=0,DIC="^A1AE(11005,",BY(0)="^A1AE(11005,""AB"",",A1AEPGE=1,L(0)=4
"RTN","A1AEPH2",141,0)
 S DIS(0)="I $P(^A1AE(11005,D0,0),""^"",3)=A1AEVR!($P(^(0),""^"",3)=999)&($P(^A1AE(11005,D0,0),""^"",8)=""c"")"
"RTN","A1AEPH2",142,0)
 ; VEN/SMH - Now we use BY(0) on the AB index
"RTN","A1AEPH2",143,0)
 S FR(0,1)=A1AEPK
"RTN","A1AEPH2",144,0)
 S TO(0,1)=A1AEPK
"RTN","A1AEPH2",145,0)
 S FR(0,2)=A1AEVR
"RTN","A1AEPH2",146,0)
 S TO(0,2)=999
"RTN","A1AEPH2",147,0)
 S FR(0,3)=STRM-1
"RTN","A1AEPH2",148,0)
 S TO(0,3)=STRM+998
"RTN","A1AEPH2",149,0)
 ; VEN/SMH - Old code
"RTN","A1AEPH2",150,0)
 ; S TO=A1AEPK_"*"_A1AEVR_"*"
"RTN","A1AEPH2",151,0)
 ; S FR=TO_"  1"
"RTN","A1AEPH2",152,0)
 ; S TO=$P(TO,"*")_"*"_999_"*"_999
"RTN","A1AEPH2",153,0)
 S IOP=AIOP,AY=$Y D EN1^DIP S A1AEPGE=A1AEPGE+1
"RTN","A1AEPH2",154,0)
 I A1AEPGE,$E(IOST,1)="C",AY'=$Y W *7 R A1AEOUT:DTIME I A1AEOUT["^" K AN Q
"RTN","A1AEPH2",155,0)
 S AY=$Y
"RTN","A1AEPH2",156,0)
 Q
"RTN","A1AEPH2",157,0)
 ;
"RTN","A1AEPH2",158,0)
 ; CHANGE VEN/LGC 2015 06 12
"RTN","A1AEPH2",159,0)
 ;  HD header modified to support correct export format
"RTN","A1AEPH2",160,0)
 ;
"RTN","A1AEPH2",161,0)
HD ; Print Patch Header lines
"RTN","A1AEPH2",162,0)
 S:'$D(A1AEPGE) A1AEPGE=0
"RTN","A1AEPH2",163,0)
 S:'$D(A1AEOUT) A1AEOUT=""
"RTN","A1AEPH2",164,0)
 D CRCHK Q:A1AEOUT["^"
"RTN","A1AEPH2",165,0)
 ; new code
"RTN","A1AEPH2",166,0)
 W $S($D(A1AEHD):A1AEHD,1:"Patch Details")
"RTN","A1AEPH2",167,0)
 ; old code
"RTN","A1AEPH2",168,0)
 ;W @IOF,$S($D(A1AEHD):A1AEHD,1:"Patch Details")
"RTN","A1AEPH2",169,0)
 N A1AELNE
"RTN","A1AEPH2",170,0)
 S $P(A1AELNE,"=",78)=""
"RTN","A1AEPH2",171,0)
 S A1AEPGE=A1AEPGE+1
"RTN","A1AEPH2",172,0)
 ; new code
"RTN","A1AEPH2",173,0)
 W:$X>68 !,A1AELNE
"RTN","A1AEPH2",174,0)
 ; old code
"RTN","A1AEPH2",175,0)
 ;W:$X>68 ! W ?70,"Page: ",A1AEPGE,!,A1AELNE
"RTN","A1AEPH2",176,0)
 ;
"RTN","A1AEPH2",177,0)
 Q:'$D(D0)
"RTN","A1AEPH2",178,0)
 S A1AE0=$S($D(^A1AE(11005,D0,0)):^(0),1:"")
"RTN","A1AEPH2",179,0)
 S A1AED1=$P(A1AE0,"^")
"RTN","A1AEPH2",180,0)
 W !,"Run Date: " S Y=DT D DT^DIQ
"RTN","A1AEPH2",181,0)
 ;
"RTN","A1AEPH2",182,0)
 N STRMABBR S STRMABBR=$$STRMABBR(D0)
"RTN","A1AEPH2",183,0)
 I $L(STRMABBR) W ?24,"Stream: ",STRMABBR
"RTN","A1AEPH2",184,0)
 ;
"RTN","A1AEPH2",185,0)
 W ?43,"Designation: ",$P(A1AED1,"*")_"*"_$S($P(A1AED1,"*",2)=999:"DBA",1:$P(A1AED1,"*",2))_"*"_$P(A1AED1,"*",3)
"RTN","A1AEPH2",186,0)
 S NOTE=$P(A1AE0,"^",8)
"RTN","A1AEPH2",187,0)
 W:NOTE="u" "  TEST v"_$P($G(^A1AE(11005.1,D0,0)),U,12)
"RTN","A1AEPH2",188,0)
 S P=$P(A1AE0,"^",2)
"RTN","A1AEPH2",189,0)
 W !,"Package : ",$P($G(^DIC(9.4,+P,0)),"^"),?46,"Priority: ",$$TITLE^XLFSTR($P($P(^DD(11005,7,0),$P(^A1AE(11005,D0,0),"^",7)_":",2),";",1))
"RTN","A1AEPH2",190,0)
 ;This uses the DD status
"RTN","A1AEPH2",191,0)
 ;W !,"Version : ",$S($P(A1AE0,"^",3)=999:"DBA",1:$P(A1AE0,"^",3))," ",$S($P(A1AE0,"^",6):"SEQ #"_$P(A1AE0,"^",6),1:""),?48,"Status: ",$P($P(^DD(11005,8,0),$P(^A1AE(11005,D0,0),"^",8)_":",2),";",1),!,A1AELNE,! K A1AE0,A1AED1,SEQT
"RTN","A1AEPH2",192,0)
 ; new code
"RTN","A1AEPH2",193,0)
 W !,"Version : ",$S($P(A1AE0,"^",3)=999:"DBA",1:$P(A1AE0,"^",3)),"         ",$S($P(A1AE0,"^",6):"SEQ #"_$P(A1AE0,"^",6),1:""),?47,"Status: "
"RTN","A1AEPH2",194,0)
 ; old code
"RTN","A1AEPH2",195,0)
 ;W !,"Version : ",$S($P(A1AE0,"^",3)=999:"DBA",1:$P(A1AE0,"^",3))," ",$S($P(A1AE0,"^",6):"SEQ #"_$P(A1AE0,"^",6),1:""),?44,"Status     : "
"RTN","A1AEPH2",196,0)
 ;
"RTN","A1AEPH2",197,0)
 W $$STATUS2E(NOTE)
"RTN","A1AEPH2",198,0)
 S Y=$P(A1AE0,"^",18) I +Y>0 W !,?25,"Compliance Date: " D DT^DIQ
"RTN","A1AEPH2",199,0)
 W !,A1AELNE,! K A1AE0,A1AED1,SEQT,NOTE
"RTN","A1AEPH2",200,0)
 Q
"RTN","A1AEPH2",201,0)
 ;
"RTN","A1AEPH2",202,0)
STRMABBR(D0) ; $$ Protected. Get Stream Abbreviation
"RTN","A1AEPH2",203,0)
 N STRM S STRM=$P(^A1AE(11005,D0,0),U,20) ; Patch Stream Pointer
"RTN","A1AEPH2",204,0)
 I 'STRM QUIT ""                          ; No stream filled out. Quit.
"RTN","A1AEPH2",205,0)
 I '$D(^A1AE(11007.1,STRM)) QUIT ""       ; Broken pointer
"RTN","A1AEPH2",206,0)
 ;
"RTN","A1AEPH2",207,0)
 ; Is there more than one stream in this instance of the patch module?
"RTN","A1AEPH2",208,0)
 N %1 S %1=$O(^A1AE(11007.1,0))  ; first entry
"RTN","A1AEPH2",209,0)
 I '%1 QUIT ""                   ; This should never happen
"RTN","A1AEPH2",210,0)
 N %2 S %2=$O(^A1AE(11007.1,%1)) ; second entry
"RTN","A1AEPH2",211,0)
 I '%2 QUIT ""                   ; No second entry
"RTN","A1AEPH2",212,0)
 ;
"RTN","A1AEPH2",213,0)
 ; Now grab the stream abbreviation
"RTN","A1AEPH2",214,0)
 Q $$GET1^DIQ(11007.1,STRM,"ABBREVIATION")
"RTN","A1AEPH2",215,0)
 ;
"RTN","A1AEPH2",216,0)
STATUS2E(ABBR) ; [PROTECTED] - $$; Status display to the outside world
"RTN","A1AEPH2",217,0)
 N A
"RTN","A1AEPH2",218,0)
  S A("v")="Released"
"RTN","A1AEPH2",219,0)
  S A("c")="Completed/NotReleased"
"RTN","A1AEPH2",220,0)
  S A("e")="Entered in Error"
"RTN","A1AEPH2",221,0)
  S A("u")="Under Development"
"RTN","A1AEPH2",222,0)
  S A("r")="Retired"
"RTN","A1AEPH2",223,0)
  S A("x")="Cancelled"
"RTN","A1AEPH2",224,0)
 S A("i2")="In Review"
"RTN","A1AEPH2",225,0)
 S A("d2")="Sec Development"
"RTN","A1AEPH2",226,0)
 S A("s2")="Sec Completion"
"RTN","A1AEPH2",227,0)
 S A("r2")="Sec Release"
"RTN","A1AEPH2",228,0)
 S A("n2")="Not for Sec Release"
"RTN","A1AEPH2",229,0)
 I $D(A(ABBR)) Q A(ABBR)
"RTN","A1AEPH2",230,0)
 Q ""
"RTN","A1AEPH2",231,0)
 ;
"RTN","A1AEPH2",232,0)
LASTDATE(DA) ; [PROTECTED] - $$ What is the last action status date (Internal)?
"RTN","A1AEPH2",233,0)
 ; Caller: A1AE VERIFIED PATCH SUMMARY
"RTN","A1AEPH2",234,0)
 ; Set up Array for fields that actually contain the status date
"RTN","A1AEPH2",235,0)
 N A D DTARR(.A)
"RTN","A1AEPH2",236,0)
 ;
"RTN","A1AEPH2",237,0)
 ; Get status, and then date for that status.
"RTN","A1AEPH2",238,0)
 N ST S ST=$P(^A1AE(11005,DA,0),U,8)
"RTN","A1AEPH2",239,0)
 I ST="" Q ""
"RTN","A1AEPH2",240,0)
 I $D(A(ST)) Q $$GET1^DIQ(11005,DA,A(ST),"I")
"RTN","A1AEPH2",241,0)
 Q ""
"RTN","A1AEPH2",242,0)
 ;
"RTN","A1AEPH2",243,0)
DTARR(A) ; [Private to this routine] - Date fields array 
"RTN","A1AEPH2",244,0)
 S A("v")=11
"RTN","A1AEPH2",245,0)
 S A("c")=10
"RTN","A1AEPH2",246,0)
 S A("u")=12
"RTN","A1AEPH2",247,0)
 S A("i2")=8.09
"RTN","A1AEPH2",248,0)
 S A("d2")=8.11
"RTN","A1AEPH2",249,0)
 S A("s2")=8.13
"RTN","A1AEPH2",250,0)
 S A("r2")=8.15
"RTN","A1AEPH2",251,0)
 S A("n2")=8.17
"RTN","A1AEPH2",252,0)
 QUIT
"RTN","A1AEPH2",253,0)
 ;
"RTN","A1AEPH2",254,0)
CRCHK ; Interactive Page Read only if you are on a terminal :: IOST -- "C"
"RTN","A1AEPH2",255,0)
 I A1AEPGE,$E(IOST,1)="C" W !!,*7,"Press RETURN to continue or '^' to stop " R A1AEOUT:DTIME I A1AEOUT["^" S DN=0 K ^UTILITY($J,"W")
"RTN","A1AEPH2",256,0)
 Q
"RTN","A1AEPH2",257,0)
 ;
"RTN","A1AEPH2",258,0)
Q W ! K AZ,A7,A1AEVR,AIOP,DUOUT,DTOUT,^UTILITY($J),PKG,DN,D0,DXS,DIS(0),A1AES,A1AE0,A1AED1,A1AEIX,A1AEJ,A1AEOUT,A1AEN,A1AEI,A1AEAB,A1AED,A1AEHD,A1AELNE,IOP,FLDS,BY,L,FR,TO,DIS,A1AEPD
"RTN","A1AEPH2",259,0)
 K A1AEIFN,A1AESCN,A1AEVPR,A1AEPKIF,A1AEPKNM,A1AEPK,A1AETY,A1AEVPR,POP,PGM,VAR,A1AEPGE D CLOSE^A1AEUTL1 Q
"RTN","A1AEPH2",260,0)
 ;
"RTN","A1AEPH2",261,0)
UD ;UNDEVELOPMENT EP
"RTN","A1AEPH2",262,0)
 S DIS(0)="I $P(^A1AE(11005,D0,0),U,8)=""u""" G 5 ;Under development only
"RTN","A1AEPH2",263,0)
CNR ;COMPLETED/NOT RELEASED EP
"RTN","A1AEPH2",264,0)
 S DIS(0)="I $P(^A1AE(11005,D0,0),U,8)=""c""" G 5 ;Completed/Not Released only
"RTN","A1AEPH2",265,0)
 ;
"RTN","A1AEPH2",266,0)
SEC ; [PROTECTED] - Secondary Statuses Summary Report; VEN/SMH
"RTN","A1AEPH2",267,0)
 ; Used by A1AE PRTPHS SEC
"RTN","A1AEPH2",268,0)
 N A1AESTAR ; Status Array
"RTN","A1AEPH2",269,0)
 N DONE
"RTN","A1AEPH2",270,0)
 F  D  Q:$G(DONE)
"RTN","A1AEPH2",271,0)
 . N X,Y,DA,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","A1AEPH2",272,0)
 . W !,"Selected Statuses: "
"RTN","A1AEPH2",273,0)
 . I $D(A1AESTAR) S Y="" F  S Y=$O(A1AESTAR(Y)) Q:Y=""  W !,?5,Y,?10,$$EXTERNAL^DILFD(11005,8,,Y)
"RTN","A1AEPH2",274,0)
 . E  W "NONE",!
"RTN","A1AEPH2",275,0)
 . W !
"RTN","A1AEPH2",276,0)
 . S DIR("0")="SOA^i2:IN REVIEW;d2:SEC DEVELOPMENT;s2:SEC COMPLETION;r2:SEC RELEASE;n2:NOT FOR SEC RELEASE"
"RTN","A1AEPH2",277,0)
 . S DIR("A")="Select Statuses: "
"RTN","A1AEPH2",278,0)
 . D ^DIR
"RTN","A1AEPH2",279,0)
 . I '$G(DIRUT) S A1AESTAR(Y)=""
"RTN","A1AEPH2",280,0)
 . E  S DONE=1
"RTN","A1AEPH2",281,0)
 I '$D(A1AESTAR) QUIT
"RTN","A1AEPH2",282,0)
 S DIS(0)="I $D(A1AESTAR($P(^A1AE(11005,D0,0),U,8)))"
"RTN","A1AEPH2",283,0)
 G 5 ; Try try try
"RTN","A1AEPH2",284,0)
 ;
"RTN","A1AEPH2",285,0)
SECDT ; [PROTECTED] - Patches in a single Secondary Status by Date
"RTN","A1AEPH2",286,0)
 ; Called by A1AE PRT BY SEC ST BY DATE SUM
"RTN","A1AEPH2",287,0)
 N X,Y,DA,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","A1AEPH2",288,0)
 S DIR("0")="SO^i2:IN REVIEW;d2:SEC DEVELOPMENT;s2:SEC COMPLETION;r2:SEC RELEASE;n2:NOT FOR SEC RELEASE"
"RTN","A1AEPH2",289,0)
 S DIR("A")="Select Status"
"RTN","A1AEPH2",290,0)
 D ^DIR
"RTN","A1AEPH2",291,0)
 I $G(DIRUT) QUIT
"RTN","A1AEPH2",292,0)
 N A1AESTAT S A1AESTAT=Y
"RTN","A1AEPH2",293,0)
 ;
"RTN","A1AEPH2",294,0)
 ; Get date field using DTARR for selected status
"RTN","A1AEPH2",295,0)
 N A D DTARR(.A)
"RTN","A1AEPH2",296,0)
 N DTFLD S DTFLD=A(Y)
"RTN","A1AEPH2",297,0)
 K A
"RTN","A1AEPH2",298,0)
 ;
"RTN","A1AEPH2",299,0)
 ; Beg Date
"RTN","A1AEPH2",300,0)
 N %DT,X,Y S %DT="AE",%DT("A")="Beginning Date: " D ^%DT
"RTN","A1AEPH2",301,0)
 I Y<0 QUIT
"RTN","A1AEPH2",302,0)
 N A1AEBEG S A1AEBEG=Y
"RTN","A1AEPH2",303,0)
 S A1AEBEG=A1AEBEG-.000001
"RTN","A1AEPH2",304,0)
 N %DT,X,Y S %DT="AE",%DT("A")="Ending Date: " D ^%DT
"RTN","A1AEPH2",305,0)
 I Y<0 QUIT
"RTN","A1AEPH2",306,0)
 N A1AEEND S A1AEEND=Y
"RTN","A1AEPH2",307,0)
 S A1AEEND=A1AEEND+.000001
"RTN","A1AEPH2",308,0)
 ;
"RTN","A1AEPH2",309,0)
 ; Construct DIS(0)
"RTN","A1AEPH2",310,0)
 N GLND S GLND=$P(^DD(11005,DTFLD,0),U,4)
"RTN","A1AEPH2",311,0)
 N A1AEND,A1AEP S A1AEND=$P(GLND,";"),A1AEP=$P(GLND,";",2)
"RTN","A1AEPH2",312,0)
 ;
"RTN","A1AEPH2",313,0)
 ; Select Stream
"RTN","A1AEPH2",314,0)
 N A1AESTRM
"RTN","A1AEPH2",315,0)
 N DIC,X,Y S DIC(0)="AEMQ",DIC=11007.1 D ^DIC
"RTN","A1AEPH2",316,0)
 I Y<0 QUIT
"RTN","A1AEPH2",317,0)
 S A1AESTRM=+Y
"RTN","A1AEPH2",318,0)
 ;
"RTN","A1AEPH2",319,0)
 N IOP
"RTN","A1AEPH2",320,0)
 ; Select Device
"RTN","A1AEPH2",321,0)
 N %ZIS S %ZIS="QN" D ^%ZIS
"RTN","A1AEPH2",322,0)
 I $D(IO("Q")) D
"RTN","A1AEPH2",323,0)
 . N ZTRTN,ZTSAVE,ZTDESC,ZTSK,ZTDTH,ZTIO,I
"RTN","A1AEPH2",324,0)
 . S IOP=ION
"RTN","A1AEPH2",325,0)
 . S ZTDESC="Patches in a single Secondary Status by Date"
"RTN","A1AEPH2",326,0)
 . S ZTRTN="DQSECDT^A1AEPH2"
"RTN","A1AEPH2",327,0)
 . F I="A1AEND","A1AEP","A1AEBEG","A1AEEND","A1AESTRM","A1AESTAT","IOP" S ZTSAVE(I)=""
"RTN","A1AEPH2",328,0)
 . D ^%ZTLOAD
"RTN","A1AEPH2",329,0)
 . K IO("Q")
"RTN","A1AEPH2",330,0)
 . I $D(ZTSK) W !,"Request queued.  Task number: ",ZTSK
"RTN","A1AEPH2",331,0)
 E  D
"RTN","A1AEPH2",332,0)
 . S IOP=ION
"RTN","A1AEPH2",333,0)
 . D DQSECDT
"RTN","A1AEPH2",334,0)
 . D ^%ZISC
"RTN","A1AEPH2",335,0)
 QUIT
"RTN","A1AEPH2",336,0)
 ;
"RTN","A1AEPH2",337,0)
DQSECDT ; [PRIVATE] - Print Away
"RTN","A1AEPH2",338,0)
 N L,DIC,FLDS,DHD
"RTN","A1AEPH2",339,0)
 S L=0,DIC="^A1AE(11005,",FLDS="[A1AE VERIFIED PATCH SUMMARY]"
"RTN","A1AEPH2",340,0)
 N BY,FR,TO
"RTN","A1AEPH2",341,0)
 S BY="@INTERNAL(#.01)",FR="",TO=""
"RTN","A1AEPH2",342,0)
 N DIS S DIS(0)="N D S D=$P($G(^A1AE(11005,D0,A1AEND)),U,A1AEP) I D>A1AEBEG&(D<A1AEEND)"
"RTN","A1AEPH2",343,0)
 S DIS(1)="I $P(^A1AE(11005,D0,0),U,20)=A1AESTRM,$P(^(0),U,20)=A1AESTRM,$P(^(0),U,8)=A1AESTAT"
"RTN","A1AEPH2",344,0)
 S DHD="Patches in a single Secondary Status by Date"
"RTN","A1AEPH2",345,0)
 D EN1^DIP
"RTN","A1AEPH2",346,0)
 QUIT
"RTN","A1AEPH2",347,0)
 ;
"RTN","A1AEPH2",348,0)
SECDET ; [PROTECTED] - Secondary Status Detailed Report
"RTN","A1AEPH2",349,0)
 ; Called by A1AE PRTPHA SEC
"RTN","A1AEPH2",350,0)
 N X,Y,DA,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","A1AEPH2",351,0)
 S DIR("0")="SO^i2:IN REVIEW;d2:SEC DEVELOPMENT;s2:SEC COMPLETION;r2:SEC RELEASE;n2:NOT FOR SEC RELEASE"
"RTN","A1AEPH2",352,0)
 S DIR("A")="Select Status"
"RTN","A1AEPH2",353,0)
 D ^DIR
"RTN","A1AEPH2",354,0)
 I $G(DIRUT) QUIT
"RTN","A1AEPH2",355,0)
 N A1AESTAT S A1AESTAT=Y
"RTN","A1AEPH2",356,0)
 ;
"RTN","A1AEPH2",357,0)
 ; Select Stream
"RTN","A1AEPH2",358,0)
 N A1AESTRM
"RTN","A1AEPH2",359,0)
 N DIC,X,Y S DIC(0)="AEMQ",DIC=11007.1 D ^DIC
"RTN","A1AEPH2",360,0)
 I Y<0 QUIT
"RTN","A1AEPH2",361,0)
 S A1AESTRM=+Y
"RTN","A1AEPH2",362,0)
 ;
"RTN","A1AEPH2",363,0)
 S DIS(0)="I $P(^A1AE(11005,D0,0),U,8)=A1AESTAT,$P(^(0),U,20)=A1AESTRM"
"RTN","A1AEPH2",364,0)
 S DIC("S")="I $P(^(0),U,2)=""Y""!($P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+Y))))"
"RTN","A1AEPH2",365,0)
 S A1AEHD="Patches in a Secondary Status Detailed Report",A1AES=""
"RTN","A1AEPH2",366,0)
 G DIP^A1AEPH3
"RTN","A1AEPH3")
0^24^B9393637
"RTN","A1AEPH3",1,0)
A1AEPH3 ;isa/rmo,mjk ;2014-03-28T16:14
"RTN","A1AEPH3",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEPH3",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEPH3",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEPH3",5,0)
 ;
"RTN","A1AEPH3",6,0)
 ;
"RTN","A1AEPH3",7,0)
 ;primary change history
"RTN","A1AEPH3",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEPH3",9,0)
 ;1992-12-02: version 2.2 released
"RTN","A1AEPH3",10,0)
 ;
"RTN","A1AEPH3",11,0)
 ;
"RTN","A1AEPH3",12,0)
DIP ;
"RTN","A1AEPH3",13,0)
 S %DT="",X="T" D ^%DT S DT=Y
"RTN","A1AEPH3",14,0)
 D PKG^A1AEUTL G Q^A1AEPH2:'$D(A1AEPK) D VER^A1AEUTL G Q^A1AEPH2:'$D(A1AEVR)
"RTN","A1AEPH3",15,0)
 S A1AERD("A")="Select Sort: ",A1AERD(1)="Designation^sort by patch designation",A1AERD(2)="Category^sort by category of patch",A1AERD(3)="Priority^sort by patch priority" S:'$D(A1AES) A1AERD(4)="Status^sort by status of patch"
"RTN","A1AEPH3",16,0)
 S A1AERD("B")=1 W ! D SET^A1AERD K A1AERD S A1AEHD=A1AEHD_" (By "_X_")",X=$E(X,1) G Q^A1AEPH2:X="^"
"RTN","A1AEPH3",17,0)
 S A1AEIX=$S(X="D":"AB",1:"A"_X)
"RTN","A1AEPH3",18,0)
 S PGM="START^A1AEPH3",VAR="A1AEVR^A1AEIX^A1AEPKIF^A1AEHD"
"RTN","A1AEPH3",19,0)
 I $D(A1AESTRM) S VAR=VAR_"^A1AESTRM"
"RTN","A1AEPH3",20,0)
        I $D(A1AESTAT) S VAR=VAR_"^A1AESTAT"
"RTN","A1AEPH3",21,0)
 W !
"RTN","A1AEPH3",22,0)
 D ZIS^A1AEUTL1
"RTN","A1AEPH3",23,0)
 G Q^A1AEPH2:POP
"RTN","A1AEPH3",24,0)
START U IO G Q^A1AEPH2:'$D(^DIC(9.4,A1AEPKIF,0)) S A1AEAB=$P(^(0),"^",2),^UTILITY($J,1)="D HD^A1AEPH2",DIWF="B4X",(A1AEOUT,A1AEJ)="" K ^UTILITY($J,"W") ;SO DI*22*152
"RTN","A1AEPH3",25,0)
 G DESG:A1AEIX="AB" F A1AEVR=A1AEVR,999 F A1AEI=0:0 S A1AEJ=$O(^A1AE(11005,A1AEIX,A1AEPKIF,A1AEVR,A1AEJ)) Q:A1AEJ=""!(A1AEOUT["^")  F A1AEN=0:0 S A1AEN=$O(^A1AE(11005,A1AEIX,A1AEPKIF,A1AEVR,A1AEJ,A1AEN)) Q:'A1AEN!(A1AEOUT["^")  D PRT
"RTN","A1AEPH3",26,0)
 G Q^A1AEPH2
"RTN","A1AEPH3",27,0)
 ;
"RTN","A1AEPH3",28,0)
PRT F A1AED0=0:0 S A1AED0=$O(^A1AE(11005,A1AEIX,A1AEPKIF,A1AEVR,A1AEJ,A1AEN,A1AED0)) Q:'A1AED0!(A1AEOUT["^")  S D0=A1AED0 D PRT1
"RTN","A1AEPH3",29,0)
 Q
"RTN","A1AEPH3",30,0)
 ;
"RTN","A1AEPH3",31,0)
PRT1 I $D(^A1AE(11005,D0,0)) X DIS(0) I $T K DXS D HD^A1AEPH2 Q:A1AEOUT["^"  D ^A1AEP K DN,DXS,^UTILITY($J,"W")
"RTN","A1AEPH3",32,0)
 Q
"RTN","A1AEPH3",33,0)
DESG ; VEN/SMH - Print by designation
"RTN","A1AEPH3",34,0)
 F A1AEVR=A1AEVR,999 D
"RTN","A1AEPH3",35,0)
        . N A1AENB S A1AENB="" ; Patch number
"RTN","A1AEPH3",36,0)
        . F  S A1AENB=$O(^A1AE(11005,"AB",A1AEPK,A1AEVR,A1AENB)) Q:'A1AENB  S D0=+$O(^(A1AENB,0)) D PRT1 Q:A1AEOUT["^"
"RTN","A1AEPH3",37,0)
 G Q^A1AEPH2
"RTN","A1AEPH4")
0^25^B15232947
"RTN","A1AEPH4",1,0)
A1AEPH4 ;isa/rmo ;2014-03-27T16:30
"RTN","A1AEPH4",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEPH4",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEPH4",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEPH4",5,0)
 ;
"RTN","A1AEPH4",6,0)
 ;
"RTN","A1AEPH4",7,0)
 ;primary change history
"RTN","A1AEPH4",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEPH4",9,0)
 ;1992-11-23: version 2.2 released
"RTN","A1AEPH4",10,0)
 ;
"RTN","A1AEPH4",11,0)
 ;
"RTN","A1AEPH4",12,0)
 S %DT="",X="T" D ^%DT S DT=Y D PKGPMT^A1AEVP G Q:X["^"!($D(A1AENOSL)) D DATE^A1AEUTL1 G Q:'$D(BEGDATE)!('$D(ENDDATE)) S BEGDATE=9999999-BEGDATE,ENDDATE=9999999-ENDDATE
"RTN","A1AEPH4",13,0)
        N A1AESTRM
"RTN","A1AEPH4",14,0)
        N DIC,X,Y S DIC(0)="AEMQ",DIC=11007.1,DIC("A")="Select a Stream: " D ^DIC
"RTN","A1AEPH4",15,0)
        I Y'>0 QUIT
"RTN","A1AEPH4",16,0)
        S A1AESTRM=+Y
"RTN","A1AEPH4",17,0)
 S PGM="START^A1AEPH4",VAR=$S($D(A1AEPKIF):"A1AEPKIF^DUZ^BEGDATE^ENDDATE^A1AESTRM",1:"DUZ^BEGDATE^ENDDATE^A1AESTRM") W ! D ZIS^A1AEUTL1 G Q:POP
"RTN","A1AEPH4",18,0)
 ;
"RTN","A1AEPH4",19,0)
START S COUNT=0
"RTN","A1AEPH4",20,0)
 U IO K A1AEPGE,A1AELNE S A1AEHD="DHCP Summary Report of Released Patches",$P(A1AELNE,"-",78)="",Y=9999999-BEGDATE D D^DIQ S A1AEBEG=Y S Y=9999999-ENDDATE D D^DIQ S A1AEND=Y I $D(A1AEPKIF) D GETDTV G Q
"RTN","A1AEPH4",21,0)
 F A1AEPKIF=0:0 S A1AEPKIF=+$O(^A1AE(11007,"AU",DUZ,A1AEPKIF)) Q:'A1AEPKIF  I $D(^A1AE(11007,A1AEPKIF,0)) D GETDTV:$P(^(0),"^",2)="Y"!($P(^(0),"^",4)="y") Q:X["^"
"RTN","A1AEPH4",22,0)
 ;
"RTN","A1AEPH4",23,0)
Q I '$D(A1AEPGE)&$D(A1AEBEG)&$D(A1AEND) W !?3,"There were no patches released ",$S(A1AEBEG=A1AEND:"on "_A1AEBEG,1:"between "_A1AEBEG_" and "_A1AEND),"."
"RTN","A1AEPH4",24,0)
 W ! I $D(COUNT),COUNT W "-----------------",!,"# Patches Listed = "_COUNT
"RTN","A1AEPH4",25,0)
 K COUNT K A1AED0,A1AED1,A1AEPKIF,A1AEPKNM,A1AEDTV,A1AEHD,A1AEIFN,A1AEPGE,BEGDATE,ENDDATE,A1AEBEG,A1AEND,VAR,PGM,POP,A1AENOSL,A1AELNE,A1AEPK D CLOSE^A1AEUTL1 Q
"RTN","A1AEPH4",26,0)
 ;
"RTN","A1AEPH4",27,0)
GETDTV F A1AEDTV=ENDDATE-1:0 S A1AEDTV=$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV)) Q:'A1AEDTV!(BEGDATE<A1AEDTV)!(X["^")  D GETIFN
"RTN","A1AEPH4",28,0)
 Q
"RTN","A1AEPH4",29,0)
 ;
"RTN","A1AEPH4",30,0)
GETIFN F A1AEIFN=0:0 S A1AEIFN=$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV,A1AEIFN)) Q:'A1AEIFN  I $D(^A1AE(11005,A1AEIFN,0)),$P(^(0),"^",8)="v",$P(^(0),U,20)=A1AESTRM S A1AED0=^(0),A1AED1=$P(A1AED0,"^") D PRT S COUNT=COUNT+1 Q:X["^"
"RTN","A1AEPH4",31,0)
 Q
"RTN","A1AEPH4",32,0)
 ;
"RTN","A1AEPH4",33,0)
PRT D HD:($Y+6)>IOSL!('$D(A1AEPGE)) Q:X["^"  W !,$P(A1AED1,"*")_"*"_$S($P(A1AED1,"*",2)=999:"DBA",1:$P(A1AED1,"*",2))_"*"_$P(A1AED1,"*",3),?15,$J($P(A1AED0,"^",6),3),?22,$E($P(A1AED0,"^",5),1,24),?49
"RTN","A1AEPH4",34,0)
 S Y=$P(A1AED0,"^",11) D DT^DIQ W ?62,$P($P(^DD(11005,7,0),$P(A1AED0,"^",7)_":",2),";",1)
"RTN","A1AEPH4",35,0)
 S Y=$P(A1AED0,"^",17) I Y W !?38,"Hold date: " D DT^DIQ
"RTN","A1AEPH4",36,0)
 I $D(^A1AE(11005,A1AEIFN,"Q","B")) S PRINT="",D0=A1AEIFN D PCHK^A1AEUTL1 K AZ,PRINT,D0
"RTN","A1AEPH4",37,0)
 Q
"RTN","A1AEPH4",38,0)
 ;
"RTN","A1AEPH4",39,0)
HD S:'$D(A1AEPGE) A1AEPGE=0 D CRCHK Q:X["^"  W @IOF,A1AEHD,?50 S Y=DT D DT^DIQ S A1AEPGE=A1AEPGE+1 W ?70,"Page: ",A1AEPGE W !,"between ",A1AEBEG," and ",A1AEND,!
"RTN","A1AEPH4",40,0)
 W !,"Patch",?15,"SEQ #",?22,"Patch Subject",?49,"Date",?62,"Priority",!,"Designation",?49,"Released",!,A1AELNE Q
"RTN","A1AEPH4",41,0)
 ;
"RTN","A1AEPH4",42,0)
CRCHK I A1AEPGE,$E(IOST,1)="C" W !!,*7,"Press RETURN to continue or '^' to stop " R X:DTIME Q
"RTN","A1AEPH5")
0^26^B9382626
"RTN","A1AEPH5",1,0)
A1AEPH5 ;isa/rmo-detailed report of verified patches by date ;2007-06-29T10:59
"RTN","A1AEPH5",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEPH5",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEPH5",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEPH5",5,0)
 ;
"RTN","A1AEPH5",6,0)
 ;
"RTN","A1AEPH5",7,0)
 ;primary change history
"RTN","A1AEPH5",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEPH5",9,0)
 ;1992-11-23: version 2.2 released
"RTN","A1AEPH5",10,0)
 ;
"RTN","A1AEPH5",11,0)
 ;
"RTN","A1AEPH5",12,0)
 S %DT="",X="T" D ^%DT S DT=Y D PKGPMT^A1AEVP G Q:X["^"!($D(A1AENOSL)) D DATE^A1AEUTL1 G Q:'$D(BEGDATE)!('$D(ENDDATE)) S BEGDATE=9999999-BEGDATE,ENDDATE=9999999-ENDDATE
"RTN","A1AEPH5",13,0)
 S PGM="START^A1AEPH5",VAR=$S($D(A1AEPKIF):"A1AEPKIF^DUZ^BEGDATE^ENDDATE",1:"DUZ^BEGDATE^ENDDATE") W ! D ZIS^A1AEUTL1 G Q:POP
"RTN","A1AEPH5",14,0)
 ;
"RTN","A1AEPH5",15,0)
START U IO K A1AEPGE,A1AELNE,^UTILITY($J,"W") S A1AEHD="DHCP Detailed Report of Released Patches",$P(A1AELNE,"-",78)="",^UTILITY($J,1)="D HD^A1AEPH2",DIWF="B4X",A1AEOUT="" ;SO DI*22*152
"RTN","A1AEPH5",16,0)
 S Y=9999999-BEGDATE D D^DIQ S A1AEBEG=Y S Y=9999999-ENDDATE D D^DIQ S A1AEND=Y I $D(A1AEPKIF) D GETDTV G Q
"RTN","A1AEPH5",17,0)
 F A1AEPKIF=0:0 S A1AEPKIF=+$O(^A1AE(11007,"AU",DUZ,A1AEPKIF)) Q:'A1AEPKIF!(A1AEOUT["^")  I $D(^A1AE(11007,A1AEPKIF,0)) D GETDTV:$P(^(0),"^",2)="Y"!($P(^(0),"^",4)="y")
"RTN","A1AEPH5",18,0)
 ;
"RTN","A1AEPH5",19,0)
Q I '$D(A1AEPGE)&$D(A1AEBEG)&$D(A1AEND) W !?3,"There were no patches released ",$S(A1AEBEG=A1AEND:"on "_A1AEBEG,1:"between "_A1AEBEG_" and "_A1AEND),"."
"RTN","A1AEPH5",20,0)
 W ! K ^UTILITY($J),DN,DXS,A1AEPKIF,A1AEPKNM,A1AEDTV,A1AEHD,A1AEOUT,A1AEIFN,A1AEPGE,BEGDATE,ENDDATE,A1AEBEG,A1AEND,VAR,PGM,POP,A1AENOSL,A1AELNE,A1AEPK D CLOSE^A1AEUTL1 Q
"RTN","A1AEPH5",21,0)
 ;
"RTN","A1AEPH5",22,0)
GETDTV F A1AEDTV=ENDDATE-1:0 S A1AEDTV=$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV)) Q:'A1AEDTV!(BEGDATE<A1AEDTV)!(A1AEOUT["^")  D GETIFN
"RTN","A1AEPH5",23,0)
 Q
"RTN","A1AEPH5",24,0)
 ;
"RTN","A1AEPH5",25,0)
GETIFN F A1AEIFN=0:0 S A1AEIFN=$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV,A1AEIFN)) Q:'A1AEIFN!(A1AEOUT["^")  I $D(^A1AE(11005,A1AEIFN,0)),$P(^(0),"^",8)="v" S D0=A1AEIFN K DXS D HD^A1AEPH2,^A1AEP K DN,DXS,^UTILITY($J,"W")
"RTN","A1AEPH5",26,0)
 Q
"RTN","A1AEPH6")
0^27^B22952338
"RTN","A1AEPH6",1,0)
A1AEPH6 ;isa/rmo ;2007-06-29T11:01
"RTN","A1AEPH6",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEPH6",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEPH6",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEPH6",5,0)
 ;
"RTN","A1AEPH6",6,0)
 ;
"RTN","A1AEPH6",7,0)
 ;primary change history
"RTN","A1AEPH6",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEPH6",9,0)
 ;
"RTN","A1AEPH6",10,0)
 ;
"RTN","A1AEPH6",11,0)
COMDIS ;Display a Completed/NotReleased Patch
"RTN","A1AEPH6",12,0)
 S DIC("A")="Select PATCH: ",DIC("S")="I $P(^(0),U,8)=""c"",$S($D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0)):1,'$D(^A1AE(11007,+$P(^A1AE(11005,+Y,0),U,2),""PB"",DUZ,0)):0,$P(^(0),U,2)=""V"":1,1:0)",DIC="^A1AE(11005,",DIC(0)="AEMQ"
"RTN","A1AEPH6",13,0)
 W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S (A1AEIFN,D0)=+Y,A1AEPD=$P(Y,U,2),A1AEVPR="",A1AEHD="DHCP Completed/NotReleased Patch Display"
"RTN","A1AEPH6",14,0)
 W ! S %ZIS="",A1AEPGE=0 D ^%ZIS G Q:POP K IOP,%ZIS U IO S ^UTILITY($J,1)="D HD^A1AEPH2",DIWF="B4X" K ^UTILITY($J,"W"),DXS D HD^A1AEPH2,^A1AEP K DN,DXS I $D(A1AEOUT),A1AEOUT["^" G Q ;SO DI*22*152
"RTN","A1AEPH6",15,0)
 D Q G COMDIS
"RTN","A1AEPH6",16,0)
 ;
"RTN","A1AEPH6",17,0)
PATDIS ;Display a Patch
"RTN","A1AEPH6",18,0)
 ;                  Verified      !ent.in err!retired    &
"RTN","A1AEPH6",19,0)
 S DIC("S")="I ($P(^(0),U,8)=""v""!($P(^(0),U,8)=""e"")!($P(^(0),U,8)=""r""))&($S('$D(^A1AE(11007,+$P(^(0),U,2),0)):0,$P(^(0),U,2)=""Y"":1,$P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+$P(^A1AE(11005,+Y,0),U,2)))):1,1:0))"
"RTN","A1AEPH6",20,0)
 S DIC("S")=DIC("S")_"!$D(^A1AE(11007,""AD"",DUZ,+$P(^A1AE(11005,+Y,0),U,2)))"
"RTN","A1AEPH6",21,0)
 ; ( not no 11007 record for package ! user selection permitted ! ("test site only"& user is [self]"selected" for package )
"RTN","A1AEPH6",22,0)
 S DIC("A")="Select PATCH: ",DIC="^A1AE(11005,",DIC(0)="AEMQ" W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S (A1AEIFN,D0)=+Y,A1AEPD=$P(Y,U,2),A1AEVPR="",A1AEHD="DHCP Patch Display"
"RTN","A1AEPH6",23,0)
 S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEPH6",24,0)
 ;I $P(^A1AE(11005,A1AEIFN,0),"^",8)="e"!($P(^(0),"^",8)="r") S DHD="@",L=0,DIC="^A1AE(11005," D SETFLDS S BY="'INTERNAL(#.01)",(FR,TO)=A1AEIFN W ! S IOP="HOME" D EN1^DIP
"RTN","A1AEPH6",25,0)
 I $P(^A1AE(11005,A1AEIFN,0),"^",8)="e"!($P(^(0),"^",8)="r") S DHD="@",L=0,DIC="^A1AE(11005," D SETFLDS S BY="",(FR,TO)=A1AEIFN W !  D EN1^DIP G Q
"RTN","A1AEPH6",26,0)
 I $P(^A1AE(11005,A1AEIFN,0),"^",8)="v"!$D(^A1AE(11007,"AD",DUZ,+$P(^A1AE(11005,+A1AEIFN,0),U,2))) W ! S %ZIS="",A1AEPGE=0 D ^%ZIS G Q:POP D  I $D(A1AEOUT),A1AEOUT["^" G Q
"RTN","A1AEPH6",27,0)
 .  K IOP,%ZIS U IO S ^UTILITY($J,1)="D HD^A1AEPH2",DIWF="B4X" K ^UTILITY($J,"W"),DXS D HD^A1AEPH2,^A1AEP K DN,DXS ;SO DI*22*152
"RTN","A1AEPH6",28,0)
 D Q G PATDIS
"RTN","A1AEPH6",29,0)
 ;
"RTN","A1AEPH6",30,0)
SETFLDS I $P(^A1AE(11005,A1AEIFN,0),"^",8)="e" S FLDS="D HD^A1AEPH2;X;"""",""Subject:"";C1;S1,5;"""",""Entered in Error Description:"";C1;S1,8.5;C1;S1;"""""
"RTN","A1AEPH6",31,0)
 I $P(^A1AE(11005,A1AEIFN,0),"^",8)="r" S FLDS="D HD^A1AEPH2;X;"""",""Subject:"";C1;S1,5;"""",""Description:"";C1;S1,5.5;C1;S1;"""",""Retired After Version:"";C1;S1,15;"""",""Retirement Comments:"";C1;S1,15.5;C1;S1;"""""
"RTN","A1AEPH6",32,0)
 Q
"RTN","A1AEPH6",33,0)
 ;
"RTN","A1AEPH6",34,0)
EXTDIS ;Extended Display of a Patch
"RTN","A1AEPH6",35,0)
 S DIC("A")="Select PATCH: ",DIC("S")="I $D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0))",DIC="^A1AE(11005,",DIC(0)="AEMQ" W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S (DA,A1AEIFN)=+Y D USRPMT G Q:X="^"
"RTN","A1AEPH6",36,0)
 D Q G EXTDIS
"RTN","A1AEPH6",37,0)
 ;
"RTN","A1AEPH6",38,0)
USRPMT ;Developer can display when a select user printed a patch, or the
"RTN","A1AEPH6",39,0)
 ;entire patch including all users who printed it.
"RTN","A1AEPH6",40,0)
 S A1AERD("A")="Do you want to know when a specific user printed this patch? ",A1AERD(0)="S",A1AERD(1)="Yes^print when a specific user saw this patch",A1AERD(2)="No^print patch details WITHOUT selected users",A1AERD("B")=2 ; << REW
"RTN","A1AEPH6",41,0)
 W ! D SET^A1AERD K A1AERD Q:X="^"  G USR:"Y"[$E(X,1) I "N"[$E(X,1) S DR="0;C;D;E;P" W ! D EN^DIQ ; ;2 deleted to remove who/when info.  <<  REW
"RTN","A1AEPH6",42,0)
 Q
"RTN","A1AEPH6",43,0)
 ;
"RTN","A1AEPH6",44,0)
USR S DIC="^VA(200,",DIC(0)="AEMQ" W ! D ^DIC Q:Y<0  S A1AEDUZ=+Y
"RTN","A1AEPH6",45,0)
 I $D(^A1AE(11005,A1AEIFN,2,A1AEDUZ,0)) W !!?3,"Printed patch initially on " S Y=$P(^(0),"^",2) D DT^DIQ I $P(^(0),"^",2)'=$P(^(0),"^",3) W " and last on " S Y=$P(^(0),"^",3) D DT^DIQ
"RTN","A1AEPH6",46,0)
 W:'$D(^A1AE(11005,A1AEIFN,2,A1AEDUZ,0)) !!?3,"Never printed patch" K A1AEDUZ G USR
"RTN","A1AEPH6",47,0)
 ;
"RTN","A1AEPH6",48,0)
Q W ! K ^UTILITY($J),DN,D0,DXS,DIS(0),A1AEOUT,A1AES,A1AED0,A1AEIX,A1AEJ,A1AEN,A1AEI,A1AEAB,A1AED,A1AEHD,A1AELNE,IOP,FLDS,BY,L,FR,TO,DIS,A1AEPD
"RTN","A1AEPH6",49,0)
 K A1AEIFN,A1AESCN,A1AEVPR,A1AEPKIF,A1AEPKNM,A1AEPK,A1AEVR,A1AETY,A1AEVPR,POP,PGM,VAR,A1AEPGE D CLOSE^A1AEUTL1 Q
"RTN","A1AEPH6",50,0)
 ;
"RTN","A1AEPH6",51,0)
       
"RTN","A1AEPH8")
0^29^B106406810
"RTN","A1AEPH8",1,0)
A1AEPH8 ;ven/toad-option copy a patch [A1AE COPY PATCH] ;2015-05-30T13:00
"RTN","A1AEPH8",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEPH8",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEPH8",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEPH8",5,0)
 ;
"RTN","A1AEPH8",6,0)
 ;
"RTN","A1AEPH8",7,0)
 ;
"RTN","A1AEPH8",8,0)
 ; primary change history:
"RTN","A1AEPH8",9,0)
 ;
"RTN","A1AEPH8",10,0)
 ; originally created by Robin M. Ostrander of VA Information Systems
"RTN","A1AEPH8",11,0)
 ; Center Albany (isa/rmo)
"RTN","A1AEPH8",12,0)
 ;
"RTN","A1AEPH8",13,0)
 ; 1987-11-24, isa/rmo: added logic to copy 11005.1 if present, PCOPY
"RTN","A1AEPH8",14,0)
 ;
"RTN","A1AEPH8",15,0)
 ; 1992-11-23: released as part of version 2.2
"RTN","A1AEPH8",16,0)
 ;
"RTN","A1AEPH8",17,0)
 ; 2014-03-28: released as part of version 2.4
"RTN","A1AEPH8",18,0)
 ;
"RTN","A1AEPH8",19,0)
 ; 2015-05-29/30, ven/toad: refactored by Rick Marshall of the VISTA
"RTN","A1AEPH8",20,0)
 ; Expertise Network (ven/toad) during testing of version 2.5
"RTN","A1AEPH8",21,0)
 ;
"RTN","A1AEPH8",22,0)
 ;
"RTN","A1AEPH8",23,0)
 ; contents:
"RTN","A1AEPH8",24,0)
 ;
"RTN","A1AEPH8",25,0)
 ; OPTION: option copy a patch into a new patch [A1AE COPY PATCH]
"RTN","A1AEPH8",26,0)
 ; PICKPAT: select patch
"RTN","A1AEPH8",27,0)
 ; CONFIRM: confirm patch selection
"RTN","A1AEPH8",28,0)
 ; PICKVER: select version
"RTN","A1AEPH8",29,0)
 ; PCOPY: copy patch message/payload (11005.1)
"RTN","A1AEPH8",30,0)
 ; CRE8MSG: create patch-msg stub record
"RTN","A1AEPH8",31,0)
 ; COPYTXT: create patch-msg text
"RTN","A1AEPH8",32,0)
 ; EDITPAT: edit new patch
"RTN","A1AEPH8",33,0)
 ; Q: cleanup
"RTN","A1AEPH8",34,0)
 ;
"RTN","A1AEPH8",35,0)
 ;
"RTN","A1AEPH8",36,0)
OPTION ; option copy a patch into a new patch [A1AE COPY PATCH]
"RTN","A1AEPH8",37,0)
 ;private;procedure;clean?;silent?;sac-compliant?
"RTN","A1AEPH8",38,0)
 ; called by:
"RTN","A1AEPH8",39,0)
 ;   5^A1AEPH1
"RTN","A1AEPH8",40,0)
 ;
"RTN","A1AEPH8",41,0)
 ;
"RTN","A1AEPH8",42,0)
 ; 1. make a copy of a patch (11005)
"RTN","A1AEPH8",43,0)
 ;
"RTN","A1AEPH8",44,0)
 ;
"RTN","A1AEPH8",45,0)
 ; 1.a. select & confirm patch to copy
"RTN","A1AEPH8",46,0)
 ;
"RTN","A1AEPH8",47,0)
 NEW A1AEIFN SET A1AEIFN=0 ; original patch #
"RTN","A1AEPH8",48,0)
 NEW A1AEOLPD ; original patch id
"RTN","A1AEPH8",49,0)
 NEW A1AEPKIF ; original patch's application
"RTN","A1AEPH8",50,0)
 NEW A1AEVR ; original patch's application version
"RTN","A1AEPH8",51,0)
 NEW A1AEQUIT SET A1AEQUIT=0 ; give up and quit?
"RTN","A1AEPH8",52,0)
 ;
"RTN","A1AEPH8",53,0)
 FOR  DO  QUIT:A1AEQUIT!A1AEIFN
"RTN","A1AEPH8",54,0)
 . ; select patch:
"RTN","A1AEPH8",55,0)
 . DO PICKPAT(.A1AEIFN,.A1AEOLPD,.A1AEPKIF,.A1AEVR,.A1AEQUIT)
"RTN","A1AEPH8",56,0)
 . QUIT:A1AEQUIT
"RTN","A1AEPH8",57,0)
 . DO CONFIRM(.A1AEIFN,.A1AEOLPD,.A1AEQUIT) ; confirm selection
"RTN","A1AEPH8",58,0)
 . QUIT
"RTN","A1AEPH8",59,0)
 ;
"RTN","A1AEPH8",60,0)
 IF A1AEQUIT DO  QUIT  ; exit option
"RTN","A1AEPH8",61,0)
 . DO Q ; cleanup
"RTN","A1AEPH8",62,0)
 . QUIT
"RTN","A1AEPH8",63,0)
 ;
"RTN","A1AEPH8",64,0)
 ; 1.b. identify selected patch's application
"RTN","A1AEPH8",65,0)
 ;
"RTN","A1AEPH8",66,0)
 IF $DATA(^DIC(9.4,A1AEPKIF,0)) D  ; file package (9.4)
"RTN","A1AEPH8",67,0)
 . SET A1AEPKNM=$PIECE(^(0),U) ; field name (.01)
"RTN","A1AEPH8",68,0)
 . SET A1AEPK=$PIECE(^(0),U,2) ; field prefix (1)
"RTN","A1AEPH8",69,0)
 . QUIT
"RTN","A1AEPH8",70,0)
 ;
"RTN","A1AEPH8",71,0)
 IF '$DATA(A1AEPK) DO  QUIT  ; no application, exit option
"RTN","A1AEPH8",72,0)
 . DO Q ; cleanup
"RTN","A1AEPH8",73,0)
 . QUIT
"RTN","A1AEPH8",74,0)
 ;
"RTN","A1AEPH8",75,0)
 ; 1.c. copy patch to ^utility
"RTN","A1AEPH8",76,0)
 ;
"RTN","A1AEPH8",77,0)
 WRITE !!?3,"...copying ",A1AEOLPD," patch into utility global"
"RTN","A1AEPH8",78,0)
 DO
"RTN","A1AEPH8",79,0)
 . KILL ^UTILITY($JOB,"A1AECOP")
"RTN","A1AEPH8",80,0)
 . NEW %X SET %X="^A1AE(11005,A1AEIFN,"
"RTN","A1AEPH8",81,0)
 . NEW %Y SET %Y="^UTILITY($JOB,""A1AECOP"","
"RTN","A1AEPH8",82,0)
 . DO %XY^%RCR
"RTN","A1AEPH8",83,0)
 . QUIT
"RTN","A1AEPH8",84,0)
 ;
"RTN","A1AEPH8",85,0)
 ;
"RTN","A1AEPH8",86,0)
 ; 2. create a new patch from the copy of the original patch
"RTN","A1AEPH8",87,0)
 ;
"RTN","A1AEPH8",88,0)
 ;
"RTN","A1AEPH8",89,0)
 ; 2.a. select an application version to patch
"RTN","A1AEPH8",90,0)
 ;
"RTN","A1AEPH8",91,0)
 NEW A1AEFL SET A1AEFL=11005 ; we're going to work on patches
"RTN","A1AEPH8",92,0)
 NEW A1AETY SET A1AETY="PH" ; and on the next patch number
"RTN","A1AEPH8",93,0)
 D PICKVER(.A1AEVR,A1AEFL,A1AETY,A1AEPKIF,A1AEPKNM,A1AEOLPD,.A1AEQUIT)
"RTN","A1AEPH8",94,0)
 IF A1AEQUIT DO  QUIT  ; exit option
"RTN","A1AEPH8",95,0)
 . DO Q ; cleanup
"RTN","A1AEPH8",96,0)
 . QUIT
"RTN","A1AEPH8",97,0)
 ;
"RTN","A1AEPH8",98,0)
 ; 2.b. create new patch
"RTN","A1AEPH8",99,0)
 ;
"RTN","A1AEPH8",100,0)
 DO NUM^A1AEUTL ; create new patch
"RTN","A1AEPH8",101,0)
 IF '$DATA(A1AEPD) DO  QUIT
"RTN","A1AEPH8",102,0)
 . DO Q
"RTN","A1AEPH8",103,0)
 . QUIT
"RTN","A1AEPH8",104,0)
 ;
"RTN","A1AEPH8",105,0)
 ; 2.c. modify copy of original patch 
"RTN","A1AEPH8",106,0)
 ;
"RTN","A1AEPH8",107,0)
 WRITE !!?3,"...modifying utility global for new patch "
"RTN","A1AEPH8",108,0)
 IF $PIECE(A1AEPD,"*",2)=999 DO
"RTN","A1AEPH8",109,0)
 . SET $PIECE(A1AEPD,"*",2)="DBA"
"RTN","A1AEPH8",110,0)
 . QUIT
"RTN","A1AEPH8",111,0)
 SET $PIECE(^UTILITY($JOB,"A1AECOP",0),U,1,5)=$PIECE(^A1AE(A1AEFL,DA,0),U,1,5)
"RTN","A1AEPH8",112,0)
 ; set status to under development, clear later-status fields
"RTN","A1AEPH8",113,0)
 SET $PIECE(^UTILITY($JOB,"A1AECOP",0),U,8,14)="u"_U_DUZ_"^^^"_DT_"^^"
"RTN","A1AEPH8",114,0)
 KILL ^UTILITY($JOB,"A1AECOP",2) ; don't need subfile printed by
"RTN","A1AEPH8",115,0)
 KILL ^UTILITY($JOB,"A1AECOP","E") ; or entered in error description
"RTN","A1AEPH8",116,0)
 ;
"RTN","A1AEPH8",117,0)
 ; 2.d. copy modified original patch into new patch
"RTN","A1AEPH8",118,0)
 ;
"RTN","A1AEPH8",119,0)
 WRITE !!?3,"...copying modified utility global into new patch ",A1AEPD
"RTN","A1AEPH8",120,0)
 DO
"RTN","A1AEPH8",121,0)
 . NEW %X SET %X="^UTILITY($JOB,""A1AECOP"","
"RTN","A1AEPH8",122,0)
 . NEW %Y SET %Y="^A1AE(11005,DA,"
"RTN","A1AEPH8",123,0)
 . DO %XY^%RCR
"RTN","A1AEPH8",124,0)
 ;
"RTN","A1AEPH8",125,0)
 ; 2.e. fire set logic of all cross-references on new patch
"RTN","A1AEPH8",126,0)
 ;
"RTN","A1AEPH8",127,0)
 DO
"RTN","A1AEPH8",128,0)
 . NEW DIK SET DIK="^A1AE(11005,"
"RTN","A1AEPH8",129,0)
 . DO IX1^DIK ; set logic, all xrefs, 1 entry
"RTN","A1AEPH8",130,0)
 ;
"RTN","A1AEPH8",131,0)
 ; 2.f. copy patch message/payload (11005.1)
"RTN","A1AEPH8",132,0)
 ;
"RTN","A1AEPH8",133,0)
 DO PCOPY(DA,A1AEIFN,A1AEPD,A1AEOLPD)
"RTN","A1AEPH8",134,0)
 DO Q ; cleanup
"RTN","A1AEPH8",135,0)
 ;
"RTN","A1AEPH8",136,0)
 QUIT  ; end of OPTION-NEW
"RTN","A1AEPH8",137,0)
 ;
"RTN","A1AEPH8",138,0)
 ;
"RTN","A1AEPH8",139,0)
PICKPAT(A1AEIFN,A1AEOLPD,A1AEPKIF,A1AEVR,A1AEQUIT) ; select patch
"RTN","A1AEPH8",140,0)
 ;private;procedure;chatty;clean?;sac-compliant?
"RTN","A1AEPH8",141,0)
 ; called by:
"RTN","A1AEPH8",142,0)
 ;   OPTION
"RTN","A1AEPH8",143,0)
 ; calls:
"RTN","A1AEPH8",144,0)
 ;   ^DIC = select patch
"RTN","A1AEPH8",145,0)
 ; input:
"RTN","A1AEPH8",146,0)
 ;   file dhcp patches (11005)
"RTN","A1AEPH8",147,0)
 ;   user selection on current device
"RTN","A1AEPH8",148,0)
 ; output:
"RTN","A1AEPH8",149,0)
 ;  .A1AEIFN = original patch's ien
"RTN","A1AEPH8",150,0)
 ;  .A1AEOLPD = original patch id
"RTN","A1AEPH8",151,0)
 ;  .A1AEPKIF = original patch's application ien
"RTN","A1AEPH8",152,0)
 ;  .A1AEVR = original patch's application version
"RTN","A1AEPH8",153,0)
 ;  .A1AEQUIT = whether no selection made & option should exit
"RTN","A1AEPH8",154,0)
 ;   support for selection & help on current device
"RTN","A1AEPH8",155,0)
 ;
"RTN","A1AEPH8",156,0)
 NEW DIC SET DIC="^A1AE(11005," ; file dhcp patches (11005)
"RTN","A1AEPH8",157,0)
 SET DIC("A")="Select PATCH TO COPY: " ; patch-selection prompt
"RTN","A1AEPH8",158,0)
 SET DIC(0)="AEMQZ" ; ask, echo, multi-index, question, zero-node
"RTN","A1AEPH8",159,0)
 ; screen: current user must be a developer for this application
"RTN","A1AEPH8",160,0)
 ; [field development personnel (.01) of subfile development personnel
"RTN","A1AEPH8",161,0)
 ; (200/11007.03) of file dhcp patch/problem package (11007)]
"RTN","A1AEPH8",162,0)
 SET DIC("S")="IF $DATA(^A1AE(11007,+$PIECE(^(0),U,2),""PH"",DUZ,0))"
"RTN","A1AEPH8",163,0)
 WRITE !
"RTN","A1AEPH8",164,0)
 ;
"RTN","A1AEPH8",165,0)
 DO ^DIC ; select patch
"RTN","A1AEPH8",166,0)
 ;
"RTN","A1AEPH8",167,0)
 IF Y<0 DO  QUIT  ; no selection made, exit option
"RTN","A1AEPH8",168,0)
 . SET A1AEQUIT=1
"RTN","A1AEPH8",169,0)
 . QUIT
"RTN","A1AEPH8",170,0)
 SET A1AEIFN=+Y ; selected patch's ien
"RTN","A1AEPH8",171,0)
 SET A1AEOLPD=$PIECE(Y(0),U) ; selected patch's id
"RTN","A1AEPH8",172,0)
 SET A1AEPKIF=$PIECE(Y(0),U,2) ; selected patch's application ien
"RTN","A1AEPH8",173,0)
 KILL A1AEVR ; selected patch's application version
"RTN","A1AEPH8",174,0)
 IF $PIECE(A1AEOLPD,"*",2)=999 D  ; only set for dba patches
"RTN","A1AEPH8",175,0)
 . SET $PIECE(A1AEOLPD,"*",2)="DBA" ; fix version in id
"RTN","A1AEPH8",176,0)
 . SET A1AEVR=999 ; fix version in local variable
"RTN","A1AEPH8",177,0)
 . QUIT
"RTN","A1AEPH8",178,0)
 ;
"RTN","A1AEPH8",179,0)
 QUIT  ; end of PICKPAT
"RTN","A1AEPH8",180,0)
 ;
"RTN","A1AEPH8",181,0)
 ;
"RTN","A1AEPH8",182,0)
CONFIRM(A1AEIFN,A1AEOLPD,A1AEQUIT) ; confirm patch selection
"RTN","A1AEPH8",183,0)
 ;private;procedure;chatty;clean;sac-compliant
"RTN","A1AEPH8",184,0)
 ; called by:
"RTN","A1AEPH8",185,0)
 ;   OPTION
"RTN","A1AEPH8",186,0)
 ; calls:
"RTN","A1AEPH8",187,0)
 ;   SET^A1AERD = confirm selection
"RTN","A1AEPH8",188,0)
 ; input:
"RTN","A1AEPH8",189,0)
 ;   user confirmation on current device
"RTN","A1AEPH8",190,0)
 ; throughput:
"RTN","A1AEPH8",191,0)
 ;  .A1AEIFN = original patch's ien, set to 0 to redo selection
"RTN","A1AEPH8",192,0)
 ; output:
"RTN","A1AEPH8",193,0)
 ;  .A1AEOLPD = original patch id
"RTN","A1AEPH8",194,0)
 ;  .A1AEQUIT = whether confirmation escaped & option should exit
"RTN","A1AEPH8",195,0)
 ;   support for confirmation & help on current device
"RTN","A1AEPH8",196,0)
 ; to do:
"RTN","A1AEPH8",197,0)
 ;   replace with fileman reader call
"RTN","A1AEPH8",198,0)
 ;
"RTN","A1AEPH8",199,0)
 NEW A1AERD SET A1AERD("A")="Do you want to copy patch "_A1AEOLPD_"? "
"RTN","A1AEPH8",200,0)
 SET A1AERD(0)="S"
"RTN","A1AEPH8",201,0)
 SET A1AERD(1)="Yes^copy "_A1AEOLPD_" patch information"
"RTN","A1AEPH8",202,0)
 SET A1AERD(2)="No^not copy patch information"
"RTN","A1AEPH8",203,0)
 SET A1AERD("B")=2
"RTN","A1AEPH8",204,0)
 NEW DTOUT,C,I,J,L,S,T,V,X,X1,XQH
"RTN","A1AEPH8",205,0)
 ;
"RTN","A1AEPH8",206,0)
 DO SET^A1AERD ; confirm selection
"RTN","A1AEPH8",207,0)
 ;
"RTN","A1AEPH8",208,0)
 IF X=U DO  QUIT  ; escape from confirmation, exit option
"RTN","A1AEPH8",209,0)
 . SET A1AEQUIT=1
"RTN","A1AEPH8",210,0)
 . QUIT
"RTN","A1AEPH8",211,0)
 QUIT:"Y"[$EXTRACT(X)  ; selection made & confirmed, exit loop
"RTN","A1AEPH8",212,0)
 SET A1AEIFN=0 ; selection not confirmed, can't exit loop yet
"RTN","A1AEPH8",213,0)
 ;
"RTN","A1AEPH8",214,0)
 QUIT  ; end of CONFIRM
"RTN","A1AEPH8",215,0)
 ;
"RTN","A1AEPH8",216,0)
 ;
"RTN","A1AEPH8",217,0)
PICKVER(A1AEVR,A1AEFL,A1AETY,A1AEPKIF,A1AEPKNM,A1AEOLPD,A1AEQUIT) ; select version
"RTN","A1AEPH8",218,0)
 ;private;procedure;chatty;clean;sac-compliant
"RTN","A1AEPH8",219,0)
 ; called by:
"RTN","A1AEPH8",220,0)
 ;   OPTION
"RTN","A1AEPH8",221,0)
 ; calls:
"RTN","A1AEPH8",222,0)
 ;   VER^A1AEUTL = select version of application
"RTN","A1AEPH8",223,0)
 ; input:
"RTN","A1AEPH8",224,0)
 ;   A1AEFL = file to operate on (patches, 11005)
"RTN","A1AEPH8",225,0)
 ;   A1AETY = "PH" to indicate operating on next patch #
"RTN","A1AEPH8",226,0)
 ;   A1AEPKIF = original patch's application ien
"RTN","A1AEPH8",227,0)
 ;   A1AEPKNM = original patch's application name
"RTN","A1AEPH8",228,0)
 ;   A1AEOLPD = original patch id
"RTN","A1AEPH8",229,0)
 ;   user selection on current device
"RTN","A1AEPH8",230,0)
 ; throughput:
"RTN","A1AEPH8",231,0)
 ;  .A1AEVR = original patch's application version
"RTN","A1AEPH8",232,0)
 ; output:
"RTN","A1AEPH8",233,0)
 ;  .A1AEQUIT = whether confirmation escaped & option should exit
"RTN","A1AEPH8",234,0)
 ;   support for selection & help on current device
"RTN","A1AEPH8",235,0)
 ; to do:
"RTN","A1AEPH8",236,0)
 ;   replace with fileman reader call
"RTN","A1AEPH8",237,0)
 ;
"RTN","A1AEPH8",238,0)
 FOR  DO  QUIT:A1AEQUIT!$D(A1AEVR)
"RTN","A1AEPH8",239,0)
 . NEW A1AE SET A1AE(0)="AEQL" ; ask, echo, question, laygo
"RTN","A1AEPH8",240,0)
 . WRITE !!,"Copy into a new patch for: ",A1AEPKNM,!
"RTN","A1AEPH8",241,0)
 . IF '$DATA(A1AEVR) DO
"RTN","A1AEPH8",242,0)
 . . NEW DA,DIC,DLAYGO,DTOUT,DUOUT,X,Y
"RTN","A1AEPH8",243,0)
 . . DO VER^A1AEUTL ; select version of application
"RTN","A1AEPH8",244,0)
 . . QUIT:$DATA(A1AEVR)  ; continue if version selected
"RTN","A1AEPH8",245,0)
 . . SET A1AEQUIT=1 ; exit option if no version selected
"RTN","A1AEPH8",246,0)
 . . QUIT
"RTN","A1AEPH8",247,0)
 . QUIT:A1AEQUIT  ; exit option if escaped from selection
"RTN","A1AEPH8",248,0)
 . ;
"RTN","A1AEPH8",249,0)
 . QUIT:A1AEVR'=999  ; fine if not dba's special version
"RTN","A1AEPH8",250,0)
 . QUIT:$PIECE(A1AEOLPD,"*",2)="DBA"  ; fine if it is a dba patch
"RTN","A1AEPH8",251,0)
 . ; but can't use v999 unless it's a dba patch
"RTN","A1AEPH8",252,0)
 . WRITE !!?3,*7,"This version is reserved for 'DBA' type patches!"
"RTN","A1AEPH8",253,0)
 . KILL A1AEVR ; repeat selection
"RTN","A1AEPH8",254,0)
 . QUIT
"RTN","A1AEPH8",255,0)
 ;
"RTN","A1AEPH8",256,0)
 QUIT  ; end of PICKVER
"RTN","A1AEPH8",257,0)
 ;
"RTN","A1AEPH8",258,0)
 ;
"RTN","A1AEPH8",259,0)
PCOPY(DA,A1AEIFN,A1AEPD,A1AEOLPD) ; copy patch message/payload (11005.1)
"RTN","A1AEPH8",260,0)
 ;private;procedure;chatty;clean?;sac-compliant?
"RTN","A1AEPH8",261,0)
 ; called by:
"RTN","A1AEPH8",262,0)
 ;   OPTION-NEW
"RTN","A1AEPH8",263,0)
 ; calls:
"RTN","A1AEPH8",264,0)
 ;   CRE8MSG = create patch-msg stub record
"RTN","A1AEPH8",265,0)
 ;   COPYTXT = create patch-msg text
"RTN","A1AEPH8",266,0)
 ;   EDITPAT = edit new patch
"RTN","A1AEPH8",267,0)
 ; input:
"RTN","A1AEPH8",268,0)
 ;   DA = ien of new patch
"RTN","A1AEPH8",269,0)
 ;   A1AEIFN = ien of original patch
"RTN","A1AEPH8",270,0)
 ;   A1AEPD = new patch id 
"RTN","A1AEPH8",271,0)
 ;   A1AEOLPD = original patch id
"RTN","A1AEPH8",272,0)
 ;
"RTN","A1AEPH8",273,0)
 ; a. compare versions of original and copied patch
"RTN","A1AEPH8",274,0)
 ;
"RTN","A1AEPH8",275,0)
 NEW A1AESAME ; are the application versions of the 2 patches the same?
"RTN","A1AEPH8",276,0)
 SET A1AESAME=$PIECE(A1AEOLPD,"*",1,2)=$PIECE(A1AEPD,"*",1,2)
"RTN","A1AEPH8",277,0)
 IF 'A1AESAME DO
"RTN","A1AEPH8",278,0)
 . WRITE !!?3,*7,"...different versions!  patch MESSAGE text not copied"
"RTN","A1AEPH8",279,0)
 . QUIT
"RTN","A1AEPH8",280,0)
 ;
"RTN","A1AEPH8",281,0)
 ; b. copy input fields, if versions match
"RTN","A1AEPH8",282,0)
 ;
"RTN","A1AEPH8",283,0)
 NEW AXMZ SET AXMZ="" ; fld input message number (2)
"RTN","A1AEPH8",284,0)
 NEW ADT SET ADT="" ; fld input date/time (3)
"RTN","A1AEPH8",285,0)
 NEW A1AEOHDR SET A1AEOHDR=$GET(^A1AE(11005.1,A1AEIFN,0)) ; old hdr
"RTN","A1AEPH8",286,0)
 IF A1AESAME,A1AEOHDR'="" DO  ; if versions match (& hdr still exists)
"RTN","A1AEPH8",287,0)
 . SET AXMZ=$PIECE(A1AEOHDR,U,2) ; original patch's input msg #
"RTN","A1AEPH8",288,0)
 . SET ADT=$PIECE(A1AEOHDR,U,3) ; original patch's input date/time
"RTN","A1AEPH8",289,0)
 . QUIT
"RTN","A1AEPH8",290,0)
 ;
"RTN","A1AEPH8",291,0)
 ; c. create patch msg stub
"RTN","A1AEPH8",292,0)
 ;
"RTN","A1AEPH8",293,0)
 DO CRE8MSG(DA,AXMZ,ADT) ; create patch-msg stub record
"RTN","A1AEPH8",294,0)
 ;
"RTN","A1AEPH8",295,0)
 ; d. copy patch-payload text, if versions match
"RTN","A1AEPH8",296,0)
 ;
"RTN","A1AEPH8",297,0)
 IF A1AESAME,$DATA(^A1AE(11005.1,A1AEIFN,2)) DO
"RTN","A1AEPH8",298,0)
 . DO COPYTXT(DA,A1AEIFN) ; copy patch-msg text
"RTN","A1AEPH8",299,0)
 . QUIT
"RTN","A1AEPH8",300,0)
 ;
"RTN","A1AEPH8",301,0)
 ; e. edit new patch
"RTN","A1AEPH8",302,0)
 ;
"RTN","A1AEPH8",303,0)
 DO EDITPAT(A1AEPD,DA) ; edit new patch
"RTN","A1AEPH8",304,0)
 ;
"RTN","A1AEPH8",305,0)
 QUIT  ; end of PCOPY
"RTN","A1AEPH8",306,0)
 ;
"RTN","A1AEPH8",307,0)
 ;
"RTN","A1AEPH8",308,0)
CRE8MSG(DA,AXMZ,ADT) ; create patch-msg stub record
"RTN","A1AEPH8",309,0)
 ;private;procedure;silent;clean?;sac-compliant?
"RTN","A1AEPH8",310,0)
 ; called by:
"RTN","A1AEPH8",311,0)
 ;   PCOPY
"RTN","A1AEPH8",312,0)
 ; calls:
"RTN","A1AEPH8",313,0)
 ;   FILE^DICN = fileman record-create
"RTN","A1AEPH8",314,0)
 ; input:
"RTN","A1AEPH8",315,0)
 ;   DA = ien of new patch in file 11005
"RTN","A1AEPH8",316,0)
 ;   AXMZ = fld input message number (2)
"RTN","A1AEPH8",317,0)
 ;   ADT = fld input date/time (3)
"RTN","A1AEPH8",318,0)
 ; output:
"RTN","A1AEPH8",319,0)
 ;   new record created in file 11005.1
"RTN","A1AEPH8",320,0)
 ;
"RTN","A1AEPH8",321,0)
 NEW X SET X=DA ; fld name (.01), a pointer to file 11005
"RTN","A1AEPH8",322,0)
 NEW DINUM SET DINUM=DA ; force ien to match .01
"RTN","A1AEPH8",323,0)
 NEW DIC SET DIC="^A1AE(11005.1," ; file dhcp patch message (11005.1)
"RTN","A1AEPH8",324,0)
 ; flds input message number (2), input date/time (3), message text (20)
"RTN","A1AEPH8",325,0)
 SET DIC("DR")="2///"_AXMZ_";3///"_ADT_";20///"_"No routines included"
"RTN","A1AEPH8",326,0)
 NEW DD,DE,DO,DQ,DR,DTOUT,DUOUT,Y
"RTN","A1AEPH8",327,0)
 DO FILE^DICN ; add patch message
"RTN","A1AEPH8",328,0)
 ;
"RTN","A1AEPH8",329,0)
 QUIT  ; end of CRE8MSG
"RTN","A1AEPH8",330,0)
 ;
"RTN","A1AEPH8",331,0)
 ;
"RTN","A1AEPH8",332,0)
COPYTXT(DA,A1AEFN) ; create patch-msg text
"RTN","A1AEPH8",333,0)
 ;private;procedure;silent;clean?;sac-compliant?
"RTN","A1AEPH8",334,0)
 ; called by:
"RTN","A1AEPH8",335,0)
 ;   PCOPY
"RTN","A1AEPH8",336,0)
 ; calls:
"RTN","A1AEPH8",337,0)
 ;   %XY^%RCR = fileman array copy
"RTN","A1AEPH8",338,0)
 ; input:
"RTN","A1AEPH8",339,0)
 ;   DA = ien of new patch
"RTN","A1AEPH8",340,0)
 ;   A1AEIFN = ien of original patch
"RTN","A1AEPH8",341,0)
 ; output:
"RTN","A1AEPH8",342,0)
 ;   msg text copied in file 11005.1 from old to new msg
"RTN","A1AEPH8",343,0)
 ;
"RTN","A1AEPH8",344,0)
 NEW %X SET %X="^A1AE(11005.1,A1AEIFN,2," ; from original patch msg
"RTN","A1AEPH8",345,0)
 NEW %Y SET %Y="^A1AE(11005.1,DA,2," ; to new patch msg
"RTN","A1AEPH8",346,0)
 WRITE !!?3,"...copying patch message"
"RTN","A1AEPH8",347,0)
 DO %XY^%RCR ; copy array
"RTN","A1AEPH8",348,0)
 SET $PIECE(^A1AE(11005.1,DA,2,0),U,5)=DT ; fix hdr-node date
"RTN","A1AEPH8",349,0)
 ;
"RTN","A1AEPH8",350,0)
 QUIT  ; end of COPYTXT
"RTN","A1AEPH8",351,0)
 ;
"RTN","A1AEPH8",352,0)
 ;
"RTN","A1AEPH8",353,0)
EDITPAT(A1AEPD,DA) ; edit new patch
"RTN","A1AEPH8",354,0)
 ;private;procedure;chatty;clean?;sac-compliant?
"RTN","A1AEPH8",355,0)
 ; called by:
"RTN","A1AEPH8",356,0)
 ;   PCOPY
"RTN","A1AEPH8",357,0)
 ; calls:
"RTN","A1AEPH8",358,0)
 ;   ^DIE = fileman edit
"RTN","A1AEPH8",359,0)
 ; input:
"RTN","A1AEPH8",360,0)
 ;   A1AEPD = patch id
"RTN","A1AEPH8",361,0)
 ;   DA = ien of new patch
"RTN","A1AEPH8",362,0)
 ;   prompt user on current device to edit new patch
"RTN","A1AEPH8",363,0)
 ; output:
"RTN","A1AEPH8",364,0)
 ;   prompt & help support to current device
"RTN","A1AEPH8",365,0)
 ;   new patch in dhcp patches file (11005) is edited
"RTN","A1AEPH8",366,0)
 ;
"RTN","A1AEPH8",367,0)
 WRITE !!,"Patch Added: ",A1AEPD,!
"RTN","A1AEPH8",368,0)
 DO
"RTN","A1AEPH8",369,0)
 . NEW DIE SET DIE="^A1AE(11005," ; file dhcp patches (11005)
"RTN","A1AEPH8",370,0)
 . NEW DR SET DR="[A1AE ADD/EDIT PATCHES]" ; pm's master template
"RTN","A1AEPH8",371,0)
 . NEW DE,DIC,DIDEL,DIEBADK,DIEFIRE,DQ,DTOUT,X,Y
"RTN","A1AEPH8",372,0)
 . DO ^DIE ; edit the patch
"RTN","A1AEPH8",373,0)
 ;
"RTN","A1AEPH8",374,0)
 IF $GET(DA) DO  ; clear sequence # and compliance date
"RTN","A1AEPH8",375,0)
 . SET $PIECE(^A1AE(11005,DA,0),U,6)="" ; fld sequential release # (6)
"RTN","A1AEPH8",376,0)
 . SET $PIECE(^A1AE(11005,DA,0),U,18)="" ; fld compliance date (18)
"RTN","A1AEPH8",377,0)
 . QUIT
"RTN","A1AEPH8",378,0)
 ;
"RTN","A1AEPH8",379,0)
 QUIT  ; end of EDITPAT
"RTN","A1AEPH8",380,0)
 ;
"RTN","A1AEPH8",381,0)
 ;
"RTN","A1AEPH8",382,0)
Q ; cleanup
"RTN","A1AEPH8",383,0)
 ;
"RTN","A1AEPH8",384,0)
 KILL DA,AXMZ,ADT
"RTN","A1AEPH8",385,0)
 KILL ^UTILITY($J,"A1AECOP")
"RTN","A1AEPH8",386,0)
 KILL A1AEOLPD,A1AE0,A1AEPKIF,A1AEPKNM,A1AEPD,A1AEPK,A1AEVR,A1AENB,A1AEFL,A1AETY
"RTN","A1AEPH8",387,0)
 ;
"RTN","A1AEPH8",388,0)
 QUIT  ; end of Q
"RTN","A1AEPH8",389,0)
 ;
"RTN","A1AEPH8",390,0)
 ;
"RTN","A1AEPH8",391,0)
EOR ; end of routine A1AEPH8
"RTN","A1AEPHD")
0^108^B70531362
"RTN","A1AEPHD",1,0)
A1AEPHD ;ven/toad-option delete a patch [A1AE PHDEL] ; 6/10/15 2:07am
"RTN","A1AEPHD",2,0)
 ;;2.5;PATCH MODULE;;Jun 05, 2015;Build 48
"RTN","A1AEPHD",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEPHD",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEPHD",5,0)
 ;
"RTN","A1AEPHD",6,0)
 ;
"RTN","A1AEPHD",7,0)
 ;primary change history
"RTN","A1AEPHD",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEPHD",9,0)
 ;
"RTN","A1AEPHD",10,0)
 ;;(c) 2015, Frederick D. S. Marshall, all rights reserved
"RTN","A1AEPHD",11,0)
 ;;($) funded by Frederick D. S. Marshall of the VISTA Expertise Network
"RTN","A1AEPHD",12,0)
 ;;Licensed under the terms of the Apache License, Version 2.0.
"RTN","A1AEPHD",13,0)
 ; under primary development: initial drafts
"RTN","A1AEPHD",14,0)
 ;
"RTN","A1AEPHD",15,0)
 ; primary developer: Frederick D. S. Marshall (toad) <toad@mumps.org>
"RTN","A1AEPHD",16,0)
 ;
"RTN","A1AEPHD",17,0)
 ; primary change history:
"RTN","A1AEPHD",18,0)
 ;
"RTN","A1AEPHD",19,0)
 ; 2015-05-29, ven/toad: refactor subroutine 2 for readability, split
"RTN","A1AEPHD",20,0)
 ; out to new routine ^A1AEPHD, break up for unit testing, comment,
"RTN","A1AEPHD",21,0)
 ; and add support for nonproduction deletion of a released patch. based
"RTN","A1AEPHD",22,0)
 ; on subroutine 2^A1AEPH1 written by Robin M. Ostrander and Mike J.
"RTN","A1AEPHD",23,0)
 ; Kilmade of VA Albany Information Systems Center (isa/rmo,mjk).
"RTN","A1AEPHD",24,0)
 ;
"RTN","A1AEPHD",25,0)
 ; contents [all private]:
"RTN","A1AEPHD",26,0)
 ;
"RTN","A1AEPHD",27,0)
 ; DELETE: option Delete a Patch [A1AE PHDEL]
"RTN","A1AEPHD",28,0)
 ; SELECT: select a patch to delete
"RTN","A1AEPHD",29,0)
 ; $$SCREEN: screen patch selection for deletion
"RTN","A1AEPHD",30,0)
 ; CONFIRM: confirm deletion of a patch
"RTN","A1AEPHD",31,0)
 ; KILL: actual deletion
"RTN","A1AEPHD",32,0)
 ; KILLNUMS: reset next patch & seq #s during delete
"RTN","A1AEPHD",33,0)
 ;
"RTN","A1AEPHD",34,0)
 ;
"RTN","A1AEPHD",35,0)
OPTION ; option delete an notreleased patch [A1AE PHDEL]
"RTN","A1AEPHD",36,0)
 ; called by:
"RTN","A1AEPHD",37,0)
 ;   Menuman for option A1AE PHDEL
"RTN","A1AEPHD",38,0)
 ;   2^A1AEPH1, now unused & slated for deletion
"RTN","A1AEPHD",39,0)
 ; calls:
"RTN","A1AEPHD",40,0)
 ;   SELECT = select a patch to delete
"RTN","A1AEPHD",41,0)
 ;   CONFIRM = confirm deletion of a patch
"RTN","A1AEPHD",42,0)
 ;   KILL = actual deletion
"RTN","A1AEPHD",43,0)
 ; input:
"RTN","A1AEPHD",44,0)
 ;   prompt user on current device to select & confirm patch
"RTN","A1AEPHD",45,0)
 ;   A1AEOVER = 1 to override usual safeties during unit-test cleanup
"RTN","A1AEPHD",46,0)
 ;              undefined otherwise
"RTN","A1AEPHD",47,0)
 ; output:
"RTN","A1AEPHD",48,0)
 ;   prompt & help on current device for select & confirm
"RTN","A1AEPHD",49,0)
 ;   selected record in file 11005 deleted
"RTN","A1AEPHD",50,0)
 ;   selected record in file 11005.1 deleted
"RTN","A1AEPHD",51,0)
 ;   selected patch's application record in file 11007 updated:
"RTN","A1AEPHD",52,0)
 ;      next patch # (& sometimes sequence #) field reset
"RTN","A1AEPHD",53,0)
 ;
"RTN","A1AEPHD",54,0)
 NEW DA SET DA=-1 ; ien of selected patch
"RTN","A1AEPHD",55,0)
 NEW A1AEPD ; field patch designation (.01) of selected patch
"RTN","A1AEPHD",56,0)
 NEW A1AE0 ; header (0) node of selected patch
"RTN","A1AEPHD",57,0)
 DO
"RTN","A1AEPHD",58,0)
 . DO SELECT(.DA,.A1AEPD,.A1AE0) ; 1. select a patch to delete
"RTN","A1AEPHD",59,0)
 . QUIT:DA<0  ; done if no selection
"RTN","A1AEPHD",60,0)
 . DO CONFIRM(.DA,A1AEPD) ; 2. confirm deletion of a patch
"RTN","A1AEPHD",61,0)
 . QUIT:DA<0  ; done if not confirmed
"RTN","A1AEPHD",62,0)
 . DO KILL(DA,A1AEPD,A1AE0) ; 3. actual deletion
"RTN","A1AEPHD",63,0)
 . QUIT
"RTN","A1AEPHD",64,0)
 ;
"RTN","A1AEPHD",65,0)
 QUIT  ; end of OPTION
"RTN","A1AEPHD",66,0)
 ;
"RTN","A1AEPHD",67,0)
 ;
"RTN","A1AEPHD",68,0)
SELECT(DA,A1AEPD,A1AE0) ; select a patch to delete
"RTN","A1AEPHD",69,0)
 ; called by: OPTION
"RTN","A1AEPHD",70,0)
 ; calls:
"RTN","A1AEPHD",71,0)
 ;   ^DIC = fileman lookup
"RTN","A1AEPHD",72,0)
 ; input:
"RTN","A1AEPHD",73,0)
 ;   prompt current device to select a patch to delete
"RTN","A1AEPHD",74,0)
 ;   A1AEOVER = 1 to override usual safeties during unit-test cleanup
"RTN","A1AEPHD",75,0)
 ;              undefined otherwise
"RTN","A1AEPHD",76,0)
 ; throughput:
"RTN","A1AEPHD",77,0)
 ;  .DA = ien of selected patch, defaults to -1
"RTN","A1AEPHD",78,0)
 ; output:
"RTN","A1AEPHD",79,0)
 ;   prompt and help to current device
"RTN","A1AEPHD",80,0)
 ;  .A1AEPD = field patch designation (.01) of selected patch
"RTN","A1AEPHD",81,0)
 ;  .A1AE0 = header (0) node of selected patch
"RTN","A1AEPHD",82,0)
 ;
"RTN","A1AEPHD",83,0)
 ; a. lookup patch
"RTN","A1AEPHD",84,0)
 ;
"RTN","A1AEPHD",85,0)
 NEW Y ; lookup results
"RTN","A1AEPHD",86,0)
 DO
"RTN","A1AEPHD",87,0)
 . NEW DIC SET DIC="^A1AE(11005," ; file dhcp patches (11005)
"RTN","A1AEPHD",88,0)
 . SET DIC(0)="AEMQZ" ; ask, echo, multi-index, question, zero node
"RTN","A1AEPHD",89,0)
 . SET DIC("A")="Select PATCH: " ; prompt
"RTN","A1AEPHD",90,0)
 . SET DIC("S")="IF $$SCREEN^A1AEPHD(^(0))" ; screen
"RTN","A1AEPHD",91,0)
 . NEW DLAYGO,DTOUT,DUOUT,X ; other inputs and outputs
"RTN","A1AEPHD",92,0)
 . WRITE !
"RTN","A1AEPHD",93,0)
 . DO ^DIC ; fileman lookup api
"RTN","A1AEPHD",94,0)
 . QUIT
"RTN","A1AEPHD",95,0)
 QUIT:Y<0  ; done if no selection
"RTN","A1AEPHD",96,0)
 ;
"RTN","A1AEPHD",97,0)
 ; b. output results
"RTN","A1AEPHD",98,0)
 ;
"RTN","A1AEPHD",99,0)
 SET DA=+Y ; ien of selected patch
"RTN","A1AEPHD",100,0)
 SET A1AEPD=$PIECE(Y,U,2) ; patch ID, (e.g., "DI*22*150")
"RTN","A1AEPHD",101,0)
 IF $PIECE(A1AEPD,"*",2)=999 DO  ; fix id of dba patches (mailman)
"RTN","A1AEPHD",102,0)
 . SET $PIECE(A1AEPD,"*",2)="DBA" ; store dba instead of version # 999
"RTN","A1AEPHD",103,0)
 . QUIT
"RTN","A1AEPHD",104,0)
 SET A1AE0=Y(0) ; patch header node
"RTN","A1AEPHD",105,0)
 ;
"RTN","A1AEPHD",106,0)
 QUIT  ; end of SELECT
"RTN","A1AEPHD",107,0)
 ;
"RTN","A1AEPHD",108,0)
 ;
"RTN","A1AEPHD",109,0)
SCREEN(HEADER) ; screen patch selection for deletion
"RTN","A1AEPHD",110,0)
 ; called by: ^DIC, after it's called by SELECT
"RTN","A1AEPHD",111,0)
 ; calls: none
"RTN","A1AEPHD",112,0)
 ; input:
"RTN","A1AEPHD",113,0)
 ;   HEADER = header (0) node of patch to screen for deletion
"RTN","A1AEPHD",114,0)
 ;   A1AEOVER = 1 to override usual safeties during unit-test cleanup
"RTN","A1AEPHD",115,0)
 ;              undefined otherwise
"RTN","A1AEPHD",116,0)
 ; output = 1 if patch may be selected for deletion
"RTN","A1AEPHD",117,0)
 ;          0 if not
"RTN","A1AEPHD",118,0)
 ;
"RTN","A1AEPHD",119,0)
 ; a. select by patch status
"RTN","A1AEPHD",120,0)
 ;
"RTN","A1AEPHD",121,0)
 ; under normal conditions, for a patch to be deletable, it must be in
"RTN","A1AEPHD",122,0)
 ; one of the five following statuses. before version 2.4, it had to be
"RTN","A1AEPHD",123,0)
 ; in one of the first two
"RTN","A1AEPHD",124,0)
 ;
"RTN","A1AEPHD",125,0)
 NEW SELECT SET SELECT=1
"RTN","A1AEPHD",126,0)
 DO
"RTN","A1AEPHD",127,0)
 . NEW STATUS SET STATUS=$PIECE(HEADER,U,8) ; field status of patch (8)
"RTN","A1AEPHD",128,0)
 . QUIT:STATUS="u"  ; under development
"RTN","A1AEPHD",129,0)
 . QUIT:STATUS="c"  ; completed/unverified
"RTN","A1AEPHD",130,0)
 . QUIT:STATUS="i2"  ; in review
"RTN","A1AEPHD",131,0)
 . QUIT:STATUS="d2"  ; sec development
"RTN","A1AEPHD",132,0)
 . QUIT:STATUS="s2"  ; sec completion
"RTN","A1AEPHD",133,0)
 . SET SELECT=0 ; other statuses safe from deletion
"RTN","A1AEPHD",134,0)
 . QUIT
"RTN","A1AEPHD",135,0)
 ;
"RTN","A1AEPHD",136,0)
 ; b. select by user role
"RTN","A1AEPHD",137,0)
 ;
"RTN","A1AEPHD",138,0)
 ; to delete a patch, the current user must be listed in field
"RTN","A1AEPHD",139,0)
 ; development personnel (.01) of subfile development personnel
"RTN","A1AEPHD",140,0)
 ; (200/11007.03) of file dhcp patch/problem package (11007):
"RTN","A1AEPHD",141,0)
 ;
"RTN","A1AEPHD",142,0)
 NEW APP SET APP=+$PIECE(HEADER,U,2) ; field package (2)
"RTN","A1AEPHD",143,0)
 IF '$DATA(^A1AE(11007,APP,"PH",DUZ,0)) DO
"RTN","A1AEPHD",144,0)
 . SET SELECT=0 ; otherwise, no deleting allowed
"RTN","A1AEPHD",145,0)
 . QUIT
"RTN","A1AEPHD",146,0)
 ;
"RTN","A1AEPHD",147,0)
 ; c. support unit testing
"RTN","A1AEPHD",148,0)
 ;
"RTN","A1AEPHD",149,0)
 ; for applications listed as for unit testing only, the unit-test
"RTN","A1AEPHD",150,0)
 ; software may set special override local variable A1AEOVER to allow
"RTN","A1AEPHD",151,0)
 ; otherwise restricted behavior, such as deleting any patch, so the
"RTN","A1AEPHD",152,0)
 ; environment can be restored to a clean state during or after unit
"RTN","A1AEPHD",153,0)
 ; testing. A1AEOVER is to be used sparingly, so unit tests usually
"RTN","A1AEPHD",154,0)
 ; focus on replicating normal behavior. the special condition is called
"RTN","A1AEPHD",155,0)
 ; unit-test override.
"RTN","A1AEPHD",156,0)
 ;
"RTN","A1AEPHD",157,0)
 IF 'SELECT DO
"RTN","A1AEPHD",158,0)
 . NEW APPHEAD SET APPHEAD=$GET(^A1AE(11007,APP,0)) ; header or app
"RTN","A1AEPHD",159,0)
 . NEW FORUNIT SET FORUNIT=$PIECE(APPHEAD,U,7) ; fld for unit test only?
"RTN","A1AEPHD",160,0)
 . QUIT:'FORUNIT  ; if real app, protect safe patch even in override
"RTN","A1AEPHD",161,0)
 . QUIT:'$DATA(A1AEOVER)  ; if not in override, protect safe patch
"RTN","A1AEPHD",162,0)
 . SET SELECT=1 ; in override, can delete fake app's patch safe patch
"RTN","A1AEPHD",163,0)
 . QUIT
"RTN","A1AEPHD",164,0)
 ;
"RTN","A1AEPHD",165,0)
 QUIT SELECT ; end of $$SCREEN
"RTN","A1AEPHD",166,0)
 ;
"RTN","A1AEPHD",167,0)
 ;
"RTN","A1AEPHD",168,0)
CONFIRM(A1AEDA,A1AEPD) ; confirm deletion of a patch
"RTN","A1AEPHD",169,0)
 ; called by: OPTION
"RTN","A1AEPHD",170,0)
 ; calls:
"RTN","A1AEPHD",171,0)
 ;   ^DIR = fileman reader
"RTN","A1AEPHD",172,0)
 ; input:
"RTN","A1AEPHD",173,0)
 ;   prompt current device to select a patch to delete
"RTN","A1AEPHD",174,0)
 ; throughput:
"RTN","A1AEPHD",175,0)
 ;  .A1AEDA = ien of selected patch, set to -1 if not confirmed
"RTN","A1AEPHD",176,0)
 ;      (note name change to protect from reader's DA input parameter)
"RTN","A1AEPHD",177,0)
 ; output:
"RTN","A1AEPHD",178,0)
 ;   prompt and help to current device
"RTN","A1AEPHD",179,0)
 ;  .A1AEPD = field patch designation (.01) of selected patch
"RTN","A1AEPHD",180,0)
 ;
"RTN","A1AEPHD",181,0)
 ; 1. define confirmation prompt
"RTN","A1AEPHD",182,0)
 NEW DA,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","A1AEPHD",183,0)
 NEW DIR SET DIR(0)="Y^O"
"RTN","A1AEPHD",184,0)
 SET DIR("A")="Are you sure you want to delete patch "_A1AEPD
"RTN","A1AEPHD",185,0)
 SET DIR("B")="NO"
"RTN","A1AEPHD",186,0)
 SET DIR("?")="Enter YES to delete the selected patch, or NO to exit."
"RTN","A1AEPHD",187,0)
 ;
"RTN","A1AEPHD",188,0)
 ; 2. prompt user for confirmation
"RTN","A1AEPHD",189,0)
 DO ^DIR
"RTN","A1AEPHD",190,0)
 ;
"RTN","A1AEPHD",191,0)
 ; 3. record results
"RTN","A1AEPHD",192,0)
 IF 'Y DO
"RTN","A1AEPHD",193,0)
 . SET A1AEDA=-1
"RTN","A1AEPHD",194,0)
 . QUIT
"RTN","A1AEPHD",195,0)
 ;
"RTN","A1AEPHD",196,0)
 QUIT  ; end of CONFIRM
"RTN","A1AEPHD",197,0)
 ;
"RTN","A1AEPHD",198,0)
 ;
"RTN","A1AEPHD",199,0)
KILL(DA,A1AEPD,A1AE0) ; actual deletion
"RTN","A1AEPHD",200,0)
 ; called by: OPTION
"RTN","A1AEPHD",201,0)
 ; calls:
"RTN","A1AEPHD",202,0)
 ;   ^DIK = fileman delete
"RTN","A1AEPHD",203,0)
 ;   KILLNUMS = reset next patch & seq #s during delete
"RTN","A1AEPHD",204,0)
 ; input:
"RTN","A1AEPHD",205,0)
 ;   DA = ien of selected patch
"RTN","A1AEPHD",206,0)
 ;   A1AEPD = field patch designation (.01) of selected patch (opt)
"RTN","A1AEPHD",207,0)
 ;   A1AE0 = header (0) node of selected patch                (opt)
"RTN","A1AEPHD",208,0)
 ; output:
"RTN","A1AEPHD",209,0)
 ;   selected record in file 11005 deleted
"RTN","A1AEPHD",210,0)
 ;   selected record in file 11005.1 deleted
"RTN","A1AEPHD",211,0)
 ;   selected patch's application record in file 11007 updated:
"RTN","A1AEPHD",212,0)
 ;      next patch # (& sometimes next sequence #) field reset
"RTN","A1AEPHD",213,0)
 ;
"RTN","A1AEPHD",214,0)
 I '$D(A1AE0) D
"RTN","A1AEPHD",215,0)
 . S A1AE0=^A1AE(11005,DA,0)
"RTN","A1AEPHD",216,0)
 . S A1AEPD=$P(A1AE0,U)
"RTN","A1AEPHD",217,0)
 ;
"RTN","A1AEPHD",218,0)
 ; a. delete patch
"RTN","A1AEPHD",219,0)
 ;
"RTN","A1AEPHD",220,0)
 DO
"RTN","A1AEPHD",221,0)
 . NEW DIK SET DIK="^A1AE(11005," ; file dhcp patches (11005)
"RTN","A1AEPHD",222,0)
 . DO ^DIK ; delete patch
"RTN","A1AEPHD",223,0)
 . WRITE !!?3,"...deletion of "_A1AEPD_" from DHCP Patch File completed"
"RTN","A1AEPHD",224,0)
 . QUIT
"RTN","A1AEPHD",225,0)
 ;
"RTN","A1AEPHD",226,0)
 ; b. reset next patch # (& sometimes next sequence #)
"RTN","A1AEPHD",227,0)
 ;
"RTN","A1AEPHD",228,0)
 DO KILLNUMS(DA,A1AE0)
"RTN","A1AEPHD",229,0)
 ;
"RTN","A1AEPHD",230,0)
 ; c. delete patch payload
"RTN","A1AEPHD",231,0)
 ;
"RTN","A1AEPHD",232,0)
 DO
"RTN","A1AEPHD",233,0)
 . NEW DIK SET DIK="^A1AE(11005.1," ; file dhcp patch message (11005.1)
"RTN","A1AEPHD",234,0)
 . DO ^DIK ; delete patch message (payload)
"RTN","A1AEPHD",235,0)
 . QUIT
"RTN","A1AEPHD",236,0)
 ;
"RTN","A1AEPHD",237,0)
 QUIT  ; end of KILL
"RTN","A1AEPHD",238,0)
 ;
"RTN","A1AEPHD",239,0)
 ;
"RTN","A1AEPHD",240,0)
KILLNUMS(DA,A1AE0) ; reset next patch & seq #s during delete
"RTN","A1AEPHD",241,0)
 ; called by: KILL
"RTN","A1AEPHD",242,0)
 ; calls: none
"RTN","A1AEPHD",243,0)
 ; input:
"RTN","A1AEPHD",244,0)
 ;   DA = ien of selected patch
"RTN","A1AEPHD",245,0)
 ;   A1AE0 = header (0) node of selected patch
"RTN","A1AEPHD",246,0)
 ; output:
"RTN","A1AEPHD",247,0)
 ;   selected patch's application record in file 11007 updated:
"RTN","A1AEPHD",248,0)
 ;      next patch # (& sometimes next sequence #) field reset
"RTN","A1AEPHD",249,0)
 ;
"RTN","A1AEPHD",250,0)
 ; a. load patch info
"RTN","A1AEPHD",251,0)
 ;
"RTN","A1AEPHD",252,0)
 NEW HEADER SET HEADER=A1AE0 ; patch header, for readability
"RTN","A1AEPHD",253,0)
 NEW APP SET APP=+$PIECE(HEADER,U,2) ; field package (2)
"RTN","A1AEPHD",254,0)
 NEW VERSION SET VERSION=$PIECE(HEADER,U,3) ; field version (3)
"RTN","A1AEPHD",255,0)
 NEW STREAM SET STREAM=$$GSTRMP^A1AEUTL(DA) ; patch's stream
"RTN","A1AEPHD",256,0)
 ;
"RTN","A1AEPHD",257,0)
 ; b. lock app/version/stream
"RTN","A1AEPHD",258,0)
 ;
"RTN","A1AEPHD",259,0)
 LOCK +^A1AE(11007,APP,"V",VERSION,1,STREAM,"PH"):60 ; lock 
"RTN","A1AEPHD",260,0)
 NEW LOCKED SET LOCKED=$TEST ; did we get the lock?
"RTN","A1AEPHD",261,0)
 ;
"RTN","A1AEPHD",262,0)
 ; c. reset next patch #
"RTN","A1AEPHD",263,0)
 ;
"RTN","A1AEPHD",264,0)
 DO
"RTN","A1AEPHD",265,0)
 . NEW PATNUM SET PATNUM=$PIECE(HEADER,U,4) ; field patch number (4)
"RTN","A1AEPHD",266,0)
 . NEW NEXTPAT ; field next patch number (1)
"RTN","A1AEPHD",267,0)
 . ; for this stream of this version of this app:
"RTN","A1AEPHD",268,0)
 . SET NEXTPAT=$GET(^A1AE(11007,APP,"V",VERSION,1,STREAM,"PH"))
"RTN","A1AEPHD",269,0)
 . QUIT:'NEXTPAT  ; none yet
"RTN","A1AEPHD",270,0)
 . QUIT:PATNUM'<NEXTPAT  ; done if patch's # is >= next patch #
"RTN","A1AEPHD",271,0)
 . ; otherwise, roll back the next patch # to this patch's #
"RTN","A1AEPHD",272,0)
 . ; because this number is now available again
"RTN","A1AEPHD",273,0)
 . SET ^("PH")=PATNUM ; **naked**
"RTN","A1AEPHD",274,0)
 . QUIT
"RTN","A1AEPHD",275,0)
 ;
"RTN","A1AEPHD",276,0)
 ; d. conditionally reset next sequence #
"RTN","A1AEPHD",277,0)
 ;
"RTN","A1AEPHD",278,0)
 DO
"RTN","A1AEPHD",279,0)
 . NEW SEQNUM SET SEQNUM=$PIECE(HEADER,U,6) ; field seq release num (6)
"RTN","A1AEPHD",280,0)
 . QUIT:'SEQNUM  ; done if this patch had no seq #
"RTN","A1AEPHD",281,0)
 . NEW STATUS SET STATUS=$PIECE(HEADER,U,8) ; field status of patch (8)
"RTN","A1AEPHD",282,0)
 . QUIT:STATUS'="v"&(STATUS'="r2")  ; neither verified nor sec release
"RTN","A1AEPHD",283,0)
 . NEW NEXTSEQ ; field next sequence number (2)
"RTN","A1AEPHD",284,0)
 . ; for this stream of this version of this app:
"RTN","A1AEPHD",285,0)
 . SET NEXTSEQ=$GET(^A1AE(11007,APP,"V",VERSION,1,STREAM,"PR"))
"RTN","A1AEPHD",286,0)
 . QUIT:'NEXTSEQ  ; none yet
"RTN","A1AEPHD",287,0)
 . QUIT:PATNUM'<NEXTSEQ  ; done if patch's seq # is >= next seq #
"RTN","A1AEPHD",288,0)
 . ; otherwise, roll back the next seq # to this patch's seq # - 1
"RTN","A1AEPHD",289,0)
 . ; because this number is now available again
"RTN","A1AEPHD",290,0)
 . SET ^("PR")=SEQNUM-1 ; **NAKED**
"RTN","A1AEPHD",291,0)
 . QUIT
"RTN","A1AEPHD",292,0)
 ;
"RTN","A1AEPHD",293,0)
 ; e. unlock app/version/stream, if locked
"RTN","A1AEPHD",294,0)
 ;
"RTN","A1AEPHD",295,0)
 IF LOCKED DO  ; only unlock if we did in fact lock it
"RTN","A1AEPHD",296,0)
 . LOCK -^A1AE(11007,APP,"V",VERSION,1,STREAM,"PH") ; unlock 
"RTN","A1AEPHD",297,0)
 ;
"RTN","A1AEPHD",298,0)
 QUIT  ; end of KILLNUMS
"RTN","A1AEPHD",299,0)
 ;
"RTN","A1AEPHD",300,0)
 ;
"RTN","A1AEPHD",301,0)
EOR ; end of routine A1AEPHD
"RTN","A1AEPHS")
0^31^B279740285
"RTN","A1AEPHS",1,0)
A1AEPHS ;isa/rmo,mjk-logic from DD, U triggers test message ;2015-06-14  3:28 AM
"RTN","A1AEPHS",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEPHS",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEPHS",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEPHS",5,0)
 ;
"RTN","A1AEPHS",6,0)
 ;
"RTN","A1AEPHS",7,0)
 ;primary change history
"RTN","A1AEPHS",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEPHS",9,0)
 ;
"RTN","A1AEPHS",10,0)
 ; Input Transform of field Status (8) of file DHCP Patches (11005)
"RTN","A1AEPHS",11,0)
 ;
"RTN","A1AEPHS",12,0)
 ; Initialization:
"RTN","A1AEPHS",13,0)
 ;
"RTN","A1AEPHS",14,0)
 Q:'$D(X)  ; if no user input
"RTN","A1AEPHS",15,0)
 I $D(DUZ)[0 D  Q  ; if no user
"RTN","A1AEPHS",16,0)
 . W !?3,"Your user code (DUZ) must be defined to change the status of a patch."
"RTN","A1AEPHS",17,0)
 . K X
"RTN","A1AEPHS",18,0)
 I $D(U)[0 S U="^" ; if called from direct mode without U
"RTN","A1AEPHS",19,0)
 N DIERR ; VEN/SMH - Don't allow DIERR to leak back to DBS Fileman calls
"RTN","A1AEPHS",20,0)
 N A1AEDA S A1AEDA=DA ; Patch IEN
"RTN","A1AEPHS",21,0)
 N A1AE0 S A1AE0=$G(^A1AE(11005,A1AEDA,0)) ; Patch record header
"RTN","A1AEPHS",22,0)
 S A1AEPKIF=$P(A1AE0,U,2) ; field Package (2)
"RTN","A1AEPHS",23,0)
 ;
"RTN","A1AEPHS",24,0)
 ; Prepare new value for processing:
"RTN","A1AEPHS",25,0)
 ;
"RTN","A1AEPHS",26,0)
 N A1AEX S A1AEX=X ; save user input
"RTN","A1AEPHS",27,0)
 N A1AENEWD D  ; lookup user input in file DHCP Patch Status (11005.2)
"RTN","A1AEPHS",28,0)
 . N X ; protect user input from lookup
"RTN","A1AEPHS",29,0)
 . S A1AENEWD=$$FIND1^DIC(11005.2,,"MO",A1AEX)
"RTN","A1AEPHS",30,0)
 . I 'A1AENEWD S A1AENEWD=0 ; failed lookup
"RTN","A1AEPHS",31,0)
 N A1AENEWS S A1AENEWS=$G(^A1AE(11005.2,A1AENEWD,0)) ; new status hdr
"RTN","A1AEPHS",32,0)
 N A1AENEW S A1AENEW=$P(A1AENEWS,U) ; field Code (.01)
"RTN","A1AEPHS",33,0)
 I 'A1AENEWD S A1AENEW=0 ; failed lookup is coded as 0
"RTN","A1AEPHS",34,0)
 N A1AENEWC S A1AENEWC=U_A1AENEW_U ; to test if lists contain new code
"RTN","A1AEPHS",35,0)
 N A1AEOPT S A1AEOPT=$P(A1AENEWS,U,3) ; field Display (.03)
"RTN","A1AEPHS",36,0)
 N A1AEBULL S A1AEBULL=$P(A1AENEWS,U,4) ; field Bulletin Name (.04)
"RTN","A1AEPHS",37,0)
 N A1AESENT S A1AESENT=$P(A1AENEWS,U,5) ; field Sent To (.05)
"RTN","A1AEPHS",38,0)
 N A1AESAME S A1AESAME=$P(A1AENEWS,U,8)
"RTN","A1AEPHS",39,0)
 ; field Same Status to Generate Test Msg (.08)
"RTN","A1AEPHS",40,0)
 ;
"RTN","A1AEPHS",41,0)
 ; Prepare old value for processing:
"RTN","A1AEPHS",42,0)
 ;
"RTN","A1AEPHS",43,0)
 N A1AEOLD S A1AEOLD=$P(A1AE0,U,8) ; field Status (8)
"RTN","A1AEPHS",44,0)
 I A1AEOLD="" S A1AEOLD=0 ; no old status is coded as 0
"RTN","A1AEPHS",45,0)
 N A1AEOLDD D  ; lookup old status in file DHCP Patch Status
"RTN","A1AEPHS",46,0)
 . N X ; protect user input from lookup
"RTN","A1AEPHS",47,0)
 . S A1AEOLDD=$$FIND1^DIC(11005.2,,"X",A1AEOLD,"B")
"RTN","A1AEPHS",48,0)
 . I 'A1AEOLDD S A1AEOLDD=0 ; failed lookup (e.g., new patch)
"RTN","A1AEPHS",49,0)
 N A1AEOLDS S A1AEOLDS=$G(^A1AE(11005.2,A1AEOLDD,0)) ; old status hdr
"RTN","A1AEPHS",50,0)
 N TESTMES S TESTMES=A1AEOLD=A1AENEW&A1AESAME ; generate tst msg?
"RTN","A1AEPHS",51,0)
 ; for three statuses, assigning that same status to the patch causes
"RTN","A1AEPHS",52,0)
 ; it to generate a test message; this feature works for patches in
"RTN","A1AEPHS",53,0)
 ; review or either kind of development
"RTN","A1AEPHS",54,0)
 I TESTMES D  ; if same status entered to generate test message
"RTN","A1AEPHS",55,0)
 . S X=A1AENEW ; reduce user input to the status code
"RTN","A1AEPHS",56,0)
 E  I A1AEOLD=A1AENEW Q  ; don't proceed if it is the same status.
"RTN","A1AEPHS",57,0)
 S A1AEOLD=$$UP^XLFSTR(A1AEOLD)
"RTN","A1AEPHS",58,0)
 N A1AEOLDC S A1AEOLDC=U_A1AEOLD_U ; to test if lists contain old code
"RTN","A1AEPHS",59,0)
 ;
"RTN","A1AEPHS",60,0)
 ; Branch to processing subroutine based on old value:
"RTN","A1AEPHS",61,0)
 ;
"RTN","A1AEPHS",62,0)
 N A1AELIST S A1AELIST="^U^C^V^E^R^I2^D2^S2^R2^N2^" ; main statuses
"RTN","A1AEPHS",63,0)
 N A1AESEC S A1AESEC="^I2^D2^S2^R2^N2^" ; secondary statuses
"RTN","A1AEPHS",64,0)
 ;
"RTN","A1AEPHS",65,0)
 I A1AELIST[A1AEOLDC D
"RTN","A1AEPHS",66,0)
 . D @A1AEOLD ; process main-status patches
"RTN","A1AEPHS",67,0)
 E  D
"RTN","A1AEPHS",68,0)
 . D NEW ; process new patch (& unfortunately x = cancel)
"RTN","A1AEPHS",69,0)
 ;
"RTN","A1AEPHS",70,0)
 S X=A1AEX ; restore user input
"RTN","A1AEPHS",71,0)
 ;
"RTN","A1AEPHS",72,0)
 QUIT  ; end of A1AEPHS
"RTN","A1AEPHS",73,0)
 ;
"RTN","A1AEPHS",74,0)
 ;
"RTN","A1AEPHS",75,0)
NEW ; new patch
"RTN","A1AEPHS",76,0)
 ;
"RTN","A1AEPHS",77,0)
 I A1AENEW'="u" D  Q
"RTN","A1AEPHS",78,0)
 . W !?3,"The status of a new patch may only be entered as Under Development (u)!"
"RTN","A1AEPHS",79,0)
 . K X
"RTN","A1AEPHS",80,0)
 ;
"RTN","A1AEPHS",81,0)
 I '$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0)) D
"RTN","A1AEPHS",82,0)
 . W !?3,"You are not an authorized developer of this package."
"RTN","A1AEPHS",83,0)
 . K X
"RTN","A1AEPHS",84,0)
 ;
"RTN","A1AEPHS",85,0)
 QUIT  ; end of NEW
"RTN","A1AEPHS",86,0)
 ;
"RTN","A1AEPHS",87,0)
 ;
"RTN","A1AEPHS",88,0)
U ; u = UNDER DEVELOPMENT
"RTN","A1AEPHS",89,0)
 ;
"RTN","A1AEPHS",90,0)
 I 'TESTMES,"^c^x^"'[A1AENEWC D  Q
"RTN","A1AEPHS",91,0)
 . W !?3,"The status may only be changed to Completed/Unreleased (c)"
"RTN","A1AEPHS",92,0)
 . W " or Canceled (x)!"
"RTN","A1AEPHS",93,0)
 . K X
"RTN","A1AEPHS",94,0)
 I '$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0)) D  Q
"RTN","A1AEPHS",95,0)
 . W !?3,"You are not an authorized developer of this package."
"RTN","A1AEPHS",96,0)
 . K X
"RTN","A1AEPHS",97,0)
 I 'TESTMES,A1AENEW="c",$P(^A1AE(11005,DA,0),U,9)=DUZ D  Q
"RTN","A1AEPHS",98,0)
 . W !?3,"Please have another developer of the package review the patch and change"
"RTN","A1AEPHS",99,0)
 . W !?3,"the status to Completed/Unreleased (c)."
"RTN","A1AEPHS",100,0)
 . K X
"RTN","A1AEPHS",101,0)
 ;
"RTN","A1AEPHS",102,0)
 N SAVX,SEQ,TVER,TXVER,XMY
"RTN","A1AEPHS",103,0)
 ;
"RTN","A1AEPHS",104,0)
 I 'TESTMES D  Q:X'=A1AEX
"RTN","A1AEPHS",105,0)
 . D ASKCHG
"RTN","A1AEPHS",106,0)
 I TESTMES D  Q:$D(DUOUT)!($D(DTOUT))!('Y)
"RTN","A1AEPHS",107,0)
 . D ASKTST
"RTN","A1AEPHS",108,0)
 S SEQ=""
"RTN","A1AEPHS",109,0)
 D GET^A1AEMAL
"RTN","A1AEPHS",110,0)
 I '$D(XMZ) D  Q
"RTN","A1AEPHS",111,0)
 . K X
"RTN","A1AEPHS",112,0)
 D MES^A1AEMAL
"RTN","A1AEPHS",113,0)
 I TESTMES D  Q
"RTN","A1AEPHS",114,0)
 . S X="u"
"RTN","A1AEPHS",115,0)
 Q:A1AENEW="x"  ; Canceled exit here
"RTN","A1AEPHS",116,0)
 ;
"RTN","A1AEPHS",117,0)
 K XMY
"RTN","A1AEPHS",118,0)
 F I=0:0 S I=$O(^A1AE(11007,A1AEPKIF,"PB",I)) Q:'I  D
"RTN","A1AEPHS",119,0)
 . I $D(^(I,0)),$P(^(0),U,2)="V" S XMY(I)=""
"RTN","A1AEPHS",120,0)
 S XMY(DUZ)=""
"RTN","A1AEPHS",121,0)
 D BUL
"RTN","A1AEPHS",122,0)
 ;
"RTN","A1AEPHS",123,0)
 QUIT  ; end of U
"RTN","A1AEPHS",124,0)
 ;
"RTN","A1AEPHS",125,0)
 ;
"RTN","A1AEPHS",126,0)
C ; c = COMPLETED/UNVERIFIED
"RTN","A1AEPHS",127,0)
 ;
"RTN","A1AEPHS",128,0)
 I A1AENEW="u" D  Q
"RTN","A1AEPHS",129,0)
 . D NEW
"RTN","A1AEPHS",130,0)
 ;
"RTN","A1AEPHS",131,0)
 I A1AENEW'="v" D  Q
"RTN","A1AEPHS",132,0)
 . W !?3,"The status may only be changed to Released (v)!"
"RTN","A1AEPHS",133,0)
 . K X
"RTN","A1AEPHS",134,0)
 ;
"RTN","A1AEPHS",135,0)
 D  Q:'$D(X)
"RTN","A1AEPHS",136,0)
 . I $D(^A1AE(11007,A1AEPKIF,"PB",DUZ,0)),$P(^(0),U,2)="V" Q
"RTN","A1AEPHS",137,0)
 . W !?3,"You are not authorized to release patches of this package."
"RTN","A1AEPHS",138,0)
 . K X
"RTN","A1AEPHS",139,0)
 ;
"RTN","A1AEPHS",140,0)
 D  Q:'$D(X)
"RTN","A1AEPHS",141,0)
 . N A1AEUENT S A1AEUENT=$P(A1AE0,U,9) ; field User Entering (9)
"RTN","A1AEPHS",142,0)
 . N A1AEUCOM S A1AEUCOM=$P(A1AE0,U,13) ; field User Completion (13)
"RTN","A1AEPHS",143,0)
 . I A1AEUENT'=DUZ,A1AEUCOM'=DUZ Q  ; if different user, we're good
"RTN","A1AEPHS",144,0)
 . W !?3,"Please have an authorized releaser, other than the developer"
"RTN","A1AEPHS",145,0)
 . W !?3,"who entered the patch or completed the patch, release the"
"RTN","A1AEPHS",146,0)
 . W !?3,"patch."
"RTN","A1AEPHS",147,0)
 . K X
"RTN","A1AEPHS",148,0)
 ;
"RTN","A1AEPHS",149,0)
 N A1AEVR S A1AEVR=$P(A1AE0,U,3) ; field Version (3)
"RTN","A1AEPHS",150,0)
 N A1AEHOLD S A1AEHOLD=$P(A1AE0,U,17) ; field Holding Date (17)
"RTN","A1AEPHS",151,0)
 I A1AEHOLD>DT D
"RTN","A1AEPHS",152,0)
 . W !?3,"This patch cannot be Verified/Released (v) until: "
"RTN","A1AEPHS",153,0)
 . W $$FMTE^XLFDT(A1AEHOLD)
"RTN","A1AEPHS",154,0)
 . K X
"RTN","A1AEPHS",155,0)
 ;
"RTN","A1AEPHS",156,0)
 ;naked ref to same entry above
"RTN","A1AEPHS",157,0)
 I $D(^("Q","B")) D
"RTN","A1AEPHS",158,0)
 . N CHECK S CHECK=""
"RTN","A1AEPHS",159,0)
 . N AZ ; return array from PCHK
"RTN","A1AEPHS",160,0)
 . D PCHK^A1AEUTL1
"RTN","A1AEPHS",161,0)
 . Q:'$D(AZ("STOP"))
"RTN","A1AEPHS",162,0)
 . W !?3,"This patch cannot be Verified/released (v) before patch(s):"
"RTN","A1AEPHS",163,0)
 . S AZ=0
"RTN","A1AEPHS",164,0)
 . F  S AZ=$O(AZ("STOP",AZ)) Q:'AZ  D
"RTN","A1AEPHS",165,0)
 . . W:$X>60 !,?62
"RTN","A1AEPHS",166,0)
 . . W ?62,$P(AZ("STOP",AZ),U)
"RTN","A1AEPHS",167,0)
 . K X
"RTN","A1AEPHS",168,0)
 I '$D(X) D  Q
"RTN","A1AEPHS",169,0)
 . W $C(7)
"RTN","A1AEPHS",170,0)
 ;
"RTN","A1AEPHS",171,0)
 ;check for Patch message sent/but disconnect blew away 'v'status
"RTN","A1AEPHS",172,0)
 I $P($G(^A1AE(11005.1,DA,0)),U,6),$P($G(^(0)),U,7),A1AENEW="v" D  Q
"RTN","A1AEPHS",173,0)
 . D NOMESS^A1AEMAL1
"RTN","A1AEPHS",174,0)
 ;
"RTN","A1AEPHS",175,0)
 D ASKCHG
"RTN","A1AEPHS",176,0)
 Q:X'=A1AEX
"RTN","A1AEPHS",177,0)
 ;
"RTN","A1AEPHS",178,0)
 I '$D(A1AEPKV) D
"RTN","A1AEPHS",179,0)
 . D SEQ^A1AEUTL
"RTN","A1AEPHS",180,0)
 ;
"RTN","A1AEPHS",181,0)
 ;See if we can get a Mail Message
"RTN","A1AEPHS",182,0)
 K XMZ
"RTN","A1AEPHS",183,0)
 D GET^A1AEMAL
"RTN","A1AEPHS",184,0)
 I '$D(XMZ) D
"RTN","A1AEPHS",185,0)
 . D DELSEQ^A1AEUTL
"RTN","A1AEPHS",186,0)
 . K X
"RTN","A1AEPHS",187,0)
 Q:'$D(X)
"RTN","A1AEPHS",188,0)
 ;
"RTN","A1AEPHS",189,0)
 ; VEN/JLI 150413 - add info from DHCP PATCHES file to message data in DHCP PATCH MESSAGE file entry
"RTN","A1AEPHS",190,0)
 D BUILDIT^A1AEBLD(DA)
"RTN","A1AEPHS",191,0)
 ; VEN/JLI - end of insertion
"RTN","A1AEPHS",192,0)
 ;Build Mail Message
"RTN","A1AEPHS",193,0)
 D MES^A1AEMAL
"RTN","A1AEPHS",194,0)
 ;
"RTN","A1AEPHS",195,0)
 ;After building message, update version #
"RTN","A1AEPHS",196,0)
 D NEWVER^A1AEUTL(A1AEPKIF,DA)
"RTN","A1AEPHS",197,0)
 D BOTH
"RTN","A1AEPHS",198,0)
 ;
"RTN","A1AEPHS",199,0)
 QUIT  ; end of C
"RTN","A1AEPHS",200,0)
 ;
"RTN","A1AEPHS",201,0)
 ;
"RTN","A1AEPHS",202,0)
BOTH ;Send Bulletin, Called from C and V. Setup address list
"RTN","A1AEPHS",203,0)
 K A1AEVR,SEQ,XMY
"RTN","A1AEPHS",204,0)
 N A1AETO,XMBTMP
"RTN","A1AEPHS",205,0)
 D INIT^XMXADDR
"RTN","A1AEPHS",206,0)
 S A1AETO=0
"RTN","A1AEPHS",207,0)
 I '$D(A1AEPKV) D
"RTN","A1AEPHS",208,0)
 . F  S A1AETO=$O(^A1AE(11007,A1AEPKIF,1,A1AETO)) Q:'A1AETO  D
"RTN","A1AEPHS",209,0)
 . . D ADDRESS^XMXADDR(DUZ,A1AETO)
"RTN","A1AEPHS",210,0)
 I $D(A1AEPKV) D
"RTN","A1AEPHS",211,0)
 . D ADDRESS^XMXADDR(DUZ,"G.A1AE PACKAGE RELEASE")
"RTN","A1AEPHS",212,0)
 S XMBTMP=1
"RTN","A1AEPHS",213,0)
 S XMY(DUZ)=""
"RTN","A1AEPHS",214,0)
 D BUL
"RTN","A1AEPHS",215,0)
 ;
"RTN","A1AEPHS",216,0)
 QUIT  ; end of BOTH
"RTN","A1AEPHS",217,0)
 ;
"RTN","A1AEPHS",218,0)
 ;
"RTN","A1AEPHS",219,0)
V ; v = VERIFIED
"RTN","A1AEPHS",220,0)
 ;
"RTN","A1AEPHS",221,0)
 I A1AENEW'="e",A1AENEW'="r"!($P(A1AE0,U,3)'=999) D  Q
"RTN","A1AEPHS",222,0)
 . W !?3,"The status may only be changed to Entered in Error (E),"
"RTN","A1AEPHS",223,0)
 . W !?3,"or if it is a DBA type patch it can be Retired (r)!"
"RTN","A1AEPHS",224,0)
 . K X
"RTN","A1AEPHS",225,0)
 I '$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0)) D  Q
"RTN","A1AEPHS",226,0)
 . W !?3,"You are not an authorized developer of this package."
"RTN","A1AEPHS",227,0)
 . K X
"RTN","A1AEPHS",228,0)
 D ASKCHG
"RTN","A1AEPHS",229,0)
 Q:X'=A1AEX
"RTN","A1AEPHS",230,0)
 I A1AENEW'="e" D  Q
"RTN","A1AEPHS",231,0)
 . D BOTH
"RTN","A1AEPHS",232,0)
 N X
"RTN","A1AEPHS",233,0)
 ; The bulletin for "entered in error" will be sent in 3^A1AEPH1,
"RTN","A1AEPHS",234,0)
 ; after the developer has entered the error description.
"RTN","A1AEPHS",235,0)
 W !!,"Next, you will be asked for the 'Entered in Error Description'."
"RTN","A1AEPHS",236,0)
 W !,"Whatever you write will be included in the bulletin which will be sent"
"RTN","A1AEPHS",237,0)
 W !,"to all patch recipients, so make sure your description is complete.",!
"RTN","A1AEPHS",238,0)
 D WAIT^XMXUTIL
"RTN","A1AEPHS",239,0)
 ;
"RTN","A1AEPHS",240,0)
 QUIT  ; end of V
"RTN","A1AEPHS",241,0)
 ;
"RTN","A1AEPHS",242,0)
 ;
"RTN","A1AEPHS",243,0)
I2 ; i2 = IN REVIEW
"RTN","A1AEPHS",244,0)
 ;
"RTN","A1AEPHS",245,0)
 ; ensure this is a legal code change
"RTN","A1AEPHS",246,0)
 I 'TESTMES,"^d2^s2^n2^"'[A1AENEWC D  Q
"RTN","A1AEPHS",247,0)
 . W !?3,"The status may only be changed to Secondary Development (d2),"
"RTN","A1AEPHS",248,0)
 . W "Secondary Completion (s2), or Not for Secondary Release (n2)!"
"RTN","A1AEPHS",249,0)
 . K X
"RTN","A1AEPHS",250,0)
 ;
"RTN","A1AEPHS",251,0)
 ; ensure this is a legal user
"RTN","A1AEPHS",252,0)
 I '$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0)) D  Q
"RTN","A1AEPHS",253,0)
 . W !?3,"You are not an authorized developer of this package."
"RTN","A1AEPHS",254,0)
 . K X
"RTN","A1AEPHS",255,0)
 ; (the reviewer can also play another role, so no restriction here)
"RTN","A1AEPHS",256,0)
 ;
"RTN","A1AEPHS",257,0)
 N SAVX,TVER,TXVER,XMY ; scope variables used in A1AEMAL*
"RTN","A1AEPHS",258,0)
 I 'TESTMES D  Q:X'=A1AEX  ; if no test msg, confirm code change
"RTN","A1AEPHS",259,0)
 . D ASKCHG
"RTN","A1AEPHS",260,0)
 I TESTMES D  Q:$D(DUOUT)!$D(DTOUT)!'Y  ; if test msg, get details
"RTN","A1AEPHS",261,0)
 . D ASKTST
"RTN","A1AEPHS",262,0)
 N SEQ S SEQ=""
"RTN","A1AEPHS",263,0)
 D GET^A1AEMAL ; get msg #
"RTN","A1AEPHS",264,0)
 I '$D(XMZ) D  Q  ; if fail to get msg #, change to Status fails
"RTN","A1AEPHS",265,0)
 . K X
"RTN","A1AEPHS",266,0)
 D MES^A1AEMAL ; build msg
"RTN","A1AEPHS",267,0)
 ;
"RTN","A1AEPHS",268,0)
 I TESTMES D  Q  ; if it was a test msg, change input to i2 & done
"RTN","A1AEPHS",269,0)
 . S X="i2"
"RTN","A1AEPHS",270,0)
 ;
"RTN","A1AEPHS",271,0)
 ; notify package verifiers of change in status:
"RTN","A1AEPHS",272,0)
 ;
"RTN","A1AEPHS",273,0)
 K XMY ; clear recipient list
"RTN","A1AEPHS",274,0)
 F I=0:0 S I=$O(^A1AE(11007,A1AEPKIF,"PB",I)) Q:'I  D
"RTN","A1AEPHS",275,0)
 . I $D(^(I,0)),$P(^(0),U,2)="V" S XMY(I)="" ; add verifiers
"RTN","A1AEPHS",276,0)
 S XMY(DUZ)="" ; add current user
"RTN","A1AEPHS",277,0)
 D BUL ; send bulletin
"RTN","A1AEPHS",278,0)
 ;
"RTN","A1AEPHS",279,0)
 QUIT  ; end of I2
"RTN","A1AEPHS",280,0)
 ;
"RTN","A1AEPHS",281,0)
 ;
"RTN","A1AEPHS",282,0)
RENEW ; renew patch
"RTN","A1AEPHS",283,0)
 ;
"RTN","A1AEPHS",284,0)
 I A1AENEW'="d2" D  Q
"RTN","A1AEPHS",285,0)
 . W !?3,"The status of a renewed patch may only be entered as Secondary Development (d2)!"
"RTN","A1AEPHS",286,0)
 . K X
"RTN","A1AEPHS",287,0)
 ;
"RTN","A1AEPHS",288,0)
 I '$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0)) D
"RTN","A1AEPHS",289,0)
 . W !?3,"You are not an authorized developer of this package."
"RTN","A1AEPHS",290,0)
 . K X
"RTN","A1AEPHS",291,0)
 ;
"RTN","A1AEPHS",292,0)
 QUIT  ; end of RENEW
"RTN","A1AEPHS",293,0)
 ;
"RTN","A1AEPHS",294,0)
 ;
"RTN","A1AEPHS",295,0)
D2 ; d2 = SEC DEVELOPMENT
"RTN","A1AEPHS",296,0)
 ;
"RTN","A1AEPHS",297,0)
 I 'TESTMES,"^s2^i2^n2^"'[A1AENEWC D  Q
"RTN","A1AEPHS",298,0)
 . W !?3,"The status may only be changed to Secondary Completion (s2),"
"RTN","A1AEPHS",299,0)
 . W " In Review (I2),"
"RTN","A1AEPHS",300,0)
 . W !?3," or Not for Secondary Release (n2)!"
"RTN","A1AEPHS",301,0)
 . K X
"RTN","A1AEPHS",302,0)
 I '$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0)) D  Q
"RTN","A1AEPHS",303,0)
 . W !?3,"You are not an authorized developer of this package."
"RTN","A1AEPHS",304,0)
 . K X
"RTN","A1AEPHS",305,0)
 I 'TESTMES,A1AENEW="c",$P(^A1AE(11005,DA,0),U,9)=DUZ D  Q
"RTN","A1AEPHS",306,0)
 . W !?3,"Please have another developer of the package review the patch and change"
"RTN","A1AEPHS",307,0)
 . W !?3,"the status to 'C'ompleted/not released."
"RTN","A1AEPHS",308,0)
 . K X
"RTN","A1AEPHS",309,0)
 I 'TESTMES D  Q:X'=A1AEX
"RTN","A1AEPHS",310,0)
 . D ASKCHG
"RTN","A1AEPHS",311,0)
 I TESTMES D  Q:$D(DUOUT)!($D(DTOUT))!('Y)
"RTN","A1AEPHS",312,0)
 . D ASKTST
"RTN","A1AEPHS",313,0)
 N SEQ S SEQ=""
"RTN","A1AEPHS",314,0)
 N SAVX,SEQ,TVER,TXVER,XMY
"RTN","A1AEPHS",315,0)
 D GET^A1AEMAL
"RTN","A1AEPHS",316,0)
 I '$D(XMZ) D  Q
"RTN","A1AEPHS",317,0)
 . K X
"RTN","A1AEPHS",318,0)
 D MES^A1AEMAL
"RTN","A1AEPHS",319,0)
 ;
"RTN","A1AEPHS",320,0)
 I TESTMES D  Q
"RTN","A1AEPHS",321,0)
 . S X="d2"
"RTN","A1AEPHS",322,0)
 ;
"RTN","A1AEPHS",323,0)
 K XMY
"RTN","A1AEPHS",324,0)
 F I=0:0 S I=$O(^A1AE(11007,A1AEPKIF,"PB",I)) Q:'I  D
"RTN","A1AEPHS",325,0)
 . I $D(^(I,0)),$P(^(0),U,2)="V" D
"RTN","A1AEPHS",326,0)
 . . S XMY(I)=""
"RTN","A1AEPHS",327,0)
 S XMY(DUZ)=""
"RTN","A1AEPHS",328,0)
 D BUL
"RTN","A1AEPHS",329,0)
 ;
"RTN","A1AEPHS",330,0)
 QUIT  ; end of D2
"RTN","A1AEPHS",331,0)
 ;
"RTN","A1AEPHS",332,0)
 ;
"RTN","A1AEPHS",333,0)
S2 ; s2 = SEC COMPLETION
"RTN","A1AEPHS",334,0)
 ;
"RTN","A1AEPHS",335,0)
 I A1AENEW="d2" D  Q
"RTN","A1AEPHS",336,0)
 . D RENEW
"RTN","A1AEPHS",337,0)
 I "^r2^i2^n2^"'[A1AENEWC D  Q
"RTN","A1AEPHS",338,0)
 . W !?3,"The status may only be changed to Secondary Release (r2),"
"RTN","A1AEPHS",339,0)
 . W !?3," In Review (i2), or Not for Secondary Release (n2)!"
"RTN","A1AEPHS",340,0)
 . K X
"RTN","A1AEPHS",341,0)
 ;
"RTN","A1AEPHS",342,0)
 N A1AES2R2 S A1AES2R2=A1AENEW="r2" ; are we sec releasing this patch?
"RTN","A1AEPHS",343,0)
 N A1AEQUIT S A1AEQUIT=0 ; should we bail out?
"RTN","A1AEPHS",344,0)
 I A1AES2R2 D  Q  ; if we're changing to sec release
"RTN","A1AEPHS",345,0)
 . D S2R2 ; try to sec release it
"RTN","A1AEPHS",346,0)
 ;
"RTN","A1AEPHS",347,0)
 ; for the other changes from sec completion . . .
"RTN","A1AEPHS",348,0)
 D ASKCHG ; confirm change
"RTN","A1AEPHS",349,0)
 Q:X'=A1AEX  ; bail out if not confirmed
"RTN","A1AEPHS",350,0)
 ;
"RTN","A1AEPHS",351,0)
 K XMZ
"RTN","A1AEPHS",352,0)
 D GET^A1AEMAL ; See if we can get a Mail Message
"RTN","A1AEPHS",353,0)
 I '$D(XMZ) D  Q  ; bail out if not
"RTN","A1AEPHS",354,0)
 . K X
"RTN","A1AEPHS",355,0)
 ;
"RTN","A1AEPHS",356,0)
 D MES^A1AEMAL ; Build Mail Message
"RTN","A1AEPHS",357,0)
 D BOTH
"RTN","A1AEPHS",358,0)
 ;
"RTN","A1AEPHS",359,0)
 QUIT  ; end of S2
"RTN","A1AEPHS",360,0)
 ;
"RTN","A1AEPHS",361,0)
 ;
"RTN","A1AEPHS",362,0)
S2R2 ; s2 = SEC COMPLETION ==> r2 = SEC RELEASE
"RTN","A1AEPHS",363,0)
 ;
"RTN","A1AEPHS",364,0)
 D  Q:'$D(X)
"RTN","A1AEPHS",365,0)
 . I $D(^A1AE(11007,A1AEPKIF,"PB",DUZ,0)),$P(^(0),U,2)="V" Q
"RTN","A1AEPHS",366,0)
 . W !?3,"You are not authorized to release patches of this package."
"RTN","A1AEPHS",367,0)
 . K X
"RTN","A1AEPHS",368,0)
 ;
"RTN","A1AEPHS",369,0)
 D  Q:'$D(X)
"RTN","A1AEPHS",370,0)
 . N A1AEUENT S A1AEUENT=$P(A1AE0,U,9) ; field User Entering (9)
"RTN","A1AEPHS",371,0)
 . N A1AEUCOM S A1AEUCOM=$P(A1AE0,U,13) ; field User Completion (13)
"RTN","A1AEPHS",372,0)
 . I A1AEUENT'=DUZ,A1AEUCOM'=DUZ Q  ; if different user, we're good
"RTN","A1AEPHS",373,0)
 . W !?3,"Please have an authorized releaser, other than the developer"
"RTN","A1AEPHS",374,0)
 . W !?3,"who entered the patch or completed the patch, release the"
"RTN","A1AEPHS",375,0)
 . W !?3,"patch."
"RTN","A1AEPHS",376,0)
 . K X
"RTN","A1AEPHS",377,0)
 ;
"RTN","A1AEPHS",378,0)
 N A1AEVR S A1AEVR=$P(A1AE0,U,3) ; field Version (3)
"RTN","A1AEPHS",379,0)
 N A1AEHOLD S A1AEHOLD=$P(A1AE0,U,17) ; field Holding Date (17)
"RTN","A1AEPHS",380,0)
 I A1AEHOLD>DT D
"RTN","A1AEPHS",381,0)
 . W !?3,"This patch cannot be Verified/Released (r2) until: "
"RTN","A1AEPHS",382,0)
 . W $$FMTE^XLFDT(A1AEHOLD)
"RTN","A1AEPHS",383,0)
 . K X
"RTN","A1AEPHS",384,0)
 ;
"RTN","A1AEPHS",385,0)
 I $D(^("Q","B")) D
"RTN","A1AEPHS",386,0)
 . N CHECK S CHECK=""
"RTN","A1AEPHS",387,0)
 . N AZ ; return array from PCHK
"RTN","A1AEPHS",388,0)
 . D PCHK^A1AEUTL1
"RTN","A1AEPHS",389,0)
 . Q:'$D(AZ("STOP"))
"RTN","A1AEPHS",390,0)
 . W !?3,"This patch cannot be Sec Released (r2) before patch(s):"
"RTN","A1AEPHS",391,0)
 . S AZ=0
"RTN","A1AEPHS",392,0)
 . F  S AZ=$O(AZ("STOP",AZ)) Q:'AZ  D
"RTN","A1AEPHS",393,0)
 . . W:$X>60 !,?62
"RTN","A1AEPHS",394,0)
 . . W ?62,$P(AZ("STOP",AZ),U)
"RTN","A1AEPHS",395,0)
 . K X
"RTN","A1AEPHS",396,0)
 I '$D(X) D  Q
"RTN","A1AEPHS",397,0)
 . W $C(7)
"RTN","A1AEPHS",398,0)
 ;
"RTN","A1AEPHS",399,0)
 ;check for Patch message sent/but disconnect blew away 'r2'status
"RTN","A1AEPHS",400,0)
 I $P($G(^A1AE(11005.1,DA,0)),U,6),$P($G(^(0)),U,7),A1AENEW="r2" D  Q
"RTN","A1AEPHS",401,0)
 . D NOMESS^A1AEMAL1
"RTN","A1AEPHS",402,0)
 ;
"RTN","A1AEPHS",403,0)
 D ASKCHG ; confirm status change
"RTN","A1AEPHS",404,0)
 Q:X'=A1AEX  ; bail out if no confirmation
"RTN","A1AEPHS",405,0)
 ;
"RTN","A1AEPHS",406,0)
 I '$D(A1AEPKV) D
"RTN","A1AEPHS",407,0)
 . D SEQ^A1AEUTL
"RTN","A1AEPHS",408,0)
 ;See if we can get a Mail Message
"RTN","A1AEPHS",409,0)
 K XMZ
"RTN","A1AEPHS",410,0)
 D GET^A1AEMAL
"RTN","A1AEPHS",411,0)
 I '$D(XMZ) D
"RTN","A1AEPHS",412,0)
 . D DELSEQ^A1AEUTL
"RTN","A1AEPHS",413,0)
 . K X
"RTN","A1AEPHS",414,0)
 Q:'$D(X)
"RTN","A1AEPHS",415,0)
 ;
"RTN","A1AEPHS",416,0)
 ;Build Mail Message
"RTN","A1AEPHS",417,0)
 D MES^A1AEMAL
"RTN","A1AEPHS",418,0)
 ;
"RTN","A1AEPHS",419,0)
 ;After building message, update version #
"RTN","A1AEPHS",420,0)
 D NEWVER^A1AEUTL(A1AEPKIF,DA)
"RTN","A1AEPHS",421,0)
 D BOTH
"RTN","A1AEPHS",422,0)
 ;
"RTN","A1AEPHS",423,0)
 QUIT  ; end of S2R2
"RTN","A1AEPHS",424,0)
 ;
"RTN","A1AEPHS",425,0)
 ;
"RTN","A1AEPHS",426,0)
R2 ; r2 = SEC RELEASE
"RTN","A1AEPHS",427,0)
 ;
"RTN","A1AEPHS",428,0)
 W !,"Secondary released patches cannot be edited after release."
"RTN","A1AEPHS",429,0)
 K X
"RTN","A1AEPHS",430,0)
 ;
"RTN","A1AEPHS",431,0)
 QUIT  ; end of R2
"RTN","A1AEPHS",432,0)
 ;
"RTN","A1AEPHS",433,0)
 ;
"RTN","A1AEPHS",434,0)
N2 ; n2 = NOT FOR SEC RELEASE
"RTN","A1AEPHS",435,0)
 ;
"RTN","A1AEPHS",436,0)
 I A1AENEW'="i2" D  Q
"RTN","A1AEPHS",437,0)
 . W !?3,"The status may only be changed to In Review (i2)!"
"RTN","A1AEPHS",438,0)
 . K X
"RTN","A1AEPHS",439,0)
 D
"RTN","A1AEPHS",440,0)
 . Q:$D(^A1AE(11007,A1AEPKIF,"PB",DUZ,0))
"RTN","A1AEPHS",441,0)
 . Q:$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0))
"RTN","A1AEPHS",442,0)
 . W !?3,"You are not authorized to release patches of this package."
"RTN","A1AEPHS",443,0)
 . K X
"RTN","A1AEPHS",444,0)
 ;
"RTN","A1AEPHS",445,0)
 D ASKCHG
"RTN","A1AEPHS",446,0)
 Q:X'=A1AEX
"RTN","A1AEPHS",447,0)
 ;
"RTN","A1AEPHS",448,0)
 ;See if we can get a Mail Message
"RTN","A1AEPHS",449,0)
 K XMZ
"RTN","A1AEPHS",450,0)
 D GET^A1AEMAL
"RTN","A1AEPHS",451,0)
 Q:'$D(X)
"RTN","A1AEPHS",452,0)
 ;
"RTN","A1AEPHS",453,0)
 ;Build Mail Message
"RTN","A1AEPHS",454,0)
 D MES^A1AEMAL
"RTN","A1AEPHS",455,0)
 D BOTH
"RTN","A1AEPHS",456,0)
 ;
"RTN","A1AEPHS",457,0)
 QUIT  ; end of N2
"RTN","A1AEPHS",458,0)
 ;
"RTN","A1AEPHS",459,0)
 ;
"RTN","A1AEPHS",460,0)
E ; e = ENTERED IN ERROR
"RTN","A1AEPHS",461,0)
R ; r = RETIRED
"RTN","A1AEPHS",462,0)
 ;
"RTN","A1AEPHS",463,0)
 W !?3,"Once the status has been set to Entered in Error (e)"
"RTN","A1AEPHS",464,0)
 W " or Retired (r) it cannot be changed!"
"RTN","A1AEPHS",465,0)
 K X
"RTN","A1AEPHS",466,0)
 ;
"RTN","A1AEPHS",467,0)
 QUIT  ; end of E/R
"RTN","A1AEPHS",468,0)
 ;
"RTN","A1AEPHS",469,0)
 ;
"RTN","A1AEPHS",470,0)
ASKCHG ; confirm status change
"RTN","A1AEPHS",471,0)
 ;
"RTN","A1AEPHS",472,0)
 S A1AEX=X
"RTN","A1AEPHS",473,0)
 Q:$D(DIFM)  ; If we are inside the DBS, don't ask
"RTN","A1AEPHS",474,0)
 S A1AERD("A")="Are you sure you want to change status to "_A1AEOPT_"? "
"RTN","A1AEPHS",475,0)
 S A1AERD(0)="S"
"RTN","A1AEPHS",476,0)
 S A1AERD(1)="Yes^change status and send a message to users"
"RTN","A1AEPHS",477,0)
 S A1AERD(2)="No^leave the status the same"
"RTN","A1AEPHS",478,0)
 S A1AERD("B")=2
"RTN","A1AEPHS",479,0)
 D SET^A1AERD
"RTN","A1AEPHS",480,0)
 K A1AERD
"RTN","A1AEPHS",481,0)
 S X=$S("Y"[$E(X,1):A1AEX,1:$$LOW^XLFSTR(A1AEOLD))
"RTN","A1AEPHS",482,0)
 W !?3,"...status ",$S(A1AEX=X:"",1:"'not' "),"changed to ",A1AEOPT
"RTN","A1AEPHS",483,0)
 ;
"RTN","A1AEPHS",484,0)
 QUIT  ; end of ASKCHG
"RTN","A1AEPHS",485,0)
 ;
"RTN","A1AEPHS",486,0)
 ;
"RTN","A1AEPHS",487,0)
BUL ; send bulletin
"RTN","A1AEPHS",488,0)
 ;
"RTN","A1AEPHS",489,0)
 N X ; protect user input variable from Mailman
"RTN","A1AEPHS",490,0)
 N XMTEXT S XMTEXT="A1AETX("
"RTN","A1AEPHS",491,0)
 N XMB S XMB=A1AEBULL ; name of bulletin to send for this status
"RTN","A1AEPHS",492,0)
 N A1AEX S A1AEX=$P($G(^A1AE(11005,DA,4)),U)
"RTN","A1AEPHS",493,0)
 I $L(A1AEX)>2 D
"RTN","A1AEPHS",494,0)
 . S XMB=$P(XMB,"PATCH")_"PACKAGE" ;rwf
"RTN","A1AEPHS",495,0)
 S XMB(1)=$P(^DIC(9.4,+$P(A1AE0,U,2),0),U,1)
"RTN","A1AEPHS",496,0)
 S XMB(2)=$P(A1AE0,U,1)
"RTN","A1AEPHS",497,0)
 S XMB(3)=$P(A1AE0,U,5)
"RTN","A1AEPHS",498,0)
 ;
"RTN","A1AEPHS",499,0)
 I "^c^v^d2^s2^r2^n2^"[A1AENEWC D
"RTN","A1AEPHS",500,0)
 . S XMB(4)=$P($P(^DD(11005,7,0),$P(A1AE0,U,7)_":",2),";",1)
"RTN","A1AEPHS",501,0)
 ;
"RTN","A1AEPHS",502,0)
 I "^v^r2^"'=A1AENEWC D
"RTN","A1AEPHS",503,0)
 . S:$D(A1AEXMZ) XMB(5)=A1AEXMZ
"RTN","A1AEPHS",504,0)
 . S:$D(A1AESUB) XMB(6)=A1AESUB
"RTN","A1AEPHS",505,0)
 ;
"RTN","A1AEPHS",506,0)
 S $P(XMB(2),"*",2)=$S($P(XMB(2),"*",2)=999:"DBA",1:$P(XMB(2),"*",2))
"RTN","A1AEPHS",507,0)
 ;
"RTN","A1AEPHS",508,0)
 S XMB(7)=""
"RTN","A1AEPHS",509,0)
 I $D(^A1AE(11005,"AC",+$P(A1AE0,U,2),+$P(A1AE0,U,3),"pp",+$P(A1AE0,U,4))) D
"RTN","A1AEPHS",510,0)
 . S XMB(7)=" Category of Patch: PATCH FOR A PATCH"
"RTN","A1AEPHS",511,0)
 ;
"RTN","A1AEPHS",512,0)
 S (XMB(8),XMB(9))=""
"RTN","A1AEPHS",513,0)
 I "v"=A1AENEW D
"RTN","A1AEPHS",514,0)
 . S Y=$O(^A1AE(11005,"B",$P(A1AE0,U,1),0))
"RTN","A1AEPHS",515,0)
 . S Y=$P(^A1AE(11005,Y,0),U,18)
"RTN","A1AEPHS",516,0)
 . D DD^%DT
"RTN","A1AEPHS",517,0)
 . S XMB(8)="Unless otherwise indicated in the patch description, this patch should"
"RTN","A1AEPHS",518,0)
 . S XMB(9)="be installed by "_Y
"RTN","A1AEPHS",519,0)
 . I $G(DUZ("AG"))="V" S XMB(9)=XMB(9)_" in compliance with Directive 2001-23."
"RTN","A1AEPHS",520,0)
 . E  S XMB(9)=XMB(9)_"." ; for everyone else
"RTN","A1AEPHS",521,0)
 ;
"RTN","A1AEPHS",522,0)
 I $L(A1AEX)>2 D
"RTN","A1AEPHS",523,0)
 . S XMB(2)=$P(A1AEX,U) ;rwf
"RTN","A1AEPHS",524,0)
 ;
"RTN","A1AEPHS",525,0)
 D M^A1AEUTL1
"RTN","A1AEPHS",526,0)
 W !!,"NOTE: A bulletin has been sent to ",A1AESENT
"RTN","A1AEPHS",527,0)
 I "^c^v^i2^d2^s2^r2^"[A1AENEWC D
"RTN","A1AEPHS",528,0)
 . W " for this package"
"RTN","A1AEPHS",529,0)
 W !?6,"informing them of this ",A1AEOPT," patch.",!
"RTN","A1AEPHS",530,0)
 ;
"RTN","A1AEPHS",531,0)
 I "^e^v^r2^n2^"[A1AENEWC D
"RTN","A1AEPHS",532,0)
 . D ESSMSG
"RTN","A1AEPHS",533,0)
 ;
"RTN","A1AEPHS",534,0)
 QUIT  ; end of BUL
"RTN","A1AEPHS",535,0)
 ;
"RTN","A1AEPHS",536,0)
 ;
"RTN","A1AEPHS",537,0)
ESSMSG ; Send message to Remedy to let it know that a patch has been
"RTN","A1AEPHS",538,0)
 G ESSMSG^A1AEPHS1
"RTN","A1AEPHS",539,0)
 ;
"RTN","A1AEPHS",540,0)
ASKTST Q:'$D(^A1AE(11005.1,DA,0))
"RTN","A1AEPHS",541,0)
 W !!,?3,"Option to create a Patch message to send to test sites."
"RTN","A1AEPHS",542,0)
 S INXMZ=$P(^(0),U,2)
"RTN","A1AEPHS",543,0)
 ;S XMZ=$P(^(0),U,8)
"RTN","A1AEPHS",544,0)
 S TVER=$P(^(0),U,12)+1
"RTN","A1AEPHS",545,0)
 ;
"RTN","A1AEPHS",546,0)
 ;I XMZ DO  I $D(DUOUT)!($D(DTOUT))!('Y) Q
"RTN","A1AEPHS",547,0)
 ;.W ! S DIR(0)="Y",DIR("B")="No"
"RTN","A1AEPHS",548,0)
 ;.S DIR("A")="Add additional recipients "
"RTN","A1AEPHS",549,0)
 ;.D ^DIR K DIR
"RTN","A1AEPHS",550,0)
 ;
"RTN","A1AEPHS",551,0)
 ;develop/test
"RTN","A1AEPHS",552,0)
 I 'INXMZ DO  I $D(DUOUT)!($D(DTOUT))!('Y) Q
"RTN","A1AEPHS",553,0)
 .W ! S DIR(0)="Y",DIR("B")="No"
"RTN","A1AEPHS",554,0)
 .S DIR("A")="This Patch has no routines, do you wish to continue "
"RTN","A1AEPHS",555,0)
 .D ^DIR K DIR
"RTN","A1AEPHS",556,0)
 ;
"RTN","A1AEPHS",557,0)
 ;save ADTM for the timestamp in 11005.1
"RTN","A1AEPHS",558,0)
 D NOW^%DTC S (ADTM,Y)=% D TM^A1AEUTL1
"RTN","A1AEPHS",559,0)
 S TXVER="TEST v"_TVER
"RTN","A1AEPHS",560,0)
 W !?3,TXVER
"RTN","A1AEPHS",561,0)
 W ?$X+3,"will be added to the Patch message subject."
"RTN","A1AEPHS",562,0)
 S DIR(0)="NO^1:99"
"RTN","A1AEPHS",563,0)
 S DIR("B")=TVER
"RTN","A1AEPHS",564,0)
 S DIR("A")="You may change the TEST v[#] if necessary."
"RTN","A1AEPHS",565,0)
 W ! D ^DIR K DIR
"RTN","A1AEPHS",566,0)
 I $D(DUOUT)!($D(DTOUT))!('Y) Q
"RTN","A1AEPHS",567,0)
 ;
"RTN","A1AEPHS",568,0)
 I Y'=TVER DO  I $D(DUOUT)!($D(DTOUT))!('Y) Q
"RTN","A1AEPHS",569,0)
 .;only if they change it if not sure start over
"RTN","A1AEPHS",570,0)
 .S TVER=Y,TXVER="TEST v"_TVER_$P(TXVER," ",3)
"RTN","A1AEPHS",571,0)
 .S DIR(0)="Y",DIR("B")="NO"
"RTN","A1AEPHS",572,0)
 .S DIR("A")="Are you sure you want to change Test version to 'TEST V"_TVER_"' "
"RTN","A1AEPHS",573,0)
 .D ^DIR K DIR
"RTN","A1AEPHS",574,0)
 ;
"RTN","A1AEPHS",575,0)
 QUIT  ; end of ASKTST
"RTN","A1AEPHS",576,0)
 ;
"RTN","A1AEPHS",577,0)
 ;
"RTN","A1AEPHS",578,0)
XM I '$D(XMDUZ) D
"RTN","A1AEPHS",579,0)
 . S XMDUZ=DUZ
"RTN","A1AEPHS",580,0)
 S XMDUN=$P(^VA(200,XMDUZ,0),U)
"RTN","A1AEPHS",581,0)
 S (XMKN,XMLOCK)=""
"RTN","A1AEPHS",582,0)
 S XMK=0
"RTN","A1AEPHS",583,0)
 ;
"RTN","A1AEPHS",584,0)
 QUIT  ; end of XM
"RTN","A1AEPHS",585,0)
 ;
"RTN","A1AEPHS",586,0)
 ;
"RTN","A1AEPHS",587,0)
EOR ; end of routine A1AEPHS
"RTN","A1AEPHS1")
0^62^B3482018
"RTN","A1AEPHS1",1,0)
A1AEPHS1 ;ven/toad-continuation of A1AEPHS ;2014-04-18T00:56
"RTN","A1AEPHS1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEPHS1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEPHS1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEPHS1",5,0)
 ;
"RTN","A1AEPHS1",6,0)
 ;
"RTN","A1AEPHS1",7,0)
 ;primary change history
"RTN","A1AEPHS1",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEPHS1",9,0)
 ;
"RTN","A1AEPHS1",10,0)
ESSMSG ;
"RTN","A1AEPHS1",11,0)
 ; released or entered-in-error
"RTN","A1AEPHS1",12,0)
 N XMTEXT,XMINSTR,STAT,PID,PRI,REL,COMP,I,CAT,%
"RTN","A1AEPHS1",13,0)
 S PID=$P(A1AE0,U,1)
"RTN","A1AEPHS1",14,0)
 I $P(PID,"*",2)=999 D
"RTN","A1AEPHS1",15,0)
 . S $P(PID,"*",2)="DBA" ; Patch ID
"RTN","A1AEPHS1",16,0)
 I $L($G(A1AEX))>2 D
"RTN","A1AEPHS1",17,0)
 . S PID=A1AEX ;rwf
"RTN","A1AEPHS1",18,0)
 S REL=$$FMTE^XLFDT(DT,"5Z") ; Release Date
"RTN","A1AEPHS1",19,0)
 I A1AENEW="e" D
"RTN","A1AEPHS1",20,0)
 . S STAT=2 ; Entered-in-Error
"RTN","A1AEPHS1",21,0)
 . S (PRI,COMP,CAT)=""
"RTN","A1AEPHS1",22,0)
 E  D
"RTN","A1AEPHS1",23,0)
 . S STAT=3 ; Released
"RTN","A1AEPHS1",24,0)
 . S COMP=$$FMTE^XLFDT($P(A1AE0,U,18),"5Z") ; Install by Date
"RTN","A1AEPHS1",25,0)
 . S PRI=$P(A1AE0,U,7) ; Priority
"RTN","A1AEPHS1",26,0)
 . S I=0
"RTN","A1AEPHS1",27,0)
 . S CAT=""
"RTN","A1AEPHS1",28,0)
 . F  S I=$O(^A1AE(11005,+$G(DA),"C",I)) Q:'I  D
"RTN","A1AEPHS1",29,0)
 . . S CAT=CAT_","_^(I,0) ; Category
"RTN","A1AEPHS1",30,0)
 . S CAT=$E(CAT,2,999)
"RTN","A1AEPHS1",31,0)
 S XMTEXT(1)=STAT_$$LJ^XLFSTR(PID,30)_$$LJ^XLFSTR("",30)_$$LJ^XLFSTR(REL,22)_$$LJ^XLFSTR(COMP,22)_PRI_$$LJ^XLFSTR(CAT,23)
"RTN","A1AEPHS1",32,0)
 S XMINSTR("FROM")="POSTMASTER"
"RTN","A1AEPHS1",33,0)
 D SENDMSG^XMXAPI(DUZ,"NPM/ESS Transaction","XMTEXT","G.A1AE PACKAGE RELEASE@FORUM.OSEHRA.ORG",.XMINSTR) ; VEN/SMH - changed.
"RTN","A1AEPHS1",34,0)
 ;
"RTN","A1AEPHS1",35,0)
 QUIT  ; end of ESSMSG
"RTN","A1AEPK")
0^34^B51078036
"RTN","A1AEPK",1,0)
A1AEPK ;isf/rwf-package module ;2015-05-26T22:53
"RTN","A1AEPK",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEPK",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEPK",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEPK",5,0)
 ;
"RTN","A1AEPK",6,0)
 ;
"RTN","A1AEPK",7,0)
 ;primary change history
"RTN","A1AEPK",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEPK",9,0)
 ;
"RTN","A1AEPK",10,0)
 ; CHANGE 2015 05 26: (VEN/LGC)
"RTN","A1AEPK",11,0)
 ;  linetag DEL2+3
"RTN","A1AEPK",12,0)
 ;  Change at linetag to account for sequence number
"RTN","A1AEPK",13,0)
 ;  and patch numbers now being tracked by PATCH SEQUENCE
"RTN","A1AEPK",14,0)
 ;
"RTN","A1AEPK",15,0)
 G:$D(^DOPT("A1AEPK",5)) A S ^DOPT("A1AEPK",0)="Entry/Edit Package Menu Option^1N^" F I=1:1 S X=$T(@I) Q:X=""  S ^DOPT("A1AEPK",I,0)=$P(X,";;",2,99)
"RTN","A1AEPK",16,0)
 S DIK="^DOPT(""A1AEPK""," D IXALL^DIK
"RTN","A1AEPK",17,0)
A W !! S DIC="^DOPT(""A1AEPK"",",DIC(0)="AEMQ" D ^DIC Q:Y<0  D @+Y G A
"RTN","A1AEPK",18,0)
 ;
"RTN","A1AEPK",19,0)
1 ;;Add a Package
"RTN","A1AEPK",20,0)
 N A1AEFL,A1AETY,A1AEPKIF,A1AEPK,A1AEVR
"RTN","A1AEPK",21,0)
 S A1AEFL=11005,A1AETY="PK",DIC("S")="I $D(^A1AE(11007,+Y,""PH"",DUZ,0))" D PKG^A1AEUTL G Q:'$D(A1AEPK)
"RTN","A1AEPK",22,0)
 D VER G Q:'$D(A1AEVR)
"RTN","A1AEPK",23,0)
 S A1AENB=0,X=A1AEPK_"*"_A1AEVR_"*0",DIC="^A1AE(11005,",DIC(0)="LE" D ^DIC Q:Y<1
"RTN","A1AEPK",24,0)
 S DA=+Y,A1AEPD=$P(Y,U,2),A1AEPD2=$TR($P(A1AEPD,"*",1,2),"*"," "),$P(^A1AE(11005,DA,0),U,2,4)=A1AEPKIF_U_A1AEVR_U_"0"
"RTN","A1AEPK",25,0)
 W !!,"Package Added: ",A1AEPD2,!
"RTN","A1AEPK",26,0)
 S $P(^A1AE(11005,DA,0),"^",8)="u",$P(^(0),"^",9)=DUZ,$P(^(0),"^",12)=DT,^A1AE(11005,"AS",A1AEPKIF,A1AEVR,"u",A1AENB,DA)=""
"RTN","A1AEPK",27,0)
 S DIE="^A1AE(11005,",DR="40///"_A1AEPD2 D ^DIE ;New Package Name
"RTN","A1AEPK",28,0)
 ;
"RTN","A1AEPK",29,0)
 S (X,DINUM)=DA,DIC="^A1AE(11005.1,",DIC("DR")="20///"_"No routines included" K DD,DO D FILE^DICN K DE,DQ,DR,DIC("DR")
"RTN","A1AEPK",30,0)
 S (X,DINUM)=DA,DIC="^A1AE(11005.5," K DD,D0 D FILE^DICN K DE,DQ,DR
"RTN","A1AEPK",31,0)
 ;
"RTN","A1AEPK",32,0)
 S DR="[A1AE ADD/EDIT PATCHES]" D ^DIE K DQ,DE,DIE
"RTN","A1AEPK",33,0)
 D Q G 1
"RTN","A1AEPK",34,0)
 ;
"RTN","A1AEPK",35,0)
2 ;;Delete an Unverified Package
"RTN","A1AEPK",36,0)
 N DIC,A1AEPD,A1AEPD2
"RTN","A1AEPK",37,0)
 S DIC("A")="Select Package: ",DIC("S")="I ($P(^(0),U,8)=""u""!($P(^(0),U,8)=""c"")),$D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0))",DIC="^A1AE(11005,",DIC(0)="AEMQZ" W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S DA=+Y,A1AEPD=$P(Y,U,2),A1AE0=Y(0)
"RTN","A1AEPK",38,0)
 S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEPK",39,0)
 S A1AEPD2=$P($G(^A1AE(11005,DA,4)),U,1)
"RTN","A1AEPK",40,0)
PMT2 W !!,"Are you sure you want to delete package "_A1AEPD2_"? N// " R X:DTIME G Q:'$T!(X="^")!("Nn"[$E(X,1)) G DEL2:"Yy"[$E(X,1) W:X'["?" *7 W !!,"Enter Y to delete the selected patch, or N to exit." G PMT2
"RTN","A1AEPK",41,0)
DEL2 S DIK="^A1AE(11005," D ^DIK W !!?3,"...deletion of "_A1AEPD_" from 'DHCP Patch File' completed"
"RTN","A1AEPK",42,0)
 ;
"RTN","A1AEPK",43,0)
 ; CHANGE 2015 05 26: (VEN/LGC)
"RTN","A1AEPK",44,0)
 ;  Necessary as NEXT PATCH NUMBER and NEXT SEQUENCE NUMBER
"RTN","A1AEPK",45,0)
 ;   are now dependent on the user's PATCH STREAM
"RTN","A1AEPK",46,0)
 ;     A1AE0 = zero node of entry into 11005
"RTN","A1AEPK",47,0)
 ;     PATCH NUMBER [#4 field] = $P(A1AE0,"^",4)
"RTN","A1AEPK",48,0)
 ;     S STRM=$P(A1AE(0),U,20)  [PATCH STREAM (e.g. 10001)]
"RTN","A1AEPK",49,0)
 ; ^A1AE(11007,$P(A1AE0,"^",2),"V",$P(A1AE0,"^",3),1,STRM,"PH")
"RTN","A1AEPK",50,0)
 ; new code
"RTN","A1AEPK",51,0)
 N STRM S STRM=$P(A1AE(0),U,20)
"RTN","A1AEPK",52,0)
 L +^A1AE(11007,$P(A1AE0,"^",2),"V",$P(A1AE0,"^",3),1,STRM,"PH"):0 E  W $C(7),"Couldn't obtain lock at "_$ST($ST,"PLACE"),! QUIT
"RTN","A1AEPK",53,0)
 I $D(^A1AE(11007,$P(A1AE0,"^",2),"V",$P(A1AE0,"^",3),1,STRM,"PH")) S:$P(A1AE0,"^",4)<^("PH") ^("PH")=$P(A1AE0,"^",4)
"RTN","A1AEPK",54,0)
 L -^A1AE(11007,$P(A1AE0,"^",2),"V",$P(A1AE0,"^",3),1,STRM,"PH")
"RTN","A1AEPK",55,0)
 ; original code
"RTN","A1AEPK",56,0)
 ;L +^A1AE(11007,$P(A1AE0,"^",2),"V",$P(A1AE0,"^",3),"PH"):0 E  W $C(7),"Couldn't obtain lock at "_$ST($ST,"PLACE"),! QUIT
"RTN","A1AEPK",57,0)
 ;       I $D(^A1AE(11007,$P(A1AE0,"^",2),"V",$P(A1AE0,"^",3),"PH")) S:$P(A1AE0,"^",4)<^("PH") ^("PH")=$P(A1AE0,"^",4)
"RTN","A1AEPK",58,0)
 ;       L -^A1AE(11007,$P(A1AE0,"^",2),"V",$P(A1AE0,"^",3),"PH")
"RTN","A1AEPK",59,0)
 ;delete message entry
"RTN","A1AEPK",60,0)
 S DIK="^A1AE(11005.1," D ^DIK
"RTN","A1AEPK",61,0)
 G Q
"RTN","A1AEPK",62,0)
 ;
"RTN","A1AEPK",63,0)
3 ;;Edit a Package
"RTN","A1AEPK",64,0)
 N A1AESTOP
"RTN","A1AEPK",65,0)
 S A1AESTOP=0
"RTN","A1AEPK",66,0)
 F  D  D Q Q:A1AESTOP
"RTN","A1AEPK",67,0)
 . N DIC,X,Y,DA,A1AEPD
"RTN","A1AEPK",68,0)
 . S DIC("A")="Select Package: "
"RTN","A1AEPK",69,0)
 . S DIC("S")="I $D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0))"
"RTN","A1AEPK",70,0)
 . S DIC="^A1AE(11005,",DIC(0)="AEMQ"
"RTN","A1AEPK",71,0)
 . W !
"RTN","A1AEPK",72,0)
 . D ^DIC I Y<0 S A1AESTOP=1 Q
"RTN","A1AEPK",73,0)
 . S DA=+Y,A1AEPD=$P(Y,U,2),A1AEPD2=$P($G(^A1AE(11005,DA,4)),U) K DIC Q:A1AEPD2=""
"RTN","A1AEPK",74,0)
 . L +^A1AE(11005,DA):5 E  D  Q
"RTN","A1AEPK",75,0)
 . . W !,$C(7),"This package is being edited by another user" H 3
"RTN","A1AEPK",76,0)
 . ;I $P(A1AEPD,"*",2)=999 S $P(A1AEPD,"*",2)="DBA"
"RTN","A1AEPK",77,0)
 . I '$D(^A1AE(11005.1,DA,0)) D
"RTN","A1AEPK",78,0)
 . . N DINUM,DD,DO,DIC
"RTN","A1AEPK",79,0)
 . . S (X,DINUM)=DA,DIC(0)="LE",DIC="^A1AE(11005.1,"
"RTN","A1AEPK",80,0)
 . . S DIC("DR")="20///No routines included"
"RTN","A1AEPK",81,0)
 . . D FILE^DICN
"RTN","A1AEPK",82,0)
 . W !!,"Editing Package: ",A1AEPD2,!
"RTN","A1AEPK",83,0)
 . N A1AEOLD
"RTN","A1AEPK",84,0)
 . S A1AEOLD=$P($G(^A1AE(11005,DA,0)),U,8)
"RTN","A1AEPK",85,0)
 . D
"RTN","A1AEPK",86,0)
 . . N A1AEOLD,DIE,DR ; Preserve A1AEOLD.  It's killed in Q^A1AEPHS
"RTN","A1AEPK",87,0)
 . . S DIE="^A1AE(11005,",DR="[A1AE ADD/EDIT PATCHES]"
"RTN","A1AEPK",88,0)
 . . D ^DIE
"RTN","A1AEPK",89,0)
 . N A1AE0,A1AENEW
"RTN","A1AEPK",90,0)
 . S A1AE0=$G(^A1AE(11005,DA,0))
"RTN","A1AEPK",91,0)
 . L -^A1AE(11005,DA)
"RTN","A1AEPK",92,0)
 . S A1AENEW=$P(A1AE0,U,8)
"RTN","A1AEPK",93,0)
 . I A1AEOLD'="v"!(A1AENEW'="e") Q
"RTN","A1AEPK",94,0)
 . ; Send the 'Entered in Error' bulletin
"RTN","A1AEPK",95,0)
 . N A1AETX,X,A1AEOPT
"RTN","A1AEPK",96,0)
 . S A1AEOPT="'Entered in Error'"
"RTN","A1AEPK",97,0)
 . S X=$$GET1^DIQ(11005,DA_",",8.5,"Z","A1AETX")
"RTN","A1AEPK",98,0)
 . S A1AETX(.1,0)=""
"RTN","A1AEPK",99,0)
 . S A1AETX(.2,0)="Entered in Error Description:"
"RTN","A1AEPK",100,0)
 . D BOTH^A1AEPHS
"RTN","A1AEPK",101,0)
 Q
"RTN","A1AEPK",102,0)
 ;
"RTN","A1AEPK",103,0)
4 ;;Verify a Package
"RTN","A1AEPK",104,0)
 N A1AEPKV
"RTN","A1AEPK",105,0)
 S A1AEPKV=1
"RTN","A1AEPK",106,0)
 S DIC("A")="Select Package: ",DIC("S")="I $P(^(0),U,8)=""c"",$D(^A1AE(11007,+$P(^(0),U,2),""PB"",DUZ,0)),$P(^(0),U,2)=""V""",DIC="^A1AE(11005,",DIC(0)="AEMQZ"
"RTN","A1AEPK",107,0)
 W ! D ^DIC K DIC G Q:Y<0 S (A1AEIFN,DA)=+Y,A1AEPD=$P(Y,U,2),A1AEPD2=$P($G(^A1AE(11005,DA,4)),U)
"RTN","A1AEPK",108,0)
 I A1AEPD2="" W !,"This is not a Package Entry." Q
"RTN","A1AEPK",109,0)
 ;S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEPK",110,0)
 ;
"RTN","A1AEPK",111,0)
 S Y=$P(Y(0),"^",17) I Y,Y>DT W !!,"Do not release until: ",$$FMTE^XLFDT(Y)
"RTN","A1AEPK",112,0)
 S A1AEST=$S($P(Y(0),U,7)="e":2,1:61) ;Package complience is 60 days.
"RTN","A1AEPK",113,0)
 ;
"RTN","A1AEPK",114,0)
 W !!,"Internal Comments to developers/releasers for: ",A1AEPD2,! K Y S DIE="^A1AE(11005,",DR="16;" D ^DIE K DQ,DE,DIE,DIC,DR,D0,DA
"RTN","A1AEPK",115,0)
 W ! S DIR(0)="Y",DIR("B")="No",DIR("A")="Continue and Display Patch " D ^DIR K DIR I 'Y D Q G 4
"RTN","A1AEPK",116,0)
 ;check routine patches
"RTN","A1AEPK",117,0)
 F AX=0:0 S AX=$O(^A1AE(11005,A1AEIFN,"P",AX)) Q:'AX  I $D(^(AX,0)) S X=^(0) D RCHK^A1AEM2
"RTN","A1AEPK",118,0)
 W ! S DIR(0)="E" D ^DIR K DIR I 'Y D Q G 4
"RTN","A1AEPK",119,0)
 ;
"RTN","A1AEPK",120,0)
 S D0=A1AEIFN,A1AEVPR="",A1AEHD="DHCP Completed/NotReleased Patch Display"
"RTN","A1AEPK",121,0)
 W ! S %ZIS="",A1AEPGE=0 D ^%ZIS G Q:POP K IOP,%ZIS U IO S ^UTILITY($J,1)="D HD^A1AEPH2",DIWF="B4|" K ^UTILITY($J,"W"),DXS D HD^A1AEPH2,^A1AEP
"RTN","A1AEPK",122,0)
 K DN,DXS,DIWF
"RTN","A1AEPK",123,0)
 K A1AEHD,A1AELNE,A1AEOUT,A1AEPGE,A1AEVPR D CLOSE^A1AEUTL1
"RTN","A1AEPK",124,0)
 S A1AEST=$$FMADD^XLFDT(DT,A1AEST)
"RTN","A1AEPK",125,0)
 W !!,"Releasing Package: ",A1AEPD2,! K Y
"RTN","A1AEPK",126,0)
 S DA=A1AEIFN,DIE="^A1AE(11005,",DR="18//^S X=A1AEST;8;S Y=$S(X=""e"":""@10"",1:"""");@10;8.5"
"RTN","A1AEPK",127,0)
 L +@(DIE_DA_")"):5
"RTN","A1AEPK",128,0)
 I '$T W !,$C(7),"This package is being released by another user" H 3
"RTN","A1AEPK",129,0)
 E  D ^DIE,UPVER K DQ,DE L -@(DIE_DA_")")
"RTN","A1AEPK",130,0)
 D Q G 4
"RTN","A1AEPK",131,0)
 ;
"RTN","A1AEPK",132,0)
6 ;;Create a packman message
"RTN","A1AEPK",133,0)
 G PACK^A1AEM
"RTN","A1AEPK",134,0)
 ;
"RTN","A1AEPK",135,0)
7 ;;Forward a Complete/unverified message
"RTN","A1AEPK",136,0)
 G FCOM^A1AEM2
"RTN","A1AEPK",137,0)
 ;
"RTN","A1AEPK",138,0)
8 ;;Forward a Verified patch message
"RTN","A1AEPK",139,0)
 G FVER^A1AEM2
"RTN","A1AEPK",140,0)
 ;
"RTN","A1AEPK",141,0)
Q K ^UTILITY($J,"A1AECOP"),A1AEOLPD,A1AE0,A1AEPKIF,A1AEPKNM,A1AEPD,A1AEPD2,A1AEPK,A1AEVR,A1AENB,A1AEFL,A1AETY
"RTN","A1AEPK",142,0)
 K DIK,A1AEHD,A1AEIFN,A1AELNE,A1AEOUT,A1AEPGE,A1AEVPR
"RTN","A1AEPK",143,0)
 K AEQ,A1AESUB,A1AETX,A1AEXMZ,A1NAM,A1NAM1,AX,AXMZ,A1AEST,A1AETVR
"RTN","A1AEPK",144,0)
 K JL2,SAVEX,C,D0,DA,DI,DIG,DIH,DIW,DIV,DR,XMB,XMDT,XMDUZ,XMM,XMSUB Q
"RTN","A1AEPK",145,0)
 ;
"RTN","A1AEPK",146,0)
VER ;Get a NEW Version #.
"RTN","A1AEPK",147,0)
 N VR,CV K A1AEVR
"RTN","A1AEPK",148,0)
 ;Start at 999 so se don't get the DBA version.
"RTN","A1AEPK",149,0)
 S CV=$O(^A1AE(11007,A1AEPKIF,"V",999),-1) I CV>0 S CV=$G(^A1AE(11007,A1AEPKIF,"V",CV,0))
"RTN","A1AEPK",150,0)
 I CV W !,"The current version number is ",+CV,"  Verified on ",$$FMTE^XLFDT($P(CV,U,2))
"RTN","A1AEPK",151,0)
 S CV=+CV
"RTN","A1AEPK",152,0)
 R !,"New Version Number: ",VR:DTIME Q:'VR
"RTN","A1AEPK",153,0)
 I VR'>CV W !,"The New Package Version must be greater than the current version of ",CV G VER
"RTN","A1AEPK",154,0)
 S A1AEVR=VR
"RTN","A1AEPK",155,0)
 Q
"RTN","A1AEPK",156,0)
 ;
"RTN","A1AEPK",157,0)
UPVER ;Update files 11007 and 120102.
"RTN","A1AEPK",158,0)
 N FDA,VR,IEN,X
"RTN","A1AEPK",159,0)
 S VR=$P(^A1AE(11005,A1AEIFN,4),U),VR=$P(VR," ",$L(VR," "))
"RTN","A1AEPK",160,0)
 S IEN=$P(^A1AE(11005,A1AEIFN,0),U,2)
"RTN","A1AEPK",161,0)
 S ^A1AE(11007,IEN,"V",VR,0)=VR_U_$$DT^XLFDT() ;DINUM entry
"RTN","A1AEPK",162,0)
 ; VEN/JLI 150529 - commented out next line, added following to handle streams
"RTN","A1AEPK",163,0)
 ;S ^A1AE(11007,IEN,"V",VR,"PB")=0,^("PH")=0,^("PR")=0 ; JLI 150529
"RTN","A1AEPK",164,0)
 N A1AESTRM S A1AESTRM=$$PRIMSTRM^A1AEUTL()
"RTN","A1AEPK",165,0)
 S ^A1AE(11007,IEN,"V",VR,1,A1AESTRM,"PB")=0,^("PH")=A1AESTRM,^("PR")=0
"RTN","A1AEPK",166,0)
 ; VEN/JLI 150529 - end of modification
"RTN","A1AEPK",167,0)
 ;Now for file DHCP APPLICATION (#120102)
"RTN","A1AEPK",168,0)
 K FDA,IEN
"RTN","A1AEPK",169,0)
 S X=$P(^A1AE(11005,A1AEIFN,0),U),X=$P(X,"*")
"RTN","A1AEPK",170,0)
 S IEN=$$FIND1^DIC(120102,,"MX",X) Q:IEN'>0
"RTN","A1AEPK",171,0)
 S FDA(120102,IEN_",",1)=VR D FILE^DIE("K","FDA")
"RTN","A1AEPK",172,0)
 Q
"RTN","A1AEPSVR")
0^56^B237440248
"RTN","A1AEPSVR",1,0)
A1AEPSVR ;ven/smh-mailman patch server;2014-04-15T21:27
"RTN","A1AEPSVR",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEPSVR",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEPSVR",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEPSVR",5,0)
 ;
"RTN","A1AEPSVR",6,0)
 ;
"RTN","A1AEPSVR",7,0)
 ;primary change history
"RTN","A1AEPSVR",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEPSVR",9,0)
 ;
"RTN","A1AEPSVR",10,0)
 ; This routine reads patches coming via email from VA Forum
"RTN","A1AEPSVR",11,0)
 ; and files them into this forum
"RTN","A1AEPSVR",12,0)
 ;
"RTN","A1AEPSVR",13,0)
 ; TODO: I created fields latterly that hold the file names and file
"RTN","A1AEPSVR",14,0)
 ;       paths to use. They are only used in the KIDs Version Control
"RTN","A1AEPSVR",15,0)
 ;       breakout. They can be used to track all the mail information
"RTN","A1AEPSVR",16,0)
 ;       rather than keep them in variables.
"RTN","A1AEPSVR",17,0)
 ;
"RTN","A1AEPSVR",18,0)
EN ; Main entry point
"RTN","A1AEPSVR",19,0)
 ; Mailman Server Variables
"RTN","A1AEPSVR",20,0)
 ; ZEXCEPT: XMER - Execution Status
"RTN","A1AEPSVR",21,0)
 ; ZEXCEPT: XMRG - Current line contents
"RTN","A1AEPSVR",22,0)
 ; ZEXCEPT: XMPOS - Current position (line number?)
"RTN","A1AEPSVR",23,0)
 ; ZEXCEPT: XMREC - M code to get next line. Execute this.
"RTN","A1AEPSVR",24,0)
 ; ZEXCEPT: XMZ - Message IEN in 3.9
"RTN","A1AEPSVR",25,0)
 I '$D(^XMB(3.9,XMZ)) QUIT  ; Just a failsafe... shouldn't happen in real life.
"RTN","A1AEPSVR",26,0)
 ;
"RTN","A1AEPSVR",27,0)
 ; Add the import key if we are the postmaster
"RTN","A1AEPSVR",28,0)
 I DUZ=.5,'$D(^XUSEC("A1AE IMPORT",DUZ)) D
"RTN","A1AEPSVR",29,0)
 . N FDA S FDA(200.051,"+1,.5,",.01)="`"_$O(^DIC(19.1,"B","A1AE IMPORT",""))
"RTN","A1AEPSVR",30,0)
 . N DIERR D UPDATE^DIE("E",$NA(FDA))
"RTN","A1AEPSVR",31,0)
 . I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEPSVR",32,0)
 ;
"RTN","A1AEPSVR",33,0)
 ; Initial variables
"RTN","A1AEPSVR",34,0)
 N CNT S CNT=1                      ; Internal counter
"RTN","A1AEPSVR",35,0)
 S XMER=0                           ; See above
"RTN","A1AEPSVR",36,0)
 K ^TMP($J,"TXT"),^("KID"),^("MSG") ; Globals where we load our messages
"RTN","A1AEPSVR",37,0)
 N STATE S STATE="START"            ; State machine variable
"RTN","A1AEPSVR",38,0)
 ;
"RTN","A1AEPSVR",39,0)
 F  X XMREC Q:XMER  D @STATE        ; Main reading loop. Constructs ^TMP($J,"TXT"),^("KID")
"RTN","A1AEPSVR",40,0)
 ;
"RTN","A1AEPSVR",41,0)
 I '$D(^TMP($J,"TXT")) D EN^DDIOL("Message "_XMZ_" ("_$P(^XMB(3.9,XMZ,0),U)_")"_" is Not a Patch Message") QUIT
"RTN","A1AEPSVR",42,0)
 ;
"RTN","A1AEPSVR",43,0)
 ; Next few lines to construct ^("MSG"). It's the ^("TXT") then the ^("KID")
"RTN","A1AEPSVR",44,0)
 M ^TMP($J,"MSG")=^TMP($J,"TXT")
"RTN","A1AEPSVR",45,0)
 N LS S LS=$O(^TMP($J,"MSG"," "),-1)
"RTN","A1AEPSVR",46,0)
 N NS S NS=LS+1
"RTN","A1AEPSVR",47,0)
 I $D(^TMP($J,"KID")) N I F I=1:1 Q:'$D(^TMP($J,"KID",I))  S ^TMP($J,"MSG",NS,0)=^TMP($J,"KID",I,0),NS=NS+1
"RTN","A1AEPSVR",48,0)
 ;
"RTN","A1AEPSVR",49,0)
 ; Now that we have the entire message, now process it.
"RTN","A1AEPSVR",50,0)
 D CLEANHF^A1AEK2M0($NA(^TMP($J,"TXT"))) ; add $TXT/$END TXT if necessary
"RTN","A1AEPSVR",51,0)
 N TXTINFO
"RTN","A1AEPSVR",52,0)
 N OLDTRAP S OLDTRAP=$ET
"RTN","A1AEPSVR",53,0)
 N $ET,$ES S $ET="D ANATRAP^A1AEK2M2("""_XMZ_" - "_$P(^XMB(3.9,XMZ,0),U)_""")"
"RTN","A1AEPSVR",54,0)
 D ANALYZE^A1AEK2M2(.TXTINFO,$NA(^TMP($J,"TXT")))
"RTN","A1AEPSVR",55,0)
 S $ET=OLDTRAP
"RTN","A1AEPSVR",56,0)
 N INFOONLY S INFOONLY=$$INFOONLY^A1AEK2M(.TXTINFO) ; Info Only patch?
"RTN","A1AEPSVR",57,0)
 ;
"RTN","A1AEPSVR",58,0)
 ; Populate the result variable for the mail message
"RTN","A1AEPSVR",59,0)
 ; TODO: Result variable populatation needs to be abstracted.
"RTN","A1AEPSVR",60,0)
 ; TODO: Latterly, we can load this from the file. See above.
"RTN","A1AEPSVR",61,0)
 ;       but we need to file it here first.
"RTN","A1AEPSVR",62,0)
 N RESULT
"RTN","A1AEPSVR",63,0)
 N CANTLOAD S CANTLOAD=0
"RTN","A1AEPSVR",64,0)
 S RESULT(TXTINFO("DESIGNATION"),"TXT")="Mailed Patch"
"RTN","A1AEPSVR",65,0)
 I INFOONLY S RESULT(TXTINFO("DESIGNATION"),"KID")="Info Only Patch"
"RTN","A1AEPSVR",66,0)
 E  D
"RTN","A1AEPSVR",67,0)
 . I $D(^TMP($J,"KID")) S RESULT(TXTINFO("DESIGNATION"),"KID")="KID patch loaded inline"
"RTN","A1AEPSVR",68,0)
 . E  D
"RTN","A1AEPSVR",69,0)
 . . S RESULT(TXTINFO("DESIGNATION"),"KID")=""
"RTN","A1AEPSVR",70,0)
 . . S RESULT(TXTINFO("DESIGNATION"),"CANTLOAD")="Mail Message"
"RTN","A1AEPSVR",71,0)
 . . S CANTLOAD=1
"RTN","A1AEPSVR",72,0)
 ;
"RTN","A1AEPSVR",73,0)
 ; Add dependencies in description (temporary or permanent... I don't know now).
"RTN","A1AEPSVR",74,0)
 D PREREQAD^A1AEK2M(.TXTINFO)
"RTN","A1AEPSVR",75,0)
 ;
"RTN","A1AEPSVR",76,0)
 ; Load whole thing and split
"RTN","A1AEPSVR",77,0)
 D ADD0^A1AEK2M(.TXTINFO,$NA(^TMP($J,"MSG")),CANTLOAD,INFOONLY,.RESULT)
"RTN","A1AEPSVR",78,0)
 ;
"RTN","A1AEPSVR",79,0)
 ; Mail bulletin
"RTN","A1AEPSVR",80,0)
 D MAIL^A1AEK2M(.RESULT)
"RTN","A1AEPSVR",81,0)
 ;
"RTN","A1AEPSVR",82,0)
 ; Remove Temp Globals
"RTN","A1AEPSVR",83,0)
 K ^TMP($J,"KID"),^("TXT"),^("MSG")
"RTN","A1AEPSVR",84,0)
 ;
"RTN","A1AEPSVR",85,0)
 ; Remove original message from Mailman. XMZ is currently present in the ST.
"RTN","A1AEPSVR",86,0)
 N XMSER S XMSER="S.A1AE LOAD RELEASED PATCH"
"RTN","A1AEPSVR",87,0)
 D REMSBMSG^XMA1C
"RTN","A1AEPSVR",88,0)
 QUIT
"RTN","A1AEPSVR",89,0)
 ;
"RTN","A1AEPSVR",90,0)
START ; Message start state
"RTN","A1AEPSVR",91,0)
 ; ZEXCEPT: XMRG,STATE,CNT
"RTN","A1AEPSVR",92,0)
 I XMRG'["$TXT" QUIT
"RTN","A1AEPSVR",93,0)
 S STATE="TXT"
"RTN","A1AEPSVR",94,0)
 S ^TMP($J,"TXT",CNT,0)=XMRG,CNT=CNT+1
"RTN","A1AEPSVR",95,0)
 QUIT
"RTN","A1AEPSVR",96,0)
 ;
"RTN","A1AEPSVR",97,0)
TXT ; $TXT (already found) to $END TXT
"RTN","A1AEPSVR",98,0)
 ; ZEXCEPT: XMRG,STATE,CNT
"RTN","A1AEPSVR",99,0)
 S ^TMP($J,"TXT",CNT,0)=XMRG,CNT=CNT+1
"RTN","A1AEPSVR",100,0)
 I XMRG["$END TXT" S STATE="SKID",CNT=1
"RTN","A1AEPSVR",101,0)
 QUIT
"RTN","A1AEPSVR",102,0)
 ;
"RTN","A1AEPSVR",103,0)
SKID ; Start $KID (if found)
"RTN","A1AEPSVR",104,0)
 ; ZEXCEPT: XMRG,STATE,CNT
"RTN","A1AEPSVR",105,0)
 I XMRG'["$KID" S STATE="END" QUIT
"RTN","A1AEPSVR",106,0)
 E  S ^TMP($J,"KID",CNT,0)=XMRG,CNT=CNT+1,STATE="KID"
"RTN","A1AEPSVR",107,0)
 QUIT
"RTN","A1AEPSVR",108,0)
 ;
"RTN","A1AEPSVR",109,0)
KID ; $KID (already found) to $END KID
"RTN","A1AEPSVR",110,0)
 ; ZEXCEPT: XMRG,STATE,CNT
"RTN","A1AEPSVR",111,0)
 S ^TMP($J,"KID",CNT,0)=XMRG,CNT=CNT+1
"RTN","A1AEPSVR",112,0)
 I XMRG["$END KID" S STATE="END"
"RTN","A1AEPSVR",113,0)
 QUIT
"RTN","A1AEPSVR",114,0)
 ;
"RTN","A1AEPSVR",115,0)
END ; Read in a infinite loop
"RTN","A1AEPSVR",116,0)
 ; ZEXCEPT: XMRG,STATE,CNT
"RTN","A1AEPSVR",117,0)
 QUIT
"RTN","A1AEPSVR",118,0)
 ;
"RTN","A1AEPSVR",119,0)
TEST ; Testing entry point by Wally
"RTN","A1AEPSVR",120,0)
 ; ZEXCEPT: DTIME
"RTN","A1AEPSVR",121,0)
 N XMRG,XMER,XMREC,XMZ
"RTN","A1AEPSVR",122,0)
 W !,"Message number: " R XMZ:$G(DTIME,300) Q:'XMZ
"RTN","A1AEPSVR",123,0)
 S XMREC="D REC^XMS3"
"RTN","A1AEPSVR",124,0)
 D EN
"RTN","A1AEPSVR",125,0)
 QUIT
"RTN","A1AEPSVR",126,0)
 ;
"RTN","A1AEPSVR",127,0)
UNITTEST D EN^%ut($T(+0),1) QUIT
"RTN","A1AEPSVR",128,0)
UT1 ; @TEST Send a Mailman KIDS message to S.A1AE LOAD RELEASED PATCH
"RTN","A1AEPSVR",129,0)
 ; TODO: Create the ZZZ package in 9.4
"RTN","A1AEPSVR",130,0)
 N DIK,DA ; fur Fileman
"RTN","A1AEPSVR",131,0)
 S DUZ=.5 ; Must be defined for auditing.
"RTN","A1AEPSVR",132,0)
 N PKGAB S PKGAB="ZZZ"
"RTN","A1AEPSVR",133,0)
 ; Get entry from package file if it exists.
"RTN","A1AEPSVR",134,0)
 N PKIEN S PKIEN=$O(^DIC(9.4,"C",PKGAB,0))
"RTN","A1AEPSVR",135,0)
 ; If package is there, delete everything that belongs to it
"RTN","A1AEPSVR",136,0)
 I PKIEN D 
"RTN","A1AEPSVR",137,0)
 . S DA="" F  S DA=$O(^A1AE(11005,"D",PKIEN,DA)) Q:'DA  D
"RTN","A1AEPSVR",138,0)
 . . F DIK="^A1AE(11005,","^A1AE(11005.1," D ^DIK  ; PM Patch and Message files
"RTN","A1AEPSVR",139,0)
 . S DIK="^A1AE(11007,",DA=PKIEN D ^DIK  ; PM Package File
"RTN","A1AEPSVR",140,0)
 ;
"RTN","A1AEPSVR",141,0)
 D CHKTF^%ut('$D(^A1AE(11005,"D",PKIEN)),"Package should be gone")
"RTN","A1AEPSVR",142,0)
 N MESS,LN0,LN
"RTN","A1AEPSVR",143,0)
 N I F I=1:1 S LN0=$T(MESSAGE+I),LN=$P(LN0,";;",2,99) S MESS(I,0)=LN Q:LN["$END KID"
"RTN","A1AEPSVR",144,0)
 N FLAGS S FLAGS("TYPE")="K" ; KIDS
"RTN","A1AEPSVR",145,0)
 S DUZ=.5
"RTN","A1AEPSVR",146,0)
 N PD S PD="ZZZ*2.0*1"
"RTN","A1AEPSVR",147,0)
 D SENDMSG^XMXAPI(DUZ,PD,$NA(MESS),"S.A1AE LOAD RELEASED PATCH",.FLAGS,.MESSAGEIEN)
"RTN","A1AEPSVR",148,0)
 D EN^DDIOL("Waiting 10 seconds for taskman to finish...")
"RTN","A1AEPSVR",149,0)
 HANG 10
"RTN","A1AEPSVR",150,0)
 D CHKTF^%ut($D(^A1AE(11005,"D",PKIEN)),"Package should be present")
"RTN","A1AEPSVR",151,0)
 QUIT
"RTN","A1AEPSVR",152,0)
 ;
"RTN","A1AEPSVR",153,0)
MESSAGE ;;
"RTN","A1AEPSVR",154,0)
 ;;$TXT Created by TESTMASTER,USER at VEN.SMH101.COM  (KIDS) on Thursday, 01/07/14 at 15:55
"RTN","A1AEPSVR",155,0)
 ;;=============================================================================
"RTN","A1AEPSVR",156,0)
 ;;Run Date: JAN 22, 2014                     Designation: ZZZ*2*1
"RTN","A1AEPSVR",157,0)
 ;;Package : ZZZ - TEST PACKAGE                  Priority: EMERGENCY
"RTN","A1AEPSVR",158,0)
 ;;Version : 2         SEQ #1                      Status: Released
"RTN","A1AEPSVR",159,0)
 ;;=============================================================================
"RTN","A1AEPSVR",160,0)
 ;;
"RTN","A1AEPSVR",161,0)
 ;;
"RTN","A1AEPSVR",162,0)
 ;;Subject: TEST IMPORT INTO PATCH MODULE VIA S.A1AE LOAD RELEASED PATCH
"RTN","A1AEPSVR",163,0)
 ;;
"RTN","A1AEPSVR",164,0)
 ;;Category: 
"RTN","A1AEPSVR",165,0)
 ;;  - Data Dictionary
"RTN","A1AEPSVR",166,0)
 ;;  - Input Template
"RTN","A1AEPSVR",167,0)
 ;;  - Print Template
"RTN","A1AEPSVR",168,0)
 ;;  - Routine
"RTN","A1AEPSVR",169,0)
 ;;
"RTN","A1AEPSVR",170,0)
 ;;Description:
"RTN","A1AEPSVR",171,0)
 ;;============
"RTN","A1AEPSVR",172,0)
 ;;
"RTN","A1AEPSVR",173,0)
 ;; 
"RTN","A1AEPSVR",174,0)
 ;;  This patch is the result of the Unit Test routine.
"RTN","A1AEPSVR",175,0)
 ;;  Please ignore it.
"RTN","A1AEPSVR",176,0)
 ;;  
"RTN","A1AEPSVR",177,0)
 ;;  Patch ID: ZZZ*2.0*1
"RTN","A1AEPSVR",178,0)
 ;;  
"RTN","A1AEPSVR",179,0)
 ;;
"RTN","A1AEPSVR",180,0)
 ;;Routine Information:
"RTN","A1AEPSVR",181,0)
 ;;====================
"RTN","A1AEPSVR",182,0)
 ;;The second line of each of these routines now looks like:
"RTN","A1AEPSVR",183,0)
 ;; ;;8.0;KERNEL;**[Patch List]**;Jul 10, 1995;Build 2
"RTN","A1AEPSVR",184,0)
 ;;
"RTN","A1AEPSVR",185,0)
 ;;The checksums below are new checksums, and
"RTN","A1AEPSVR",186,0)
 ;; can be checked with CHECK1^XTSUMBLD.
"RTN","A1AEPSVR",187,0)
 ;;
"RTN","A1AEPSVR",188,0)
 ;;Routine Name: ZOSV2GTM
"RTN","A1AEPSVR",189,0)
 ;;    Before:  B7008460   After:  B7008460  **275,425**
"RTN","A1AEPSVR",190,0)
 ;; 
"RTN","A1AEPSVR",191,0)
 ;;Routine list of preceding patches: 425
"RTN","A1AEPSVR",192,0)
 ;;
"RTN","A1AEPSVR",193,0)
 ;;=============================================================================
"RTN","A1AEPSVR",194,0)
 ;;User Information:
"RTN","A1AEPSVR",195,0)
 ;;Entered By  : PATCHMODULE,DEVELOPER         Date Entered  : JAN 22, 2014
"RTN","A1AEPSVR",196,0)
 ;;Completed By: PATCHMODULE,COMPLETER         Date Completed: JAN 22, 2014
"RTN","A1AEPSVR",197,0)
 ;;Released By : PATCHMODULE,VERIFER           Date Released : JAN 22, 2014
"RTN","A1AEPSVR",198,0)
 ;;=============================================================================
"RTN","A1AEPSVR",199,0)
 ;;
"RTN","A1AEPSVR",200,0)
 ;;
"RTN","A1AEPSVR",201,0)
 ;;Packman Mail Message:
"RTN","A1AEPSVR",202,0)
 ;;=====================
"RTN","A1AEPSVR",203,0)
 ;;
"RTN","A1AEPSVR",204,0)
 ;;$END TXT
"RTN","A1AEPSVR",205,0)
 ;;$KID ZZZ*1.0*1
"RTN","A1AEPSVR",206,0)
 ;;**INSTALL NAME**
"RTN","A1AEPSVR",207,0)
 ;;ZZZ*1.0*1
"RTN","A1AEPSVR",208,0)
 ;;"BLD",9277,0)
"RTN","A1AEPSVR",209,0)
 ;;ZZZ*1.0*1^TEST PACKAGE^0^3140102^y
"RTN","A1AEPSVR",210,0)
 ;;"BLD",9277,1,0)
"RTN","A1AEPSVR",211,0)
 ;;^^1^1^3140102^
"RTN","A1AEPSVR",212,0)
 ;;"BLD",9277,1,1,0)
"RTN","A1AEPSVR",213,0)
 ;;TEST TEST
"RTN","A1AEPSVR",214,0)
 ;;"BLD",9277,4,0)
"RTN","A1AEPSVR",215,0)
 ;;^9.64PA^^
"RTN","A1AEPSVR",216,0)
 ;;"BLD",9277,6.3)
"RTN","A1AEPSVR",217,0)
 ;;2
"RTN","A1AEPSVR",218,0)
 ;;"BLD",9277,"KRN",0)
"RTN","A1AEPSVR",219,0)
 ;;^9.67PA^779.2^20
"RTN","A1AEPSVR",220,0)
 ;;"BLD",9277,"KRN",.4,0)
"RTN","A1AEPSVR",221,0)
 ;;.4
"RTN","A1AEPSVR",222,0)
 ;;"BLD",9277,"KRN",.401,0)
"RTN","A1AEPSVR",223,0)
 ;;.401
"RTN","A1AEPSVR",224,0)
 ;;"BLD",9277,"KRN",.402,0)
"RTN","A1AEPSVR",225,0)
 ;;.402
"RTN","A1AEPSVR",226,0)
 ;;"BLD",9277,"KRN",.403,0)
"RTN","A1AEPSVR",227,0)
 ;;.403
"RTN","A1AEPSVR",228,0)
 ;;"BLD",9277,"KRN",.5,0)
"RTN","A1AEPSVR",229,0)
 ;;.5
"RTN","A1AEPSVR",230,0)
 ;;"BLD",9277,"KRN",.84,0)
"RTN","A1AEPSVR",231,0)
 ;;.84
"RTN","A1AEPSVR",232,0)
 ;;"BLD",9277,"KRN",3.6,0)
"RTN","A1AEPSVR",233,0)
 ;;3.6
"RTN","A1AEPSVR",234,0)
 ;;"BLD",9277,"KRN",3.8,0)
"RTN","A1AEPSVR",235,0)
 ;;3.8
"RTN","A1AEPSVR",236,0)
 ;;"BLD",9277,"KRN",9.2,0)
"RTN","A1AEPSVR",237,0)
 ;;9.2
"RTN","A1AEPSVR",238,0)
 ;;"BLD",9277,"KRN",9.8,0)
"RTN","A1AEPSVR",239,0)
 ;;9.8
"RTN","A1AEPSVR",240,0)
 ;;"BLD",9277,"KRN",9.8,"NM",0)
"RTN","A1AEPSVR",241,0)
 ;;^9.68A^1^1
"RTN","A1AEPSVR",242,0)
 ;;"BLD",9277,"KRN",9.8,"NM",1,0)
"RTN","A1AEPSVR",243,0)
 ;;ZOSV2GTM^^0^B7008460
"RTN","A1AEPSVR",244,0)
 ;;"BLD",9277,"KRN",9.8,"NM","B","ZOSV2GTM",1)
"RTN","A1AEPSVR",245,0)
 ;;
"RTN","A1AEPSVR",246,0)
 ;;"BLD",9277,"KRN",19,0)
"RTN","A1AEPSVR",247,0)
 ;;19
"RTN","A1AEPSVR",248,0)
 ;;"BLD",9277,"KRN",19.1,0)
"RTN","A1AEPSVR",249,0)
 ;;19.1
"RTN","A1AEPSVR",250,0)
 ;;"BLD",9277,"KRN",101,0)
"RTN","A1AEPSVR",251,0)
 ;;101
"RTN","A1AEPSVR",252,0)
 ;;"BLD",9277,"KRN",409.61,0)
"RTN","A1AEPSVR",253,0)
 ;;409.61
"RTN","A1AEPSVR",254,0)
 ;;"BLD",9277,"KRN",771,0)
"RTN","A1AEPSVR",255,0)
 ;;771
"RTN","A1AEPSVR",256,0)
 ;;"BLD",9277,"KRN",779.2,0)
"RTN","A1AEPSVR",257,0)
 ;;779.2
"RTN","A1AEPSVR",258,0)
 ;;"BLD",9277,"KRN",870,0)
"RTN","A1AEPSVR",259,0)
 ;;870
"RTN","A1AEPSVR",260,0)
 ;;"BLD",9277,"KRN",8989.51,0)
"RTN","A1AEPSVR",261,0)
 ;;8989.51
"RTN","A1AEPSVR",262,0)
 ;;"BLD",9277,"KRN",8989.52,0)
"RTN","A1AEPSVR",263,0)
 ;;8989.52
"RTN","A1AEPSVR",264,0)
 ;;"BLD",9277,"KRN",8994,0)
"RTN","A1AEPSVR",265,0)
 ;;8994
"RTN","A1AEPSVR",266,0)
 ;;"BLD",9277,"KRN","B",.4,.4)
"RTN","A1AEPSVR",267,0)
 ;;
"RTN","A1AEPSVR",268,0)
 ;;"BLD",9277,"KRN","B",.401,.401)
"RTN","A1AEPSVR",269,0)
 ;;
"RTN","A1AEPSVR",270,0)
 ;;"BLD",9277,"KRN","B",.402,.402)
"RTN","A1AEPSVR",271,0)
 ;;
"RTN","A1AEPSVR",272,0)
 ;;"BLD",9277,"KRN","B",.403,.403)
"RTN","A1AEPSVR",273,0)
 ;;
"RTN","A1AEPSVR",274,0)
 ;;"BLD",9277,"KRN","B",.5,.5)
"RTN","A1AEPSVR",275,0)
 ;;
"RTN","A1AEPSVR",276,0)
 ;;"BLD",9277,"KRN","B",.84,.84)
"RTN","A1AEPSVR",277,0)
 ;;
"RTN","A1AEPSVR",278,0)
 ;;"BLD",9277,"KRN","B",3.6,3.6)
"RTN","A1AEPSVR",279,0)
 ;;
"RTN","A1AEPSVR",280,0)
 ;;"BLD",9277,"KRN","B",3.8,3.8)
"RTN","A1AEPSVR",281,0)
 ;;
"RTN","A1AEPSVR",282,0)
 ;;"BLD",9277,"KRN","B",9.2,9.2)
"RTN","A1AEPSVR",283,0)
 ;;
"RTN","A1AEPSVR",284,0)
 ;;"BLD",9277,"KRN","B",9.8,9.8)
"RTN","A1AEPSVR",285,0)
 ;;
"RTN","A1AEPSVR",286,0)
 ;;"BLD",9277,"KRN","B",19,19)
"RTN","A1AEPSVR",287,0)
 ;;
"RTN","A1AEPSVR",288,0)
 ;;"BLD",9277,"KRN","B",19.1,19.1)
"RTN","A1AEPSVR",289,0)
 ;;
"RTN","A1AEPSVR",290,0)
 ;;"BLD",9277,"KRN","B",101,101)
"RTN","A1AEPSVR",291,0)
 ;;
"RTN","A1AEPSVR",292,0)
 ;;"BLD",9277,"KRN","B",409.61,409.61)
"RTN","A1AEPSVR",293,0)
 ;;
"RTN","A1AEPSVR",294,0)
 ;;"BLD",9277,"KRN","B",771,771)
"RTN","A1AEPSVR",295,0)
 ;;
"RTN","A1AEPSVR",296,0)
 ;;"BLD",9277,"KRN","B",779.2,779.2)
"RTN","A1AEPSVR",297,0)
 ;;
"RTN","A1AEPSVR",298,0)
 ;;"BLD",9277,"KRN","B",870,870)
"RTN","A1AEPSVR",299,0)
 ;;
"RTN","A1AEPSVR",300,0)
 ;;"BLD",9277,"KRN","B",8989.51,8989.51)
"RTN","A1AEPSVR",301,0)
 ;;
"RTN","A1AEPSVR",302,0)
 ;;"BLD",9277,"KRN","B",8989.52,8989.52)
"RTN","A1AEPSVR",303,0)
 ;;
"RTN","A1AEPSVR",304,0)
 ;;"BLD",9277,"KRN","B",8994,8994)
"RTN","A1AEPSVR",305,0)
 ;;
"RTN","A1AEPSVR",306,0)
 ;;"BLD",9277,"QUES",0)
"RTN","A1AEPSVR",307,0)
 ;;^9.62^^
"RTN","A1AEPSVR",308,0)
 ;;"MBREQ")
"RTN","A1AEPSVR",309,0)
 ;;0
"RTN","A1AEPSVR",310,0)
 ;;"PKG",223,-1)
"RTN","A1AEPSVR",311,0)
 ;;1^1
"RTN","A1AEPSVR",312,0)
 ;;"PKG",223,0)
"RTN","A1AEPSVR",313,0)
 ;;TEST PACKAGE^ZZZ^FOR FORUM
"RTN","A1AEPSVR",314,0)
 ;;"PKG",223,22,0)
"RTN","A1AEPSVR",315,0)
 ;;^9.49I^1^1
"RTN","A1AEPSVR",316,0)
 ;;"PKG",223,22,1,0)
"RTN","A1AEPSVR",317,0)
 ;;1.0
"RTN","A1AEPSVR",318,0)
 ;;"PKG",223,22,1,"PAH",1,0)
"RTN","A1AEPSVR",319,0)
 ;;1^3140102
"RTN","A1AEPSVR",320,0)
 ;;"PKG",223,22,1,"PAH",1,1,0)
"RTN","A1AEPSVR",321,0)
 ;;^^1^1^3140102
"RTN","A1AEPSVR",322,0)
 ;;"PKG",223,22,1,"PAH",1,1,1,0)
"RTN","A1AEPSVR",323,0)
 ;;TEST TEST
"RTN","A1AEPSVR",324,0)
 ;;"QUES","XPF1",0)
"RTN","A1AEPSVR",325,0)
 ;;Y
"RTN","A1AEPSVR",326,0)
 ;;"QUES","XPF1","??")
"RTN","A1AEPSVR",327,0)
 ;;^D REP^XPDH
"RTN","A1AEPSVR",328,0)
 ;;"QUES","XPF1","A")
"RTN","A1AEPSVR",329,0)
 ;;Shall I write over your |FLAG| File
"RTN","A1AEPSVR",330,0)
 ;;"QUES","XPF1","B")
"RTN","A1AEPSVR",331,0)
 ;;YES
"RTN","A1AEPSVR",332,0)
 ;;"QUES","XPF1","M")
"RTN","A1AEPSVR",333,0)
 ;;D XPF1^XPDIQ
"RTN","A1AEPSVR",334,0)
 ;;"QUES","XPF2",0)
"RTN","A1AEPSVR",335,0)
 ;;Y
"RTN","A1AEPSVR",336,0)
 ;;"QUES","XPF2","??")
"RTN","A1AEPSVR",337,0)
 ;;^D DTA^XPDH
"RTN","A1AEPSVR",338,0)
 ;;"QUES","XPF2","A")
"RTN","A1AEPSVR",339,0)
 ;;Want my data |FLAG| yours
"RTN","A1AEPSVR",340,0)
 ;;"QUES","XPF2","B")
"RTN","A1AEPSVR",341,0)
 ;;YES
"RTN","A1AEPSVR",342,0)
 ;;"QUES","XPF2","M")
"RTN","A1AEPSVR",343,0)
 ;;D XPF2^XPDIQ
"RTN","A1AEPSVR",344,0)
 ;;"QUES","XPI1",0)
"RTN","A1AEPSVR",345,0)
 ;;YO
"RTN","A1AEPSVR",346,0)
 ;;"QUES","XPI1","??")
"RTN","A1AEPSVR",347,0)
 ;;^D INHIBIT^XPDH
"RTN","A1AEPSVR",348,0)
 ;;"QUES","XPI1","A")
"RTN","A1AEPSVR",349,0)
 ;;Want KIDS to INHIBIT LOGONs during the install
"RTN","A1AEPSVR",350,0)
 ;;"QUES","XPI1","B")
"RTN","A1AEPSVR",351,0)
 ;;NO
"RTN","A1AEPSVR",352,0)
 ;;"QUES","XPI1","M")
"RTN","A1AEPSVR",353,0)
 ;;D XPI1^XPDIQ
"RTN","A1AEPSVR",354,0)
 ;;"QUES","XPM1",0)
"RTN","A1AEPSVR",355,0)
 ;;PO^VA(200,:EM
"RTN","A1AEPSVR",356,0)
 ;;"QUES","XPM1","??")
"RTN","A1AEPSVR",357,0)
 ;;^D MG^XPDH
"RTN","A1AEPSVR",358,0)
 ;;"QUES","XPM1","A")
"RTN","A1AEPSVR",359,0)
 ;;Enter the Coordinator for Mail Group '|FLAG|'
"RTN","A1AEPSVR",360,0)
 ;;"QUES","XPM1","B")
"RTN","A1AEPSVR",361,0)
 ;;
"RTN","A1AEPSVR",362,0)
 ;;"QUES","XPM1","M")
"RTN","A1AEPSVR",363,0)
 ;;D XPM1^XPDIQ
"RTN","A1AEPSVR",364,0)
 ;;"QUES","XPO1",0)
"RTN","A1AEPSVR",365,0)
 ;;Y
"RTN","A1AEPSVR",366,0)
 ;;"QUES","XPO1","??")
"RTN","A1AEPSVR",367,0)
 ;;^D MENU^XPDH
"RTN","A1AEPSVR",368,0)
 ;;"QUES","XPO1","A")
"RTN","A1AEPSVR",369,0)
 ;;Want KIDS to Rebuild Menu Trees Upon Completion of Install
"RTN","A1AEPSVR",370,0)
 ;;"QUES","XPO1","B")
"RTN","A1AEPSVR",371,0)
 ;;NO
"RTN","A1AEPSVR",372,0)
 ;;"QUES","XPO1","M")
"RTN","A1AEPSVR",373,0)
 ;;D XPO1^XPDIQ
"RTN","A1AEPSVR",374,0)
 ;;"QUES","XPZ1",0)
"RTN","A1AEPSVR",375,0)
 ;;Y
"RTN","A1AEPSVR",376,0)
 ;;"QUES","XPZ1","??")
"RTN","A1AEPSVR",377,0)
 ;;^D OPT^XPDH
"RTN","A1AEPSVR",378,0)
 ;;"QUES","XPZ1","A")
"RTN","A1AEPSVR",379,0)
 ;;Want to DISABLE Scheduled Options, Menu Options, and Protocols
"RTN","A1AEPSVR",380,0)
 ;;"QUES","XPZ1","B")
"RTN","A1AEPSVR",381,0)
 ;;NO
"RTN","A1AEPSVR",382,0)
 ;;"QUES","XPZ1","M")
"RTN","A1AEPSVR",383,0)
 ;;D XPZ1^XPDIQ
"RTN","A1AEPSVR",384,0)
 ;;"QUES","XPZ2",0)
"RTN","A1AEPSVR",385,0)
 ;;Y
"RTN","A1AEPSVR",386,0)
 ;;"QUES","XPZ2","??")
"RTN","A1AEPSVR",387,0)
 ;;^D RTN^XPDH
"RTN","A1AEPSVR",388,0)
 ;;"QUES","XPZ2","A")
"RTN","A1AEPSVR",389,0)
 ;;Want to MOVE routines to other CPUs
"RTN","A1AEPSVR",390,0)
 ;;"QUES","XPZ2","B")
"RTN","A1AEPSVR",391,0)
 ;;NO
"RTN","A1AEPSVR",392,0)
 ;;"QUES","XPZ2","M")
"RTN","A1AEPSVR",393,0)
 ;;D XPZ2^XPDIQ
"RTN","A1AEPSVR",394,0)
 ;;"RTN")
"RTN","A1AEPSVR",395,0)
 ;;1
"RTN","A1AEPSVR",396,0)
 ;;"RTN","ZOSV2GTM")
"RTN","A1AEPSVR",397,0)
 ;;0^1^B7008460^B7008460
"RTN","A1AEPSVR",398,0)
 ;;"RTN","ZOSV2GTM",1,0)
"RTN","A1AEPSVR",399,0)
 ;;%ZOSV2 ;ISF/RWF - More GT.M support routines ;10/18/06  14:29
"RTN","A1AEPSVR",400,0)
 ;;"RTN","ZOSV2GTM",2,0)
"RTN","A1AEPSVR",401,0)
 ;; ;;8.0;KERNEL;**275,425**;Jul 10, 1995;Build 2
"RTN","A1AEPSVR",402,0)
 ;;"RTN","ZOSV2GTM",3,0)
"RTN","A1AEPSVR",403,0)
 ;; Q
"RTN","A1AEPSVR",404,0)
 ;;"RTN","ZOSV2GTM",4,0)
"RTN","A1AEPSVR",405,0)
 ;; ;SAVE: DIE open array reference.
"RTN","A1AEPSVR",406,0)
 ;;"RTN","ZOSV2GTM",5,0)
"RTN","A1AEPSVR",407,0)
 ;; ;      XCN is the starting value to $O from.
"RTN","A1AEPSVR",408,0)
 ;;"RTN","ZOSV2GTM",6,0)
"RTN","A1AEPSVR",409,0)
 ;;SAVE(RN) ;Save a routine
"RTN","A1AEPSVR",410,0)
 ;;"RTN","ZOSV2GTM",7,0)
"RTN","A1AEPSVR",411,0)
 ;; N %,%F,%I,%N,SP,$ETRAP
"RTN","A1AEPSVR",412,0)
 ;;"RTN","ZOSV2GTM",8,0)
"RTN","A1AEPSVR",413,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEPSVR",414,0)
 ;;"RTN","ZOSV2GTM",9,0)
"RTN","A1AEPSVR",415,0)
 ;; S %I=$I,SP=" ",%F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","A1AEPSVR",416,0)
 ;;"RTN","ZOSV2GTM",10,0)
"RTN","A1AEPSVR",417,0)
 ;; O %F:(newversion:noreadonly:blocksize=2048:recordsize=2044) U %F
"RTN","A1AEPSVR",418,0)
 ;;"RTN","ZOSV2GTM",11,0)
"RTN","A1AEPSVR",419,0)
 ;; F  S XCN=$O(@(DIE_XCN_")")) Q:XCN'>0  S %=@(DIE_XCN_",0)") Q:$E(%,1)="$"  I $E(
"RTN","A1AEPSVR",420,0)
 ;;%)'=";" W $P(%,SP)_$C(9)_$P(%,SP,2,99999),!
"RTN","A1AEPSVR",421,0)
 ;;"RTN","ZOSV2GTM",12,0)
"RTN","A1AEPSVR",422,0)
 ;; C %F ;S %N=$$NULL
"RTN","A1AEPSVR",423,0)
 ;;"RTN","ZOSV2GTM",13,0)
"RTN","A1AEPSVR",424,0)
 ;; ZLINK RN
"RTN","A1AEPSVR",425,0)
 ;;"RTN","ZOSV2GTM",14,0)
"RTN","A1AEPSVR",426,0)
 ;; ;C %N
"RTN","A1AEPSVR",427,0)
 ;;"RTN","ZOSV2GTM",15,0)
"RTN","A1AEPSVR",428,0)
 ;; U %I
"RTN","A1AEPSVR",429,0)
 ;;"RTN","ZOSV2GTM",16,0)
"RTN","A1AEPSVR",430,0)
 ;; Q
"RTN","A1AEPSVR",431,0)
 ;;"RTN","ZOSV2GTM",17,0)
"RTN","A1AEPSVR",432,0)
 ;;NULL() ;Open and use null to hide talking.  Return open name
"RTN","A1AEPSVR",433,0)
 ;;"RTN","ZOSV2GTM",18,0)
"RTN","A1AEPSVR",434,0)
 ;; ;Doesn't work for compile errors
"RTN","A1AEPSVR",435,0)
 ;;"RTN","ZOSV2GTM",19,0)
"RTN","A1AEPSVR",436,0)
 ;; N %N S %N=$S($ZV["VMS":"NLA0:",1:"/dev/nul")
"RTN","A1AEPSVR",437,0)
 ;;"RTN","ZOSV2GTM",20,0)
"RTN","A1AEPSVR",438,0)
 ;; O %N U %N
"RTN","A1AEPSVR",439,0)
 ;;"RTN","ZOSV2GTM",21,0)
"RTN","A1AEPSVR",440,0)
 ;; Q %N
"RTN","A1AEPSVR",441,0)
 ;;"RTN","ZOSV2GTM",22,0)
"RTN","A1AEPSVR",442,0)
 ;; ;
"RTN","A1AEPSVR",443,0)
 ;;"RTN","ZOSV2GTM",23,0)
"RTN","A1AEPSVR",444,0)
 ;;DEL(RN) ;Delete a routine file, both source and object.
"RTN","A1AEPSVR",445,0)
 ;;"RTN","ZOSV2GTM",24,0)
"RTN","A1AEPSVR",446,0)
 ;; N %N,%DIR,%I,$ETRAP
"RTN","A1AEPSVR",447,0)
 ;;"RTN","ZOSV2GTM",25,0)
"RTN","A1AEPSVR",448,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEPSVR",449,0)
 ;;"RTN","ZOSV2GTM",26,0)
"RTN","A1AEPSVR",450,0)
 ;; S %I=$I,%DIR=$$RTNDIR^%ZOSV,RN=$TR(RN,"%","_")
"RTN","A1AEPSVR",451,0)
 ;;"RTN","ZOSV2GTM",27,0)
"RTN","A1AEPSVR",452,0)
 ;; I $L($ZSEARCH(%DIR_RN_".m",244)) ZSYSTEM "DEL "_%DIR_X_".m;*"
"RTN","A1AEPSVR",453,0)
 ;;"RTN","ZOSV2GTM",28,0)
"RTN","A1AEPSVR",454,0)
 ;; I $L($ZSEARCH(%DIR_RN_".obj",244)) ZSYSTEM "DEL "_%DIR_X_".obj;*"
"RTN","A1AEPSVR",455,0)
 ;;"RTN","ZOSV2GTM",29,0)
"RTN","A1AEPSVR",456,0)
 ;; I $L($ZSEARCH(%DIR_RN_".o",244)) ZSYSTEM "rm -f "_%DIR_X_".o"
"RTN","A1AEPSVR",457,0)
 ;;"RTN","ZOSV2GTM",30,0)
"RTN","A1AEPSVR",458,0)
 ;; Q
"RTN","A1AEPSVR",459,0)
 ;;"RTN","ZOSV2GTM",31,0)
"RTN","A1AEPSVR",460,0)
 ;; ;LOAD: DIF open array to receive the routine lines.
"RTN","A1AEPSVR",461,0)
 ;;"RTN","ZOSV2GTM",32,0)
"RTN","A1AEPSVR",462,0)
 ;; ;      XCNP The starting index -1.
"RTN","A1AEPSVR",463,0)
 ;;"RTN","ZOSV2GTM",33,0)
"RTN","A1AEPSVR",464,0)
 ;;LOAD(RN) ;Load a routine
"RTN","A1AEPSVR",465,0)
 ;;"RTN","ZOSV2GTM",34,0)
"RTN","A1AEPSVR",466,0)
 ;; N %
"RTN","A1AEPSVR",467,0)
 ;;"RTN","ZOSV2GTM",35,0)
"RTN","A1AEPSVR",468,0)
 ;; S %N=0 F XCNP=XCNP+1:1 S %N=%N+1,%=$T(+%N^@RN) Q:$L(%)=0  S @(DIF_XCNP_",0)")=%
"RTN","A1AEPSVR",469,0)
 ;;"RTN","ZOSV2GTM",36,0)
"RTN","A1AEPSVR",470,0)
 ;; Q
"RTN","A1AEPSVR",471,0)
 ;;"RTN","ZOSV2GTM",37,0)
"RTN","A1AEPSVR",472,0)
 ;; ;
"RTN","A1AEPSVR",473,0)
 ;;"RTN","ZOSV2GTM",38,0)
"RTN","A1AEPSVR",474,0)
 ;;LOAD2(RN) ;Load a routine
"RTN","A1AEPSVR",475,0)
 ;;"RTN","ZOSV2GTM",39,0)
"RTN","A1AEPSVR",476,0)
 ;; N %,%1,%F,%N,$ETRAP
"RTN","A1AEPSVR",477,0)
 ;;"RTN","ZOSV2GTM",40,0)
"RTN","A1AEPSVR",478,0)
 ;; S %I=$I,%F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","A1AEPSVR",479,0)
 ;;"RTN","ZOSV2GTM",41,0)
"RTN","A1AEPSVR",480,0)
 ;; O %F:(readonly):1 Q:'$T  U %F
"RTN","A1AEPSVR",481,0)
 ;;"RTN","ZOSV2GTM",42,0)
"RTN","A1AEPSVR",482,0)
 ;; F XCNP=XCNP+1:1 R %1:1 Q:'$T!$ZEOF  S @(DIF_XCNP_",0)")=$TR(%1,$C(9)," ")
"RTN","A1AEPSVR",483,0)
 ;;"RTN","ZOSV2GTM",43,0)
"RTN","A1AEPSVR",484,0)
 ;; C %F I $L(%I) U %I
"RTN","A1AEPSVR",485,0)
 ;;"RTN","ZOSV2GTM",44,0)
"RTN","A1AEPSVR",486,0)
 ;; Q
"RTN","A1AEPSVR",487,0)
 ;;"RTN","ZOSV2GTM",45,0)
"RTN","A1AEPSVR",488,0)
 ;; ;
"RTN","A1AEPSVR",489,0)
 ;;"RTN","ZOSV2GTM",46,0)
"RTN","A1AEPSVR",490,0)
 ;;RSUM(RN) ;Calculate a RSUM value
"RTN","A1AEPSVR",491,0)
 ;;"RTN","ZOSV2GTM",47,0)
"RTN","A1AEPSVR",492,0)
 ;; N %,DIF,XCNP,%N,Y,$ETRAP K ^TMP("RSUM",$J)
"RTN","A1AEPSVR",493,0)
 ;;"RTN","ZOSV2GTM",48,0)
"RTN","A1AEPSVR",494,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEPSVR",495,0)
 ;;"RTN","ZOSV2GTM",49,0)
"RTN","A1AEPSVR",496,0)
 ;; S Y=0,DIF="^TMP(""RSUM"",$J,",XCNP=0 D LOAD2(RN)
"RTN","A1AEPSVR",497,0)
 ;;"RTN","ZOSV2GTM",50,0)
"RTN","A1AEPSVR",498,0)
 ;; F %=1,3:1 S %1=$G(^TMP("RSUM",$J,%,0)),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=
"RTN","A1AEPSVR",499,0)
 ;;";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*%2+Y
"RTN","A1AEPSVR",500,0)
 ;;"RTN","ZOSV2GTM",51,0)
"RTN","A1AEPSVR",501,0)
 ;; K ^TMP("RSUM",$J)
"RTN","A1AEPSVR",502,0)
 ;;"RTN","ZOSV2GTM",52,0)
"RTN","A1AEPSVR",503,0)
 ;; Q Y
"RTN","A1AEPSVR",504,0)
 ;;"RTN","ZOSV2GTM",53,0)
"RTN","A1AEPSVR",505,0)
 ;; ;
"RTN","A1AEPSVR",506,0)
 ;;"RTN","ZOSV2GTM",54,0)
"RTN","A1AEPSVR",507,0)
 ;;RSUM2(RN) ;Calculate a RSUM2 value
"RTN","A1AEPSVR",508,0)
 ;;"RTN","ZOSV2GTM",55,0)
"RTN","A1AEPSVR",509,0)
 ;; N %,DIF,XCNP,%N,Y,$ETRAP K ^TMP("RSUM",$J)
"RTN","A1AEPSVR",510,0)
 ;;"RTN","ZOSV2GTM",56,0)
"RTN","A1AEPSVR",511,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEPSVR",512,0)
 ;;"RTN","ZOSV2GTM",57,0)
"RTN","A1AEPSVR",513,0)
 ;; S Y=0,DIF="^TMP(""RSUM"",$J,",XCNP=0 D LOAD2(RN)
"RTN","A1AEPSVR",514,0)
 ;;"RTN","ZOSV2GTM",58,0)
"RTN","A1AEPSVR",515,0)
 ;; F %=1,3:1 S %1=$G(^TMP("RSUM",$J,%,0)),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=
"RTN","A1AEPSVR",516,0)
 ;;";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*(%2+%)+Y
"RTN","A1AEPSVR",517,0)
 ;;"RTN","ZOSV2GTM",59,0)
"RTN","A1AEPSVR",518,0)
 ;; K ^TMP("RSUM",$J)
"RTN","A1AEPSVR",519,0)
 ;;"RTN","ZOSV2GTM",60,0)
"RTN","A1AEPSVR",520,0)
 ;; Q Y
"RTN","A1AEPSVR",521,0)
 ;;"RTN","ZOSV2GTM",61,0)
"RTN","A1AEPSVR",522,0)
 ;; ;
"RTN","A1AEPSVR",523,0)
 ;;"RTN","ZOSV2GTM",62,0)
"RTN","A1AEPSVR",524,0)
 ;;TEST(RN) ;Special GT.M Test to see if routine is here.
"RTN","A1AEPSVR",525,0)
 ;;"RTN","ZOSV2GTM",63,0)
"RTN","A1AEPSVR",526,0)
 ;; N %F,%X
"RTN","A1AEPSVR",527,0)
 ;;"RTN","ZOSV2GTM",64,0)
"RTN","A1AEPSVR",528,0)
 ;; S %F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","A1AEPSVR",529,0)
 ;;"RTN","ZOSV2GTM",65,0)
"RTN","A1AEPSVR",530,0)
 ;; S %X=$ZSEARCH("X.X",245),%X=$ZSEARCH(%F,245)
"RTN","A1AEPSVR",531,0)
 ;;"RTN","ZOSV2GTM",66,0)
"RTN","A1AEPSVR",532,0)
 ;; Q %X
"RTN","A1AEPSVR",533,0)
 ;;"VER")
"RTN","A1AEPSVR",534,0)
 ;;8.0^22.0
"RTN","A1AEPSVR",535,0)
 ;;"BLD",9277,6)
"RTN","A1AEPSVR",536,0)
 ;;^1
"RTN","A1AEPSVR",537,0)
 ;;$END KID ZZZ*1.0*1
"RTN","A1AERCON")
0^36^B6433154
"RTN","A1AERCON",1,0)
A1AERCON ;isl/cjs-check for routine overlap on unreleased patchs ;2015-04-25T18:59
"RTN","A1AERCON",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AERCON",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AERCON",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AERCON",5,0)
 ;
"RTN","A1AERCON",6,0)
 ;
"RTN","A1AERCON",7,0)
 ;primary change history
"RTN","A1AERCON",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AERCON",9,0)
 ;
"RTN","A1AERCON",10,0)
 ;
"RTN","A1AERCON",11,0)
EN K ^TMP($J) S LINE=0,DIC=11005,DIC(0)="AEMQ",DIC("S")="I ""cu""[$P(^(0),U,8)" D ^DIC S PATCH=+Y G:PATCH'>0 EXIT
"RTN","A1AERCON",12,0)
 S DIR(0)="NO^0:999:0",DIR("A")="Include patches released within how many months? (0 for only active overlaps)",DIR("B")=0 D ^DIR S MONTHS=Y
"RTN","A1AERCON",13,0)
 S VER=$P(^A1AE(11005,PATCH,0),"*",2),RLIST=0 F  S RLIST=$O(^A1AE(11005,PATCH,"P",RLIST)) Q:RLIST'>0  D
"RTN","A1AERCON",14,0)
 . S PROU=$P($G(^A1AE(11005,PATCH,"P",RLIST,0)),U)
"RTN","A1AERCON",15,0)
 . S OTHERP=0 F  S OTHERP=$O(^A1AE(11005,"R",PROU,OTHERP)) Q:OTHERP'>0  D
"RTN","A1AERCON",16,0)
 . . Q:OTHERP=PATCH
"RTN","A1AERCON",17,0)
 . . S LINE0=$G(^A1AE(11005,OTHERP,0)),PNAME=$P(LINE0,U),REL="            " Q:$P(PNAME,"*",2)'=VER
"RTN","A1AERCON",18,0)
 . . I MONTHS=0 Q:"cu"'[$P(LINE0,U,8)
"RTN","A1AERCON",19,0)
 . . I MONTHS Q:"cuv"'[$P(LINE0,U,8)  I $P(LINE0,U,8)="v" S X1=DT,(X2,REL)=$P($G(^A1AE(11005.1,OTHERP,0)),U,7)\1 D ^%DTC Q:%Y=0  Q:X/30>MONTHS  S Y=REL D DD^%DT S REL=Y
"RTN","A1AERCON",20,0)
 . . S LINE=LINE+1,^TMP($J,PROU,LINE)=PROU_$E("          ",$L(PROU),10)_PNAME_$E("              ",$L(PNAME),14)_REL_"  "_$P($G(^VA(200,+$P(LINE0,U,9),0)),U)
"RTN","A1AERCON",21,0)
 . . Q
"RTN","A1AERCON",22,0)
 . Q
"RTN","A1AERCON",23,0)
 W !,"Routines in entered or completed patches that overlap with ",$P(^A1AE(11005,PATCH,0),U)
"RTN","A1AERCON",24,0)
 W !,"Routine    Patch          Release Date  Patch Entered by"
"RTN","A1AERCON",25,0)
 S PROU="" F  S PROU=$O(^TMP($J,PROU)) Q:PROU=""  D
"RTN","A1AERCON",26,0)
 . S LINE=0 F  S LINE=$O(^TMP($J,PROU,LINE)) Q:LINE'>0  D
"RTN","A1AERCON",27,0)
 . . W !,^TMP($J,PROU,LINE)
"RTN","A1AERCON",28,0)
 . . Q
"RTN","A1AERCON",29,0)
 . Q
"RTN","A1AERCON",30,0)
EXIT K ^TMP($J),PATCH,RLIST,PROU,OTHERP,LINE,LINE0,PNAME,MONTHS,REL,VER
"RTN","A1AERCON",31,0)
 Q
"RTN","A1AERD")
0^37^B4885631
"RTN","A1AERD",1,0)
A1AERD ;isa/rmo,mjk-read processor ;1987-11-24T11:00
"RTN","A1AERD",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AERD",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AERD",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AERD",5,0)
 ;
"RTN","A1AERD",6,0)
 ;
"RTN","A1AERD",7,0)
 ;primary change history
"RTN","A1AERD",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AERD",9,0)
 ;1992-12-02: version 2.2 released
"RTN","A1AERD",10,0)
 ;
"RTN","A1AERD",11,0)
 ;
"RTN","A1AERD",12,0)
SET S:'$D(A1AERD(0)) A1AERD(0)="" W:A1AERD(0)'["S" !?2,"Choose one of the following:"
"RTN","A1AERD",13,0)
 F I=0:0 S I=$O(A1AERD(I)) Q:'I  W:A1AERD(0)'["S" !?10,$P(A1AERD(I),"^",1) S V=$P(A1AERD(I),"^",1) D UPPER S $P(A1AERD(I),"^",3)=S
"RTN","A1AERD",14,0)
READ K S,I,J,T,L,I W !!,$S($D(A1AERD("A")):A1AERD("A"),1:"Enter Response: ")
"RTN","A1AERD",15,0)
 I $D(A1AERD("B")),$D(A1AERD(A1AERD("B"))) W $P(A1AERD(A1AERD("B")),"^",1),"// "
"RTN","A1AERD",16,0)
 R X:$S($D(A1AERD("DTIME")):+A1AERD("DTIME"),1:DTIME) S X1=X G HELP:X="?" S T=$T,DTOUT='T,L=$L(X) I X["^" S X="^" G Q
"RTN","A1AERD",17,0)
 I 'T,'$D(A1AERD("DTOUT")) S X="^" G Q
"RTN","A1AERD",18,0)
 I 'T,$D(A1AERD("DTOUT")),'$D(A1AERD(+A1AERD("DTOUT"))) S X="^" G Q
"RTN","A1AERD",19,0)
 I 'T S X=$P(A1AERD(+A1AERD("DTOUT")),"^",1) G Q
"RTN","A1AERD",20,0)
 I 'L,'$D(A1AERD("B")) S X="" G Q
"RTN","A1AERD",21,0)
 I 'L,'$D(A1AERD(+A1AERD("B"))) S X="" G Q
"RTN","A1AERD",22,0)
 I 'L S X=$P(A1AERD(+A1AERD("B")),"^",1) G Q
"RTN","A1AERD",23,0)
 S V=X D UPPER
"RTN","A1AERD",24,0)
 F I=0:0 S I=$O(A1AERD(I)) Q:'I  I S=$E($P(A1AERD(I),"^",3),1,L) S X=$P(A1AERD(I),"^",1) W $E(X,L+1,99) G Q
"RTN","A1AERD",25,0)
 W *7
"RTN","A1AERD",26,0)
HELP ;
"RTN","A1AERD",27,0)
 I $D(A1AERD("XQH")) S XQH=A1AERD("XQH") D EN^XQH W ! G SET
"RTN","A1AERD",28,0)
 W !!?2,"Enter one of the following:"
"RTN","A1AERD",29,0)
 F I=0:0 S I=$O(A1AERD(I)) Q:'I  W !?5,"'",$P(A1AERD(I),"^",1),"'",?25,"to ",$E($P(A1AERD(I),"^",2),1,79-$X)
"RTN","A1AERD",30,0)
 W !?5,"^",?25,"to stop." G READ
"RTN","A1AERD",31,0)
 ;
"RTN","A1AERD",32,0)
Q K DTOUT,S,C,I,L Q
"RTN","A1AERD",33,0)
 ;
"RTN","A1AERD",34,0)
UPPER ;
"RTN","A1AERD",35,0)
 S S="" F J=1:1 S C=$E($P(V,"^",1),J) Q:C=""  S:$A(C)>96&($A(C)<123) C=$C($A(C)-32) S S=S_C
"RTN","A1AERD",36,0)
 K C,V Q
"RTN","A1AESP")
0^38^B26563239
"RTN","A1AESP",1,0)
A1AESP ;isf/rwf-special load of package releases ;2010-08-19
"RTN","A1AESP",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AESP",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AESP",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AESP",5,0)
 ;
"RTN","A1AESP",6,0)
 ;
"RTN","A1AESP",7,0)
 ;primary change history
"RTN","A1AESP",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AESP",9,0)
 ;
"RTN","A1AESP",10,0)
 ;
"RTN","A1AESP",11,0)
EN ;Read an HFS Package release.
"RTN","A1AESP",12,0)
 W !,"Use LDINS entry point" Q
"RTN","A1AESP",13,0)
 N PACKAGE,RTN,NOW,RR,X,Y,DONE
"RTN","A1AESP",14,0)
 S NOW=$$NOW^XLFDT
"RTN","A1AESP",15,0)
 S %ZIS="M",%ZIS("A")="Package Build file: " D ^%ZIS I POP W !,"No Device" Q
"RTN","A1AESP",16,0)
 U IO F  R X:1 Q:(X="**INSTALL NAME**")!(X="$$END")
"RTN","A1AESP",17,0)
 U $P I X["END" W !,"END OF FILE" Q
"RTN","A1AESP",18,0)
 U IO R PACKAGE:1
"RTN","A1AESP",19,0)
 U $P W !,"Loading Package: ",PACKAGE
"RTN","A1AESP",20,0)
 ;Now find routines
"RTN","A1AESP",21,0)
 U IO F  R X:2,Y:2 Q:($E(X,1,5)="""RTN""")!(X["**END**")
"RTN","A1AESP",22,0)
 ;Start real work
"RTN","A1AESP",23,0)
 S DONE=0,RR="""RTN""A)"
"RTN","A1AESP",24,0)
 F  D  Q:DONE
"RTN","A1AESP",25,0)
 . U IO R X:2,Y:2
"RTN","A1AESP",26,0)
 . I $E(X,2,4)'="RTN" U $P W !,"Stopping: ",X S DONE=1 Q
"RTN","A1AESP",27,0)
 . I $E(RR,1,$L(RR)-1)'=$E(X,1,$L(RR)-1) D
"RTN","A1AESP",28,0)
 . . S RR=X
"RTN","A1AESP",29,0)
 . . D RTNLOAD2(PACKAGE,RR,Y)
"RTN","A1AESP",30,0)
 . . Q
"RTN","A1AESP",31,0)
 . Q
"RTN","A1AESP",32,0)
 D ^%ZISC
"RTN","A1AESP",33,0)
 U $P W !,"DONE"
"RTN","A1AESP",34,0)
 Q
"RTN","A1AESP",35,0)
 ;
"RTN","A1AESP",36,0)
RTNLOAD2(PKG,REF,Y) ;
"RTN","A1AESP",37,0)
 N RN,CHK
"RTN","A1AESP",38,0)
 S RN=$P($RE(REF),",")
"RTN","A1AESP",39,0)
 S RN=$RE($E(RN,3,$L(RN)-1))
"RTN","A1AESP",40,0)
 S CHK=$P(Y,U,3)
"RTN","A1AESP",41,0)
 D RTNLOAD(PKG,RN,CHK)
"RTN","A1AESP",42,0)
 Q
"RTN","A1AESP",43,0)
 ;
"RTN","A1AESP",44,0)
RTNLOAD(RN,PCH,CHKSUM,PL) ;
"RTN","A1AESP",45,0)
 N FDA,IEN
"RTN","A1AESP",46,0)
 I '$D(NOW) S NOW=$$NOW^XLFDT
"RTN","A1AESP",47,0)
 S IEN=$O(^DIC(9.8,"B",RN,0))
"RTN","A1AESP",48,0)
 ;I IEN K ^DIC(9.8,IEN,8) ;Remove Patch History ???
"RTN","A1AESP",49,0)
 I IEN S IEN=IEN_","
"RTN","A1AESP",50,0)
 E  S IEN="?+1,",FDA(9.8,IEN,.01)=RN
"RTN","A1AESP",51,0)
 S FDA(9.8,IEN,1)="R",FDA(9.8,IEN,6)=2
"RTN","A1AESP",52,0)
 S FDA(9.8,IEN,7.1)=NOW,FDA(9.8,IEN,7.2)=CHKSUM,FDA(9.8,IEN,7.3)=$G(PL)
"RTN","A1AESP",53,0)
 S IEN="?+2,"_IEN
"RTN","A1AESP",54,0)
 S FDA(9.818,IEN,.01)=PCH,FDA(9.818,IEN,2)=CHKSUM S:$L($G(PL)) FDA(9.818,IEN,3)=PL
"RTN","A1AESP",55,0)
 D UPDATE^DIE("","FDA")
"RTN","A1AESP",56,0)
 U $P W !,"Routine ",RN," filed"
"RTN","A1AESP",57,0)
 Q
"RTN","A1AESP",58,0)
 ;
"RTN","A1AESP",59,0)
 ;
"RTN","A1AESP",60,0)
HFS ;Fix ~ in checksum
"RTN","A1AESP",61,0)
 N DA,A1,A2
"RTN","A1AESP",62,0)
 S DA=0
"RTN","A1AESP",63,0)
 F  S DA=$O(^A1AE(11005.5,DA)),A1=0 Q:'DA  D
"RTN","A1AESP",64,0)
 . F  S A1=$O(^A1AE(11005.5,DA,1,A1)) Q:'A1  S X=^(A1,0) D
"RTN","A1AESP",65,0)
 . . I X["~" S ^A1AE(11005.5,DA,1,A1,0)=$TR(X,"~","^")
"RTN","A1AESP",66,0)
 . . Q
"RTN","A1AESP",67,0)
 . Q
"RTN","A1AESP",68,0)
 Q
"RTN","A1AESP",69,0)
 ;
"RTN","A1AESP",70,0)
SEARCH    ;Search Patch file for routines
"RTN","A1AESP",71,0)
 N RN,FDA,IEN,X,A1,A2,DA
"RTN","A1AESP",72,0)
 S DA=0
"RTN","A1AESP",73,0)
 F  S DA=$O(^A1AE(11005,DA)) Q:'DA  I $P(^A1AE(11005,DA,0),U,8)="u" D
"RTN","A1AESP",74,0)
 . S A1=0
"RTN","A1AESP",75,0)
 . F  S A1=$O(^A1AE(11005,DA,"P",A1)) Q:'A1  S X=^(A1,0) D
"RTN","A1AESP",76,0)
 . . S RN=$P(X,U),OLD=$P(X,U,4) D:OLD["~"  ;Look for something
"RTN","A1AESP",77,0)
 . . . S $P(^A1AE(11005,DA,"P",A1,0),U,4)=$P(OLD,"~")
"RTN","A1AESP",78,0)
 . . Q
"RTN","A1AESP",79,0)
 . Q
"RTN","A1AESP",80,0)
 Q
"RTN","A1AESP",81,0)
 ;
"RTN","A1AESP",82,0)
 ;
"RTN","A1AESP",83,0)
 ;Check for DUP routines in patch.
"RTN","A1AESP",84,0)
DUP ;
"RTN","A1AESP",85,0)
 N A1,A2,A3,A4
"RTN","A1AESP",86,0)
 S A1=0
"RTN","A1AESP",87,0)
 F  S A1=$O(^A1AE(11005,A1)) Q:'A1  I "uc"[$P($G(^(A1,0)),U,8) D
"RTN","A1AESP",88,0)
 . S A2=""
"RTN","A1AESP",89,0)
 . F  S A2=$O(^A1AE(11005,A1,"P","B",A2)) Q:A2=""  D
"RTN","A1AESP",90,0)
 . . S A3=$O(^A1AE(11005,A1,"P","B",A2,0)),A4=$O(^(A3))
"RTN","A1AESP",91,0)
 . . I A4 W !,A1,?10,A2,?20,A3,?25,A4
"RTN","A1AESP",92,0)
 . . Q
"RTN","A1AESP",93,0)
 . Q
"RTN","A1AESP",94,0)
 Q
"RTN","A1AESP",95,0)
 ;
"RTN","A1AESP",96,0)
PCHDUP ;Check for dup patchs in routine file.
"RTN","A1AESP",97,0)
 N D0,D1,D2,X,Y,DIK,DA
"RTN","A1AESP",98,0)
 S D0=0
"RTN","A1AESP",99,0)
 F  S D0=$O(^DIC(9.8,D0)),D1="" Q:'D0  D
"RTN","A1AESP",100,0)
 . F  S D1=$O(^DIC(9.8,D0,8,"B",D1)),DA(1)=D0 Q:D1=""  D
"RTN","A1AESP",101,0)
 . . S X=$O(^DIC(9.8,D0,8,"B",D1,0)),Y=$O(^(X))
"RTN","A1AESP",102,0)
 . . I Y>X W !,$P(^DIC(9.8,D0,0),U),?10,D1 S DA=Y,DIK="^DIC(9.8,DA(1),8," D ^DIK
"RTN","A1AESP",103,0)
 . . Q
"RTN","A1AESP",104,0)
 . Q
"RTN","A1AESP",105,0)
 Q
"RTN","A1AESP",106,0)
 ;
"RTN","A1AESP",107,0)
RTNCHK(PCH) ;Check patch routines against Routine file
"RTN","A1AESP",108,0)
 N D0,D1,DA,R1,R2,RN,X,Y
"RTN","A1AESP",109,0)
 S D0=$O(^A1AE(11005,"B",PCH,0)) I 'D0 W !,"Patch not found" Q
"RTN","A1AESP",110,0)
 W !,"Patch ",PCH," ien: ",D0
"RTN","A1AESP",111,0)
 S D1=0
"RTN","A1AESP",112,0)
 F  S D1=$O(^A1AE(11005,D0,"P",D1)) Q:D1'>0  D
"RTN","A1AESP",113,0)
 . S R1=^A1AE(11005,D0,"P",D1,0),RN=$P(R1,U)
"RTN","A1AESP",114,0)
 . S DA=$O(^DIC(9.8,"B",RN,0)) I 'DA D  W ! Q
"RTN","A1AESP",115,0)
 . . W !,"Routine ",RN," not found",!,?5,R1
"RTN","A1AESP",116,0)
 . . R !,"Load? ",X:DTIME Q:$E(X)'="Y"
"RTN","A1AESP",117,0)
 . . D RTNLOAD(RN,PCH,$P(R1,U,2),$P(R1,U,3))
"RTN","A1AESP",118,0)
 . . Q
"RTN","A1AESP",119,0)
 . W !,RN,?10,^DIC(9.8,DA,4)
"RTN","A1AESP",120,0)
 . Q
"RTN","A1AESP",121,0)
 Q
"RTN","A1AESP",122,0)
 ;
"RTN","A1AESP",123,0)
LDINS ;File routines from Install file
"RTN","A1AESP",124,0)
 N DA,D0,D1,IX,X,Y,DIC,FDA,PCH,NOW
"RTN","A1AESP",125,0)
 S NOW=$$NOW^XLFDT()
"RTN","A1AESP",126,0)
 S DIC="^XPD(9.7,",DIC(0)="AEMQ" D ^DIC Q:Y<1
"RTN","A1AESP",127,0)
 S IX=+Y,RN="",PCH=$P(Y,U,2) S:PCH["*" $P(PCH,"*",2)=+$P(PCH,"*",2)
"RTN","A1AESP",128,0)
 F  S RN=$O(^XTMP("XPDI",IX,"RTN",RN)) Q:RN=""  D
"RTN","A1AESP",129,0)
 . S X=^XTMP("XPDI",IX,"RTN",RN),Y=$G(^(RN,2,0))
"RTN","A1AESP",130,0)
 . D RTNLOAD(RN,PCH,$P(X,U,3),$P(Y,";",5))
"RTN","A1AESP",131,0)
 . Q
"RTN","A1AESP",132,0)
 Q
"RTN","A1AESP",133,0)
 ;
"RTN","A1AESP",134,0)
MAKECUR ;Make a patch the current checksum for its routines
"RTN","A1AESP",135,0)
 N RN,PCH,DA,D0,D1,IX,X,Y
"RTN","A1AESP",136,0)
 R !,"Enter Patch Number: ",PCH:600
"RTN","A1AESP",137,0)
 S D0=0
"RTN","A1AESP",138,0)
 F  S D0=$O(^DIC(9.8,D0)),D1=0 Q:'D0  D
"RTN","A1AESP",139,0)
 . S RN=$P(^DIC(9.8,D0,0),U)
"RTN","A1AESP",140,0)
 . S D1=$O(^DIC(9.8,D0,8,"B"),-1) Q:'D1  S X=^DIC(9.8,D0,8,D1,0) Q:$P(X,U)'=PCH
"RTN","A1AESP",141,0)
 . S CHK=$P(X,U,2)
"RTN","A1AESP",142,0)
 . W !,RN,"  ",PCH,"  ",CHK
"RTN","A1AESP",143,0)
 . D RTNLOAD(RN,PCH,CHK,"")
"RTN","A1AESP",144,0)
 . Q
"RTN","A1AESP",145,0)
 Q
"RTN","A1AESP",146,0)
 ;
"RTN","A1AESP",147,0)
DIC ;Look up IEN of a patch.
"RTN","A1AESP",148,0)
 N DIC
"RTN","A1AESP",149,0)
 S DIC=11005,DIC(0)="AEMQ" D ^DIC W !,Y
"RTN","A1AESP",150,0)
 Q
"RTN","A1AESP",151,0)
 ;To load Routines from the Patch message
"RTN","A1AESP",152,0)
 ;DO RTNBLD^A1AEM1(IEN)
"RTN","A1AESP",153,0)
 ;
"RTN","A1AESP",154,0)
BACKOUT ;Backout a patch,  Entered in error
"RTN","A1AESP",155,0)
 N RN,PDA,PCH,DA,DO,D1,IX,OCS,X,Y
"RTN","A1AESP",156,0)
 W !,"Patch to Backout."
"RTN","A1AESP",157,0)
 S DIC=11005,DIC(0)="AEMQ" D ^DIC Q:Y<1
"RTN","A1AESP",158,0)
 S PDA=+Y,PCH=$P(Y,U,2)
"RTN","A1AESP",159,0)
 S IX=0
"RTN","A1AESP",160,0)
 F  S IX=$O(^A1AE(11005,PDA,"P",IX)) Q:'IX  S R1=^(IX,0) D
"RTN","A1AESP",161,0)
 . S RN=$P(R1,U,1),OCS=$P(R1,U,4)
"RTN","A1AESP",162,0)
 . W !,"Routine ",RN
"RTN","A1AESP",163,0)
 . D BKOT(RN,PCH,OCS)
"RTN","A1AESP",164,0)
 . Q
"RTN","A1AESP",165,0)
 W !,"DONE"
"RTN","A1AESP",166,0)
 Q
"RTN","A1AESP",167,0)
 ;
"RTN","A1AESP",168,0)
BKOT(RN,PCH,OCS) ;Backout Checksum from Routine file.
"RTN","A1AESP",169,0)
 N DA,DB,DC,FDA,IEN
"RTN","A1AESP",170,0)
 S DB=$$FIND1^DIC(9.8,,"X",RN) Q:'DB
"RTN","A1AESP",171,0)
 S DC=$$FIND1^DIC(9.818,","_DB_",","X",PCH) Q:'DC
"RTN","A1AESP",172,0)
 S IEN=DB_",",FDA(9.8,IEN,7.1)="@",FDA(9.8,IEN,7.2)=OCS,FDA(9.8,IEN,7.3)="@"
"RTN","A1AESP",173,0)
 S IEN=DC_","_IEN,FDA(9.818,IEN,.01)="@"
"RTN","A1AESP",174,0)
 D FILE^DIE("K","FDA")
"RTN","A1AESP",175,0)
 I $D(^TMP("DIERR",$J)) S %ZT($NA(^TMP("DIERR",$J)))="" D ^%ZTER Q
"RTN","A1AESP",176,0)
 Q
"RTN","A1AESPLT")
0^87^B125843207
"RTN","A1AESPLT",1,0)
A1AESPLT ;ven/jli-initialize DHCP PATCHES file for a new split stream ;2015-07-27  7:01 PM
"RTN","A1AESPLT",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AESPLT",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AESPLT",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AESPLT",5,0)
 ;
"RTN","A1AESPLT",6,0)
 ;
"RTN","A1AESPLT",7,0)
RELSSTRM(DA,A1AEPKIF,A1AEVR,SEQ) ; finish up and release the initial patch in the stream
"RTN","A1AESPLT",8,0)
 ; input DA - internal entry number in file 11005
"RTN","A1AESPLT",9,0)
 ; input A1AEPKIF - internal entry number in file 11007
"RTN","A1AESPLT",10,0)
 ; input A1AEVR - internal entry number for package version
"RTN","A1AESPLT",11,0)
 ; input SEQ - sequence number for patch
"RTN","A1AESPLT",12,0)
 ;
"RTN","A1AESPLT",13,0)
 N A1AE0,A1AENEW,SAVX,A1AEPD,A1AEVRSN
"RTN","A1AESPLT",14,0)
        S A1AEVRSN=A1AEVR
"RTN","A1AESPLT",15,0)
        S $P(^A1AE(11005,DA,0),U,6)=SEQ
"RTN","A1AESPLT",16,0)
 S A1AE0=^A1AE(11005,DA,0),A1AENEW="v"
"RTN","A1AESPLT",17,0)
 S SAVX="v",A1AEPD=$P(A1AE0,U)
"RTN","A1AESPLT",18,0)
 S X=DA
"RTN","A1AESPLT",19,0)
 K XMZ D GET^A1AEMAL I '$D(XMZ) D
"RTN","A1AESPLT",20,0)
 . D DELSEQ^A1AEUTL
"RTN","A1AESPLT",21,0)
 . K X
"RTN","A1AESPLT",22,0)
 Q:'$D(X)
"RTN","A1AESPLT",23,0)
 S $P(^A1AE(11005,DA,0),U,8)="v"
"RTN","A1AESPLT",24,0)
 S ^A1AE(11005,DA,5)=0 ; otherwise get an error
"RTN","A1AESPLT",25,0)
 D BUILDIT^A1AEBLD(DA)
"RTN","A1AESPLT",26,0)
 D MES^A1AEMAL
"RTN","A1AESPLT",27,0)
        S STREAM=$P($P(^A1AE(11005,DA,0),U),"*",3)
"RTN","A1AESPLT",28,0)
 S ^A1AE(11007,A1AEPKIF,"V",A1AEVRSN,1,STREAM,"PH")=STREAM
"RTN","A1AESPLT",29,0)
        Q
"RTN","A1AESPLT",30,0)
 ;
"RTN","A1AESPLT",31,0)
SETPACKG(PKGIEN,A1AEVR,STREAM) ; set initial patch for new stream
"RTN","A1AESPLT",32,0)
 ; create a new patch entry
"RTN","A1AESPLT",33,0)
 N DATE,DATTIME,IEN11005,IENS,PATCHID,PATCHNUM,PKGID,PKGNAME,PATCHIEN,STRMABBR,STRMNAME,VERSION
"RTN","A1AESPLT",34,0)
 S ^A1AE(11007,PKGIEN,"V",A1AEVR,1,STREAM,"PB")=STREAM,^("PH")=STREAM
"RTN","A1AESPLT",35,0)
 ; VERIEN is Version IEN. In 11007, file is DINUMM'ed so, version IEN is the same as the version.
"RTN","A1AESPLT",36,0)
 ; In the Package file, we need to look it up in the B index.
"RTN","A1AESPLT",37,0)
 N PKGVER S PKGVER=A1AEVR
"RTN","A1AESPLT",38,0)
 I PKGVER'["." S PKGVER=PKGVER_".0"
"RTN","A1AESPLT",39,0)
 N VERIEN S VERIEN=$O(^DIC(9.4,PKGIEN,22,"B",PKGVER,""))
"RTN","A1AESPLT",40,0)
 S PKGID=$P(^DIC(9.4,PKGIEN,0),U,2),VERSION=$P(^DIC(9.4,PKGIEN,22,VERIEN,0),U),PATCHNUM=STREAM
"RTN","A1AESPLT",41,0)
 S PATCHID=PKGID_"*"_(+VERSION)_"*"_PATCHNUM,PKGNAME=$P(^DIC(9.4,PKGIEN,0),U),STRMNAME=$P(^A1AE(11007.1,STREAM,0),U),STRMABBR=$P(^(0),U,5)
"RTN","A1AESPLT",42,0)
 S IENS="+1,"
"RTN","A1AESPLT",43,0)
 N FDA,FDAIEN,FDAMSG,PATCHSUB
"RTN","A1AESPLT",44,0)
 S PATCHSUB="Initiation of "_STRMNAME_" stream for "_PKGNAME_" package"
"RTN","A1AESPLT",45,0)
 S FDA(11005,IENS,.01)=PATCHID,FDA(11005,IENS,.2)=STREAM,FDA(11005,IENS,2)=PKGIEN,FDA(11005,IENS,3)=VERSION
"RTN","A1AESPLT",46,0)
 S FDA(11005,IENS,4)=PATCHNUM,FDA(11005,IENS,5)=PATCHSUB
"RTN","A1AESPLT",47,0)
 S FDA(11005,IENS,7)="m",FDA(11005,IENS,8)="c"
"RTN","A1AESPLT",48,0)
 D UPDATE^DIE("","FDA","FDAIEN","FDAMSG")
"RTN","A1AESPLT",49,0)
 S DATTIME=$$NOW^XLFDT(),DATE=$P(DATTIME,".")
"RTN","A1AESPLT",50,0)
 S IEN11005=FDAIEN(1),A1AEIEN=IEN11005
"RTN","A1AESPLT",51,0)
 S PATCHIEN=+$O(^DIC(9.4,PKGIEN,22,VERIEN,"PAH","B",PATCHNUM,""))
"RTN","A1AESPLT",52,0)
 I PATCHIEN'>0 D
"RTN","A1AESPLT",53,0)
 . N FDA,FDAIEN,FDAMSG,A1AEIEN
"RTN","A1AESPLT",54,0)
 . S IENS="+1,"_VERIEN_","_PKGIEN_","
"RTN","A1AESPLT",55,0)
 . S FDA(9.4901,IENS,.01)=PATCHNUM,FDA(9.4901,IENS,.02)=$P($$NOW^XLFDT(),"."),FDA(9.4901,IENS,.03)=DUZ
"RTN","A1AESPLT",56,0)
 . D UPDATE^DIE("","FDA","FDAIEN","FDAMSG")
"RTN","A1AESPLT",57,0)
 . S PATCHIEN=$G(FDAIEN(1)) Q:PATCHIEN'>0
"RTN","A1AESPLT",58,0)
 . S ^DIC(9.4,PKGIEN,22,VERIEN,"PAH",PATCHIEN,1,0)="^^3^3^"_DATE
"RTN","A1AESPLT",59,0)
 . S ^DIC(9.4,PKGIEN,22,VERIEN,"PAH",PATCHIEN,1,1,0)="Initiation of "_STRMNAME_" stream for "_PKGNAME_" package"
"RTN","A1AESPLT",60,0)
 . Q
"RTN","A1AESPLT",61,0)
 S PATCHID=PKGID_"*"_VERSION_"*"_PATCHNUM ; KIDS needs .0 if present
"RTN","A1AESPLT",62,0)
 S ^A1AE(11005.1,A1AEIEN,0)=IEN11005_"^34860^"_DATE_"^34861^3150529.132231^34863^3150529.133017^^^^K"
"RTN","A1AESPLT",63,0)
 S ^A1AE(11005.1,A1AEIEN,2,0)="^11005.11^242^242^"_DATE_"^^"
"RTN","A1AESPLT",64,0)
 S ^A1AE(11005.1,A1AEIEN,2,1,0)="$TXT Created by "_$P(^VA(200,DUZ,0),U)_" at "_$P(^DIC(4.2,+^XTV(8989.3,1,0),0),U)_"  (KIDS) on Friday, 05/29/15 at 13:06" ; UPDATE AT RELEASE
"RTN","A1AESPLT",65,0)
 S ^A1AE(11005.1,A1AEIEN,2,2,0)=" "
"RTN","A1AESPLT",66,0)
 S STRMNAM=STRMNAME
"RTN","A1AESPLT",67,0)
 S ^A1AE(11005.1,A1AEIEN,2,3,0)="This patch marks the release of the "_STRMNAM_" stream for "
"RTN","A1AESPLT",68,0)
 S ^A1AE(11005.1,A1AEIEN,2,4,0)="the "_PKGNAME_" package."
"RTN","A1AESPLT",69,0)
 S ^A1AE(11005.1,A1AEIEN,2,5,0)=" "
"RTN","A1AESPLT",70,0)
 S ^A1AE(11005.1,A1AEIEN,2,6,0)="$END TXT"
"RTN","A1AESPLT",71,0)
 S ^A1AE(11005.1,A1AEIEN,2,7,0)="$KID "_PATCHID
"RTN","A1AESPLT",72,0)
 S ^A1AE(11005.1,A1AEIEN,2,8,0)="**INSTALL NAME**"
"RTN","A1AESPLT",73,0)
 S ^A1AE(11005.1,A1AEIEN,2,9,0)=PATCHID
"RTN","A1AESPLT",74,0)
 S ^A1AE(11005.1,A1AEIEN,2,10,0)="""BLD"",9511,0)"
"RTN","A1AESPLT",75,0)
 S ^A1AE(11005.1,A1AEIEN,2,11,0)=PATCHID_U_PKGNAME_"^0^"_DATE_"^n"
"RTN","A1AESPLT",76,0)
 S ^A1AE(11005.1,A1AEIEN,2,12,0)="""BLD"",9511,1,0)"
"RTN","A1AESPLT",77,0)
 S ^A1AE(11005.1,A1AEIEN,2,13,0)="^^1^1^"_DATE_"^"
"RTN","A1AESPLT",78,0)
 S ^A1AE(11005.1,A1AEIEN,2,14,0)="""BLD"",9511,1,1,0)"
"RTN","A1AESPLT",79,0)
 S ^A1AE(11005.1,A1AEIEN,2,15,0)="This is the first patch in the "_PKGNAME_" package in the "_STREAM_" stream."
"RTN","A1AESPLT",80,0)
 S ^A1AE(11005.1,A1AEIEN,2,16,0)="""BLD"",9511,4,0)"
"RTN","A1AESPLT",81,0)
 S ^A1AE(11005.1,A1AEIEN,2,17,0)="^9.64PA^^"
"RTN","A1AESPLT",82,0)
 S ^A1AE(11005.1,A1AEIEN,2,18,0)="""BLD"",9511,6.3)"
"RTN","A1AESPLT",83,0)
 S ^A1AE(11005.1,A1AEIEN,2,19,0)=1
"RTN","A1AESPLT",84,0)
 S ^A1AE(11005.1,A1AEIEN,2,20,0)="""BLD"",9511,""KRN"",0)"
"RTN","A1AESPLT",85,0)
 S ^A1AE(11005.1,A1AEIEN,2,21,0)="^9.67PA^779.2^20"
"RTN","A1AESPLT",86,0)
 S ^A1AE(11005.1,A1AEIEN,2,22,0)="""BLD"",9511,""KRN"",.4,0)"
"RTN","A1AESPLT",87,0)
 S ^A1AE(11005.1,A1AEIEN,2,23,0)=.4
"RTN","A1AESPLT",88,0)
 S ^A1AE(11005.1,A1AEIEN,2,24,0)="""BLD"",9511,""KRN"",.401,0)"
"RTN","A1AESPLT",89,0)
 S ^A1AE(11005.1,A1AEIEN,2,25,0)=.401
"RTN","A1AESPLT",90,0)
 S ^A1AE(11005.1,A1AEIEN,2,26,0)="""BLD"",9511,""KRN"",.402,0)"
"RTN","A1AESPLT",91,0)
 S ^A1AE(11005.1,A1AEIEN,2,27,0)=.402
"RTN","A1AESPLT",92,0)
 S ^A1AE(11005.1,A1AEIEN,2,28,0)="""BLD"",9511,""KRN"",.403,0)"
"RTN","A1AESPLT",93,0)
 S ^A1AE(11005.1,A1AEIEN,2,29,0)=.403
"RTN","A1AESPLT",94,0)
 S ^A1AE(11005.1,A1AEIEN,2,30,0)="""BLD"",9511,""KRN"",.5,0)"
"RTN","A1AESPLT",95,0)
 S ^A1AE(11005.1,A1AEIEN,2,31,0)=.5
"RTN","A1AESPLT",96,0)
 S ^A1AE(11005.1,A1AEIEN,2,32,0)="""BLD"",9511,""KRN"",.84,0)"
"RTN","A1AESPLT",97,0)
 S ^A1AE(11005.1,A1AEIEN,2,33,0)=.84
"RTN","A1AESPLT",98,0)
 S ^A1AE(11005.1,A1AEIEN,2,34,0)="""BLD"",9511,""KRN"",3.6,0)"
"RTN","A1AESPLT",99,0)
 S ^A1AE(11005.1,A1AEIEN,2,35,0)=3.6
"RTN","A1AESPLT",100,0)
 S ^A1AE(11005.1,A1AEIEN,2,36,0)="""BLD"",9511,""KRN"",3.8,0)"
"RTN","A1AESPLT",101,0)
 S ^A1AE(11005.1,A1AEIEN,2,37,0)=3.8
"RTN","A1AESPLT",102,0)
 S ^A1AE(11005.1,A1AEIEN,2,38,0)="""BLD"",9511,""KRN"",9.2,0)"
"RTN","A1AESPLT",103,0)
 S ^A1AE(11005.1,A1AEIEN,2,39,0)=9.2
"RTN","A1AESPLT",104,0)
 S ^A1AE(11005.1,A1AEIEN,2,40,0)="""BLD"",9511,""KRN"",9.8,0)"
"RTN","A1AESPLT",105,0)
 S ^A1AE(11005.1,A1AEIEN,2,41,0)=9.8
"RTN","A1AESPLT",106,0)
 S ^A1AE(11005.1,A1AEIEN,2,42,0)="""BLD"",9511,""KRN"",19,0)"
"RTN","A1AESPLT",107,0)
 S ^A1AE(11005.1,A1AEIEN,2,43,0)=19
"RTN","A1AESPLT",108,0)
 S ^A1AE(11005.1,A1AEIEN,2,44,0)="""BLD"",9511,""KRN"",19.1,0)"
"RTN","A1AESPLT",109,0)
 S ^A1AE(11005.1,A1AEIEN,2,45,0)=19.1
"RTN","A1AESPLT",110,0)
 S ^A1AE(11005.1,A1AEIEN,2,46,0)="""BLD"",9511,""KRN"",101,0)"
"RTN","A1AESPLT",111,0)
 S ^A1AE(11005.1,A1AEIEN,2,47,0)=101
"RTN","A1AESPLT",112,0)
 S ^A1AE(11005.1,A1AEIEN,2,48,0)="""BLD"",9511,""KRN"",409.61,0)"
"RTN","A1AESPLT",113,0)
 S ^A1AE(11005.1,A1AEIEN,2,49,0)=409.61
"RTN","A1AESPLT",114,0)
 S ^A1AE(11005.1,A1AEIEN,2,50,0)="""BLD"",9511,""KRN"",771,0)"
"RTN","A1AESPLT",115,0)
 S ^A1AE(11005.1,A1AEIEN,2,51,0)=771
"RTN","A1AESPLT",116,0)
 S ^A1AE(11005.1,A1AEIEN,2,52,0)="""BLD"",9511,""KRN"",779.2,0)"
"RTN","A1AESPLT",117,0)
 S ^A1AE(11005.1,A1AEIEN,2,53,0)=779.2
"RTN","A1AESPLT",118,0)
 S ^A1AE(11005.1,A1AEIEN,2,54,0)="""BLD"",9511,""KRN"",870,0)"
"RTN","A1AESPLT",119,0)
 S ^A1AE(11005.1,A1AEIEN,2,55,0)=870
"RTN","A1AESPLT",120,0)
 S ^A1AE(11005.1,A1AEIEN,2,56,0)="""BLD"",9511,""KRN"",8989.51,0)"
"RTN","A1AESPLT",121,0)
 S ^A1AE(11005.1,A1AEIEN,2,57,0)=8989.51
"RTN","A1AESPLT",122,0)
 S ^A1AE(11005.1,A1AEIEN,2,58,0)="""BLD"",9511,""KRN"",8989.52,0)"
"RTN","A1AESPLT",123,0)
 S ^A1AE(11005.1,A1AEIEN,2,59,0)=8989.52
"RTN","A1AESPLT",124,0)
 S ^A1AE(11005.1,A1AEIEN,2,60,0)="""BLD"",9511,""KRN"",8994,0)"
"RTN","A1AESPLT",125,0)
 S ^A1AE(11005.1,A1AEIEN,2,61,0)=8994
"RTN","A1AESPLT",126,0)
 S ^A1AE(11005.1,A1AEIEN,2,62,0)="""BLD"",9511,""KRN"",""B"",.4,.4)"
"RTN","A1AESPLT",127,0)
 S ^A1AE(11005.1,A1AEIEN,2,63,0)=""
"RTN","A1AESPLT",128,0)
 S ^A1AE(11005.1,A1AEIEN,2,64,0)="""BLD"",9511,""KRN"",""B"",.401,.401)"
"RTN","A1AESPLT",129,0)
 S ^A1AE(11005.1,A1AEIEN,2,65,0)=""
"RTN","A1AESPLT",130,0)
 S ^A1AE(11005.1,A1AEIEN,2,66,0)="""BLD"",9511,""KRN"",""B"",.402,.402)"
"RTN","A1AESPLT",131,0)
 S ^A1AE(11005.1,A1AEIEN,2,67,0)=""
"RTN","A1AESPLT",132,0)
 S ^A1AE(11005.1,A1AEIEN,2,68,0)="""BLD"",9511,""KRN"",""B"",.403,.403)"
"RTN","A1AESPLT",133,0)
 S ^A1AE(11005.1,A1AEIEN,2,69,0)=""
"RTN","A1AESPLT",134,0)
 S ^A1AE(11005.1,A1AEIEN,2,70,0)="""BLD"",9511,""KRN"",""B"",.5,.5)"
"RTN","A1AESPLT",135,0)
 S ^A1AE(11005.1,A1AEIEN,2,71,0)=""
"RTN","A1AESPLT",136,0)
 S ^A1AE(11005.1,A1AEIEN,2,72,0)="""BLD"",9511,""KRN"",""B"",.84,.84)"
"RTN","A1AESPLT",137,0)
 S ^A1AE(11005.1,A1AEIEN,2,73,0)=""
"RTN","A1AESPLT",138,0)
 S ^A1AE(11005.1,A1AEIEN,2,74,0)="""BLD"",9511,""KRN"",""B"",3.6,3.6)"
"RTN","A1AESPLT",139,0)
 S ^A1AE(11005.1,A1AEIEN,2,75,0)=""
"RTN","A1AESPLT",140,0)
 S ^A1AE(11005.1,A1AEIEN,2,76,0)="""BLD"",9511,""KRN"",""B"",3.8,3.8)"
"RTN","A1AESPLT",141,0)
 S ^A1AE(11005.1,A1AEIEN,2,77,0)=""
"RTN","A1AESPLT",142,0)
 S ^A1AE(11005.1,A1AEIEN,2,78,0)="""BLD"",9511,""KRN"",""B"",9.2,9.2)"
"RTN","A1AESPLT",143,0)
 S ^A1AE(11005.1,A1AEIEN,2,79,0)=""
"RTN","A1AESPLT",144,0)
 S ^A1AE(11005.1,A1AEIEN,2,80,0)="""BLD"",9511,""KRN"",""B"",9.8,9.8)"
"RTN","A1AESPLT",145,0)
 S ^A1AE(11005.1,A1AEIEN,2,81,0)=""
"RTN","A1AESPLT",146,0)
 S ^A1AE(11005.1,A1AEIEN,2,82,0)="""BLD"",9511,""KRN"",""B"",19,19)"
"RTN","A1AESPLT",147,0)
 S ^A1AE(11005.1,A1AEIEN,2,83,0)=""
"RTN","A1AESPLT",148,0)
 S ^A1AE(11005.1,A1AEIEN,2,84,0)="""BLD"",9511,""KRN"",""B"",19.1,19.1)"
"RTN","A1AESPLT",149,0)
 S ^A1AE(11005.1,A1AEIEN,2,85,0)=""
"RTN","A1AESPLT",150,0)
 S ^A1AE(11005.1,A1AEIEN,2,86,0)="""BLD"",9511,""KRN"",""B"",101,101)"
"RTN","A1AESPLT",151,0)
 S ^A1AE(11005.1,A1AEIEN,2,87,0)=""
"RTN","A1AESPLT",152,0)
 S ^A1AE(11005.1,A1AEIEN,2,88,0)="""BLD"",9511,""KRN"",""B"",409.61,409.61)"
"RTN","A1AESPLT",153,0)
 S ^A1AE(11005.1,A1AEIEN,2,89,0)=""
"RTN","A1AESPLT",154,0)
 S ^A1AE(11005.1,A1AEIEN,2,90,0)="""BLD"",9511,""KRN"",""B"",771,771)"
"RTN","A1AESPLT",155,0)
 S ^A1AE(11005.1,A1AEIEN,2,91,0)=""
"RTN","A1AESPLT",156,0)
 S ^A1AE(11005.1,A1AEIEN,2,92,0)="""BLD"",9511,""KRN"",""B"",779.2,779.2)"
"RTN","A1AESPLT",157,0)
 S ^A1AE(11005.1,A1AEIEN,2,93,0)=""
"RTN","A1AESPLT",158,0)
 S ^A1AE(11005.1,A1AEIEN,2,94,0)="""BLD"",9511,""KRN"",""B"",870,870)"
"RTN","A1AESPLT",159,0)
 S ^A1AE(11005.1,A1AEIEN,2,95,0)=""
"RTN","A1AESPLT",160,0)
 S ^A1AE(11005.1,A1AEIEN,2,96,0)="""BLD"",9511,""KRN"",""B"",8989.51,8989.51)"
"RTN","A1AESPLT",161,0)
 S ^A1AE(11005.1,A1AEIEN,2,97,0)=""
"RTN","A1AESPLT",162,0)
 S ^A1AE(11005.1,A1AEIEN,2,98,0)="""BLD"",9511,""KRN"",""B"",8989.52,8989.52)"
"RTN","A1AESPLT",163,0)
 S ^A1AE(11005.1,A1AEIEN,2,99,0)=""
"RTN","A1AESPLT",164,0)
 S ^A1AE(11005.1,A1AEIEN,2,100,0)="""BLD"",9511,""KRN"",""B"",8994,8994)"
"RTN","A1AESPLT",165,0)
 S ^A1AE(11005.1,A1AEIEN,2,101,0)=""
"RTN","A1AESPLT",166,0)
 S ^A1AE(11005.1,A1AEIEN,2,102,0)="""BLD"",9511,""QDEF"")"
"RTN","A1AESPLT",167,0)
 S ^A1AE(11005.1,A1AEIEN,2,103,0)="^^^^NO^^^^NO^^NO"
"RTN","A1AESPLT",168,0)
 S ^A1AE(11005.1,A1AEIEN,2,104,0)="""BLD"",9511,""QUES"",0)"
"RTN","A1AESPLT",169,0)
 S ^A1AE(11005.1,A1AEIEN,2,105,0)="^9.62^^"
"RTN","A1AESPLT",170,0)
 S ^A1AE(11005.1,A1AEIEN,2,106,0)="""MBREQ"")"
"RTN","A1AESPLT",171,0)
 S ^A1AE(11005.1,A1AEIEN,2,107,0)=0
"RTN","A1AESPLT",172,0)
 S ^A1AE(11005.1,A1AEIEN,2,108,0)="""PKG"","_PKGIEN_",-1)"
"RTN","A1AESPLT",173,0)
 S ^A1AE(11005.1,A1AEIEN,2,109,0)="1^1"
"RTN","A1AESPLT",174,0)
 S ^A1AE(11005.1,A1AEIEN,2,110,0)="""PKG"","_PKGIEN_",0)"
"RTN","A1AESPLT",175,0)
 S ^A1AE(11005.1,A1AEIEN,2,111,0)=$P(^DIC(9.4,PKGIEN,0),U,1,3)
"RTN","A1AESPLT",176,0)
 S ^A1AE(11005.1,A1AEIEN,2,112,0)="""PKG"","_PKGIEN_",22,0)"
"RTN","A1AESPLT",177,0)
 S ^A1AE(11005.1,A1AEIEN,2,113,0)=^DIC(9.4,PKGIEN,22,0)
"RTN","A1AESPLT",178,0)
 S ^A1AE(11005.1,A1AEIEN,2,114,0)="""PKG"","_PKGIEN_",22,1,0)"
"RTN","A1AESPLT",179,0)
 S ^A1AE(11005.1,A1AEIEN,2,115,0)=^DIC(9.4,PKGIEN,22,VERIEN,0)
"RTN","A1AESPLT",180,0)
 S ^A1AE(11005.1,A1AEIEN,2,116,0)="""PKG"","_PKGIEN_",22,1,""PAH"",1,0)"
"RTN","A1AESPLT",181,0)
 S ^A1AE(11005.1,A1AEIEN,2,117,0)=^DIC(9.4,PKGIEN,22,VERIEN,"PAH",PATCHIEN,0)
"RTN","A1AESPLT",182,0)
 S ^A1AE(11005.1,A1AEIEN,2,118,0)="""PKG"","_PKGIEN_",22,1,""PAH"",1,1,0)"
"RTN","A1AESPLT",183,0)
 S ^A1AE(11005.1,A1AEIEN,2,119,0)=^DIC(9.4,PKGIEN,22,VERIEN,"PAH",PATCHIEN,1,0)
"RTN","A1AESPLT",184,0)
 S ^A1AE(11005.1,A1AEIEN,2,120,0)="""PKG"","_PKGIEN_",22,1,""PAH"",1,1,1,0)"
"RTN","A1AESPLT",185,0)
 S ^A1AE(11005.1,A1AEIEN,2,121,0)=^DIC(9.4,PKGIEN,22,VERIEN,"PAH",PATCHIEN,1,1,0)
"RTN","A1AESPLT",186,0)
 S ^A1AE(11005.1,A1AEIEN,2,122,0)="""QUES"",""XPF1"",0)"
"RTN","A1AESPLT",187,0)
 S ^A1AE(11005.1,A1AEIEN,2,123,0)="Y"
"RTN","A1AESPLT",188,0)
 S ^A1AE(11005.1,A1AEIEN,2,124,0)="""QUES"",""XPF1"",""??"")"
"RTN","A1AESPLT",189,0)
 S ^A1AE(11005.1,A1AEIEN,2,125,0)="^D REP^XPDH"
"RTN","A1AESPLT",190,0)
 S ^A1AE(11005.1,A1AEIEN,2,126,0)="""QUES"",""XPF1"",""A"")"
"RTN","A1AESPLT",191,0)
 S ^A1AE(11005.1,A1AEIEN,2,127,0)="Shall I write over your |FLAG| File"
"RTN","A1AESPLT",192,0)
 S ^A1AE(11005.1,A1AEIEN,2,128,0)="""QUES"",""XPF1"",""B"")"
"RTN","A1AESPLT",193,0)
 S ^A1AE(11005.1,A1AEIEN,2,129,0)="YES"
"RTN","A1AESPLT",194,0)
 S ^A1AE(11005.1,A1AEIEN,2,130,0)="""QUES"",""XPF1"",""M"")"
"RTN","A1AESPLT",195,0)
 S ^A1AE(11005.1,A1AEIEN,2,131,0)="D XPF1^XPDIQ"
"RTN","A1AESPLT",196,0)
 S ^A1AE(11005.1,A1AEIEN,2,132,0)="""QUES"",""XPF2"",0)"
"RTN","A1AESPLT",197,0)
 S ^A1AE(11005.1,A1AEIEN,2,133,0)="Y"
"RTN","A1AESPLT",198,0)
 S ^A1AE(11005.1,A1AEIEN,2,134,0)="""QUES"",""XPF2"",""??"")"
"RTN","A1AESPLT",199,0)
 S ^A1AE(11005.1,A1AEIEN,2,135,0)="^D DTA^XPDH"
"RTN","A1AESPLT",200,0)
 S ^A1AE(11005.1,A1AEIEN,2,136,0)="""QUES"",""XPF2"",""A"")"
"RTN","A1AESPLT",201,0)
 S ^A1AE(11005.1,A1AEIEN,2,137,0)="Want my data |FLAG| yours"
"RTN","A1AESPLT",202,0)
 S ^A1AE(11005.1,A1AEIEN,2,138,0)="""QUES"",""XPF2"",""B"")"
"RTN","A1AESPLT",203,0)
 S ^A1AE(11005.1,A1AEIEN,2,139,0)="YES"
"RTN","A1AESPLT",204,0)
 S ^A1AE(11005.1,A1AEIEN,2,140,0)="""QUES"",""XPF2"",""M"")"
"RTN","A1AESPLT",205,0)
 S ^A1AE(11005.1,A1AEIEN,2,141,0)="D XPF2^XPDIQ"
"RTN","A1AESPLT",206,0)
 S ^A1AE(11005.1,A1AEIEN,2,142,0)="""QUES"",""XPI1"",0)"
"RTN","A1AESPLT",207,0)
 S ^A1AE(11005.1,A1AEIEN,2,143,0)="YO"
"RTN","A1AESPLT",208,0)
 S ^A1AE(11005.1,A1AEIEN,2,144,0)="""QUES"",""XPI1"",""??"")"
"RTN","A1AESPLT",209,0)
 S ^A1AE(11005.1,A1AEIEN,2,145,0)="^D INHIBIT^XPDH"
"RTN","A1AESPLT",210,0)
 S ^A1AE(11005.1,A1AEIEN,2,146,0)="""QUES"",""XPI1"",""A"")"
"RTN","A1AESPLT",211,0)
 S ^A1AE(11005.1,A1AEIEN,2,147,0)="Want KIDS to INHIBIT LOGONs during the install"
"RTN","A1AESPLT",212,0)
 S ^A1AE(11005.1,A1AEIEN,2,148,0)="""QUES"",""XPI1"",""B"")"
"RTN","A1AESPLT",213,0)
 S ^A1AE(11005.1,A1AEIEN,2,149,0)="NO"
"RTN","A1AESPLT",214,0)
 S ^A1AE(11005.1,A1AEIEN,2,150,0)="""QUES"",""XPI1"",""M"")"
"RTN","A1AESPLT",215,0)
 S ^A1AE(11005.1,A1AEIEN,2,151,0)="D XPI1^XPDIQ"
"RTN","A1AESPLT",216,0)
 S ^A1AE(11005.1,A1AEIEN,2,152,0)="""QUES"",""XPM1"",0)"
"RTN","A1AESPLT",217,0)
 S ^A1AE(11005.1,A1AEIEN,2,153,0)="PO^VA(200,:EM"
"RTN","A1AESPLT",218,0)
 S ^A1AE(11005.1,A1AEIEN,2,154,0)="""QUES"",""XPM1"",""??"")"
"RTN","A1AESPLT",219,0)
 S ^A1AE(11005.1,A1AEIEN,2,155,0)="^D MG^XPDH"
"RTN","A1AESPLT",220,0)
 S ^A1AE(11005.1,A1AEIEN,2,156,0)="""QUES"",""XPM1"",""A"")"
"RTN","A1AESPLT",221,0)
 S ^A1AE(11005.1,A1AEIEN,2,157,0)="Enter the Coordinator for Mail Group '|FLAG|'"
"RTN","A1AESPLT",222,0)
 S ^A1AE(11005.1,A1AEIEN,2,158,0)="""QUES"",""XPM1"",""B"")"
"RTN","A1AESPLT",223,0)
 S ^A1AE(11005.1,A1AEIEN,2,159,0)=""
"RTN","A1AESPLT",224,0)
 S ^A1AE(11005.1,A1AEIEN,2,160,0)="""QUES"",""XPM1"",""M"")"
"RTN","A1AESPLT",225,0)
 S ^A1AE(11005.1,A1AEIEN,2,161,0)="D XPM1^XPDIQ"
"RTN","A1AESPLT",226,0)
 S ^A1AE(11005.1,A1AEIEN,2,162,0)="""QUES"",""XPO1"",0)"
"RTN","A1AESPLT",227,0)
 S ^A1AE(11005.1,A1AEIEN,2,163,0)="Y"
"RTN","A1AESPLT",228,0)
 S ^A1AE(11005.1,A1AEIEN,2,164,0)="""QUES"",""XPO1"",""??"")"
"RTN","A1AESPLT",229,0)
 S ^A1AE(11005.1,A1AEIEN,2,165,0)="^D MENU^XPDH"
"RTN","A1AESPLT",230,0)
 S ^A1AE(11005.1,A1AEIEN,2,166,0)="""QUES"",""XPO1"",""A"")"
"RTN","A1AESPLT",231,0)
 S ^A1AE(11005.1,A1AEIEN,2,167,0)="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
"RTN","A1AESPLT",232,0)
 S ^A1AE(11005.1,A1AEIEN,2,168,0)="""QUES"",""XPO1"",""B"")"
"RTN","A1AESPLT",233,0)
 S ^A1AE(11005.1,A1AEIEN,2,169,0)="NO"
"RTN","A1AESPLT",234,0)
 S ^A1AE(11005.1,A1AEIEN,2,170,0)="""QUES"",""XPO1"",""M"")"
"RTN","A1AESPLT",235,0)
 S ^A1AE(11005.1,A1AEIEN,2,171,0)="D XPO1^XPDIQ"
"RTN","A1AESPLT",236,0)
 S ^A1AE(11005.1,A1AEIEN,2,172,0)="""QUES"",""XPZ1"",0)"
"RTN","A1AESPLT",237,0)
 S ^A1AE(11005.1,A1AEIEN,2,173,0)="Y"
"RTN","A1AESPLT",238,0)
 S ^A1AE(11005.1,A1AEIEN,2,174,0)="""QUES"",""XPZ1"",""??"")"
"RTN","A1AESPLT",239,0)
 S ^A1AE(11005.1,A1AEIEN,2,175,0)="^D OPT^XPDH"
"RTN","A1AESPLT",240,0)
 S ^A1AE(11005.1,A1AEIEN,2,176,0)="""QUES"",""XPZ1"",""A"")"
"RTN","A1AESPLT",241,0)
 S ^A1AE(11005.1,A1AEIEN,2,177,0)="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
"RTN","A1AESPLT",242,0)
 S ^A1AE(11005.1,A1AEIEN,2,178,0)="""QUES"",""XPZ1"",""B"")"
"RTN","A1AESPLT",243,0)
 S ^A1AE(11005.1,A1AEIEN,2,179,0)="NO"
"RTN","A1AESPLT",244,0)
 S ^A1AE(11005.1,A1AEIEN,2,180,0)="""QUES"",""XPZ1"",""M"")"
"RTN","A1AESPLT",245,0)
 S ^A1AE(11005.1,A1AEIEN,2,181,0)="D XPZ1^XPDIQ"
"RTN","A1AESPLT",246,0)
 S ^A1AE(11005.1,A1AEIEN,2,182,0)="""QUES"",""XPZ2"",0)"
"RTN","A1AESPLT",247,0)
 S ^A1AE(11005.1,A1AEIEN,2,183,0)="Y"
"RTN","A1AESPLT",248,0)
 S ^A1AE(11005.1,A1AEIEN,2,184,0)="""QUES"",""XPZ2"",""??"")"
"RTN","A1AESPLT",249,0)
 S ^A1AE(11005.1,A1AEIEN,2,185,0)="^D RTN^XPDH"
"RTN","A1AESPLT",250,0)
 S ^A1AE(11005.1,A1AEIEN,2,186,0)="""QUES"",""XPZ2"",""A"")"
"RTN","A1AESPLT",251,0)
 S ^A1AE(11005.1,A1AEIEN,2,187,0)="Want to MOVE routines to other CPUs"
"RTN","A1AESPLT",252,0)
 S ^A1AE(11005.1,A1AEIEN,2,188,0)="""QUES"",""XPZ2"",""B"")"
"RTN","A1AESPLT",253,0)
 S ^A1AE(11005.1,A1AEIEN,2,189,0)="NO"
"RTN","A1AESPLT",254,0)
 S ^A1AE(11005.1,A1AEIEN,2,190,0)="""QUES"",""XPZ2"",""M"")"
"RTN","A1AESPLT",255,0)
 S ^A1AE(11005.1,A1AEIEN,2,191,0)="D XPZ2^XPDIQ"
"RTN","A1AESPLT",256,0)
 S ^A1AE(11005.1,A1AEIEN,2,192,0)="""VER"")"
"RTN","A1AESPLT",257,0)
 S ^A1AE(11005.1,A1AEIEN,2,193,0)="8.0^22.2"
"RTN","A1AESPLT",258,0)
 S ^A1AE(11005.1,A1AEIEN,2,194,0)="$END KID "_PATCHID
"RTN","A1AESPLT",259,0)
 N DA,DIK S DIK="^A1AE(11005.1,",DA=A1AEIEN D IX1^DIK
"RTN","A1AESPLT",260,0)
 Q
"RTN","A1AESPLT",261,0)
 ;
"RTN","A1AESPLT",262,0)
EOR ;
"RTN","A1AEUALL")
0^86^B35197964
"RTN","A1AEUALL",1,0)
A1AEUALL ;ven/jli-unit tests for all A1AEU* tests ;2015-06-15  9:03 PM
"RTN","A1AEUALL",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUALL",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUALL",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUALL",5,0)
 ;
"RTN","A1AEUALL",6,0)
 ;
"RTN","A1AEUALL",7,0)
 ;primary change history
"RTN","A1AEUALL",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUALL",9,0)
 ;
"RTN","A1AEUALL",10,0)
TESTONLY ;
"RTN","A1AEUALL",11,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(A1AEFILE)) S A1AEFILE=11004
"RTN","A1AEUALL",12,0)
 I A1AEFILE=11005 W !!,"RUNNING A1AEUBL1:" D TESTIT^A1AEUBL1
"RTN","A1AEUALL",13,0)
 I A1AEFILE=11005 W !!,"RUNNING A1AEUBLD:" D ^A1AEUBLD,^A1AEBLD,VERBOSE^A1AEBLD
"RTN","A1AEUALL",14,0)
 W !!,"RUNNING A1AEUDD:" D ^A1AEUDD
"RTN","A1AEUALL",15,0)
 W !!,"RUNNING A1AEUF1:" D ^A1AEUF1
"RTN","A1AEUALL",16,0)
 W !!,"RUNNING A1AEUF1A:" D ^A1AEUF1A
"RTN","A1AEUALL",17,0)
 I $D(^A1AE(11005)) W !!,"RUNNING A1AEUF1B:" D ^A1AEUF1B
"RTN","A1AEUALL",18,0)
 W !!,"RUNNING A1AEUF2:" D ^A1AEUF2
"RTN","A1AEUALL",19,0)
 W !!,"RUNNING A1AEUF3:" D ^A1AEUF3
"RTN","A1AEUALL",20,0)
 W !!,"RUNNING A1AEUF4:" D ^A1AEUF4
"RTN","A1AEUALL",21,0)
 W !!,"RUNNING A1AEUF5:" D ^A1AEUF5
"RTN","A1AEUALL",22,0)
 W !!,"RUNNING A1AEUF5A:" D ^A1AEUF5A
"RTN","A1AEUALL",23,0)
 W !!,"RUNNING A1AEUF5B:" D ^A1AEUF5B
"RTN","A1AEUALL",24,0)
 W !!,"RUNNING A1AEUF5C:" D ^A1AEUF5C
"RTN","A1AEUALL",25,0)
 W !!,"RUNNING A1AEUF5D:" D ^A1AEUF5D
"RTN","A1AEUALL",26,0)
 I $D(^A1AE(11005)) W !!,"RUNNING A1AEUK1:" D ^A1AEUK1
"RTN","A1AEUALL",27,0)
 I $D(^A1AE(11005)) W !!,"RUNNING A1AEUK2:" D ^A1AEUK2
"RTN","A1AEUALL",28,0)
 W !!,"RUNNING A1AEUPS1:" D ^A1AEUPS1
"RTN","A1AEUALL",29,0)
 I $D(^A1AE(11005)) W !!,"RUNNING A1AEUPS2:" D ^A1AEUPS2
"RTN","A1AEUALL",30,0)
 W !!,"RUNNING A1AEUK3:" D ^A1AEUK3
"RTN","A1AEUALL",31,0)
 I $D(^A1AE(11005)) W !!,"RUNNING A1AEUSPL:" D EN^%ut("A1AEUSPL",1)
"RTN","A1AEUALL",32,0)
        ; have to check on use of these, they clear out 11007.1, create entries they
"RTN","A1AEUALL",33,0)
 ; don't remove in PACKAGE and DHCP PATCHES files, etc.
"RTN","A1AEUALL",34,0)
 ;W !!,"RUNNING A1AEUT2:" D ^A1AEUT2 ; DATA ONLY
"RTN","A1AEUALL",35,0)
 W !!,"RUNNING A1AEUT1:" D ^A1AEUT1
"RTN","A1AEUALL",36,0)
 W !!,"RUNNING A1AEUT3:" D ^A1AEUT3
"RTN","A1AEUALL",37,0)
 I $D(^A1AE(11005)) W !!,"RUNNING A1AEK2MT:" D ^A1AEK2MT
"RTN","A1AEUALL",38,0)
 I $D(^A1AE(11005)) W !!,"RUNNING A1AEUT4:" D ^A1AEUT4
"RTN","A1AEUALL",39,0)
 I $D(DOALL),$D(^A1AE(11005)) D
"RTN","A1AEUALL",40,0)
 . W !!,"RUNNING A1AEUT1:" D EN^%ut("A1AEUT1",1) ; D ^A1AEUT1 activates BREAK on problem
"RTN","A1AEUALL",41,0)
 . W !!,"RUNNING A1AEK2MT:" D EN^%ut("A1AEK2MT",1)
"RTN","A1AEUALL",42,0)
 . W !!,"RUNNING A1AE2V0:" D EN^%ut("A1AE2V0",1)
"RTN","A1AEUALL",43,0)
 . W !!,"RUNNING A1AEK2MT:" D EN^%ut("A1AE2VC",1)
"RTN","A1AEUALL",44,0)
 . Q
"RTN","A1AEUALL",45,0)
        Q
"RTN","A1AEUALL",46,0)
 ;
"RTN","A1AEUALL",47,0)
COVERSUM ; summary with break down by tag
"RTN","A1AEUALL",48,0)
 N TYPE S TYPE=1
"RTN","A1AEUALL",49,0)
 D COVERAGE
"RTN","A1AEUALL",50,0)
 Q
"RTN","A1AEUALL",51,0)
 ;
"RTN","A1AEUALL",52,0)
COVERMIN ; MINIMAL summary coverage analysis output ONLY
"RTN","A1AEUALL",53,0)
 N TYPE S TYPE=0
"RTN","A1AEUALL",54,0)
 D COVERAGE
"RTN","A1AEUALL",55,0)
 Q
"RTN","A1AEUALL",56,0)
 ;
"RTN","A1AEUALL",57,0)
COVERAGE  ; complete coverage analysis output LISTS LINES NOT COVERED
"RTN","A1AEUALL",58,0)
 I '$D(TYPE) N TYPE S TYPE=2
"RTN","A1AEUALL",59,0)
 D COV^%ut1("A1AE*","D TESTONLY^A1AEUALL",-1)
"RTN","A1AEUALL",60,0)
 ; the following indicates that routines beginning with the following 
"RTN","A1AEUALL",61,0)
 ; characters, comma separated are to be included in the analysiS
"RTN","A1AEUALL",62,0)
 ;
"RTN","A1AEUALL",63,0)
 ;S ROULIST=",A1AE2POS,A1AEBLD,A1AEDD1,A1AEF1,A1AEF2,A1AEF3,A1AEF4,A1AEF5,A1AEK1,A1AEK2,A1AEK2M0,A1AEM,A1AEM1,A1AEPH1,A1AECOPD,A1AEPH2,A1AEPH3,A1AERD,A1AEUTL,A1AEUTL1,"
"RTN","A1AEUALL",64,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(A1AEFILE)) S A1AEFILE=11004
"RTN","A1AEUALL",65,0)
 S ROULIST=",A1AE2POS,A1AEDD1,A1AEF1,A1AEF2,A1AEF3,A1AEF4,A1AEF5,A1AEK1,A1AEK2," I A1AEFILE=11005 S ROULIST=ROULIST_"A1AEBLD,"
"RTN","A1AEUALL",66,0)
 D LIST(ROULIST,TYPE)
"RTN","A1AEUALL",67,0)
 Q
"RTN","A1AEUALL",68,0)
 ;
"RTN","A1AEUALL",69,0)
LIST(ROULIST,TYPE)   ;
"RTN","A1AEUALL",70,0)
 ; ZEXCEPT: TYPE1  - NEWed and set below for recursion
"RTN","A1AEUALL",71,0)
 ; input - ROULIST - a comma separated list of routine names that will
"RTN","A1AEUALL",72,0)
 ;       be used to identify desired routines.  Any name
"RTN","A1AEUALL",73,0)
 ;       that begins with one of the specified values will
"RTN","A1AEUALL",74,0)
 ;       be included
"RTN","A1AEUALL",75,0)
 ; input - TYPE - value indicating amount of detail desired, 1=full,
"RTN","A1AEUALL",76,0)
 ;       0=summary
"RTN","A1AEUALL",77,0)
 ;
"RTN","A1AEUALL",78,0)
 D TRIMDATA(ROULIST) ; remove undesired routines from data
"RTN","A1AEUALL",79,0)
 ;
"RTN","A1AEUALL",80,0)
 N JOB,NAME,BASE,GLOB
"RTN","A1AEUALL",81,0)
 S GLOB=$NA(^TMP("%utCOVREPORT",$J))
"RTN","A1AEUALL",82,0)
 S TOTCOV=0,TOTLIN=0
"RTN","A1AEUALL",83,0)
 ; F NAME="%utCOVREPORT","%utCOVRESULT","%utCOVCOHORT","%utCOVCOHORTSAV" D
"RTN","A1AEUALL",84,0)
 I TYPE>0 S ROUNAME="" F  S ROUNAME=$O(@GLOB@(ROUNAME)) Q:ROUNAME=""  S XVAL=^(ROUNAME) D
"RTN","A1AEUALL",85,0)
 . S CURRCOV=$P(XVAL,"/"),CURRLIN=$P(XVAL,"/",2)
"RTN","A1AEUALL",86,0)
 . W !!,"Routine ",ROUNAME,"   ",CURRCOV," out of ",CURRLIN," lines covered"
"RTN","A1AEUALL",87,0)
 . I CURRLIN>0 W "  (",$P((100*CURRCOV)/CURRLIN,"."),"%)"
"RTN","A1AEUALL",88,0)
 . I TYPE=1 W "  - Summary"
"RTN","A1AEUALL",89,0)
 . S TAG="" F  S TAG=$O(@GLOB@(ROUNAME,TAG)) Q:TAG=""  S XVAL=^(TAG) D
"RTN","A1AEUALL",90,0)
 . . S LINCOV=$P(XVAL,"/"),LINTOT=$P(XVAL,"/",2)
"RTN","A1AEUALL",91,0)
 . . W !," Tag ",TAG,"^",ROUNAME,"   ",LINCOV," out of ",LINTOT," lines covered"
"RTN","A1AEUALL",92,0)
 . . I TYPE=1 Q
"RTN","A1AEUALL",93,0)
 . . I LINCOV=LINTOT Q
"RTN","A1AEUALL",94,0)
 . . W !,"   the following is a list of lines NOT covered"
"RTN","A1AEUALL",95,0)
 . . S LINE="" F  S LINE=$O(@GLOB@(ROUNAME,TAG,LINE)) Q:LINE=""  D
"RTN","A1AEUALL",96,0)
 . . . I LINE=0 W !,"   ",TAG,"  ",@GLOB@(ROUNAME,TAG,LINE) Q
"RTN","A1AEUALL",97,0)
 . . . W !,"   ",TAG,"+",LINE,"  ",@GLOB@(ROUNAME,TAG,LINE)
"RTN","A1AEUALL",98,0)
 . . . Q
"RTN","A1AEUALL",99,0)
 . . Q
"RTN","A1AEUALL",100,0)
 . Q
"RTN","A1AEUALL",101,0)
 ; for type=1 generate a summary at bottom after detail
"RTN","A1AEUALL",102,0)
 I TYPE=2 N TYPE1 S TYPE1=1 D LIST(ROULIST,1) K TYPE1
"RTN","A1AEUALL",103,0)
 I TYPE=1,$G(TYPE1) Q  ; CAME IN FROM ABOVE LINE
"RTN","A1AEUALL",104,0)
 ; summarize by just routine name
"RTN","A1AEUALL",105,0)
 S ROUNAME="" F  S ROUNAME=$O(@GLOB@(ROUNAME)) Q:ROUNAME=""  S XVAL=^(ROUNAME) D
"RTN","A1AEUALL",106,0)
 . S CURRCOV=$P(XVAL,"/"),CURRLIN=$P(XVAL,"/",2)
"RTN","A1AEUALL",107,0)
 . S TOTCOV=TOTCOV+CURRCOV,TOTLIN=TOTLIN+CURRLIN
"RTN","A1AEUALL",108,0)
 . W !,"Routine ",ROUNAME,"   ",CURRCOV," out of ",CURRLIN," lines covered"
"RTN","A1AEUALL",109,0)
 . I CURRLIN>0 W "  (",$P((100*CURRCOV)/CURRLIN,"."),"%)"
"RTN","A1AEUALL",110,0)
 W !!,"Overall Analysis ",TOTCOV," out of ",TOTLIN," lines covered"
"RTN","A1AEUALL",111,0)
 I TOTLIN>0 W " (",$P((100*TOTCOV)/TOTLIN,"."),"% coverage)"
"RTN","A1AEUALL",112,0)
 Q
"RTN","A1AEUALL",113,0)
 ;
"RTN","A1AEUALL",114,0)
TRIMDATA(ROULIST)    ;
"RTN","A1AEUALL",115,0)
 F TYPNAME="%utCOVREPORT","%utCOVRESULT","%utCOVCOHORT","%utCOVCOHORTSAV" D
"RTN","A1AEUALL",116,0)
 . S ROUNAME="" F  S ROUNAME=$O(^TMP(TYPNAME,$J,ROUNAME)) Q:ROUNAME=""  D
"RTN","A1AEUALL",117,0)
 . . S FOUND=0
"RTN","A1AEUALL",118,0)
 . . I ROUNAME["A1AEU",ROUNAME'["A1AEUTL" K ^TMP(TYPNAME,$J,ROUNAME) ; REMOVE UNIT TESTS
"RTN","A1AEUALL",119,0)
 . . Q
"RTN","A1AEUALL",120,0)
 . . ; PREVIOUS CODE FOLLOWS
"RTN","A1AEUALL",121,0)
 . . I ROULIST[(","_ROUNAME_",") S FOUND=1
"RTN","A1AEUALL",122,0)
 . . I 'FOUND K ^TMP(TYPNAME,$J,ROUNAME)
"RTN","A1AEUALL",123,0)
 . . Q
"RTN","A1AEUALL",124,0)
 . Q
"RTN","A1AEUALL",125,0)
 Q
"RTN","A1AEUALL",126,0)
 ;
"RTN","A1AEUALL",127,0)
JUSTTEST ;
"RTN","A1AEUALL",128,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(A1AEFILE)) S A1AEFILE=11004
"RTN","A1AEUALL",129,0)
 I A1AEFILE=11005 W !!,"RUNNING A1AEUBLD:",! D EN^%ut("A1AEUBLD")
"RTN","A1AEUALL",130,0)
 W !!,"RUNNING A1AEUDD:",! D EN^%ut("A1AEUDD")
"RTN","A1AEUALL",131,0)
 W !!,"RUNNING A1AEUF1:",! D EN^%ut("A1AEUF1")
"RTN","A1AEUALL",132,0)
 W !!,"RUNNING A1AEUF1A:",! D EN^%ut("A1AEUF1A")
"RTN","A1AEUALL",133,0)
 I $D(^A1AE(11005)) W !!,"RUNNING A1AEUF1B:",! D EN^%ut("A1AEUF1B")
"RTN","A1AEUALL",134,0)
 W !!,"RUNNING A1AEUF2:",! D EN^%ut("A1AEUF2")
"RTN","A1AEUALL",135,0)
 W !!,"RUNNING A1AEUF3:",! D EN^%ut("A1AEUF3")
"RTN","A1AEUALL",136,0)
 W !!,"RUNNING A1AEUF4:",! D EN^%ut("A1AEUF4")
"RTN","A1AEUALL",137,0)
 W !!,"RUNNING A1AEUF5:",! D EN^%ut("A1AEUF5")
"RTN","A1AEUALL",138,0)
 W !!,"RUNNING A1AEUF5A:",! D EN^%ut("A1AEUF5A")
"RTN","A1AEUALL",139,0)
 W !!,"RUNNING A1AEUF5B:",! D EN^%ut("A1AEUF5B")
"RTN","A1AEUALL",140,0)
 W !!,"RUNNING A1AEUF5C:",! D EN^%ut("A1AEUF5C")
"RTN","A1AEUALL",141,0)
 W !!,"RUNNING A1AEUF5D:",! D EN^%ut("A1AEUF5D")
"RTN","A1AEUALL",142,0)
 I $D(^A1AE(11005)) W !!,"RUNNING A1AEUK1:",! D EN^%ut("A1AEUK1")
"RTN","A1AEUALL",143,0)
 I $D(^A1AE(11005)) W !!,"RUNNING A1AEUK2:",! D EN^%ut("A1AEUK2")
"RTN","A1AEUALL",144,0)
 W !!,"RUNNING A1AEUPS1:",! D EN^%ut("A1AEUPS1")
"RTN","A1AEUALL",145,0)
 I $D(^A1AE(11005)) W !!,"RUNNING A1AEUPS2:",! D EN^%ut("A1AEUPS2")
"RTN","A1AEUALL",146,0)
 W !!,"RUNNING A1AEUK3:" D EN^%ut("A1AEUK3")
"RTN","A1AEUALL",147,0)
 ; have to check on use of these, they clear out 11007.1, create entries they
"RTN","A1AEUALL",148,0)
 ; don't remove in PACKAGE and DHCP PATCHES files, etc.
"RTN","A1AEUALL",149,0)
 ;W !!,"RUNNING A1AEUT1:",! D EN^%ut("A1AEUT1")
"RTN","A1AEUALL",150,0)
 ;W !!,"RUNNING A1AEUT2:",! D EN^%ut("A1AEUT2")
"RTN","A1AEUALL",151,0)
 W !!,"RUNNING A1AEUT3:",! D EN^%ut("A1AEUT3")
"RTN","A1AEUALL",152,0)
 W !!,"RUNNING A1AEUT4:",! D EN^%ut("A1AEUT4")
"RTN","A1AEUALL",153,0)
 Q
"RTN","A1AEUALL",154,0)
 ;
"RTN","A1AEUBL1")
0^91^B146587680
"RTN","A1AEUBL1",1,0)
A1AEUBL1 ;ven/jli-utility support for unit tests for updating packman message and kids build ;2015-05-20T19:25
"RTN","A1AEUBL1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUBL1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUBL1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUBL1",5,0)
 ;
"RTN","A1AEUBL1",6,0)
 ;
"RTN","A1AEUBL1",7,0)
 ; This is a unit test for Forum Server systems
"RTN","A1AEUBL1",8,0)
        I '$D(^DIC(9.4,"B","PATCH MODULE")) Q  ;
"RTN","A1AEUBL1",9,0)
        ; this is a utility module, run the main unit test
"RTN","A1AEUBL1",10,0)
 D EN^%ut("A1AEUBLD")
"RTN","A1AEUBL1",11,0)
 Q
"RTN","A1AEUBL1",12,0)
 ;
"RTN","A1AEUBL1",13,0)
VERBOSE ;
"RTN","A1AEUBL1",14,0)
 ; This is a unit test for Forum Server systems
"RTN","A1AEUBL1",15,0)
        I '$D(^DIC(9.4,"B","PATCH MODULE")) Q  ;
"RTN","A1AEUBL1",16,0)
        D EN^%ut("A1AEUBLD",1)
"RTN","A1AEUBL1",17,0)
 Q
"RTN","A1AEUBL1",18,0)
 ;
"RTN","A1AEUBL1",19,0)
TESTIT ; Entry point to run the entire process, i.e., import a build, modify it, set it as an PackMan message, and install it
"RTN","A1AEUBL1",20,0)
 ; To demo its effects, set A1AEVIEW to a value,
"RTN","A1AEUBL1",21,0)
 ; then after the examination run DOITNOW^A1AEUBL1 to cleanup
"RTN","A1AEUBL1",22,0)
 ;
"RTN","A1AEUBL1",23,0)
 I '$$ISUTEST^%ut D STARTUP
"RTN","A1AEUBL1",24,0)
 N A1AEUPAT,A1AEUXMB,I,X,XMB
"RTN","A1AEUBL1",25,0)
 S A1AEUXMB=^TMP("A1AEUBL1",$J,"A1AEUXMB")
"RTN","A1AEUBL1",26,0)
 S A1AEUPAT=^TMP("A1AEUBL1",$J,"A1AEUPAT")
"RTN","A1AEUBL1",27,0)
 ; set up basic packman message in PATCH MESSAGE
"RTN","A1AEUBL1",28,0)
 M ^A1AE(11005.1,A1AEUPAT,2)=^XMB(3.9,A1AEUXMB,2)
"RTN","A1AEUBL1",29,0)
 ; add data from DHCP PATCHES file
"RTN","A1AEUBL1",30,0)
 D BUILDIT^A1AEBLD(A1AEUPAT)
"RTN","A1AEUBL1",31,0)
 ; move the updated text back to the mail message
"RTN","A1AEUBL1",32,0)
 M ^XMB(3.9,A1AEUXMB,2)=^A1AE(11005.1,A1AEUPAT,2)
"RTN","A1AEUBL1",33,0)
 ; change patch number from current
"RTN","A1AEUBL1",34,0)
 F I=0:0 S I=$O(^XMB(3.9,A1AEUXMB,2,I)) Q:I'>0  S X=^(I,0) I X["*912" S X=$P(X,"*912")_"*913"_$P(X,"*912",2,99) S ^(0)=X
"RTN","A1AEUBL1",35,0)
 ; build XTMP("XPDI" entry
"RTN","A1AEUBL1",36,0)
 N XMZ S XMZ=A1AEUXMB
"RTN","A1AEUBL1",37,0)
 N XMR S XMR=^XMB(3.9,XMZ,0)
"RTN","A1AEUBL1",38,0)
 W !!,"Respond Y (YES) to any prompts!",!
"RTN","A1AEUBL1",39,0)
 ; load patch
"RTN","A1AEUBL1",40,0)
 D XI^XMP2
"RTN","A1AEUBL1",41,0)
 ; and install - would be called from IN^XPDJI1 in a normal install
"RTN","A1AEUBL1",42,0)
 D INSTALL^A1AEBLD(^TMP("A1AEUBL1",$J,"A1AEPTID"))
"RTN","A1AEUBL1",43,0)
 ; if not being run as part of a unit test, remove any data added
"RTN","A1AEUBL1",44,0)
 I '$$ISUTEST^%ut D SHUTDOWN
"RTN","A1AEUBL1",45,0)
 Q
"RTN","A1AEUBL1",46,0)
 ;
"RTN","A1AEUBL1",47,0)
STARTUP ;
"RTN","A1AEUBL1",48,0)
 ; Build a basic packman message with some parts
"RTN","A1AEUBL1",49,0)
 N YARR,I,XMB,A1AEUXMB,A1AEUBLD,A1AEUPAT
"RTN","A1AEUBL1",50,0)
 ; Global Listing for ^XMB(3.9,3124
"RTN","A1AEUBL1",51,0)
 N A1AEVAL S A1AEVAL=$P(^DIC(4.2,+^XTV(8989.3,1,0),0),U)
"RTN","A1AEUBL1",52,0)
 S A1AEUPAT=$P(^A1AE(11005,0),U,3)+100
"RTN","A1AEUBL1",53,0)
 S A1AEUBLD=$P(^XPD(9.6,0),U,3)+100
"RTN","A1AEUBL1",54,0)
 S ^TMP("A1AEUBL1",$J,"A1AEUPAT")=A1AEUPAT
"RTN","A1AEUBL1",55,0)
 S ^TMP("A1AEUBL1",$J,"A1AEUBLD")=A1AEUBLD
"RTN","A1AEUBL1",56,0)
 ; save location for later
"RTN","A1AEUBL1",57,0)
 S A1AEUXMB=$P(^XMB(3.9,0),U,3)+2000
"RTN","A1AEUBL1",58,0)
 S ^TMP("A1AEUBL1",$J,"A1AEUXMB")=A1AEUXMB
"RTN","A1AEUBL1",59,0)
 ;
"RTN","A1AEUBL1",60,0)
 N A1AENOW S A1AENOW=$E($$NOW^XLFDT_"0000",1,12)
"RTN","A1AEUBL1",61,0)
 N A1AEDATE S A1AEDATE=$$DOW^XLFDT(A1AENOW)_", "_$$FMTE^XLFDT($P(A1AENOW,".",1),"2Z")_" at "_$E(A1AENOW,9,10)_":"_$E(A1AENOW,11,12)
"RTN","A1AEUBL1",62,0)
 N A1AENOW1 S A1AENOW1=$P(A1AENOW,".")
"RTN","A1AEUBL1",63,0)
 ;S ^XPD(9.6,A1AEUBLD,0)=A1AENMSP_"*"_A1AEVERS_"*912"
"RTN","A1AEUBL1",64,0)
 N A1AEPACK S A1AEPACK=$O(^DIC(9.4,"B","PATCH MODULE",0)) I A1AEPACK'>0 S A1AEPACK=$O(^DIC(9.4,"B","VA FILEMAN",0)) I A1AEPACK'>0 S A1AEPACK=$O(^DIC(9.4,"B","KERNEL",0))
"RTN","A1AEUBL1",65,0)
 N A1AENMSP S A1AENMSP=$P(^DIC(9.4,A1AEPACK,0),U,2)
"RTN","A1AEUBL1",66,0)
 N A1AEVERS S A1AEVERS=$G(^DIC(9.4,A1AEPACK,"VERSION"))
"RTN","A1AEUBL1",67,0)
 S YARR(1,0)="$TXT Created by "_$P(^VA(200,DUZ,0),U)_" at "_A1AEVAL_"  (KIDS) on "_A1AEDATE
"RTN","A1AEUBL1",68,0)
 S YARR(2,0)=" "
"RTN","A1AEUBL1",69,0)
 S YARR(3,0)="Test Patch for A1AE code."
"RTN","A1AEUBL1",70,0)
 S YARR(4,0)=" "
"RTN","A1AEUBL1",71,0)
 S YARR(5,0)="$END TXT"
"RTN","A1AEUBL1",72,0)
 S YARR(6,0)="$KID "_A1AENMSP_"*"_A1AEVERS_"*912"
"RTN","A1AEUBL1",73,0)
 S YARR(7,0)="**INSTALL NAME**"
"RTN","A1AEUBL1",74,0)
 S YARR(8,0)=A1AENMSP_"*"_A1AEVERS_"*912"
"RTN","A1AEUBL1",75,0)
 S ^TMP("A1AEUBL1",$J,"A1AEPTID")=A1AENMSP_"*"_A1AEVERS_"*913"
"RTN","A1AEUBL1",76,0)
 S YARR(9,0)="""BLD"",5528,0)"
"RTN","A1AEUBL1",77,0)
 S YARR(10,0)=A1AENMSP_"*"_A1AEVERS_"*912^PATCH MODULE^0^"_A1AENOW1_"^n"
"RTN","A1AEUBL1",78,0)
 S YARR(11,0)="""BLD"",5528,1,0)"
"RTN","A1AEUBL1",79,0)
 S YARR(12,0)="^^1^1^"_A1AENOW1_"^"
"RTN","A1AEUBL1",80,0)
 S YARR(13,0)="""BLD"",5528,1,1,0)"
"RTN","A1AEUBL1",81,0)
 S YARR(14,0)="TEST ROUTINE FOR UNIT TESTING A1AE CODE"
"RTN","A1AEUBL1",82,0)
 S YARR(15,0)="""BLD"",5528,4,0)"
"RTN","A1AEUBL1",83,0)
 S YARR(16,0)="^9.64PA^^"
"RTN","A1AEUBL1",84,0)
 S YARR(17,0)="""BLD"",5528,""KRN"",0)"
"RTN","A1AEUBL1",85,0)
 S YARR(18,0)="^9.67PA^8989.52^19"
"RTN","A1AEUBL1",86,0)
 S YARR(19,0)="""BLD"",5528,""KRN"",.4,0)"
"RTN","A1AEUBL1",87,0)
 S YARR(20,0)=".4"
"RTN","A1AEUBL1",88,0)
 S YARR(21,0)="""BLD"",5528,""KRN"",.401,0)"
"RTN","A1AEUBL1",89,0)
 S YARR(22,0)=".401"
"RTN","A1AEUBL1",90,0)
 S YARR(23,0)="""BLD"",5528,""KRN"",.402,0)"
"RTN","A1AEUBL1",91,0)
 S YARR(24,0)=".402"
"RTN","A1AEUBL1",92,0)
 S YARR(25,0)="""BLD"",5528,""KRN"",.403,0)"
"RTN","A1AEUBL1",93,0)
 S YARR(26,0)=".403"
"RTN","A1AEUBL1",94,0)
 S YARR(27,0)="""BLD"",5528,""KRN"",.5,0)"
"RTN","A1AEUBL1",95,0)
 S YARR(28,0)=".5"
"RTN","A1AEUBL1",96,0)
 S YARR(29,0)="""BLD"",5528,""KRN"",.84,0)"
"RTN","A1AEUBL1",97,0)
 S YARR(30,0)=".84"
"RTN","A1AEUBL1",98,0)
 S YARR(31,0)="""BLD"",5528,""KRN"",3.6,0)"
"RTN","A1AEUBL1",99,0)
 S YARR(32,0)="3.6"
"RTN","A1AEUBL1",100,0)
 S YARR(33,0)="""BLD"",5528,""KRN"",3.8,0)"
"RTN","A1AEUBL1",101,0)
 S YARR(34,0)="3.8"
"RTN","A1AEUBL1",102,0)
 S YARR(35,0)="""BLD"",5528,""KRN"",9.2,0)"
"RTN","A1AEUBL1",103,0)
 S YARR(36,0)="9.2"
"RTN","A1AEUBL1",104,0)
 S YARR(37,0)="""BLD"",5528,""KRN"",9.8,0)"
"RTN","A1AEUBL1",105,0)
 S YARR(38,0)="9.8"
"RTN","A1AEUBL1",106,0)
 S YARR(39,0)="""BLD"",5528,""KRN"",9.8,""NM"",0)"
"RTN","A1AEUBL1",107,0)
 S YARR(40,0)="^9.68A^1^1"
"RTN","A1AEUBL1",108,0)
 S YARR(41,0)="""BLD"",5528,""KRN"",9.8,""NM"",1,0)"
"RTN","A1AEUBL1",109,0)
 S YARR(42,0)="A1AEUJLI^^0^B52719"
"RTN","A1AEUBL1",110,0)
 S YARR(43,0)="""BLD"",5528,""KRN"",9.8,""NM"",""B"",""A1AEUJLI"",1)"
"RTN","A1AEUBL1",111,0)
 S YARR(44,0)=""
"RTN","A1AEUBL1",112,0)
 S YARR(45,0)="""BLD"",5528,""KRN"",19,0)"
"RTN","A1AEUBL1",113,0)
 S YARR(46,0)="19"
"RTN","A1AEUBL1",114,0)
 S YARR(47,0)="""BLD"",5528,""KRN"",19.1,0)"
"RTN","A1AEUBL1",115,0)
 S YARR(48,0)="19.1"
"RTN","A1AEUBL1",116,0)
 S YARR(49,0)="""BLD"",5528,""KRN"",101,0)"
"RTN","A1AEUBL1",117,0)
 S YARR(50,0)="101"
"RTN","A1AEUBL1",118,0)
 S YARR(51,0)="""BLD"",5528,""KRN"",409.61,0)"
"RTN","A1AEUBL1",119,0)
 S YARR(52,0)="409.61"
"RTN","A1AEUBL1",120,0)
 S YARR(53,0)="""BLD"",5528,""KRN"",771,0)"
"RTN","A1AEUBL1",121,0)
 S YARR(54,0)="771"
"RTN","A1AEUBL1",122,0)
 S YARR(55,0)="""BLD"",5528,""KRN"",870,0)"
"RTN","A1AEUBL1",123,0)
 S YARR(56,0)="870"
"RTN","A1AEUBL1",124,0)
 S YARR(57,0)="""BLD"",5528,""KRN"",8989.51,0)"
"RTN","A1AEUBL1",125,0)
 S YARR(58,0)="8989.51"
"RTN","A1AEUBL1",126,0)
 S YARR(59,0)="""BLD"",5528,""KRN"",8989.52,0)"
"RTN","A1AEUBL1",127,0)
 S YARR(60,0)="8989.52"
"RTN","A1AEUBL1",128,0)
 S YARR(61,0)="""BLD"",5528,""KRN"",8994,0)"
"RTN","A1AEUBL1",129,0)
 S YARR(62,0)="8994"
"RTN","A1AEUBL1",130,0)
 S YARR(63,0)="""BLD"",5528,""KRN"",""B"",.4,.4)"
"RTN","A1AEUBL1",131,0)
 S YARR(64,0)=""
"RTN","A1AEUBL1",132,0)
 S YARR(65,0)="""BLD"",5528,""KRN"",""B"",.401,.401)"
"RTN","A1AEUBL1",133,0)
 S YARR(66,0)=""
"RTN","A1AEUBL1",134,0)
 S YARR(67,0)="""BLD"",5528,""KRN"",""B"",.402,.402)"
"RTN","A1AEUBL1",135,0)
 S YARR(68,0)=""
"RTN","A1AEUBL1",136,0)
 S YARR(69,0)="""BLD"",5528,""KRN"",""B"",.403,.403)"
"RTN","A1AEUBL1",137,0)
 S YARR(70,0)=""
"RTN","A1AEUBL1",138,0)
 S YARR(71,0)="""BLD"",5528,""KRN"",""B"",.5,.5)"
"RTN","A1AEUBL1",139,0)
 S YARR(72,0)=""
"RTN","A1AEUBL1",140,0)
 S YARR(73,0)="""BLD"",5528,""KRN"",""B"",.84,.84)"
"RTN","A1AEUBL1",141,0)
 S YARR(74,0)=""
"RTN","A1AEUBL1",142,0)
 S YARR(75,0)="""BLD"",5528,""KRN"",""B"",3.6,3.6)"
"RTN","A1AEUBL1",143,0)
 S YARR(76,0)=""
"RTN","A1AEUBL1",144,0)
 S YARR(77,0)="""BLD"",5528,""KRN"",""B"",3.8,3.8)"
"RTN","A1AEUBL1",145,0)
 S YARR(78,0)=""
"RTN","A1AEUBL1",146,0)
 S YARR(79,0)="""BLD"",5528,""KRN"",""B"",9.2,9.2)"
"RTN","A1AEUBL1",147,0)
 S YARR(80,0)=""
"RTN","A1AEUBL1",148,0)
 S YARR(81,0)="""BLD"",5528,""KRN"",""B"",9.8,9.8)"
"RTN","A1AEUBL1",149,0)
 S YARR(82,0)=""
"RTN","A1AEUBL1",150,0)
 S YARR(83,0)="""BLD"",5528,""KRN"",""B"",19,19)"
"RTN","A1AEUBL1",151,0)
 S YARR(84,0)=""
"RTN","A1AEUBL1",152,0)
 S YARR(85,0)="""BLD"",5528,""KRN"",""B"",19.1,19.1)"
"RTN","A1AEUBL1",153,0)
 S YARR(86,0)=""
"RTN","A1AEUBL1",154,0)
 S YARR(87,0)="""BLD"",5528,""KRN"",""B"",101,101)"
"RTN","A1AEUBL1",155,0)
 S YARR(88,0)=""
"RTN","A1AEUBL1",156,0)
 S YARR(89,0)="""BLD"",5528,""KRN"",""B"",409.61,409.61)"
"RTN","A1AEUBL1",157,0)
 S YARR(90,0)=""
"RTN","A1AEUBL1",158,0)
 S YARR(91,0)="""BLD"",5528,""KRN"",""B"",771,771)"
"RTN","A1AEUBL1",159,0)
 S YARR(92,0)=""
"RTN","A1AEUBL1",160,0)
 S YARR(93,0)="""BLD"",5528,""KRN"",""B"",870,870)"
"RTN","A1AEUBL1",161,0)
 S YARR(94,0)=""
"RTN","A1AEUBL1",162,0)
 S YARR(95,0)="""BLD"",5528,""KRN"",""B"",8989.51,8989.51)"
"RTN","A1AEUBL1",163,0)
 S YARR(96,0)=""
"RTN","A1AEUBL1",164,0)
 S YARR(97,0)="""BLD"",5528,""KRN"",""B"",8989.52,8989.52)"
"RTN","A1AEUBL1",165,0)
 S YARR(98,0)=""
"RTN","A1AEUBL1",166,0)
 S YARR(99,0)="""BLD"",5528,""KRN"",""B"",8994,8994)"
"RTN","A1AEUBL1",167,0)
 S YARR(100,0)=""
"RTN","A1AEUBL1",168,0)
 S YARR(101,0)="""BLD"",5528,""QUES"",0)"
"RTN","A1AEUBL1",169,0)
 S YARR(102,0)="^9.62^^"
"RTN","A1AEUBL1",170,0)
 S YARR(103,0)="""MBREQ"")"
"RTN","A1AEUBL1",171,0)
 S YARR(104,0)="0"
"RTN","A1AEUBL1",172,0)
 S YARR(105,0)="""PKG"",201,-1)"
"RTN","A1AEUBL1",173,0)
 S YARR(106,0)="1^1"
"RTN","A1AEUBL1",174,0)
 S YARR(107,0)="""PKG"",201,0)"
"RTN","A1AEUBL1",175,0)
 S YARR(108,0)=$P(^DIC(9.4,A1AEPACK,0),U,1,3)
"RTN","A1AEUBL1",176,0)
 S YARR(109,0)="""PKG"",201,22,0)"
"RTN","A1AEUBL1",177,0)
 S YARR(110,0)="^9.49I^1^1"
"RTN","A1AEUBL1",178,0)
 S YARR(111,0)="""PKG"",201,22,1,0)"
"RTN","A1AEUBL1",179,0)
 S YARR(112,0)=A1AEVERS
"RTN","A1AEUBL1",180,0)
 S YARR(113,0)="""PKG"",201,22,1,""PAH"",1,0)"
"RTN","A1AEUBL1",181,0)
 S YARR(114,0)="12^3141110"
"RTN","A1AEUBL1",182,0)
 S YARR(115,0)="""PKG"",201,22,1,""PAH"",1,1,0)"
"RTN","A1AEUBL1",183,0)
 S YARR(116,0)="^^1^1^3141110"
"RTN","A1AEUBL1",184,0)
 S YARR(117,0)="""PKG"",201,22,1,""PAH"",1,1,1,0)"
"RTN","A1AEUBL1",185,0)
 S YARR(118,0)="TEST ROUTINE FOR UNIT TESTING A1AE CODE"
"RTN","A1AEUBL1",186,0)
 S YARR(119,0)="""QUES"",""XPF1"",0)"
"RTN","A1AEUBL1",187,0)
 S YARR(120,0)="Y"
"RTN","A1AEUBL1",188,0)
 S YARR(121,0)="""QUES"",""XPF1"",""??"")"
"RTN","A1AEUBL1",189,0)
 S YARR(122,0)="^D REP^XPDH"
"RTN","A1AEUBL1",190,0)
 S YARR(123,0)="""QUES"",""XPF1"",""A"")"
"RTN","A1AEUBL1",191,0)
 S YARR(124,0)="Shall I write over your |FLAG| File"
"RTN","A1AEUBL1",192,0)
 S YARR(125,0)="""QUES"",""XPF1"",""B"")"
"RTN","A1AEUBL1",193,0)
 S YARR(126,0)="YES"
"RTN","A1AEUBL1",194,0)
 S YARR(127,0)="""QUES"",""XPF1"",""M"")"
"RTN","A1AEUBL1",195,0)
 S YARR(128,0)="D XPF1^XPDIQ"
"RTN","A1AEUBL1",196,0)
 S YARR(129,0)="""QUES"",""XPF2"",0)"
"RTN","A1AEUBL1",197,0)
 S YARR(130,0)="Y"
"RTN","A1AEUBL1",198,0)
 S YARR(131,0)="""QUES"",""XPF2"",""??"")"
"RTN","A1AEUBL1",199,0)
 S YARR(132,0)="^D DTA^XPDH"
"RTN","A1AEUBL1",200,0)
 S YARR(133,0)="""QUES"",""XPF2"",""A"")"
"RTN","A1AEUBL1",201,0)
 S YARR(134,0)="Want my data |FLAG| yours"
"RTN","A1AEUBL1",202,0)
 S YARR(135,0)="""QUES"",""XPF2"",""B"")"
"RTN","A1AEUBL1",203,0)
 S YARR(136,0)="YES"
"RTN","A1AEUBL1",204,0)
 S YARR(137,0)="""QUES"",""XPF2"",""M"")"
"RTN","A1AEUBL1",205,0)
 S YARR(138,0)="D XPF2^XPDIQ"
"RTN","A1AEUBL1",206,0)
 S YARR(139,0)="""QUES"",""XPI1"",0)"
"RTN","A1AEUBL1",207,0)
 S YARR(140,0)="YO"
"RTN","A1AEUBL1",208,0)
 S YARR(141,0)="""QUES"",""XPI1"",""??"")"
"RTN","A1AEUBL1",209,0)
 S YARR(142,0)="^D INHIBIT^XPDH"
"RTN","A1AEUBL1",210,0)
 S YARR(143,0)="""QUES"",""XPI1"",""A"")"
"RTN","A1AEUBL1",211,0)
 S YARR(144,0)="Want KIDS to INHIBIT LOGONs during the install"
"RTN","A1AEUBL1",212,0)
 S YARR(145,0)="""QUES"",""XPI1"",""B"")"
"RTN","A1AEUBL1",213,0)
 S YARR(146,0)="YES"
"RTN","A1AEUBL1",214,0)
 S YARR(147,0)="""QUES"",""XPI1"",""M"")"
"RTN","A1AEUBL1",215,0)
 S YARR(148,0)="D XPI1^XPDIQ"
"RTN","A1AEUBL1",216,0)
 S YARR(149,0)="""QUES"",""XPM1"",0)"
"RTN","A1AEUBL1",217,0)
 S YARR(150,0)="PO^VA(200,:EM"
"RTN","A1AEUBL1",218,0)
 S YARR(151,0)="""QUES"",""XPM1"",""??"")"
"RTN","A1AEUBL1",219,0)
 S YARR(152,0)="^D MG^XPDH"
"RTN","A1AEUBL1",220,0)
 S YARR(153,0)="""QUES"",""XPM1"",""A"")"
"RTN","A1AEUBL1",221,0)
 S YARR(154,0)="Enter the Coordinator for Mail Group '|FLAG|'"
"RTN","A1AEUBL1",222,0)
 S YARR(155,0)="""QUES"",""XPM1"",""B"")"
"RTN","A1AEUBL1",223,0)
 S YARR(156,0)=""
"RTN","A1AEUBL1",224,0)
 S YARR(157,0)="""QUES"",""XPM1"",""M"")"
"RTN","A1AEUBL1",225,0)
 S YARR(158,0)="D XPM1^XPDIQ"
"RTN","A1AEUBL1",226,0)
 S YARR(159,0)="""QUES"",""XPO1"",0)"
"RTN","A1AEUBL1",227,0)
 S YARR(160,0)="Y"
"RTN","A1AEUBL1",228,0)
 S YARR(161,0)="""QUES"",""XPO1"",""??"")"
"RTN","A1AEUBL1",229,0)
 S YARR(162,0)="^D MENU^XPDH"
"RTN","A1AEUBL1",230,0)
 S YARR(163,0)="""QUES"",""XPO1"",""A"")"
"RTN","A1AEUBL1",231,0)
 S YARR(164,0)="Want KIDS to Rebuild Menu Trees Upon Completion of Install"
"RTN","A1AEUBL1",232,0)
 S YARR(165,0)="""QUES"",""XPO1"",""B"")"
"RTN","A1AEUBL1",233,0)
 S YARR(166,0)="YES"
"RTN","A1AEUBL1",234,0)
 S YARR(167,0)="""QUES"",""XPO1"",""M"")"
"RTN","A1AEUBL1",235,0)
 S YARR(168,0)="D XPO1^XPDIQ"
"RTN","A1AEUBL1",236,0)
 S YARR(169,0)="""QUES"",""XPZ1"",0)"
"RTN","A1AEUBL1",237,0)
 S YARR(170,0)="Y"
"RTN","A1AEUBL1",238,0)
 S YARR(171,0)="""QUES"",""XPZ1"",""??"")"
"RTN","A1AEUBL1",239,0)
 S YARR(172,0)="^D OPT^XPDH"
"RTN","A1AEUBL1",240,0)
 S YARR(173,0)="""QUES"",""XPZ1"",""A"")"
"RTN","A1AEUBL1",241,0)
 S YARR(174,0)="Want to DISABLE Scheduled Options, Menu Options, and Protocols"
"RTN","A1AEUBL1",242,0)
 S YARR(175,0)="""QUES"",""XPZ1"",""B"")"
"RTN","A1AEUBL1",243,0)
 S YARR(176,0)="YES"
"RTN","A1AEUBL1",244,0)
 S YARR(177,0)="""QUES"",""XPZ1"",""M"")"
"RTN","A1AEUBL1",245,0)
 S YARR(178,0)="D XPZ1^XPDIQ"
"RTN","A1AEUBL1",246,0)
 S YARR(179,0)="""QUES"",""XPZ2"",0)"
"RTN","A1AEUBL1",247,0)
 S YARR(180,0)="Y"
"RTN","A1AEUBL1",248,0)
 S YARR(181,0)="""QUES"",""XPZ2"",""??"")"
"RTN","A1AEUBL1",249,0)
 S YARR(182,0)="^D RTN^XPDH"
"RTN","A1AEUBL1",250,0)
 S YARR(183,0)="""QUES"",""XPZ2"",""A"")"
"RTN","A1AEUBL1",251,0)
 S YARR(184,0)="Want to MOVE routines to other CPUs"
"RTN","A1AEUBL1",252,0)
 S YARR(185,0)="""QUES"",""XPZ2"",""B"")"
"RTN","A1AEUBL1",253,0)
 S YARR(186,0)="NO"
"RTN","A1AEUBL1",254,0)
 S YARR(187,0)="""QUES"",""XPZ2"",""M"")"
"RTN","A1AEUBL1",255,0)
 S YARR(188,0)="D XPZ2^XPDIQ"
"RTN","A1AEUBL1",256,0)
 S YARR(189,0)="""RTN"")"
"RTN","A1AEUBL1",257,0)
 S YARR(190,0)="1"
"RTN","A1AEUBL1",258,0)
 S YARR(191,0)="""RTN"",""A1AEUJLI"")"
"RTN","A1AEUBL1",259,0)
 S YARR(192,0)="0^1^B52719"
"RTN","A1AEUBL1",260,0)
 S YARR(193,0)="""RTN"",""A1AEUJLI"",1,0)"
"RTN","A1AEUBL1",261,0)
 S YARR(194,0)="A1AEUJLI ;JLI/VEN - routine for testing A1AE DHCP PATCHES related code ;11/10/14  20:09"
"RTN","A1AEUBL1",262,0)
 S YARR(195,0)="""RTN"",""A1AEUJLI"",2,0)"
"RTN","A1AEUBL1",263,0)
 S YARR(196,0)=" ;;0.0;PATCH MODULE;"
"RTN","A1AEUBL1",264,0)
 S YARR(197,0)="""RTN"",""A1AEUJLI"",3,0)"
"RTN","A1AEUBL1",265,0)
 S YARR(198,0)=" ; simply return a value in X for testing."
"RTN","A1AEUBL1",266,0)
 S YARR(199,0)="""RTN"",""A1AEUJLI"",4,0)"
"RTN","A1AEUBL1",267,0)
 S YARR(200,0)=" S X=""Hello PATCH MODULE World!"""
"RTN","A1AEUBL1",268,0)
 S YARR(201,0)="""RTN"",""A1AEUJLI"",5,0)"
"RTN","A1AEUBL1",269,0)
 S YARR(202,0)=" Q"
"RTN","A1AEUBL1",270,0)
 S YARR(203,0)="""VER"")"
"RTN","A1AEUBL1",271,0)
 S YARR(204,0)="8.0^22.0"
"RTN","A1AEUBL1",272,0)
 S YARR(205,0)="$END KID "_A1AENMSP_"*"_A1AEVERS_"*912"
"RTN","A1AEUBL1",273,0)
 ;  create a mail message far above others in file numbers
"RTN","A1AEUBL1",274,0)
 S ^XMB(3.9,A1AEUXMB,0)=A1AENMSP_"*"_A1AEVERS_"*912 MESSAGE^"_DUZ_U_$$NOW^XLFDT()_"^^^^K"
"RTN","A1AEUBL1",275,0)
 S ^XMB(3.9,A1AEUXMB,.6)=$P($$NOW^XLFDT(),".")
"RTN","A1AEUBL1",276,0)
 S ^XMB(3.9,A1AEUXMB,1)="^3.91A^1^1"
"RTN","A1AEUBL1",277,0)
 S ^XMB(3.9,A1AEUXMB,1,1,0)=DUZ_"^0^"_$$NOW^XLFDT()
"RTN","A1AEUBL1",278,0)
 S ^XMB(3.9,A1AEUXMB,1,"C",2802,1)=""
"RTN","A1AEUBL1",279,0)
 S ^XMB(3.9,A1AEUXMB,2,0)="^3.92A^82^82^"_$P($$NOW^XLFDT(),".")
"RTN","A1AEUBL1",280,0)
 M ^XMB(3.9,A1AEUXMB,2)=YARR
"RTN","A1AEUBL1",281,0)
 S ^XMB(3.9,A1AEUXMB,6)="^3.911A^1^1"
"RTN","A1AEUBL1",282,0)
 S ^XMB(3.9,A1AEUXMB,6,1,0)=$P(^VA(200,DUZ,0),U)
"RTN","A1AEUBL1",283,0)
 S ^XMB(3.9,A1AEUXMB,6,"B",$P(^VA(200,DUZ,0),U),1)=""
"RTN","A1AEUBL1",284,0)
 S ^A1AE(11005.1,A1AEUPAT,0)=A1AEUPAT
"RTN","A1AEUBL1",285,0)
 S ^A1AE(11005,A1AEUPAT,0)=A1AENMSP_"*"_A1AEVERS_"*912^"_A1AEPACK_U_A1AEVERS_"^1^Unit Tests: Testing this one^12^m^v^51^^^3140730^^^^^^"_$P($$FMADD^XLFDT($$NOW^XLFDT(),30),".")_"^^1"
"RTN","A1AEUBL1",286,0)
 S ^A1AE(11005,"B",A1AENMSP_"*"_A1AEVERS_"*912",A1AEUPAT)=""
"RTN","A1AEUBL1",287,0)
 S ^A1AE(11005,A1AEUPAT,3,0)="^11005.019^1^1"
"RTN","A1AEUBL1",288,0)
 S ^A1AE(11005,A1AEUPAT,3,1,0)="TEXT FOR COMPLIANCE DATE COMMENT"
"RTN","A1AEUBL1",289,0)
 S ^A1AE(11005,A1AEUPAT,4)="PACKAGETEXT 1"
"RTN","A1AEUBL1",290,0)
 ; make an entry for update from package - use first entry that exists
"RTN","A1AEUBL1",291,0)
 N A1AEUPDT S A1AEUPDT=$O(^A1AE(11005,0))
"RTN","A1AEUBL1",292,0)
 S ^A1AE(11005,A1AEUPAT,5)="1^^^^^^"_A1AEUPDT
"RTN","A1AEUBL1",293,0)
 S ^A1AE(11005,A1AEUPAT,"P2")=";;8.0;KERNEL;**71,120,166,168,179,280**;Jul 10, 1995"
"RTN","A1AEUBL1",294,0)
 S ^A1AE(11005,A1AEUPAT,"C",0)="^11005.05SA^1^1"
"RTN","A1AEUBL1",295,0)
 S ^A1AE(11005,A1AEUPAT,"C",1,0)="r"
"RTN","A1AEUBL1",296,0)
 S ^A1AE(11005,A1AEUPAT,"D",0)="^11005.01^2^2^3140918^^^^"
"RTN","A1AEUBL1",297,0)
 S ^A1AE(11005,A1AEUPAT,"D",1,0)="Description text line 1 "
"RTN","A1AEUBL1",298,0)
 S ^A1AE(11005,A1AEUPAT,"D",2,0)="Description text line 2 "
"RTN","A1AEUBL1",299,0)
 S ^A1AE(11005,A1AEUPAT,"P",0)="^11005.03A^2^2"
"RTN","A1AEUBL1",300,0)
 S ^A1AE(11005,A1AEUPAT,"P",1,0)="A1AEROU1"
"RTN","A1AEUBL1",301,0)
 S ^A1AE(11005,A1AEUPAT,"P",2,0)="A1AEROU2"
"RTN","A1AEUBL1",302,0)
 S ^A1AE(11005,A1AEUPAT,"P","B","A1AEROU1",1)=""
"RTN","A1AEUBL1",303,0)
 S ^A1AE(11005,A1AEUPAT,"P","B","A1AEROU2",2)=""
"RTN","A1AEUBL1",304,0)
 Q
"RTN","A1AEUBL1",305,0)
 ;
"RTN","A1AEUBL1",306,0)
SHUTDOWN ;
"RTN","A1AEUBL1",307,0)
 ; ZEXCEPT: A1AEVIEW - defined outside to save data for examination
"RTN","A1AEUBL1",308,0)
 I $D(A1AEVIEW) Q  ; temporary to allow examination of data
"RTN","A1AEUBL1",309,0)
 ;
"RTN","A1AEUBL1",310,0)
DOITNOW ;  temporary entry to remove data after examination
"RTN","A1AEUBL1",311,0)
 N A1AEUXMB,A1AEUPAT,A1AEUBLD,A1AEIEN,A1AEPTID
"RTN","A1AEUBL1",312,0)
 S A1AEUXMB=$G(^TMP("A1AEUBL1",$J,"A1AEUXMB"))
"RTN","A1AEUBL1",313,0)
 S A1AEUPAT=$G(^TMP("A1AEUBL1",$J,"A1AEUPAT"))
"RTN","A1AEUBL1",314,0)
 S A1AEUBLD=$G(^TMP("A1AEUBL1",$J,"A1AEUBLD"))
"RTN","A1AEUBL1",315,0)
 S A1AEPTID=$G(^TMP("A1AEUBL1",$J,"A1AEPTID"))
"RTN","A1AEUBL1",316,0)
 I A1AEUXMB'>0 Q
"RTN","A1AEUBL1",317,0)
 ; remove data created in STARTUP
"RTN","A1AEUBL1",318,0)
 K ^XMB(3.9,A1AEUXMB)
"RTN","A1AEUBL1",319,0)
 K ^XPD(9.6,A1AEUBLD)
"RTN","A1AEUBL1",320,0)
 N A1AENAME S A1AENAME=$P(^A1AE(11005,A1AEUPAT,0),U)
"RTN","A1AEUBL1",321,0)
 K ^A1AE(11005,A1AEUPAT)
"RTN","A1AEUBL1",322,0)
 K ^A1AE(11005,"B",A1AENAME,A1AEUPAT)
"RTN","A1AEUBL1",323,0)
 K ^A1AE(11005.1,A1AEUPAT)
"RTN","A1AEUBL1",324,0)
 ; remove data added to the DHCP PATCHES file (#11005)
"RTN","A1AEUBL1",325,0)
 S A1AEIEN=$O(^A1AE(11005,"B",A1AEPTID,"")) I A1AEIEN>0 D
"RTN","A1AEUBL1",326,0)
 . ; if it still is last entry try to get a lock, if we can, then decrement top numbers for file
"RTN","A1AEUBL1",327,0)
 . I A1AEIEN=$P(^A1AE(11005,0),U,3) L +^A1AE(11005,0):0 I $T S $P(^A1AE(11005,0),U,3,4)=($P(^(0),U,3)-1)_U_($P(^(0),U,4)-1)
"RTN","A1AEUBL1",328,0)
 . K ^A1AE(11005,"B",A1AEPTID),^A1AE(11005,A1AEIEN)
"RTN","A1AEUBL1",329,0)
 . L -^A1AE(11005,0)
"RTN","A1AEUBL1",330,0)
 . Q
"RTN","A1AEUBL1",331,0)
 ; remove data added to the INSTALL file during installation
"RTN","A1AEUBL1",332,0)
 S A1AEIEN=$O(^XPD(9.7,"B",A1AEPTID,"")) I A1AEIEN>0 D
"RTN","A1AEUBL1",333,0)
 . I A1AEIEN=$P(^XPD(9.7,0),U,3) L +^XPD(9.7,0):0 I $T S $P(^XPD(9.7,0),U,3,4)=($P(^(0),U,3)-1)_U_($P(^(0),U,4)-1)
"RTN","A1AEUBL1",334,0)
 . K ^XPD(9.7,"B",A1AEPTID),^XPD(9.7,A1AEIEN)
"RTN","A1AEUBL1",335,0)
 . L -^XPD(9.7,0)
"RTN","A1AEUBL1",336,0)
 . ; remove installation data added to ^XTMP
"RTN","A1AEUBL1",337,0)
 . K ^XTMP("XPDI",A1AEIEN)
"RTN","A1AEUBL1",338,0)
 . Q
"RTN","A1AEUBL1",339,0)
 K ^TMP("A1AEUBL1",$J)
"RTN","A1AEUBL1",340,0)
 Q
"RTN","A1AEUBL1",341,0)
 ;
"RTN","A1AEUBLD")
0^90^B123561282
"RTN","A1AEUBLD",1,0)
A1AEUBLD ;ven/jli-unit tests related to transport of entries in builds  ;2015-06-02T22:51
"RTN","A1AEUBLD",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUBLD",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUBLD",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUBLD",5,0)
 ;
"RTN","A1AEUBLD",6,0)
 ;
"RTN","A1AEUBLD",7,0)
 ; This is a unit test for Forum Server systems
"RTN","A1AEUBLD",8,0)
        I '$D(^DIC(9.4,"B","PATCH MODULE")) Q  ;
"RTN","A1AEUBLD",9,0)
        D EN^%ut($T(+0))
"RTN","A1AEUBLD",10,0)
 Q
"RTN","A1AEUBLD",11,0)
 ;
"RTN","A1AEUBLD",12,0)
VERBOSE ;
"RTN","A1AEUBLD",13,0)
 ; This is a unit test for Forum Server systems
"RTN","A1AEUBLD",14,0)
        I '$D(^DIC(9.4,"B","PATCH MODULE")) Q  ;
"RTN","A1AEUBLD",15,0)
        D EN^%ut($T(+0),1)
"RTN","A1AEUBLD",16,0)
 Q
"RTN","A1AEUBLD",17,0)
 ;
"RTN","A1AEUBLD",18,0)
STARTUP ; this will build data set to work from
"RTN","A1AEUBLD",19,0)
 D STARTUP^A1AEUBL1
"RTN","A1AEUBLD",20,0)
 Q
"RTN","A1AEUBLD",21,0)
 ;
"RTN","A1AEUBLD",22,0)
SHUTDOWN ; this will remove data added in STARTUP
"RTN","A1AEUBLD",23,0)
 D SHUTDOWN^A1AEUBL1
"RTN","A1AEUBLD",24,0)
 Q
"RTN","A1AEUBLD",25,0)
 ;
"RTN","A1AEUBLD",26,0)
BUILDGLO ;@TEST test global build structure
"RTN","A1AEUBLD",27,0)
 N BUILDIEN,PATCHIEN,GLOBLOC,NAME,PKG,DDATA,TRANDATA,TRANNAME,TRANPKG
"RTN","A1AEUBLD",28,0)
 S BUILDIEN=^TMP("A1AEUBL1",$J,"A1AEUBLD")
"RTN","A1AEUBLD",29,0)
 S PATCHIEN=^TMP("A1AEUBL1",$J,"A1AEUPAT")
"RTN","A1AEUBLD",30,0)
 S GLOBLOC=$NA(^XTMP("A1AEBLD",$J,PATCHIEN,"PATCHES"))
"RTN","A1AEUBLD",31,0)
 ;
"RTN","A1AEUBLD",32,0)
 K @GLOBLOC
"RTN","A1AEUBLD",33,0)
 D BUILDGLO^A1AEBLD(PATCHIEN,GLOBLOC)
"RTN","A1AEUBLD",34,0)
 ;
"RTN","A1AEUBLD",35,0)
 S NAME=$P(^A1AE(11005,PATCHIEN,0),U)
"RTN","A1AEUBLD",36,0)
 S TRANNAME=$G(@GLOBLOC@("FLDS",.01))
"RTN","A1AEUBLD",37,0)
 D CHKEQ(NAME,TRANNAME,"Incorrect first piece of zero node (NAME)")
"RTN","A1AEUBLD",38,0)
 ;
"RTN","A1AEUBLD",39,0)
 S PKG=$P(^A1AE(11005,PATCHIEN,0),U,2),PKG=$P($G(^DIC(9.4,+PKG,0)),U)
"RTN","A1AEUBLD",40,0)
 S TRANPKG=$G(@GLOBLOC@("FLDS",2))
"RTN","A1AEUBLD",41,0)
 D CHKEQ(PKG,TRANPKG,"Incorrect value for external value for pointer")
"RTN","A1AEUBLD",42,0)
 ;
"RTN","A1AEUBLD",43,0)
 S DDATA=$G(^A1AE(11005,PATCHIEN,"P",1,0))
"RTN","A1AEUBLD",44,0)
 S TRANDATA=$G(@GLOBLOC@("MULT","P",1,0))
"RTN","A1AEUBLD",45,0)
 D CHKEQ(DDATA,TRANDATA,"Incorrect data string from node ""P""")
"RTN","A1AEUBLD",46,0)
 ;
"RTN","A1AEUBLD",47,0)
 ;K ^XTMP(GLOBLOC,BUILDIEN)
"RTN","A1AEUBLD",48,0)
 Q
"RTN","A1AEUBLD",49,0)
 ;
"RTN","A1AEUBLD",50,0)
GETIEN ; @TEST get IEN for specified NAME (.01 field value) in file FILE
"RTN","A1AEUBLD",51,0)
 N IENVAL,NAME,IEN
"RTN","A1AEUBLD",52,0)
 ; just pick an entry and make sure we get back the correct ien for name field
"RTN","A1AEUBLD",53,0)
 S IENVAL=$O(^VA(200,1)) Q:IENVAL'>0  S NAME=$P(^VA(200,IENVAL,0),U) D
"RTN","A1AEUBLD",54,0)
 . S IEN=$$GETIEN^A1AEBLD(200,NAME)
"RTN","A1AEUBLD",55,0)
 . D CHKEQ(IENVAL,IEN,"DID NOT FIND IEN FOR SPECIFIED USER NAME")
"RTN","A1AEUBLD",56,0)
 . Q
"RTN","A1AEUBLD",57,0)
 Q
"RTN","A1AEUBLD",58,0)
 ;
"RTN","A1AEUBLD",59,0)
NOTEXIST ; @TEST value for GETIEN for nonexistent patch name
"RTN","A1AEUBLD",60,0)
 N NONNAME,IEN
"RTN","A1AEUBLD",61,0)
 S NONNAME="XXX?YY?ZZ"
"RTN","A1AEUBLD",62,0)
 F  Q:'$D(^A1AE(11005,"B",NONNAME))  S NONNAME=NONNAME_"B"
"RTN","A1AEUBLD",63,0)
 S IEN=$$GETIEN^A1AEBLD(11005,NONNAME)
"RTN","A1AEUBLD",64,0)
 I +IEN'=0 D FAIL("GETIEN returned an IEN for a non-existent name")
"RTN","A1AEUBLD",65,0)
 Q
"RTN","A1AEUBLD",66,0)
 ;
"RTN","A1AEUBLD",67,0)
GETNODES ; @TEST get list of nodes to be transferred
"RTN","A1AEUBLD",68,0)
 N NODES
"RTN","A1AEUBLD",69,0)
 D GETNODES^A1AEBLD(.NODES)
"RTN","A1AEUBLD",70,0)
 D CHKTF(NODES(0)[";102","Returned zero node didn't contain ;102 but was "_$G(NODES(0)))
"RTN","A1AEUBLD",71,0)
 D CHKEQ(".01;.2;2;3;4;5;6;7;18;40;5.7;102",NODES(0),"Incorrect value for node 0 returned: "_NODES(0))
"RTN","A1AEUBLD",72,0)
 D CHKTF('$D(NODES(2)),"Should not have returned a value for NODE 2")
"RTN","A1AEUBLD",73,0)
 D CHKTF($D(NODES(3)),"Failed to return a value for node 3")
"RTN","A1AEUBLD",74,0)
 Q
"RTN","A1AEUBLD",75,0)
 ;
"RTN","A1AEUBLD",76,0)
CHKDATA ;@TEST get data for specific node
"RTN","A1AEUBLD",77,0)
 N I,IEN,NODES,RETURN,X
"RTN","A1AEUBLD",78,0)
 F IEN=0:0 S IEN=$O(^A1AE(11005,IEN)) Q:IEN'>0  I $D(^(IEN,"P"))>1 Q
"RTN","A1AEUBLD",79,0)
        I IEN'>0 Q
"RTN","A1AEUBLD",80,0)
 D GETNODES^A1AEBLD(.NODES)
"RTN","A1AEUBLD",81,0)
 D GETDATA^A1AEBLD(.RETURN,11005,IEN,NODES(0))
"RTN","A1AEUBLD",82,0)
 D CHKTF($D(RETURN(0)),"NO DATA RETURNED FROM COPYNODE FOR NODE 0")
"RTN","A1AEUBLD",83,0)
 D CHKEQ($P(^A1AE(11005,IEN,0),U),RETURN(0,"FLDS",.01),"Incorrect value for 1st piece of zero node")
"RTN","A1AEUBLD",84,0)
 D CHKEQ($P(^DIC(9.4,+$P(^A1AE(11005,IEN,0),U,2),0),U),RETURN(0,"FLDS",2),"Incorrect external value for piece 2 of zero node")
"RTN","A1AEUBLD",85,0)
 F I=8:1:17 S X=$P(^A1AE(11005,IEN,0),U,I) Q:X'=""
"RTN","A1AEUBLD",86,0)
 I X'="" D CHKTF($G(RETURN(0,"FLDS",I))="","Data at node 0, piece "_I_" is being transported that shouldn't be")
"RTN","A1AEUBLD",87,0)
 D GETMULT^A1AEBLD(.RETURN,IEN,"P")
"RTN","A1AEUBLD",88,0)
 D CHKTF($D(RETURN("P"))>1,"Expected multiple not returned for node ""P""")
"RTN","A1AEUBLD",89,0)
 Q
"RTN","A1AEUBLD",90,0)
 ;
"RTN","A1AEUBLD",91,0)
GETMULT ; @TEST return multiple values
"RTN","A1AEUBLD",92,0)
 N DONE,IEN,NODE,RETURN,SIEN,SUBS1,VAL1,VAL2,X,XNODE
"RTN","A1AEUBLD",93,0)
 S DONE=0 F IEN=0:0 Q:DONE  S IEN=$O(^A1AE(11005,IEN)) Q:IEN'>0  S NODE="" D
"RTN","A1AEUBLD",94,0)
 . F  Q:DONE  S NODE=$O(^A1AE(11005,IEN,NODE)) Q:NODE=""  I $D(^(NODE))>1 S SIEN="" D
"RTN","A1AEUBLD",95,0)
 . . F  S SIEN=$O(^A1AE(11005,IEN,NODE,SIEN)) Q:SIEN=""  I SIEN>0 S DONE=1 Q
"RTN","A1AEUBLD",96,0)
 . . Q
"RTN","A1AEUBLD",97,0)
 . Q
"RTN","A1AEUBLD",98,0)
 I (IEN'>0)!(NODE="")!(SIEN="") Q
"RTN","A1AEUBLD",99,0)
 M X(NODE)=^A1AE(11005,IEN,NODE)
"RTN","A1AEUBLD",100,0)
 D GETMULT^A1AEBLD(.RETURN,IEN,NODE)
"RTN","A1AEUBLD",101,0)
 S XNODE="X" F  S XNODE=$Q(@XNODE) Q:XNODE=""  D
"RTN","A1AEUBLD",102,0)
 . S SUBS1=$P(XNODE,"X(",2,99),VAL1=@XNODE
"RTN","A1AEUBLD",103,0)
 . S VAL2=$G(@("RETURN("""_NODE_""",""MULT"","_SUBS1))
"RTN","A1AEUBLD",104,0)
 . D CHKTF($D(@("RETURN("""_NODE_""",""MULT"","_SUBS1))=1,"Incorrect match expected node at RETURN("_SUBS1)
"RTN","A1AEUBLD",105,0)
 . D CHKEQ(VAL1,VAL2,"Incorrect data returned for RETURN("_SUBS1)
"RTN","A1AEUBLD",106,0)
 . Q
"RTN","A1AEUBLD",107,0)
 Q
"RTN","A1AEUBLD",108,0)
 ;
"RTN","A1AEUBLD",109,0)
GETBASE ; @TEST Check return of base location for install
"RTN","A1AEUBLD",110,0)
 N TESTNAME,TESTIEN,TESTBLD,TESTRSLT,TESTVAL
"RTN","A1AEUBLD",111,0)
 ; create a non-existent patch number, use routine name and DUZ
"RTN","A1AEUBLD",112,0)
 S TESTNAME="A1AEUBLD"_DUZ_"*1.2*54"
"RTN","A1AEUBLD",113,0)
 ; check for failure return if doesn't exist
"RTN","A1AEUBLD",114,0)
 K ^XPD(9.7,"B",TESTNAME)
"RTN","A1AEUBLD",115,0)
 S TESTVAL=$$GETBASE^A1AEBLD(.TESTRSLT,TESTNAME)
"RTN","A1AEUBLD",116,0)
 D CHKTF(TESTVAL=0,"Did not indicate failure if no INSTALL entry present")
"RTN","A1AEUBLD",117,0)
 ; create a "B" cross reference for a non-existent patch id in a high number for the INSTALL file (#9.7)
"RTN","A1AEUBLD",118,0)
 S TESTIEN=$P(^XPD(9.7,0),U,3)+100 F  Q:'$D(^XPD(9.7,TESTIEN))  S TESTIEN=TESTIEN+1
"RTN","A1AEUBLD",119,0)
 S ^XPD(9.7,"B",TESTNAME,TESTIEN)=""
"RTN","A1AEUBLD",120,0)
 K ^XTMP("XPDI",TESTIEN)
"RTN","A1AEUBLD",121,0)
 S TESTVAL=$$GETBASE^A1AEBLD(.TESTRSLT,TESTNAME)
"RTN","A1AEUBLD",122,0)
 D CHKTF(TESTVAL=0,"Did not indicate failure if INSTALL entry present, but no entry in ^XTMP(""XPDI""")
"RTN","A1AEUBLD",123,0)
 ; create a dummy XPDI entry
"RTN","A1AEUBLD",124,0)
 S ^XTMP("XPDI",TESTIEN,"PATCHES",14)=""
"RTN","A1AEUBLD",125,0)
 S TESTVAL=$$GETBASE^A1AEBLD(.TESTRSLT,TESTNAME)
"RTN","A1AEUBLD",126,0)
 I TESTVAL>0 D CHKEQ(TESTRSLT,$NA(^XTMP("XPDI",TESTIEN,"PATCHES")),"Incorrect value returned")
"RTN","A1AEUBLD",127,0)
 K ^XTMP("XPDI",TESTIEN,"PATCHES")
"RTN","A1AEUBLD",128,0)
 ; create a dummy "B" cross reference in BUILD file (#9.6)
"RTN","A1AEUBLD",129,0)
 S TESTBLD=$P(^XPD(9.6,0),U,3)+100
"RTN","A1AEUBLD",130,0)
 S ^XPD(9.6,"B",TESTNAME,TESTBLD)=""
"RTN","A1AEUBLD",131,0)
 S ^XTMP("XPDI",TESTBLD,"PATCHES",14)=""
"RTN","A1AEUBLD",132,0)
 S TESTVAL=$$GETBASE^A1AEBLD(.TESTRSLT,TESTNAME)
"RTN","A1AEUBLD",133,0)
 I TESTVAL>0 D CHKEQ(TESTRSLT,$NA(^XTMP("XPDI",TESTIEN,"BLD",TESTBLD,"PATCHES")),"Incorrect value after BUILD number returned")
"RTN","A1AEUBLD",134,0)
 ; and clean up
"RTN","A1AEUBLD",135,0)
 K ^XPD(9.7,"B",TESTNAME,TESTIEN),^XPD(9.6,"B",TESTNAME,TESTBLD),^XTMP("XPDI",TESTIEN,"BLD",TESTBLD,"PATCHES",14)
"RTN","A1AEUBLD",136,0)
 Q
"RTN","A1AEUBLD",137,0)
 ;
"RTN","A1AEUBLD",138,0)
CHKPACKG ; @TEST Check for PACKAGE entry present, if not add it
"RTN","A1AEUBLD",139,0)
 N A1AEBASE,A1AEIEN,DA,DIE,DR,PACKGNAM
"RTN","A1AEUBLD",140,0)
 ; setup
"RTN","A1AEUBLD",141,0)
 L +^DIC(9.4):0 I '$T W !,"Unable to get Lock on PACKAGE file (#9.4)" Q
"RTN","A1AEUBLD",142,0)
 S PACKGNAM="A1AE"_DUZ
"RTN","A1AEUBLD",143,0)
 S A1AEBASE=$NA(^XTMP("XPDI","A1AE"_$J,"PATCHES")) K @A1AEBASE
"RTN","A1AEUBLD",144,0)
 S @A1AEBASE@("FLDS",2)=PACKGNAM
"RTN","A1AEUBLD",145,0)
 S @A1AEBASE@(9.4,"FLDS",.01)=PACKGNAM
"RTN","A1AEUBLD",146,0)
 S @A1AEBASE@(9.4,"FLDS",1)="ZZA" ; PREFIX
"RTN","A1AEUBLD",147,0)
 S @A1AEBASE@(9.4,"FLDS",2)="TEST PACKAGE NAME" ; SHORT DESCRIPTION
"RTN","A1AEUBLD",148,0)
 ; perform action
"RTN","A1AEUBLD",149,0)
 D CHKPACKG^A1AEBLD(A1AEBASE)
"RTN","A1AEUBLD",150,0)
 ; and run tests
"RTN","A1AEUBLD",151,0)
 S A1AEIEN=$O(^DIC(9.4,"B",PACKGNAM,""))
"RTN","A1AEUBLD",152,0)
 D CHKTF(A1AEIEN>0,"No IEN found for new PACKAGE file entry, update failed") I A1AEIEN>0 D
"RTN","A1AEUBLD",153,0)
 . D CHKEQ(PACKGNAM_"^ZZA^TEST PACKAGE NAME",$P($G(^DIC(9.4,A1AEIEN,0)),U,1,3),"Incorrect data present after update")
"RTN","A1AEUBLD",154,0)
 . S DIK="^DIC(9.4,",DA=A1AEIEN D ^DIK
"RTN","A1AEUBLD",155,0)
 . Q
"RTN","A1AEUBLD",156,0)
 K @A1AEBASE
"RTN","A1AEUBLD",157,0)
 L -^DIC(9.4)
"RTN","A1AEUBLD",158,0)
 Q
"RTN","A1AEUBLD",159,0)
 ;
"RTN","A1AEUBLD",160,0)
CHKSTREM ; @TEST Check for STREAM entry present, if not add it
"RTN","A1AEUBLD",161,0)
 N A1AEBASE,A1AEIEN,DA,DIE,DR,STRMNAME,A1AEORIG
"RTN","A1AEUBLD",162,0)
 L +^A1AE(11007.1):0 I '$T W !,"Unable to get Lock on DHCP PATCH STREAM file (#11007.1)",! Q
"RTN","A1AEUBLD",163,0)
 S STRMNAME="A1AE"_DUZ
"RTN","A1AEUBLD",164,0)
 S A1AEBASE=$NA(^XTMP("XPDI","A1AE"_$J,"PATCHES")) K @A1AEBASE
"RTN","A1AEUBLD",165,0)
 S @A1AEBASE@("FLDS",.2)=STRMNAME
"RTN","A1AEUBLD",166,0)
 S @A1AEBASE@(11007.1,"FLDS",.001)=20001
"RTN","A1AEUBLD",167,0)
 S @A1AEBASE@(11007.1,"FLDS",.01)=STRMNAME
"RTN","A1AEUBLD",168,0)
 S @A1AEBASE@(11007.1,"FLDS",.02)="NO" ; PRIMARY
"RTN","A1AEUBLD",169,0)
 S @A1AEBASE@(11007.1,"FLDS",.05)="UU" ; ABBREVIATION
"RTN","A1AEUBLD",170,0)
 ;S @A1AEBASE@(11007.1,"FLDS",.06)="NO" ; SUBSCRIPTION
"RTN","A1AEUBLD",171,0)
 S A1AEORIG=^A1AE(11007.1,0)
"RTN","A1AEUBLD",172,0)
 ;
"RTN","A1AEUBLD",173,0)
 D CHKSTREM^A1AEBLD(A1AEBASE)
"RTN","A1AEUBLD",174,0)
 ;
"RTN","A1AEUBLD",175,0)
 S A1AEIEN=$O(^A1AE(11007.1,"B",STRMNAME,""))
"RTN","A1AEUBLD",176,0)
 D CHKTF(A1AEIEN>0,"No IEN found for new DHCP PATCH STREAM entry, update failed") I A1AEIEN>0 D
"RTN","A1AEUBLD",177,0)
 . D CHKEQ(STRMNAME_"^0^^^UU",$P($G(^A1AE(11007.1,A1AEIEN,0)),U,1,6),"Incorrect data present after update")
"RTN","A1AEUBLD",178,0)
 . Q
"RTN","A1AEUBLD",179,0)
 I ^A1AE(11007.1,0)'=A1AEORIG S DA=+$P(^A1AE(11007.1,0),U,3) I $P(^A1AE(11007.1,DA,0),U)=STRMNAME D
"RTN","A1AEUBLD",180,0)
 . K ^A1AE(11007.1,DA)
"RTN","A1AEUBLD",181,0)
 . K ^A1AE(11007.1,"B",STRMNAME)
"RTN","A1AEUBLD",182,0)
 . K ^A1AE(11007.1,"C","UU")
"RTN","A1AEUBLD",183,0)
 . S ^A1AE(11007.1,0)=A1AEORIG
"RTN","A1AEUBLD",184,0)
 . Q
"RTN","A1AEUBLD",185,0)
 L -^A1AE(11007.1)
"RTN","A1AEUBLD",186,0)
 K @A1AEBASE
"RTN","A1AEUBLD",187,0)
 Q
"RTN","A1AEUBLD",188,0)
 ;
"RTN","A1AEUBLD",189,0)
UPDATFIL ; @TEST
"RTN","A1AEUBLD",190,0)
        N A1AEBASE,A1AEPTID,A1AETEST,A1AETSTL,A1AEIEN,PATMOD,A1AEZERO,A1AEVAL
"RTN","A1AEUBLD",191,0)
 ;
"RTN","A1AEUBLD",192,0)
 S A1AEBASE=$NA(^XTMP("XPDI","A1"_$J,"PATCHES"))
"RTN","A1AEUBLD",193,0)
 D SETDATA(A1AEBASE)
"RTN","A1AEUBLD",194,0)
 S A1AEPTID=@A1AEBASE@("FLDS",.01)
"RTN","A1AEUBLD",195,0)
 ;
"RTN","A1AEUBLD",196,0)
 D UPDATFIL^A1AEBLD(A1AEBASE)
"RTN","A1AEUBLD",197,0)
 ; remove .0 from version number if present
"RTN","A1AEUBLD",198,0)
        S A1AETEST=$P(A1AEPTID,"*",2),A1AETSTL=$L(A1AETEST) I $E(A1AETEST,A1AETSTL-1,A1AETSTL)=".0" S A1AEPTID=$P(A1AEPTID,"*")_"*"_$E(A1AETEST,1,A1AETSTL-2)_"*"_$P(A1AEPTID,"*",3,99)
"RTN","A1AEUBLD",199,0)
        ;
"RTN","A1AEUBLD",200,0)
 S A1AEIEN=$O(^A1AE(11004,"B",A1AEPTID,0))
"RTN","A1AEUBLD",201,0)
 D CHKTF(A1AEIEN>0,"No B x-ref for new entry in DHCP PATCHES file")
"RTN","A1AEUBLD",202,0)
 I A1AEIEN>0 D
"RTN","A1AEUBLD",203,0)
 . S PATMOD=$O(^DIC(9.4,"B","PATCH MODULE",0))
"RTN","A1AEUBLD",204,0)
 . S A1AEZERO=^A1AE(11004,A1AEIEN,0)
"RTN","A1AEUBLD",205,0)
 . D CHKEQ($P(A1AEZERO,U,1,7),A1AEPTID_U_PATMOD_"^1.0^1^Unit Tests: Testing this one^12^m","Not the expected values for pieces 1 to 7 of zero node")
"RTN","A1AEUBLD",206,0)
 . S A1AEVAL=$$FMTE^XLFDT($P(A1AEZERO,U,18))
"RTN","A1AEUBLD",207,0)
 . D CHKEQ(@A1AEBASE@("FLDS",18),A1AEVAL,"FileMan date ("_$P(A1AEZERO,U,18)_") on conversion to external value didn't match input")
"RTN","A1AEUBLD",208,0)
 . N STREAM S STREAM=$O(^A1AE(11007.1,"B","FOIA VISTA",0))
"RTN","A1AEUBLD",209,0)
 . D CHKEQ($P(A1AEZERO,U,20),STREAM,"Incorrect entry for DHCP PATCH STREAM")
"RTN","A1AEUBLD",210,0)
 . N PATCH S PATCH=@A1AEBASE@("FLDS",5.7)
"RTN","A1AEUBLD",211,0)
 . N PATCHIEN S PATCHIEN=$O(^A1AE(11004,"B",PATCH,0))
"RTN","A1AEUBLD",212,0)
 . D CHKEQ(PATCHIEN,$P($G(^A1AE(11004,A1AEIEN,5)),U,7),"Incorrect value for UPDATE TO PATCH field")
"RTN","A1AEUBLD",213,0)
 . D CHKEQ(@A1AEBASE@("FLDS",40),$P($G(^A1AE(11004,A1AEIEN,4)),U),"Incorrect value for NEW PACKAGE field")
"RTN","A1AEUBLD",214,0)
 . D CHKEQ(@A1AEBASE@("FLDS",102),$P($G(^A1AE(11004,A1AEIEN,"P2")),U),"Incorrect value for SECOND LINE field")
"RTN","A1AEUBLD",215,0)
 . D CHKEQ(@A1AEBASE@("MULT",3,0),$G(^A1AE(11004,A1AEIEN,3,0)),"Incorrect value for zero node of subfile 11004.19")
"RTN","A1AEUBLD",216,0)
 . D CHKEQ(@A1AEBASE@("MULT",3,1,0),$G(^A1AE(11004,A1AEIEN,3,1,0)),"Incorrect data entry in subfile 11004.19")
"RTN","A1AEUBLD",217,0)
 . D CHKEQ(@A1AEBASE@("MULT","C",0),$G(^A1AE(11004,A1AEIEN,"C",0)),"Incorrect value for zero node of subfile 11004.05")
"RTN","A1AEUBLD",218,0)
 . D CHKEQ(@A1AEBASE@("MULT","C",1,0),$G(^A1AE(11004,A1AEIEN,"C",1,0)),"Incorrect data entry in subfile 11004.05")
"RTN","A1AEUBLD",219,0)
 . D CHKEQ(@A1AEBASE@("MULT","D",0),$G(^A1AE(11004,A1AEIEN,"D",0)),"Incorrect value for zero node in subfile 11004.01")
"RTN","A1AEUBLD",220,0)
 . D CHKEQ(@A1AEBASE@("MULT","D",2,0),$G(^A1AE(11004,A1AEIEN,"D",2,0)),"Incorrect data for second line in subfile 11004.01")
"RTN","A1AEUBLD",221,0)
 . D CHKEQ(@A1AEBASE@("MULT","P",0),$G(^A1AE(11004,A1AEIEN,"P",0)),"Incorrect value for zero node in subfile 11004.03")
"RTN","A1AEUBLD",222,0)
 . D CHKEQ(@A1AEBASE@("MULT","P",2,0),$G(^A1AE(11004,A1AEIEN,"P",2,0)),"Incorrect data for second line in subfile 11004.03")
"RTN","A1AEUBLD",223,0)
 . D CHKTF($D(^A1AE(11004,A1AEIEN,"P","B","A1AEROU2",2)),"Incorrect or missing x-ref for A1AEROU2 in subfile 11004.03")
"RTN","A1AEUBLD",224,0)
 . ; and remove data added
"RTN","A1AEUBLD",225,0)
 . N DIK,DA S DIK="^A1AE(11004,",DA=A1AEIEN D ^DIK
"RTN","A1AEUBLD",226,0)
 . Q
"RTN","A1AEUBLD",227,0)
 K @A1AEBASE
"RTN","A1AEUBLD",228,0)
 Q
"RTN","A1AEUBLD",229,0)
 ;
"RTN","A1AEUBLD",230,0)
SETDATA(A1AEBASE) ; setup data for UPDATFIL testing
"RTN","A1AEUBLD",231,0)
 S @A1AEBASE@("FLDS",.01)="A1AE*1.0*915"
"RTN","A1AEUBLD",232,0)
 S @A1AEBASE@("FLDS",.2)="FOIA VISTA"
"RTN","A1AEUBLD",233,0)
 S @A1AEBASE@("FLDS",2)="PATCH MODULE"
"RTN","A1AEUBLD",234,0)
 S @A1AEBASE@("FLDS",3)="1.0"
"RTN","A1AEUBLD",235,0)
 S @A1AEBASE@("FLDS",4)="1"
"RTN","A1AEUBLD",236,0)
 S @A1AEBASE@("FLDS",5)="Unit Tests: Testing this one"
"RTN","A1AEUBLD",237,0)
 S @A1AEBASE@("FLDS",5.7)="DI*22.2*10001"
"RTN","A1AEUBLD",238,0)
 S @A1AEBASE@("FLDS",6)="12"
"RTN","A1AEUBLD",239,0)
 S @A1AEBASE@("FLDS",7)="MANDATORY"
"RTN","A1AEUBLD",240,0)
 S @A1AEBASE@("FLDS",18)=$$FMTE^XLFDT($P($$FMADD^XLFDT($$NOW^XLFDT(),30),"."))
"RTN","A1AEUBLD",241,0)
 S @A1AEBASE@("FLDS",40)="TEST 1.0"
"RTN","A1AEUBLD",242,0)
 S @A1AEBASE@("FLDS",102)=";;8.0;KERNEL;**71,120,166,168,179,280**;Jul 10, 1995"
"RTN","A1AEUBLD",243,0)
 S @A1AEBASE@("MULT",3,0)="^11004.019^1^1"
"RTN","A1AEUBLD",244,0)
 S @A1AEBASE@("MULT",3,1,0)="TEXT FOR COMPLIANCE DATE COMMENT"
"RTN","A1AEUBLD",245,0)
 S @A1AEBASE@("MULT","C",0)="^11004.05SA^1^1"
"RTN","A1AEUBLD",246,0)
 S @A1AEBASE@("MULT","C",1,0)="r"
"RTN","A1AEUBLD",247,0)
 S @A1AEBASE@("MULT","D",0)="^11004.01^2^2^3140918^^^^"
"RTN","A1AEUBLD",248,0)
 S @A1AEBASE@("MULT","D",1,0)="Description text line 1 "
"RTN","A1AEUBLD",249,0)
 S @A1AEBASE@("MULT","D",2,0)="Description text line 2 "
"RTN","A1AEUBLD",250,0)
 S @A1AEBASE@("MULT","P",0)="^11004.03A^2^2"
"RTN","A1AEUBLD",251,0)
 S @A1AEBASE@("MULT","P",1,0)="A1AEROU1"
"RTN","A1AEUBLD",252,0)
 S @A1AEBASE@("MULT","P",2,0)="A1AEROU2"
"RTN","A1AEUBLD",253,0)
 S @A1AEBASE@("MULT","P","B","A1AEROU1",1)=""
"RTN","A1AEUBLD",254,0)
 S @A1AEBASE@("MULT","P","B","A1AEROU2",2)=""
"RTN","A1AEUBLD",255,0)
 Q
"RTN","A1AEUBLD",256,0)
 ;
"RTN","A1AEUBLD",257,0)
CHKEQ(ACT,VAL,COMMENT) ;
"RTN","A1AEUBLD",258,0)
 D CHKEQ^%ut(ACT,VAL,COMMENT)
"RTN","A1AEUBLD",259,0)
 Q
"RTN","A1AEUBLD",260,0)
 ;
"RTN","A1AEUBLD",261,0)
CHKTF(TFVALUE,COMMENT) ;
"RTN","A1AEUBLD",262,0)
 D CHKTF^%ut(TFVALUE,COMMENT)
"RTN","A1AEUBLD",263,0)
 Q
"RTN","A1AEUBLD",264,0)
 ;
"RTN","A1AEUBLD",265,0)
FAIL(COMMENT) ;
"RTN","A1AEUBLD",266,0)
 D FAIL^%ut(COMMENT)
"RTN","A1AEUBLD",267,0)
 Q
"RTN","A1AEUBLD",268,0)
 ;
"RTN","A1AEUDD")
0^66^B20611297
"RTN","A1AEUDD",1,0)
A1AEUDD ;ven/jli-unit tests for Data Dictionary code ;2015-05-22T17:33
"RTN","A1AEUDD",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUDD",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUDD",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUDD",5,0)
 ;
"RTN","A1AEUDD",6,0)
 ;
"RTN","A1AEUDD",7,0)
 D EN^%ut($T(+0))
"RTN","A1AEUDD",8,0)
 Q
"RTN","A1AEUDD",9,0)
 ;
"RTN","A1AEUDD",10,0)
VERBOSE ;
"RTN","A1AEUDD",11,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUDD",12,0)
 Q
"RTN","A1AEUDD",13,0)
 ;
"RTN","A1AEUDD",14,0)
PLU949 ; @test prelookup transform for VERSION sub file in 9.4
"RTN","A1AEUDD",15,0)
 N X
"RTN","A1AEUDD",16,0)
 S X="15" D PLU949^A1AEDD1
"RTN","A1AEUDD",17,0)
 D CHKTF^%ut(X="15.0","failed to add decimal zero returned X="_X)
"RTN","A1AEUDD",18,0)
 S X="15." D PLU949^A1AEDD1
"RTN","A1AEUDD",19,0)
 D CHKTF^%ut(X="15.0","failed to identify . no digit returned X="_X)
"RTN","A1AEUDD",20,0)
 S X="15.01" D PLU949^A1AEDD1
"RTN","A1AEUDD",21,0)
 D CHKTF^%ut(X="15.01","failed on .01 as part of value returned X="_X)
"RTN","A1AEUDD",22,0)
 S X="15P2" D PLU949^A1AEDD1
"RTN","A1AEUDD",23,0)
 D CHKTF^%ut(X="15.0P2","failed on Numeric alpha numeric returned X="_X)
"RTN","A1AEUDD",24,0)
 Q
"RTN","A1AEUDD",25,0)
 ;
"RTN","A1AEUDD",26,0)
 ; CURRENTLY PLU96 and PLU97 run the same code, but they are
"RTN","A1AEUDD",27,0)
 ; included for both, since they might be moved at aome time
"RTN","A1AEUDD",28,0)
 ;
"RTN","A1AEUDD",29,0)
PLU96 ; @TEST prelookup transform for file 9.6
"RTN","A1AEUDD",30,0)
 N X
"RTN","A1AEUDD",31,0)
 S X="PACKAGE 1" D PLU96^A1AEDD1
"RTN","A1AEUDD",32,0)
 D CHKTF^%ut(X="PACKAGE 1.0","failed on adding .0 to package version returned X="_X)
"RTN","A1AEUDD",33,0)
 S X="PK*4*1" D PLU96^A1AEDD1
"RTN","A1AEUDD",34,0)
 D CHKTF^%ut(X="PK*4.0*1","failed on adding .0 to * setup returned X="_X)
"RTN","A1AEUDD",35,0)
 S X="PK*4.*1T2" D PLU96^A1AEDD1
"RTN","A1AEUDD",36,0)
 D CHKTF^%ut(X="PK*4.0*1T2","failed on adding zero after decimal returned X="_X)
"RTN","A1AEUDD",37,0)
 Q
"RTN","A1AEUDD",38,0)
 ;
"RTN","A1AEUDD",39,0)
PLU97 ; @TEST prelookup transform for file 9.7
"RTN","A1AEUDD",40,0)
 N X
"RTN","A1AEUDD",41,0)
 S X="PACKAGE 1" D PLU97^A1AEDD1
"RTN","A1AEUDD",42,0)
 D CHKTF^%ut(X="PACKAGE 1.0","failed on adding .0 to package version returned X="_X)
"RTN","A1AEUDD",43,0)
 S X="PK*4*1" D PLU97^A1AEDD1
"RTN","A1AEUDD",44,0)
 D CHKTF^%ut(X="PK*4.0*1","failed on adding .0 to * setup returned X="_X)
"RTN","A1AEUDD",45,0)
 S X="PK*4.*1T2" D PLU97^A1AEDD1
"RTN","A1AEUDD",46,0)
 D CHKTF^%ut(X="PK*4.0*1T2","failed on adding zero after decimal returned X="_X)
"RTN","A1AEUDD",47,0)
 Q
"RTN","A1AEUDD",48,0)
 ;
"RTN","A1AEUDD",49,0)
PLU11005 ; @TEST prelookup transform for file 11005
"RTN","A1AEUDD",50,0)
 N X
"RTN","A1AEUDD",51,0)
 I '$D(^DIC(11005)) Q
"RTN","A1AEUDD",52,0)
 S X="PACKAGE 1.0" D PLU11005^A1AEDD1
"RTN","A1AEUDD",53,0)
 D CHKTF^%ut(X="PACKAGE 1","Didn't remove terminal .0 returned X="_X)
"RTN","A1AEUDD",54,0)
 S X="PK*1.0*2" D PLU11005^A1AEDD1
"RTN","A1AEUDD",55,0)
 D CHKTF^%ut(X="PK*1*2","Didn't remove .0 from * format, returned X="_X)
"RTN","A1AEUDD",56,0)
 S X="PK*1.02*2T3" D PLU11005^A1AEDD1
"RTN","A1AEUDD",57,0)
 D CHKTF^%ut(X="PK*1.02*2T3","Didn't handle multiple decimal places, returned X="_X)
"RTN","A1AEUDD",58,0)
 S X="PK*1.0*2T3" D PLU11005^A1AEDD1
"RTN","A1AEUDD",59,0)
 D CHKTF^%ut(X="PK*1*2T3","Didn't remove .0 from full * format, returned X="_X)
"RTN","A1AEUDD",60,0)
 S X="PK" D PLU11005^A1AEDD1
"RTN","A1AEUDD",61,0)
 D CHKTF^%ut(X="PK","Didn't return original without any numbers")
"RTN","A1AEUDD",62,0)
 Q
"RTN","A1AEUDD",63,0)
 ;
"RTN","A1AEUDD",64,0)
PLU11004 ; @TEST prelookup transform for file 11004
"RTN","A1AEUDD",65,0)
 N X
"RTN","A1AEUDD",66,0)
 I '$D(^DIC(11004)) Q
"RTN","A1AEUDD",67,0)
 S X="PACKAGE 1.0" D PLU11004^A1AEDD1
"RTN","A1AEUDD",68,0)
 D CHKTF^%ut(X="PACKAGE 1","Didn't remove terminal .0 returned X="_X)
"RTN","A1AEUDD",69,0)
 S X="PK*1.0*2" D PLU11004^A1AEDD1
"RTN","A1AEUDD",70,0)
 D CHKTF^%ut(X="PK*1*2","Didn't remove .0 from * format, returned X="_X)
"RTN","A1AEUDD",71,0)
 S X="PK*1.02*2T3" D PLU11004^A1AEDD1
"RTN","A1AEUDD",72,0)
 D CHKTF^%ut(X="PK*1.02*2T3","Didn't handle multiple decimal places, returned X="_X)
"RTN","A1AEUDD",73,0)
 S X="PK*1.0*2T3" D PLU11004^A1AEDD1
"RTN","A1AEUDD",74,0)
 D CHKTF^%ut(X="PK*1*2T3","Didn't remove .0 from full * format, returned X="_X)
"RTN","A1AEUDD",75,0)
 S X="PK" D PLU11004^A1AEDD1
"RTN","A1AEUDD",76,0)
 D CHKTF^%ut(X="PK","Didn't return original without any numbers")
"RTN","A1AEUDD",77,0)
 Q
"RTN","A1AEUDD",78,0)
 ;
"RTN","A1AEUDD",79,0)
A1AESEQ ; @TEST cross reference for sequence by package, version
"RTN","A1AEUDD",80,0)
 N PKGDA,VERDA,DAMIN,FDA,A1AEIEN,DA,DIK,A1AEMSG,PKGNAM,VERNUM
"RTN","A1AEUDD",81,0)
        S PKGDA=$O(^DIC(9.4,"B","PATCH MODULE",""))
"RTN","A1AEUDD",82,0)
        I PKGDA'>0 S PKGDA=$O(^DIC(9.4,"B","PATCH CLIENT","")) I PKGDA'>0 W !,"PACKAGE NOT FOUND" Q
"RTN","A1AEUDD",83,0)
 S PKGNAM=$P(^DIC(9.4,PKGDA,0),U,2)
"RTN","A1AEUDD",84,0)
 S VERDA=$O(^DIC(9.4,PKGDA,22," "),-1),VERNUM=$P(^DIC(9.4,PKGDA,22,VERDA,0),U)
"RTN","A1AEUDD",85,0)
 S DAMIN=$O(^DIC(9.4,PKGDA,22,VERDA,"PAH"," "),-1) S DAMIN=DAMIN+100
"RTN","A1AEUDD",86,0)
 S FDA(9.4901,"+"_DAMIN_","_VERDA_","_PKGDA_",",.01)="996 SEQ #996"
"RTN","A1AEUDD",87,0)
 S A1AEIEN(DAMIN)=DAMIN
"RTN","A1AEUDD",88,0)
 D UPDATE^DIE("E","FDA","A1AEIEN","A1AEMSG")
"RTN","A1AEUDD",89,0)
        D CHKTF^%ut($D(^DIC(9.4,"A1AESEQ",PKGNAM,+VERNUM,1,996,"A1AE*"_+VERNUM_"*996")),"A1AESEQ CROSS-REFERENCE NOT FOUND")
"RTN","A1AEUDD",90,0)
 S DA(2)=PKGDA,DA(1)=VERDA,DA=$G(A1AEIEN(DAMIN)),DIK="^DIC(9.4,DA(2),22,DA(1),""PAH""," D ^DIK
"RTN","A1AEUDD",91,0)
 D CHKTF^%ut('$D(^DIC(9.4,"A1AESEQ",PKGNAM,VERNUM,1,996,"A1AE*"_VERNUM_"*996")),"A1AESEQ CROSS-REFERENCE WAS NOT REMOVED ON DELETION")
"RTN","A1AEUDD",92,0)
 Q
"RTN","A1AEUF1")
0^72^B187582876
"RTN","A1AEUF1",1,0)
A1AEUF1 ;ven/lgc,jli-unit tests for A1AEF1 ;2015-06-13  9:03 PM
"RTN","A1AEUF1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUF1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUF1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUF1",5,0)
 ;
"RTN","A1AEUF1",6,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUF1",7,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUF1",8,0)
 Q
"RTN","A1AEUF1",9,0)
 ;
"RTN","A1AEUF1",10,0)
STARTUP ;
"RTN","A1AEUF1",11,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUF1",12,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUF1",13,0)
 . S A1AEFAIL=1
"RTN","A1AEUF1",14,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUF1",15,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF1",16,0)
 ;
"RTN","A1AEUF1",17,0)
 I '$G(A1AEFAIL) N X S X=$$DELTBLDS I 'X D  Q
"RTN","A1AEUF1",18,0)
 . S A1AEFAIL=1
"RTN","A1AEUF1",19,0)
 . W !,"Unable to clear test builds"
"RTN","A1AEUF1",20,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF1",21,0)
 ;
"RTN","A1AEUF1",22,0)
 I '$G(A1AEFAIL) S X=$$SETUP1 I 'X D  Q
"RTN","A1AEUF1",23,0)
 . S A1AEFAIL=1
"RTN","A1AEUF1",24,0)
 . W !,"Unable to build array of BUILD names"
"RTN","A1AEUF1",25,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF1",26,0)
 ;
"RTN","A1AEUF1",27,0)
 I '$G(A1AEFAIL) S X=$$SETUP2 I 'X D  Q
"RTN","A1AEUF1",28,0)
 . S A1AEFAIL=1
"RTN","A1AEUF1",29,0)
 . W !,"Unable to complete entry of TEST builds"
"RTN","A1AEUF1",30,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF1",31,0)
 ;
"RTN","A1AEUF1",32,0)
 I '$G(A1AEFAIL) S X=$$SETUP3 I 'X D  Q
"RTN","A1AEUF1",33,0)
 . S A1AEFAIL=1
"RTN","A1AEUF1",34,0)
 . W !,"Unable to complete build interdependencies"
"RTN","A1AEUF1",35,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF1",36,0)
 Q
"RTN","A1AEUF1",37,0)
 ;
"RTN","A1AEUF1",38,0)
SHUTDOWN I '$G(A1AEFAIL) S X=$$DELTBLDS I 'X D
"RTN","A1AEUF1",39,0)
 . W !,"******* WARNING ********"
"RTN","A1AEUF1",40,0)
 . W !,"Unable to delete test BUILD entries after testing."
"RTN","A1AEUF1",41,0)
 . W !,"  BUILDS with names beginning with  A1AEXTST*1*"
"RTN","A1AEUF1",42,0)
 . W !,"  may need to be deleted manually."
"RTN","A1AEUF1",43,0)
 L -^XPD(9.6):1
"RTN","A1AEUF1",44,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUF1",45,0)
 K A1AEFAIL,BUILD
"RTN","A1AEUF1",46,0)
 Q
"RTN","A1AEUF1",47,0)
 ;
"RTN","A1AEUF1",48,0)
 ; Testing 
"RTN","A1AEUF1",49,0)
 ;   1. REQB^A1AEF1(BUILD,.BMARR)
"RTN","A1AEUF1",50,0)
 ;   2. MULB^A1AEF1(BUILD,.BMARR)
"RTN","A1AEUF1",51,0)
 ;   3. A1AEFRQB^A1AEF1(BUILD)
"RTN","A1AEUF1",52,0)
 ;   4. A1AEFMUB^A1AEF1(BUILD)
"RTN","A1AEUF1",53,0)
 ;
"RTN","A1AEUF1",54,0)
 ;
"RTN","A1AEUF1",55,0)
UTP1 I '$G(A1AEFAIL) S X=$$GETARR("R",.RMA) I 'X D  Q
"RTN","A1AEUF1",56,0)
 . D FAIL^%ut("Unable to build RMA array")
"RTN","A1AEUF1",57,0)
 I '$G(A1AEFAIL) S X=$$CHKARR(.RMA,"R") D
"RTN","A1AEUF1",58,0)
 . D CHKEQ^%ut(0,X,"Testing REQB dependencies FAILED!")
"RTN","A1AEUF1",59,0)
 Q
"RTN","A1AEUF1",60,0)
 ;
"RTN","A1AEUF1",61,0)
UTP2 I '$G(A1AEFAIL) S X=$$GETARR("M",.RMA) I 'X D  Q
"RTN","A1AEUF1",62,0)
 . D FAIL^%ut("Unable to build RMA array")
"RTN","A1AEUF1",63,0)
 I '$G(A1AEFAIL) S X=$$CHKARR(.RMA,"M") D
"RTN","A1AEUF1",64,0)
 . D CHKEQ^%ut(0,X,"Testing MULB memebers FAILED!")
"RTN","A1AEUF1",65,0)
 Q
"RTN","A1AEUF1",66,0)
 ;
"RTN","A1AEUF1",67,0)
 ;
"RTN","A1AEUF1",68,0)
UTP3 I '$G(A1AEFAIL) S X=$$GETARR("R",.RMA) I 'X D  Q
"RTN","A1AEUF1",69,0)
 . D FAIL^%ut("Unable to build RMA array")
"RTN","A1AEUF1",70,0)
 I '$G(A1AEFAIL) S X=$$LOADSCD(BUILD(28),"R") D
"RTN","A1AEUF1",71,0)
 . D CHKEQ^%ut(0,X,"Testing LOADING REQB dependencies FAILED!")
"RTN","A1AEUF1",72,0)
 Q
"RTN","A1AEUF1",73,0)
 ;
"RTN","A1AEUF1",74,0)
UTP4 I '$G(A1AEFAIL) S X=$$GETARR("M",.RMA) I 'X D  Q
"RTN","A1AEUF1",75,0)
 . D FAIL^%ut("Unable to build RMA array")
"RTN","A1AEUF1",76,0)
 I '$G(A1AEFAIL) S X=$$LOADSCD(BUILD(29),"M") D
"RTN","A1AEUF1",77,0)
 . D CHKEQ^%ut(0,X,"Testing LOADING MULB dependencies FAILED!")
"RTN","A1AEUF1",78,0)
 Q
"RTN","A1AEUF1",79,0)
 ;
"RTN","A1AEUF1",80,0)
 ;
"RTN","A1AEUF1",81,0)
UTP5 I '$G(A1AEFAIL) D
"RTN","A1AEUF1",82,0)
 . N BIEN,REQBIEN,MULBIEN
"RTN","A1AEUF1",83,0)
 . S BIEN=$O(^XPD(9.6,"B","A1AEXTST*1*1",0)) I 'BIEN D  Q
"RTN","A1AEUF1",84,0)
 .. D FAIL^%ut("Unable to find BUILD A1AEXTST*1*1 in 9.6")
"RTN","A1AEUF1",85,0)
 .;
"RTN","A1AEUF1",86,0)
 . S REQBIEN=$O(^XPD(9.6,BIEN,"REQB","B","A1AEXTST*1*2",0))
"RTN","A1AEUF1",87,0)
 . I REQBIEN D
"RTN","A1AEUF1",88,0)
 ..  K ^XPD(9.6,BIEN,"REQB",REQBIEN)
"RTN","A1AEUF1",89,0)
 ..  K ^XPD(9.6,BIEN,"REQB","B","A1AEXTST*1*2")
"RTN","A1AEUF1",90,0)
 . S REQBIEN=$O(^XPD(9.6,BIEN,"REQB","B","A1AEXTST*1*2",0))
"RTN","A1AEUF1",91,0)
 . I REQBIEN D  Q
"RTN","A1AEUF1",92,0)
 .. D FAIL^%ut("Unable to clear REQB A1AEXTST*1*2")
"RTN","A1AEUF1",93,0)
 .;
"RTN","A1AEUF1",94,0)
 . S MULBIEN=$O(^XPD(9.6,BIEN,10,"B","A1AEXTST*1*2",0))
"RTN","A1AEUF1",95,0)
 . I MULBIEN D
"RTN","A1AEUF1",96,0)
 ..  K ^XPD(9.6,BIEN,10,MULBIEN)
"RTN","A1AEUF1",97,0)
 ..  K ^XPD(9.6,BIEN,10,"B","A1AEXTST*1*2")
"RTN","A1AEUF1",98,0)
 . S MULBIEN=$O(^XPD(9.6,BIEN,10,"B","A1AEXTST*1*2",0))
"RTN","A1AEUF1",99,0)
 . I MULBIEN D  Q
"RTN","A1AEUF1",100,0)
 .. D FAIL^%ut("Unable to clear MULB A1AEXTST*1*2")
"RTN","A1AEUF1",101,0)
 .;
"RTN","A1AEUF1",102,0)
 . S X='$$ADBTORM^A1AEF1(BIEN,"A1AEXTST*1*2","R")
"RTN","A1AEUF1",103,0)
 . S Y='$$ADBTORM^A1AEF1(BIEN,"A1AEXTST*1*2","M")
"RTN","A1AEUF1",104,0)
 . D CHKEQ^%ut(0,X+Y,"Testing LOADING new REQB and MULB FAILED!")
"RTN","A1AEUF1",105,0)
 Q
"RTN","A1AEUF1",106,0)
 ;
"RTN","A1AEUF1",107,0)
 ;
"RTN","A1AEUF1",108,0)
 ;
"RTN","A1AEUF1",109,0)
 ; Check RMA array gleaned from $T data in this routine
"RTN","A1AEUF1",110,0)
 ;   against the descendants found in REQB or MULB call
"RTN","A1AEUF1",111,0)
 ; ENTER
"RTN","A1AEUF1",112,0)
 ;    RMA   =   array of expected builds with dependancy
"RTN","A1AEUF1",113,0)
 ;              levels. Retrieved by $T in this routine
"RTN","A1AEUF1",114,0)
 ;    RM    =   "R" for REQB check
"RTN","A1AEUF1",115,0)
 ;              "M" for MULB check
"RTN","A1AEUF1",116,0)
 ; EXIT
"RTN","A1AEUF1",117,0)
 ;    X     =   0 no errors, 1 error
"RTN","A1AEUF1",118,0)
 ; example : RMA(2)="POO(1,""A1AEXTST*1*1"")=1"
"RTN","A1AEUF1",119,0)
CHKARR(RMA,RM) N NODE,POON S NODE=$NA(RMA)
"RTN","A1AEUF1",120,0)
 N X S X=0
"RTN","A1AEUF1",121,0)
 Q:'$D(RMA) 1
"RTN","A1AEUF1",122,0)
 F  S NODE=$Q(@NODE) Q:NODE'["RMA("  I @NODE="" D  Q:X
"RTN","A1AEUF1",123,0)
 . ; RMA(N)=""
"RTN","A1AEUF1",124,0)
 .  S X=$$CHK1($QS(NODE,1),RM)
"RTN","A1AEUF1",125,0)
 Q X
"RTN","A1AEUF1",126,0)
 ;
"RTN","A1AEUF1",127,0)
 ; Enter with N = subscript in RMA(N) array
"RTN","A1AEUF1",128,0)
CHK1(N,RM) N POO K RMANODE
"RTN","A1AEUF1",129,0)
 S RMANODE=$NA(RMA(N))
"RTN","A1AEUF1",130,0)
 S RMANODE=$Q(@RMANODE) I RMANODE'["RMA(" Q 0
"RTN","A1AEUF1",131,0)
 ; Cut build name out of @RMANODE
"RTN","A1AEUF1",132,0)
 N BLDNM S BLDNM=$QS($P(@RMANODE,"="),2)
"RTN","A1AEUF1",133,0)
 ; Get all descendents
"RTN","A1AEUF1",134,0)
 N RBMB S RBMB=$S(RM["R":"REQB",RM["M":"MULB",1:1)
"RTN","A1AEUF1",135,0)
 Q:+RBMB=1 1
"RTN","A1AEUF1",136,0)
CHK2 D @(RBMB_"^A1AEF1(BLDNM,.POO)")
"RTN","A1AEUF1",137,0)
 ; Get first array in descendants array
"RTN","A1AEUF1",138,0)
 K PND S PND=$NA(POO(0,0)),PND=$Q(@PND)
"RTN","A1AEUF1",139,0)
 S X=0
"RTN","A1AEUF1",140,0)
 ; Run through RMA and POO nodes in parallel looking
"RTN","A1AEUF1",141,0)
 ;  for any mismatches
"RTN","A1AEUF1",142,0)
CHK3 F  D  Q:X  S RMANODE=$Q(@RMANODE),PND=$Q(@PND) I @RMANODE="" S X=0 Q
"RTN","A1AEUF1",143,0)
 . I $QS($P(@RMANODE,"="),2)'=$P(PND,"""",2) S X=1 Q
"RTN","A1AEUF1",144,0)
 . I @$P(@RMANODE,"=")'=@PND S X=1 Q
"RTN","A1AEUF1",145,0)
 Q X
"RTN","A1AEUF1",146,0)
 ;
"RTN","A1AEUF1",147,0)
 ;
"RTN","A1AEUF1",148,0)
 ; ENTER
"RTN","A1AEUF1",149,0)
 ;   BUILD  = BUILD(28) "A1AEXTST*1*28"
"RTN","A1AEUF1",150,0)
 ;   RM     = "R" for REQB, "M" for MULB
"RTN","A1AEUF1",151,0)
 ; EXIT
"RTN","A1AEUF1",152,0)
 ;   X      = 0 for ok, 1 for error
"RTN","A1AEUF1",153,0)
LOADSCD(BUILD,RM) ;
"RTN","A1AEUF1",154,0)
 ;Run API to find REQB dependancies and enter into the REQB
"RTN","A1AEUF1",155,0)
 ;   multiple of the container BUILD ("A1AEXTST*1*28")
"RTN","A1AEUF1",156,0)
 I 'RM?1"R",'RM?1"M" Q 1
"RTN","A1AEUF1",157,0)
 I RM="R" S X=$$A1AEFRQB^A1AEF1(BUILD) Q:'X 1
"RTN","A1AEUF1",158,0)
 I RM="M" S X=$$A1AEFMUB^A1AEF1(BUILD) Q:'X 1
"RTN","A1AEUF1",159,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN 1
"RTN","A1AEUF1",160,0)
 K RMA S RMA=""
"RTN","A1AEUF1",161,0)
LDSCD1 N ARR,BLD,CNT,X,XXX S (CNT,X)=1
"RTN","A1AEUF1",162,0)
 S XXX=$S(RM="R":"A1AEFRB",RM="M":"A1AEFMB",1:"ERROR")
"RTN","A1AEUF1",163,0)
 Q:XXX["ERROR" 1
"RTN","A1AEUF1",164,0)
 F  S RMA=$T(@XXX+CNT) Q:RMA["/END/"  D  Q:'X
"RTN","A1AEUF1",165,0)
 . S BLD=$P(RMA,";;",2)
"RTN","A1AEUF1",166,0)
 . I RM="R" S X=$O(^XPD(9.6,BIEN,"REQB","B",BLD,0)) Q:'X
"RTN","A1AEUF1",167,0)
 . I RM="M" S X=$O(^XPD(9.6,BIEN,10,"B",BLD,0)) Q:'X
"RTN","A1AEUF1",168,0)
 . S CNT=CNT+1
"RTN","A1AEUF1",169,0)
 ; All RMA had a match in 9.6
"RTN","A1AEUF1",170,0)
 Q:'X 1  Q 0
"RTN","A1AEUF1",171,0)
 ;
"RTN","A1AEUF1",172,0)
 ;
"RTN","A1AEUF1",173,0)
 ;
"RTN","A1AEUF1",174,0)
 ; Build an array of bogus BUILD NAMES
"RTN","A1AEUF1",175,0)
SETUP1() N I
"RTN","A1AEUF1",176,0)
 F I=1:1:30 S BUILD(I)="A1AEXTST*1*"_I
"RTN","A1AEUF1",177,0)
 Q:I=30 1  Q 0
"RTN","A1AEUF1",178,0)
 ;
"RTN","A1AEUF1",179,0)
 ; Load new builds into BUILD [#9.6] file
"RTN","A1AEUF1",180,0)
SETUP2() N X,I F I=1:1:30 S X=$$LDBLD(BUILD(I)) Q:'X  D
"RTN","A1AEUF1",181,0)
 . S BUILD(BUILD(I))=X
"RTN","A1AEUF1",182,0)
 Q:X 1  Q X
"RTN","A1AEUF1",183,0)
 ;
"RTN","A1AEUF1",184,0)
 ; Use test builds to build an interdependant
"RTN","A1AEUF1",185,0)
 ;   array of CONTAINERS, PREREQUISITES, and
"RTN","A1AEUF1",186,0)
 ;   MEMBERS
"RTN","A1AEUF1",187,0)
SETUP3() ; BUILD(10)
"RTN","A1AEUF1",188,0)
 ;   REQUIRED BUILD multiple entries
"RTN","A1AEUF1",189,0)
 ;      BUILD(1)-BUILD(5)
"RTN","A1AEUF1",190,0)
 F I=1:1:5 S X=$$LDRBLD(BUILD(BUILD(10)),BUILD(I)) Q:'X
"RTN","A1AEUF1",191,0)
 Q:'X X
"RTN","A1AEUF1",192,0)
 ;   MULTIPLE BUILD multiple entries
"RTN","A1AEUF1",193,0)
 ;      BUILD(6)-BUILD(10)
"RTN","A1AEUF1",194,0)
 F I=6:1:10 S X=$$LDMBLD(BUILD(BUILD(10)),BUILD(I)) Q:'X
"RTN","A1AEUF1",195,0)
 Q:'X X
"RTN","A1AEUF1",196,0)
 ;
"RTN","A1AEUF1",197,0)
 ; BUILD(11)
"RTN","A1AEUF1",198,0)
 ;   REQUIRED BUILD multiple entries
"RTN","A1AEUF1",199,0)
 ;      BUILD(12)-BUILD(15)
"RTN","A1AEUF1",200,0)
 F I=12:1:15 S X=$$LDRBLD(BUILD(BUILD(11)),BUILD(I)) Q:'X
"RTN","A1AEUF1",201,0)
 Q:'X X
"RTN","A1AEUF1",202,0)
 ;   MULTIPLE BUILD multiple entries
"RTN","A1AEUF1",203,0)
 ;      BUILD(16)-BUILD(20)
"RTN","A1AEUF1",204,0)
 F I=16:1:20 S X=$$LDMBLD(BUILD(BUILD(11)),BUILD(I)) Q:'X
"RTN","A1AEUF1",205,0)
 Q:'X X
"RTN","A1AEUF1",206,0)
 ;
"RTN","A1AEUF1",207,0)
 ; BUILD(28)
"RTN","A1AEUF1",208,0)
 ;   REQUIRED BUILD multiple entries
"RTN","A1AEUF1",209,0)
 ;      BUILD(21)-BUILD(25)
"RTN","A1AEUF1",210,0)
 ;      BUILD(10)-BUILD(11)
"RTN","A1AEUF1",211,0)
 F I=21:1:25 S X=$$LDRBLD(BUILD(BUILD(28)),BUILD(I)) Q:'X
"RTN","A1AEUF1",212,0)
 Q:'X X
"RTN","A1AEUF1",213,0)
 F I=10:1:11 S X=$$LDRBLD(BUILD(BUILD(28)),BUILD(I)) Q:'X
"RTN","A1AEUF1",214,0)
 Q:'X X
"RTN","A1AEUF1",215,0)
 ;   MULTIPLE BUILD multiple entries
"RTN","A1AEUF1",216,0)
 ;      BUILD(26)-BUILD(27)
"RTN","A1AEUF1",217,0)
 F I=26,27 S X=$$LDMBLD(BUILD(BUILD(28)),BUILD(I)) Q:'X
"RTN","A1AEUF1",218,0)
 Q:'X X
"RTN","A1AEUF1",219,0)
 ;
"RTN","A1AEUF1",220,0)
 ; BUILD(29)
"RTN","A1AEUF1",221,0)
 ;   REQUIRED BUILD multiple entries
"RTN","A1AEUF1",222,0)
 ;      BUILD(28)
"RTN","A1AEUF1",223,0)
 S X=$$LDRBLD(BUILD(BUILD(29)),BUILD(28)) Q:'X
"RTN","A1AEUF1",224,0)
 Q:'X X
"RTN","A1AEUF1",225,0)
 ;   MULTIPLE BUILD multiple entries
"RTN","A1AEUF1",226,0)
 ;      BUILD(1)
"RTN","A1AEUF1",227,0)
 ;      BUILD(11)
"RTN","A1AEUF1",228,0)
 F I=1,11 S X=$$LDMBLD(BUILD(BUILD(29)),BUILD(I)) Q:'X
"RTN","A1AEUF1",229,0)
 Q:'X X
"RTN","A1AEUF1",230,0)
 ;
"RTN","A1AEUF1",231,0)
 ; BUILD(30)
"RTN","A1AEUF1",232,0)
 ;   REQUIRED BUILD multiple entries
"RTN","A1AEUF1",233,0)
 ;      BUILD(29)
"RTN","A1AEUF1",234,0)
 S X=$$LDRBLD(BUILD(BUILD(30)),BUILD(29)) Q:'X
"RTN","A1AEUF1",235,0)
 Q:'X X
"RTN","A1AEUF1",236,0)
 ;   MULTIPLE BUILD multiple entries
"RTN","A1AEUF1",237,0)
 ;      BUILD(28)
"RTN","A1AEUF1",238,0)
 S X=$$LDMBLD(BUILD(BUILD(29)),BUILD(28)) Q:'X
"RTN","A1AEUF1",239,0)
 Q:'X X
"RTN","A1AEUF1",240,0)
 Q 1
"RTN","A1AEUF1",241,0)
 ;
"RTN","A1AEUF1",242,0)
 ;Load new BUILD [#9.6] entry
"RTN","A1AEUF1",243,0)
 ;ENTER
"RTN","A1AEUF1",244,0)
 ;  BUILD   =  Build name
"RTN","A1AEUF1",245,0)
 ;RETURN
"RTN","A1AEUF1",246,0)
 ;  IEN of new BUILD entry OR 0_"^DIERR"
"RTN","A1AEUF1",247,0)
LDBLD(BUILD) ;
"RTN","A1AEUF1",248,0)
 Q:BUILD="" 0_"^No BUILD Name"
"RTN","A1AEUF1",249,0)
 N A1AEKI,A1AEPM,DIERR,FDA,FDAIEN
"RTN","A1AEUF1",250,0)
 S FDA(3,9.6,"?+1,",.01)=BUILD
"RTN","A1AEUF1",251,0)
 S FDA(3,9.6,"?+1,",2)=0
"RTN","A1AEUF1",252,0)
 S FDA(3,9.6,"?+1,",.02)=$$HTFM^XLFDT($H,1)
"RTN","A1AEUF1",253,0)
 S FDA(3,9.6,"?+1,",5)="n"
"RTN","A1AEUF1",254,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF1",255,0)
 I $D(DIERR) Q 0_"^DIERR"
"RTN","A1AEUF1",256,0)
 Q +FDAIEN(1)
"RTN","A1AEUF1",257,0)
 ;
"RTN","A1AEUF1",258,0)
 ; Load entry into MULTIPLE BUILD for this Container build
"RTN","A1AEUF1",259,0)
 ;ENTER
"RTN","A1AEUF1",260,0)
 ;   A1AEKI  = IEN OF Container Build
"RTN","A1AEUF1",261,0)
 ;   A1AEPM  = BUILD name of Member
"RTN","A1AEUF1",262,0)
 ;RETURN
"RTN","A1AEUF1",263,0)
 ;   IEN of new Member within Container BUILD
"RTN","A1AEUF1",264,0)
 ;     OR 0_"^DIERR"
"RTN","A1AEUF1",265,0)
LDMBLD(A1AEKI,MBUILD) ;
"RTN","A1AEUF1",266,0)
 Q:'A1AEKI 0_"^No Container BUILD IEN"
"RTN","A1AEUF1",267,0)
 Q:MBUILD="" 0_"^No Member BUILD Name"
"RTN","A1AEUF1",268,0)
 N FDA,DIERR,FDAIEN
"RTN","A1AEUF1",269,0)
 S FDA(3,9.63,"?+1,"_A1AEKI_",",.01)=MBUILD
"RTN","A1AEUF1",270,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF1",271,0)
 Q:$D(DIERR) 0_"^DIERR"
"RTN","A1AEUF1",272,0)
 Q +FDAIEN(1)
"RTN","A1AEUF1",273,0)
 ;
"RTN","A1AEUF1",274,0)
 ; Load entry into REQUIRED BUILD for this Container build
"RTN","A1AEUF1",275,0)
 ;ENTER
"RTN","A1AEUF1",276,0)
 ;   A1AEKI  = IEN OF Container Build
"RTN","A1AEUF1",277,0)
 ;   A1AEPM  = BUILD name of Member
"RTN","A1AEUF1",278,0)
 ;RETURN
"RTN","A1AEUF1",279,0)
 ;   IEN of new Member within Container BUILD
"RTN","A1AEUF1",280,0)
 ;     OR 0_"^DIERR"
"RTN","A1AEUF1",281,0)
LDRBLD(A1AEKI,RBUILD) ;
"RTN","A1AEUF1",282,0)
 Q:'A1AEKI 0_"^No Container BUILD IEN"
"RTN","A1AEUF1",283,0)
 Q:RBUILD="" 0_"^No Member BUILD Name"
"RTN","A1AEUF1",284,0)
 N FDA,DIERR,FDAIEN
"RTN","A1AEUF1",285,0)
 S FDA(3,9.611,"?+1,"_A1AEKI_",",.01)=RBUILD
"RTN","A1AEUF1",286,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF1",287,0)
 Q:$D(DIERR) 0_"^DIERR"
"RTN","A1AEUF1",288,0)
 Q +FDAIEN(1)
"RTN","A1AEUF1",289,0)
 ;
"RTN","A1AEUF1",290,0)
 ; ENTER
"RTN","A1AEUF1",291,0)
 ;   RM    = "R" or "M" for REQB or MULB lookup
"RTN","A1AEUF1",292,0)
 ;           "F" for other
"RTN","A1AEUF1",293,0)
 ;   RMA   =  Passed by reference
"RTN","A1AEUF1",294,0)
 ; EXIT
"RTN","A1AEUF1",295,0)
 ;   RMA   = Array of builds from data listed
"RTN","A1AEUF1",296,0)
 ;           in routine
"RTN","A1AEUF1",297,0)
 ;   X     = 1 all ok, 0 = failure to match
"RTN","A1AEUF1",298,0)
GETARR(RM,RMA) ;
"RTN","A1AEUF1",299,0)
 I 'RM?1"R",'RM?1"M" Q 0
"RTN","A1AEUF1",300,0)
 N RME S RME=$S(RM="R":"REQBCHK",RM="M":"MULBCHK")
"RTN","A1AEUF1",301,0)
 ;I RM="F" S RME="A1AEFRB"
"RTN","A1AEUF1",302,0)
 K RMA
"RTN","A1AEUF1",303,0)
 N ARR,CNT S CNT=0
"RTN","A1AEUF1",304,0)
 F  S RMA=$T(@RME+CNT) Q:RMA["/END/"  D
"RTN","A1AEUF1",305,0)
 . S ARR=$P($T(@RME+CNT),";;",2)
"RTN","A1AEUF1",306,0)
 . S CNT=CNT+1,RMA(CNT)=ARR
"RTN","A1AEUF1",307,0)
 ; if no RMA nodes, then error
"RTN","A1AEUF1",308,0)
 Q:'CNT 0
"RTN","A1AEUF1",309,0)
 Q 1
"RTN","A1AEUF1",310,0)
 ;
"RTN","A1AEUF1",311,0)
 ; Delete all test build entries
"RTN","A1AEUF1",312,0)
 ; RETURN
"RTN","A1AEUF1",313,0)
 ;  1 if no errors, 0_"^DIERR" if deletion failed
"RTN","A1AEUF1",314,0)
DELTBLDS() N DA,DIK,X,Y S X=1
"RTN","A1AEUF1",315,0)
 N NODE S NODE=$NA(^XPD(9.6,"B","A1AEXTST*1"))
"RTN","A1AEUF1",316,0)
 F  S NODE=$Q(@NODE) Q:NODE'["A1AEXTST*1"  D  Q:'X
"RTN","A1AEUF1",317,0)
 .  N DA,DIK,DIERR
"RTN","A1AEUF1",318,0)
 .  S DA=$QS(NODE,4)
"RTN","A1AEUF1",319,0)
 .  S DIK="^XPD(9.6,"
"RTN","A1AEUF1",320,0)
 .  D ^DIK
"RTN","A1AEUF1",321,0)
 .  S:$D(DIERR) X=0_"^DIERR"
"RTN","A1AEUF1",322,0)
 Q:X 1  Q X
"RTN","A1AEUF1",323,0)
 ;
"RTN","A1AEUF1",324,0)
 ;
"RTN","A1AEUF1",325,0)
XTENT ;
"RTN","A1AEUF1",326,0)
 ;;UTP1;Testing gathering of all REQB descendants
"RTN","A1AEUF1",327,0)
 ;;UTP2;Testing gathering of all MULB descendants
"RTN","A1AEUF1",328,0)
 ;;UTP3;Testing gathering and loading REQB descendants
"RTN","A1AEUF1",329,0)
 ;;UTP4;Testing gathering and loading MULB descendants
"RTN","A1AEUF1",330,0)
 ;;UTP5;Testing adding new MULB and REQB to a build
"RTN","A1AEUF1",331,0)
 Q
"RTN","A1AEUF1",332,0)
 ;
"RTN","A1AEUF1",333,0)
 ;
"RTN","A1AEUF1",334,0)
REQBCHK ;;
"RTN","A1AEUF1",335,0)
 ;;POO(1,"A1AEXTST*1*1")=1
"RTN","A1AEUF1",336,0)
 ;;
"RTN","A1AEUF1",337,0)
 ;;POO(1,"A1AEXTST*1*2")=1
"RTN","A1AEUF1",338,0)
 ;;
"RTN","A1AEUF1",339,0)
 ;;POO(1,"A1AEXTST*1*3")=1
"RTN","A1AEUF1",340,0)
 ;;
"RTN","A1AEUF1",341,0)
 ;;POO(1,"A1AEXTST*1*4")=1
"RTN","A1AEUF1",342,0)
 ;;
"RTN","A1AEUF1",343,0)
 ;;POO(1,"A1AEXTST*1*5")=1
"RTN","A1AEUF1",344,0)
 ;;
"RTN","A1AEUF1",345,0)
 ;;POO(1,"A1AEXTST*1*6")=1
"RTN","A1AEUF1",346,0)
 ;;
"RTN","A1AEUF1",347,0)
 ;;POO(1,"A1AEXTST*1*7")=1
"RTN","A1AEUF1",348,0)
 ;;
"RTN","A1AEUF1",349,0)
 ;;POO(1,"A1AEXTST*1*8")=1
"RTN","A1AEUF1",350,0)
 ;;
"RTN","A1AEUF1",351,0)
 ;;POO(1,"A1AEXTST*1*9")=1
"RTN","A1AEUF1",352,0)
 ;;
"RTN","A1AEUF1",353,0)
 ;;POO(1,"A1AEXTST*1*10")=1
"RTN","A1AEUF1",354,0)
 ;;POO(2,"A1AEXTST*1*1")=2
"RTN","A1AEUF1",355,0)
 ;;POO(3,"A1AEXTST*1*2")=2
"RTN","A1AEUF1",356,0)
 ;;POO(4,"A1AEXTST*1*3")=2
"RTN","A1AEUF1",357,0)
 ;;POO(5,"A1AEXTST*1*4")=2
"RTN","A1AEUF1",358,0)
 ;;POO(6,"A1AEXTST*1*5")=2
"RTN","A1AEUF1",359,0)
 ;;
"RTN","A1AEUF1",360,0)
 ;;POO(1,"A1AEXTST*1*11")=1
"RTN","A1AEUF1",361,0)
 ;;POO(2,"A1AEXTST*1*12")=2
"RTN","A1AEUF1",362,0)
 ;;POO(3,"A1AEXTST*1*13")=2
"RTN","A1AEUF1",363,0)
 ;;POO(4,"A1AEXTST*1*14")=2
"RTN","A1AEUF1",364,0)
 ;;POO(5,"A1AEXTST*1*15")=2
"RTN","A1AEUF1",365,0)
 ;;
"RTN","A1AEUF1",366,0)
 ;;POO(1,"A1AEXTST*1*12")=1
"RTN","A1AEUF1",367,0)
 ;;
"RTN","A1AEUF1",368,0)
 ;;POO(1,"A1AEXTST*1*13")=1
"RTN","A1AEUF1",369,0)
 ;;
"RTN","A1AEUF1",370,0)
 ;;POO(1,"A1AEXTST*1*14")=1
"RTN","A1AEUF1",371,0)
 ;;
"RTN","A1AEUF1",372,0)
 ;;POO(1,"A1AEXTST*1*15")=1
"RTN","A1AEUF1",373,0)
 ;;
"RTN","A1AEUF1",374,0)
 ;;POO(1,"A1AEXTST*1*16")=1
"RTN","A1AEUF1",375,0)
 ;;
"RTN","A1AEUF1",376,0)
 ;;POO(1,"A1AEXTST*1*17")=1
"RTN","A1AEUF1",377,0)
 ;;
"RTN","A1AEUF1",378,0)
 ;;POO(1,"A1AEXTST*1*18")=1
"RTN","A1AEUF1",379,0)
 ;;
"RTN","A1AEUF1",380,0)
 ;;POO(1,"A1AEXTST*1*19")=1
"RTN","A1AEUF1",381,0)
 ;;
"RTN","A1AEUF1",382,0)
 ;;POO(1,"A1AEXTST*1*20")=1
"RTN","A1AEUF1",383,0)
 ;;
"RTN","A1AEUF1",384,0)
 ;;POO(1,"A1AEXTST*1*21")=1
"RTN","A1AEUF1",385,0)
 ;;
"RTN","A1AEUF1",386,0)
 ;;POO(1,"A1AEXTST*1*22")=1
"RTN","A1AEUF1",387,0)
 ;;
"RTN","A1AEUF1",388,0)
 ;;POO(1,"A1AEXTST*1*23")=1
"RTN","A1AEUF1",389,0)
 ;;
"RTN","A1AEUF1",390,0)
 ;;POO(1,"A1AEXTST*1*24")=1
"RTN","A1AEUF1",391,0)
 ;;
"RTN","A1AEUF1",392,0)
 ;;POO(1,"A1AEXTST*1*25")=1
"RTN","A1AEUF1",393,0)
 ;;
"RTN","A1AEUF1",394,0)
 ;;POO(1,"A1AEXTST*1*26")=1
"RTN","A1AEUF1",395,0)
 ;;
"RTN","A1AEUF1",396,0)
 ;;POO(1,"A1AEXTST*1*27")=1
"RTN","A1AEUF1",397,0)
 ;;
"RTN","A1AEUF1",398,0)
 ;;POO(1,"A1AEXTST*1*28")=1
"RTN","A1AEUF1",399,0)
 ;;POO(2,"A1AEXTST*1*10")=2
"RTN","A1AEUF1",400,0)
 ;;POO(3,"A1AEXTST*1*1")=3
"RTN","A1AEUF1",401,0)
 ;;POO(4,"A1AEXTST*1*2")=3
"RTN","A1AEUF1",402,0)
 ;;POO(5,"A1AEXTST*1*3")=3
"RTN","A1AEUF1",403,0)
 ;;POO(6,"A1AEXTST*1*4")=3
"RTN","A1AEUF1",404,0)
 ;;POO(7,"A1AEXTST*1*5")=3
"RTN","A1AEUF1",405,0)
 ;;POO(8,"A1AEXTST*1*11")=2
"RTN","A1AEUF1",406,0)
 ;;POO(9,"A1AEXTST*1*12")=3
"RTN","A1AEUF1",407,0)
 ;;POO(10,"A1AEXTST*1*13")=3
"RTN","A1AEUF1",408,0)
 ;;POO(11,"A1AEXTST*1*14")=3
"RTN","A1AEUF1",409,0)
 ;;POO(12,"A1AEXTST*1*15")=3
"RTN","A1AEUF1",410,0)
 ;;POO(13,"A1AEXTST*1*21")=2
"RTN","A1AEUF1",411,0)
 ;;POO(14,"A1AEXTST*1*22")=2
"RTN","A1AEUF1",412,0)
 ;;POO(15,"A1AEXTST*1*23")=2
"RTN","A1AEUF1",413,0)
 ;;POO(16,"A1AEXTST*1*24")=2
"RTN","A1AEUF1",414,0)
 ;;POO(17,"A1AEXTST*1*25")=2
"RTN","A1AEUF1",415,0)
 ;;
"RTN","A1AEUF1",416,0)
 ;;POO(1,"A1AEXTST*1*29")=1
"RTN","A1AEUF1",417,0)
 ;;POO(2,"A1AEXTST*1*28")=2
"RTN","A1AEUF1",418,0)
 ;;POO(3,"A1AEXTST*1*10")=3
"RTN","A1AEUF1",419,0)
 ;;POO(4,"A1AEXTST*1*1")=4
"RTN","A1AEUF1",420,0)
 ;;POO(5,"A1AEXTST*1*2")=4
"RTN","A1AEUF1",421,0)
 ;;POO(6,"A1AEXTST*1*3")=4
"RTN","A1AEUF1",422,0)
 ;;POO(7,"A1AEXTST*1*4")=4
"RTN","A1AEUF1",423,0)
 ;;POO(8,"A1AEXTST*1*5")=4
"RTN","A1AEUF1",424,0)
 ;;POO(9,"A1AEXTST*1*11")=3
"RTN","A1AEUF1",425,0)
 ;;POO(10,"A1AEXTST*1*12")=4
"RTN","A1AEUF1",426,0)
 ;;POO(11,"A1AEXTST*1*13")=4
"RTN","A1AEUF1",427,0)
 ;;POO(12,"A1AEXTST*1*14")=4
"RTN","A1AEUF1",428,0)
 ;;POO(13,"A1AEXTST*1*15")=4
"RTN","A1AEUF1",429,0)
 ;;POO(14,"A1AEXTST*1*21")=3
"RTN","A1AEUF1",430,0)
 ;;POO(15,"A1AEXTST*1*22")=3
"RTN","A1AEUF1",431,0)
 ;;POO(16,"A1AEXTST*1*23")=3
"RTN","A1AEUF1",432,0)
 ;;POO(17,"A1AEXTST*1*24")=3
"RTN","A1AEUF1",433,0)
 ;;POO(18,"A1AEXTST*1*25")=3
"RTN","A1AEUF1",434,0)
 ;;
"RTN","A1AEUF1",435,0)
 ;;POO(1,"A1AEXTST*1*30")=1
"RTN","A1AEUF1",436,0)
 ;;POO(2,"A1AEXTST*1*29")=2
"RTN","A1AEUF1",437,0)
 ;;POO(3,"A1AEXTST*1*28")=3
"RTN","A1AEUF1",438,0)
 ;;POO(4,"A1AEXTST*1*10")=4
"RTN","A1AEUF1",439,0)
 ;;POO(5,"A1AEXTST*1*1")=5
"RTN","A1AEUF1",440,0)
 ;;POO(6,"A1AEXTST*1*2")=5
"RTN","A1AEUF1",441,0)
 ;;POO(7,"A1AEXTST*1*3")=5
"RTN","A1AEUF1",442,0)
 ;;POO(8,"A1AEXTST*1*4")=5
"RTN","A1AEUF1",443,0)
 ;;POO(9,"A1AEXTST*1*5")=5
"RTN","A1AEUF1",444,0)
 ;;POO(10,"A1AEXTST*1*11")=4
"RTN","A1AEUF1",445,0)
 ;;POO(11,"A1AEXTST*1*12")=5
"RTN","A1AEUF1",446,0)
 ;;POO(12,"A1AEXTST*1*13")=5
"RTN","A1AEUF1",447,0)
 ;;POO(13,"A1AEXTST*1*14")=5
"RTN","A1AEUF1",448,0)
 ;;POO(14,"A1AEXTST*1*15")=5
"RTN","A1AEUF1",449,0)
 ;;POO(15,"A1AEXTST*1*21")=4
"RTN","A1AEUF1",450,0)
 ;;POO(16,"A1AEXTST*1*22")=4
"RTN","A1AEUF1",451,0)
 ;;POO(17,"A1AEXTST*1*23")=4
"RTN","A1AEUF1",452,0)
 ;;POO(18,"A1AEXTST*1*24")=4
"RTN","A1AEUF1",453,0)
 ;;POO(19,"A1AEXTST*1*25")=4
"RTN","A1AEUF1",454,0)
 ;;
"RTN","A1AEUF1",455,0)
 ;;/END/
"RTN","A1AEUF1",456,0)
 ;;
"RTN","A1AEUF1",457,0)
 ;;
"RTN","A1AEUF1",458,0)
 ;;
"RTN","A1AEUF1",459,0)
MULBCHK ;;
"RTN","A1AEUF1",460,0)
 ;;POO(1,"A1AEXTST*1*1")=1
"RTN","A1AEUF1",461,0)
 ;;
"RTN","A1AEUF1",462,0)
 ;;POO(1,"A1AEXTST*1*2")=1
"RTN","A1AEUF1",463,0)
 ;;
"RTN","A1AEUF1",464,0)
 ;;POO(1,"A1AEXTST*1*3")=1
"RTN","A1AEUF1",465,0)
 ;;
"RTN","A1AEUF1",466,0)
 ;;POO(1,"A1AEXTST*1*4")=1
"RTN","A1AEUF1",467,0)
 ;;
"RTN","A1AEUF1",468,0)
 ;;POO(1,"A1AEXTST*1*5")=1
"RTN","A1AEUF1",469,0)
 ;;
"RTN","A1AEUF1",470,0)
 ;;POO(1,"A1AEXTST*1*6")=1
"RTN","A1AEUF1",471,0)
 ;;
"RTN","A1AEUF1",472,0)
 ;;POO(1,"A1AEXTST*1*7")=1
"RTN","A1AEUF1",473,0)
 ;;
"RTN","A1AEUF1",474,0)
 ;;POO(1,"A1AEXTST*1*8")=1
"RTN","A1AEUF1",475,0)
 ;;
"RTN","A1AEUF1",476,0)
 ;;POO(1,"A1AEXTST*1*9")=1
"RTN","A1AEUF1",477,0)
 ;;
"RTN","A1AEUF1",478,0)
 ;;POO(1,"A1AEXTST*1*10")=1
"RTN","A1AEUF1",479,0)
 ;;POO(2,"A1AEXTST*1*6")=2
"RTN","A1AEUF1",480,0)
 ;;POO(3,"A1AEXTST*1*7")=2
"RTN","A1AEUF1",481,0)
 ;;POO(4,"A1AEXTST*1*8")=2
"RTN","A1AEUF1",482,0)
 ;;POO(5,"A1AEXTST*1*9")=2
"RTN","A1AEUF1",483,0)
 ;;
"RTN","A1AEUF1",484,0)
 ;;POO(1,"A1AEXTST*1*11")=1
"RTN","A1AEUF1",485,0)
 ;;POO(2,"A1AEXTST*1*16")=2
"RTN","A1AEUF1",486,0)
 ;;POO(3,"A1AEXTST*1*17")=2
"RTN","A1AEUF1",487,0)
 ;;POO(4,"A1AEXTST*1*18")=2
"RTN","A1AEUF1",488,0)
 ;;POO(5,"A1AEXTST*1*19")=2
"RTN","A1AEUF1",489,0)
 ;;POO(6,"A1AEXTST*1*20")=2
"RTN","A1AEUF1",490,0)
 ;;
"RTN","A1AEUF1",491,0)
 ;;POO(1,"A1AEXTST*1*12")=1
"RTN","A1AEUF1",492,0)
 ;;
"RTN","A1AEUF1",493,0)
 ;;POO(1,"A1AEXTST*1*13")=1
"RTN","A1AEUF1",494,0)
 ;;
"RTN","A1AEUF1",495,0)
 ;;POO(1,"A1AEXTST*1*14")=1
"RTN","A1AEUF1",496,0)
 ;;
"RTN","A1AEUF1",497,0)
 ;;POO(1,"A1AEXTST*1*15")=1
"RTN","A1AEUF1",498,0)
 ;;
"RTN","A1AEUF1",499,0)
 ;;POO(1,"A1AEXTST*1*16")=1
"RTN","A1AEUF1",500,0)
 ;;
"RTN","A1AEUF1",501,0)
 ;;POO(1,"A1AEXTST*1*17")=1
"RTN","A1AEUF1",502,0)
 ;;
"RTN","A1AEUF1",503,0)
 ;;POO(1,"A1AEXTST*1*18")=1
"RTN","A1AEUF1",504,0)
 ;;
"RTN","A1AEUF1",505,0)
 ;;POO(1,"A1AEXTST*1*19")=1
"RTN","A1AEUF1",506,0)
 ;;
"RTN","A1AEUF1",507,0)
 ;;POO(1,"A1AEXTST*1*20")=1
"RTN","A1AEUF1",508,0)
 ;;
"RTN","A1AEUF1",509,0)
 ;;POO(1,"A1AEXTST*1*21")=1
"RTN","A1AEUF1",510,0)
 ;;
"RTN","A1AEUF1",511,0)
 ;;POO(1,"A1AEXTST*1*22")=1
"RTN","A1AEUF1",512,0)
 ;;
"RTN","A1AEUF1",513,0)
 ;;POO(1,"A1AEXTST*1*23")=1
"RTN","A1AEUF1",514,0)
 ;;
"RTN","A1AEUF1",515,0)
 ;;POO(1,"A1AEXTST*1*24")=1
"RTN","A1AEUF1",516,0)
 ;;
"RTN","A1AEUF1",517,0)
 ;;POO(1,"A1AEXTST*1*25")=1
"RTN","A1AEUF1",518,0)
 ;;
"RTN","A1AEUF1",519,0)
 ;;POO(1,"A1AEXTST*1*26")=1
"RTN","A1AEUF1",520,0)
 ;;
"RTN","A1AEUF1",521,0)
 ;;POO(1,"A1AEXTST*1*27")=1
"RTN","A1AEUF1",522,0)
 ;;
"RTN","A1AEUF1",523,0)
 ;;POO(1,"A1AEXTST*1*28")=1
"RTN","A1AEUF1",524,0)
 ;;POO(2,"A1AEXTST*1*26")=2
"RTN","A1AEUF1",525,0)
 ;;POO(3,"A1AEXTST*1*27")=2
"RTN","A1AEUF1",526,0)
 ;;
"RTN","A1AEUF1",527,0)
 ;;POO(1,"A1AEXTST*1*29")=1
"RTN","A1AEUF1",528,0)
 ;;POO(2,"A1AEXTST*1*1")=2
"RTN","A1AEUF1",529,0)
 ;;POO(3,"A1AEXTST*1*11")=2
"RTN","A1AEUF1",530,0)
 ;;POO(4,"A1AEXTST*1*16")=3
"RTN","A1AEUF1",531,0)
 ;;POO(5,"A1AEXTST*1*17")=3
"RTN","A1AEUF1",532,0)
 ;;POO(6,"A1AEXTST*1*18")=3
"RTN","A1AEUF1",533,0)
 ;;POO(7,"A1AEXTST*1*19")=3
"RTN","A1AEUF1",534,0)
 ;;POO(8,"A1AEXTST*1*20")=3
"RTN","A1AEUF1",535,0)
 ;;POO(9,"A1AEXTST*1*28")=2
"RTN","A1AEUF1",536,0)
 ;;POO(10,"A1AEXTST*1*26")=3
"RTN","A1AEUF1",537,0)
 ;;POO(11,"A1AEXTST*1*27")=3
"RTN","A1AEUF1",538,0)
 ;;
"RTN","A1AEUF1",539,0)
 ;;POO(1,"A1AEXTST*1*30")=1
"RTN","A1AEUF1",540,0)
 ;;
"RTN","A1AEUF1",541,0)
 ;;/END/
"RTN","A1AEUF1",542,0)
 ;;
"RTN","A1AEUF1",543,0)
A1AEFRB ;;
"RTN","A1AEUF1",544,0)
 ;;A1AEXTST*1*1
"RTN","A1AEUF1",545,0)
 ;;A1AEXTST*1*10
"RTN","A1AEUF1",546,0)
 ;;A1AEXTST*1*11
"RTN","A1AEUF1",547,0)
 ;;A1AEXTST*1*12
"RTN","A1AEUF1",548,0)
 ;;A1AEXTST*1*13
"RTN","A1AEUF1",549,0)
 ;;A1AEXTST*1*14
"RTN","A1AEUF1",550,0)
 ;;A1AEXTST*1*15
"RTN","A1AEUF1",551,0)
 ;;A1AEXTST*1*2
"RTN","A1AEUF1",552,0)
 ;;A1AEXTST*1*21
"RTN","A1AEUF1",553,0)
 ;;A1AEXTST*1*22
"RTN","A1AEUF1",554,0)
 ;;A1AEXTST*1*23
"RTN","A1AEUF1",555,0)
 ;;A1AEXTST*1*24
"RTN","A1AEUF1",556,0)
 ;;A1AEXTST*1*25
"RTN","A1AEUF1",557,0)
 ;;A1AEXTST*1*3
"RTN","A1AEUF1",558,0)
 ;;A1AEXTST*1*4
"RTN","A1AEUF1",559,0)
 ;;A1AEXTST*1*5
"RTN","A1AEUF1",560,0)
 ;;/END/
"RTN","A1AEUF1",561,0)
 ;;
"RTN","A1AEUF1",562,0)
A1AEFMB ;;
"RTN","A1AEUF1",563,0)
 ;;A1AEXTST*1*1
"RTN","A1AEUF1",564,0)
 ;;A1AEXTST*1*11
"RTN","A1AEUF1",565,0)
 ;;A1AEXTST*1*16
"RTN","A1AEUF1",566,0)
 ;;A1AEXTST*1*17
"RTN","A1AEUF1",567,0)
 ;;A1AEXTST*1*18
"RTN","A1AEUF1",568,0)
 ;;A1AEXTST*1*19
"RTN","A1AEUF1",569,0)
 ;;A1AEXTST*1*20
"RTN","A1AEUF1",570,0)
 ;;A1AEXTST*1*26
"RTN","A1AEUF1",571,0)
 ;;A1AEXTST*1*27
"RTN","A1AEUF1",572,0)
 ;;A1AEXTST*1*28
"RTN","A1AEUF1",573,0)
 ;;/END/
"RTN","A1AEUF1A")
0^73^B57870181
"RTN","A1AEUF1A",1,0)
A1AEUF1A ;ven/lgc,jli-unit tests for A1AEF1 cont ;2015-05-26T15:56
"RTN","A1AEUF1A",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUF1A",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUF1A",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUF1A",5,0)
 ;
"RTN","A1AEUF1A",6,0)
 ;
"RTN","A1AEUF1A",7,0)
 ;primary change history
"RTN","A1AEUF1A",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUF1A",9,0)
 ;
"RTN","A1AEUF1A",10,0)
 ;
"RTN","A1AEUF1A",11,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUF1A",12,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUF1A",13,0)
 Q
"RTN","A1AEUF1A",14,0)
 ;
"RTN","A1AEUF1A",15,0)
STARTUP S A1AEFAIL=0 ; KILLED IN SHUTDOWN 
"RTN","A1AEUF1A",16,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF1A",17,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUF1A",18,0)
 . S A1AEFAIL=1
"RTN","A1AEUF1A",19,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUF1A",20,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF1A",21,0)
 ;
"RTN","A1AEUF1A",22,0)
 L +^A1AE(A1AEFILE):1 I '$T D  Q  ; JLI 150525
"RTN","A1AEUF1A",23,0)
 . S A1AEFAIL=1
"RTN","A1AEUF1A",24,0)
 . W !,"Unable to obtain lock on PATCHES [#"_A1AEFILE_"] file" ; JLI 150525
"RTN","A1AEUF1A",25,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF1A",26,0)
 Q
"RTN","A1AEUF1A",27,0)
 ;
"RTN","A1AEUF1A",28,0)
SHUTDOWN L -^XPD(9.6):1
"RTN","A1AEUF1A",29,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF1A",30,0)
 L -^A1AE(A1AEFILE):1 ; JLI 150525
"RTN","A1AEUF1A",31,0)
 I '$$DELPAT D
"RTN","A1AEUF1A",32,0)
 . W !,"Unable to delete test entries in "_A1AEFILE,!
"RTN","A1AEUF1A",33,0)
 ;
"RTN","A1AEUF1A",34,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUF1A",35,0)
 K A1AEFAIL
"RTN","A1AEUF1A",36,0)
 Q
"RTN","A1AEUF1A",37,0)
 ;
"RTN","A1AEUF1A",38,0)
 ; Testing 
"RTN","A1AEUF1A",39,0)
 ;   1. PTC4RTN^A1AEF1(A1AERTNM,.PTCHARR)
"RTN","A1AEUF1A",40,0)
 ;   2. PTCRTNS^A1AEF1(A1AEPIEN,.PTCHARR)
"RTN","A1AEUF1A",41,0)
 ;
"RTN","A1AEUF1A",42,0)
UTP6 I '$G(A1AEFAIL) S X=$$PTC4RTN D
"RTN","A1AEUF1A",43,0)
 . D CHKEQ^%ut(1,X,"Testing REQB dependencies FAILED!")
"RTN","A1AEUF1A",44,0)
 Q
"RTN","A1AEUF1A",45,0)
 ;
"RTN","A1AEUF1A",46,0)
 ; Testing PTC4RTN logic 
"RTN","A1AEUF1A",47,0)
 ;   1. Enter with RTN and POO array of patches
"RTN","A1AEUF1A",48,0)
 ;   2. Run PTC4RTN^A1AEF1 for this routine
"RTN","A1AEUF1A",49,0)
 ;   3. Pull up 2nd line of the routine and run through
"RTN","A1AEUF1A",50,0)
 ;      each "," delimited patch
"RTN","A1AEUF1A",51,0)
 ;   4. Check this patch is in POO global
"RTN","A1AEUF1A",52,0)
 ;   5. Check this patch in 11005 if POO(xxx)=ien into 11005
"RTN","A1AEUF1A",53,0)
 ;   6. Kill each POO node after check to be certain not
"RTN","A1AEUF1A",54,0)
 ;      excess POO nodes
"RTN","A1AEUF1A",55,0)
 ; ENTER
"RTN","A1AEUF1A",56,0)
 ;    nothing required
"RTN","A1AEUF1A",57,0)
 ; RETRUN
"RTN","A1AEUF1A",58,0)
 ;    0 = error, 1 = successful
"RTN","A1AEUF1A",59,0)
PTC4RTN() S X=1
"RTN","A1AEUF1A",60,0)
 ; Find a routine with several patches - at least one
"RTN","A1AEUF1A",61,0)
 ;  of which is found in DHCP PATHES [#11005]
"RTN","A1AEUF1A",62,0)
 N POO I '$$BLDPARR(.POO,.RTN) D  Q
"RTN","A1AEUF1A",63,0)
 . S X=0
"RTN","A1AEUF1A",64,0)
 . W !,"Unable to find suitably patched routine"
"RTN","A1AEUF1A",65,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF1A",66,0)
 ;
"RTN","A1AEUF1A",67,0)
 ; Pick up 2nd line and run through each patch listed
"RTN","A1AEUF1A",68,0)
 ;   is there a POO(name) array entry
"RTN","A1AEUF1A",69,0)
 ;   if POO(name)>0 (=IEN in file 11005) 
"RTN","A1AEUF1A",70,0)
 ;      check the patch is in 11005
"RTN","A1AEUF1A",71,0)
 ;      check the routine is in the patch
"RTN","A1AEUF1A",72,0)
P1 N A1AE2LN S A1AE2LN=$T(+2^@RTN)
"RTN","A1AEUF1A",73,0)
 N A1AEVR S A1AEVR=$P(A1AE2LN,";",3)
"RTN","A1AEUF1A",74,0)
 S:A1AEVR?.EP1"0" A1AEVR=$P(A1AE2LN,";",3)
"RTN","A1AEUF1A",75,0)
 N A1AESNM S A1AESNM=$P(A1AE2LN,";",4) Q:A1AESNM="" 0
"RTN","A1AEUF1A",76,0)
 S A1AESNM=$$UP(A1AESNM)
"RTN","A1AEUF1A",77,0)
 N A1AESIEN S A1AESIEN=$O(^DIC(9.4,"B",A1AESNM,0)) Q:'A1AESIEN 0
"RTN","A1AEUF1A",78,0)
 N A1AESABB S A1AESABB=$$GET1^DIQ(9.4,A1AESIEN_",",1) Q:A1AESABB="" 0
"RTN","A1AEUF1A",79,0)
 S A1AE2LN=$P(A1AE2LN,"**",2)
"RTN","A1AEUF1A",80,0)
 N CNT,PNMB
"RTN","A1AEUF1A",81,0)
 F CNT=1:1:$L(A1AE2LN,",") S PNMB=$P(A1AE2LN,",",CNT) D  Q:'X
"RTN","A1AEUF1A",82,0)
 . S PNM=A1AESABB_"*"_A1AEVR_"*"_PNMB
"RTN","A1AEUF1A",83,0)
 . I '$D(POO(PNM)) S X=0 Q
"RTN","A1AEUF1A",84,0)
 . N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF1A",85,0)
 . I +POO(PNM),'$D(^A1AE(A1AEFILE,+POO(PNM))) S X=0 Q
"RTN","A1AEUF1A",86,0)
 . I +POO(PNM),'$O(^A1AE(A1AEFILE,+POO(PNM),"P","B",RTN,0)) S X=0
"RTN","A1AEUF1A",87,0)
 . K POO(PNM)
"RTN","A1AEUF1A",88,0)
 Q:$O(POO(""))="" 1
"RTN","A1AEUF1A",89,0)
 Q X
"RTN","A1AEUF1A",90,0)
 ;
"RTN","A1AEUF1A",91,0)
 ;
"RTN","A1AEUF1A",92,0)
 ;
"RTN","A1AEUF1A",93,0)
UTP7 I '$G(A1AEFAIL) S X=$$PTCRTNS D
"RTN","A1AEUF1A",94,0)
 . D CHKEQ^%ut(0,X,"Testing REQB dependencies FAILED!")
"RTN","A1AEUF1A",95,0)
 Q
"RTN","A1AEUF1A",96,0)
 ;
"RTN","A1AEUF1A",97,0)
 ; Testing PTCRTNS^A1AEF1
"RTN","A1AEUF1A",98,0)
 ; ENTER
"RTN","A1AEUF1A",99,0)
 ;    RTN  =  ROUTINE NAME
"RTN","A1AEUF1A",100,0)
 ;    POO  =  Array of patch names with IEN into 11005
"RTN","A1AEUF1A",101,0)
 ; RETRUN
"RTN","A1AEUF1A",102,0)
 ;    0 = successful, 1 = error
"RTN","A1AEUF1A",103,0)
PTCRTNS() N X S X=0
"RTN","A1AEUF1A",104,0)
 ; Find a routine with several patches - at least one
"RTN","A1AEUF1A",105,0)
 ;  of which is found in DHCP PATHES [#11005]
"RTN","A1AEUF1A",106,0)
 N POO I '$$BLDPARR(.POO,.RTN) D  Q
"RTN","A1AEUF1A",107,0)
 . S X=1
"RTN","A1AEUF1A",108,0)
 . W !,"Unable to find suitably patched routine"
"RTN","A1AEUF1A",109,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF1A",110,0)
 ;
"RTN","A1AEUF1A",111,0)
 N PD,A5IEN S PD=$O(POO("")),A5IEN=$G(POO(PD))
"RTN","A1AEUF1A",112,0)
 N PPP D PTCRTNS^A1AEF1(A5IEN,.PPP)
"RTN","A1AEUF1A",113,0)
 N LN2,RTN,PCH,A1AEIEN
"RTN","A1AEUF1A",114,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF1A",115,0)
 N NODE S NODE=$NA(PPP(" "))
"RTN","A1AEUF1A",116,0)
 F  S NODE=$Q(@NODE) Q:NODE'["PPP("  D  Q:X
"RTN","A1AEUF1A",117,0)
 .; Pull out RTN name, PATCH name, and 11005
"RTN","A1AEUF1A",118,0)
 .  S RTN=$QS(NODE,1)
"RTN","A1AEUF1A",119,0)
 .  S PCH=","_$P($QS(NODE,2),"*",3)_","
"RTN","A1AEUF1A",120,0)
 .  S A1AEIEN=@NODE
"RTN","A1AEUF1A",121,0)
 .; Capture line 2 of active routine on system
"RTN","A1AEUF1A",122,0)
 .  S LN2=","_$P($T(+2^@RTN),"**",2)_","
"RTN","A1AEUF1A",123,0)
 .; Check patch number on line 2
"RTN","A1AEUF1A",124,0)
 .  I LN2'[PCH S X=1 Q
"RTN","A1AEUF1A",125,0)
 .; If indication patch is in 11005, check routine part of patch
"RTN","A1AEUF1A",126,0)
 .  I A1AEIEN,'$O(^A1AE(A1AEFILE,A1AEIEN,"P","B",RTN,0)) S X=1 ; JLI 150525
"RTN","A1AEUF1A",127,0)
 Q X
"RTN","A1AEUF1A",128,0)
 ;
"RTN","A1AEUF1A",129,0)
 ;
"RTN","A1AEUF1A",130,0)
 ; Look through routine file and find routine with a second
"RTN","A1AEUF1A",131,0)
 ;   line which reflects active package and sufficient
"RTN","A1AEUF1A",132,0)
 ;   patches for testing. If necessary patches will be
"RTN","A1AEUF1A",133,0)
 ;   temporarily added to 11005.
"RTN","A1AEUF1A",134,0)
 ;ENTER
"RTN","A1AEUF1A",135,0)
 ;   RTN  = var for ROUTINE NAME passed by referece
"RTN","A1AEUF1A",136,0)
 ;   POO  = array passed by reference for PATCHES needed
"RTN","A1AEUF1A",137,0)
 ;          to build second line of selected rotine
"RTN","A1AEUF1A",138,0)
 ;RETURN
"RTN","A1AEUF1A",139,0)
 ;   0 = error, 1 = successful
"RTN","A1AEUF1A",140,0)
 ;         also
"RTN","A1AEUF1A",141,0)
 ;   RTN  = ROUTINE NAME [eg. DG10]
"RTN","A1AEUF1A",142,0)
 ;   POO  = array of PATCHES NEEDED
"RTN","A1AEUF1A",143,0)
 ;        example
"RTN","A1AEUF1A",144,0)
 ;         POO("DG*5.3*232")=""
"RTN","A1AEUF1A",145,0)
 ;         POO("DG*5.3*417")=""
"RTN","A1AEUF1A",146,0)
 ;         POO("DG*5.3*451")=""
"RTN","A1AEUF1A",147,0)
 ;         POO("DG*5.3*454")=""
"RTN","A1AEUF1A",148,0)
 ;         POO("DG*5.3*491")=""
"RTN","A1AEUF1A",149,0)
 ;         POO("DG*5.3*513")=""
"RTN","A1AEUF1A",150,0)
 ;         POO("DG*5.3*564")=""
"RTN","A1AEUF1A",151,0)
 ;         POO("DG*5.3*672")=""
"RTN","A1AEUF1A",152,0)
 ;         POO("DG*5.3*688")=""
"RTN","A1AEUF1A",153,0)
 ;         POO("DG*5.3*717")=""
"RTN","A1AEUF1A",154,0)
 ;         POO("DG*5.3*754")=129209   <<< patch ien into 11005
"RTN","A1AEUF1A",155,0)
 ;         POO("DG*5.3*803")=""
"RTN","A1AEUF1A",156,0)
BLDPARR(POO,RTN) K POO,RTN S RTN=""
"RTN","A1AEUF1A",157,0)
 N IEN,LNG,NODE,X S NODE=$NA(^DIC(9.8,"B")),(LNG,X)=0
"RTN","A1AEUF1A",158,0)
 F  S NODE=$Q(@NODE) Q:NODE'["^DIC(9.8,""B"""  D  Q:LNG>90
"RTN","A1AEUF1A",159,0)
 . S IEN=$QS(NODE,4) I $O(^DIC(9.8,IEN,8,"A"),-1) D 
"RTN","A1AEUF1A",160,0)
 .. S RTN=$QS(NODE,3)
"RTN","A1AEUF1A",161,0)
 ..; W !,RTN
"RTN","A1AEUF1A",162,0)
 ..; Watch for routines like MPIFAPI in FOIA release
"RTN","A1AEUF1A",163,0)
 ..;  where the package name begins with a space
"RTN","A1AEUF1A",164,0)
 .. I $E($P($T(+2^@RTN),";",4))=" " Q
"RTN","A1AEUF1A",165,0)
 ..; Watch for package name on 2nd line that doesn't 
"RTN","A1AEUF1A",166,0)
 ..;  match that in package file
"RTN","A1AEUF1A",167,0)
 .. N LN2 S LN2=$T(+2^@RTN)
"RTN","A1AEUF1A",168,0)
 .. N A1AEVR S A1AEVR=$P(LN2,";",3)
"RTN","A1AEUF1A",169,0)
 .. N A1AESNM S A1AESNM=$$UP^A1AEF1($P(LN2,";",4))
"RTN","A1AEUF1A",170,0)
 .. Q:A1AESNM=""
"RTN","A1AEUF1A",171,0)
 .. N A1AESIEN S A1AESIEN=$O(^DIC(9.4,"B",A1AESNM,0))
"RTN","A1AEUF1A",172,0)
 .. Q:A1AESIEN=""
"RTN","A1AEUF1A",173,0)
 .. N A1AESABB S A1AESABB=$$GET1^DIQ(9.4,A1AESIEN_",",1)
"RTN","A1AEUF1A",174,0)
 .. Q:A1AESABB=""
"RTN","A1AEUF1A",175,0)
 ..;
"RTN","A1AEUF1A",176,0)
 .. S LNG=$L($T(+2^@RTN)) Q:LNG<91
"RTN","A1AEUF1A",177,0)
 ..; Build POO array of patch names from 2nd line of routine
"RTN","A1AEUF1A",178,0)
 .. D PTC4RTN^A1AEF1(RTN,.POO) I '$D(POO) S X=0 Q
"RTN","A1AEUF1A",179,0)
 ..; Confirm array has usable patch names
"RTN","A1AEUF1A",180,0)
 .. S X=$$CONFRM(.POO)
"RTN","A1AEUF1A",181,0)
 ..; If array not good, force looking for another
"RTN","A1AEUF1A",182,0)
 .. I 'X S LNG="" Q
"RTN","A1AEUF1A",183,0)
 ..; Make sure there are entries in 11005 for these patches
"RTN","A1AEUF1A",184,0)
 .. S POO="" F  S POO=$O(POO(POO)) Q:POO=""  D
"RTN","A1AEUF1A",185,0)
 ... S POO(POO)=$$MKPATCH(POO,RTN)
"RTN","A1AEUF1A",186,0)
 Q:$G(LNG) 1  Q 0
"RTN","A1AEUF1A",187,0)
 ; Confirm array has usable patch names (e.g. 3 * pieces)
"RTN","A1AEUF1A",188,0)
 ; ENTER
"RTN","A1AEUF1A",189,0)
 ;   POO   =  array of patch names
"RTN","A1AEUF1A",190,0)
 ; RETURN
"RTN","A1AEUF1A",191,0)
 ;   0 = not have usable names, 1 = names ok
"RTN","A1AEUF1A",192,0)
CONFRM(POO) N PNM,X,Y S PNM="",Y=0,X=1
"RTN","A1AEUF1A",193,0)
 F  S PNM=$O(POO(PNM)) Q:PNM=""  D  Q:'X
"RTN","A1AEUF1A",194,0)
 .  I $L(PNM,"*")'=3 S X=0 Q
"RTN","A1AEUF1A",195,0)
 Q X
"RTN","A1AEUF1A",196,0)
 ;
"RTN","A1AEUF1A",197,0)
 ;
"RTN","A1AEUF1A",198,0)
 ; ENTER
"RTN","A1AEUF1A",199,0)
 ;   nothing required
"RTN","A1AEUF1A",200,0)
 ; RETURN
"RTN","A1AEUF1A",201,0)
 ;   0 = error, 1 = deletions complete
"RTN","A1AEUF1A",202,0)
DELPAT() N DA,DIK,PAT,NOERR S PAT=0,NOERR=1
"RTN","A1AEUF1A",203,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF1A",204,0)
 F  S PAT=$O(^A1AE(A1AEFILE,PAT)) Q:'PAT  D  Q:'NOERR
"RTN","A1AEUF1A",205,0)
 . I $P(^A1AE(A1AEFILE,PAT,0),"^",5)["A1AE TEST ZZZFOR UNIT TESTS" D
"RTN","A1AEUF1A",206,0)
 .. S DIK="^A1AE(A1AEFILE," S DA=+PAT D ^DIK S:$D(DIERR) NOERR=0
"RTN","A1AEUF1A",207,0)
 I NOERR S PAT=0 D
"RTN","A1AEUF1A",208,0)
 . F  S PAT=$O(^A1AE(A1AEFILE,PAT)) Q:'PAT  D  Q:'NOERR
"RTN","A1AEUF1A",209,0)
 .. I $P(^A1AE(A1AEFILE,PAT,0),"^",5)["A1AE TEST ZZZFOR UNIT TESTS" D
"RTN","A1AEUF1A",210,0)
 ... S NOERR=0
"RTN","A1AEUF1A",211,0)
 Q NOERR
"RTN","A1AEUF1A",212,0)
 ;
"RTN","A1AEUF1A",213,0)
 ;
"RTN","A1AEUF1A",214,0)
 ; ENTER
"RTN","A1AEUF1A",215,0)
 ;    PD   =  PATCH DESIGNATION
"RTN","A1AEUF1A",216,0)
 ;    RTN  =  ROUTINE NAME to add to 11005 PD entry
"RTN","A1AEUF1A",217,0)
 ; RETURNS
"RTN","A1AEUF1A",218,0)
 ;    0 = error,  IEN of patch if successful
"RTN","A1AEUF1A",219,0)
MKPATCH(PD,RTN) Q:PD="" 0
"RTN","A1AEUF1A",220,0)
 N X,Y,DA,DIC,DIEN
"RTN","A1AEUF1A",221,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C",$P(PD,"*"),0)) Q:PKGIEN="" 0
"RTN","A1AEUF1A",222,0)
 N PKGAV S PKGAV=$$GET1^DIQ(9.4,PKGIEN_",",13) Q:'PKGAV 0
"RTN","A1AEUF1A",223,0)
 N PTCHNB S PTCHNB=+$P(PD,"*",3) Q:'PTCHNB 0
"RTN","A1AEUF1A",224,0)
 N PTSTRM S PTSTRM=$S(PTCHNB>10001:10001,1:1)
"RTN","A1AEUF1A",225,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF1A",226,0)
 N FDAIEN
"RTN","A1AEUF1A",227,0)
 ; If already entry in 11005, move on to adding RTN
"RTN","A1AEUF1A",228,0)
 I +$O(^A1AE(A1AEFILE,"B",PD,0)) D
"RTN","A1AEUF1A",229,0)
 . S FDAIEN(1)=+$O(^A1AE(A1AEFILE,"B",PD,0))
"RTN","A1AEUF1A",230,0)
 E  D
"RTN","A1AEUF1A",231,0)
 . N DIERR
"RTN","A1AEUF1A",232,0)
 . S FDA(3,A1AEFILE,"?+1,",.01)=PD
"RTN","A1AEUF1A",233,0)
 . S FDA(3,A1AEFILE,"?+1,",.2)=PTSTRM
"RTN","A1AEUF1A",234,0)
 . S FDA(3,A1AEFILE,"?+1,",2)=PKGIEN
"RTN","A1AEUF1A",235,0)
 . S FDA(3,A1AEFILE,"?+1,",3)=PKGAV
"RTN","A1AEUF1A",236,0)
 . S FDA(3,A1AEFILE,"?+1,",4)=PTCHNB
"RTN","A1AEUF1A",237,0)
 . S FDA(3,A1AEFILE,"?+1,",5)="A1AE TEST ZZZFOR UNIT TESTS"
"RTN","A1AEUF1A",238,0)
 . D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF1A",239,0)
 ;W "NEW ENTRY=",+$G(FDAIEN(1))
"RTN","A1AEUF1A",240,0)
 Q:$D(DIERR) 0
"RTN","A1AEUF1A",241,0)
 K DIERR,FDA
"RTN","A1AEUF1A",242,0)
 N FDARIEN S FDARIEN=+$G(FDAIEN(1)) Q:'FDARIEN 0
"RTN","A1AEUF1A",243,0)
 K FDAIEN
"RTN","A1AEUF1A",244,0)
 S FDA(3,+(A1AEFILE_".03"),"?+1,"_FDARIEN_",",.01)=RTN
"RTN","A1AEUF1A",245,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF1A",246,0)
 Q:$D(DIERR) 0
"RTN","A1AEUF1A",247,0)
 Q FDARIEN
"RTN","A1AEUF1A",248,0)
 ;
"RTN","A1AEUF1A",249,0)
 ;
"RTN","A1AEUF1A",250,0)
UP(STR) Q $TR(STR,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","A1AEUF1A",251,0)
 ;
"RTN","A1AEUF1A",252,0)
 ;
"RTN","A1AEUF1A",253,0)
XTENT ;
"RTN","A1AEUF1A",254,0)
 ;;UTP6;Testing gathering a routine's line2 patches
"RTN","A1AEUF1A",255,0)
 ;;UTP7;Testing gathering all patches routines
"RTN","A1AEUF1A",256,0)
 Q
"RTN","A1AEUF1A",257,0)
 ;
"RTN","A1AEUF1A",258,0)
 ;
"RTN","A1AEUF1A",259,0)
EOR ; end of routine A1AEUF1A
"RTN","A1AEUF1B")
0^74^B198266809
"RTN","A1AEUF1B",1,0)
A1AEUF1B ;ven/lgc,jli-unit tests for A1AEF1 cont ; 6/4/15 6:49am
"RTN","A1AEUF1B",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUF1B",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUF1B",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUF1B",5,0)
 ;
"RTN","A1AEUF1B",6,0)
 ;
"RTN","A1AEUF1B",7,0)
 ;primary change history
"RTN","A1AEUF1B",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUF1B",9,0)
 ;
"RTN","A1AEUF1B",10,0)
 ;
"RTN","A1AEUF1B",11,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUF1B",12,0)
 N A1AEFAIL S A1AEFAIL=0
"RTN","A1AEUF1B",13,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUF1B",14,0)
 Q
"RTN","A1AEUF1B",15,0)
 ;
"RTN","A1AEUF1B",16,0)
STARTUP S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUF1B",17,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF1B",18,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUF1B",19,0)
 . S A1AEFAIL=1
"RTN","A1AEUF1B",20,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUF1B",21,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF1B",22,0)
 ;
"RTN","A1AEUF1B",23,0)
 L +^A1AE(A1AEFILE):1 I '$T D  Q
"RTN","A1AEUF1B",24,0)
 . S A1AEFAIL=1
"RTN","A1AEUF1B",25,0)
 . W !,"Unable to obtain lock on DHCP PATCHES  [#"_A1AEFILE_"] file" ; JLI 150525
"RTN","A1AEUF1B",26,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF1B",27,0)
 ;
"RTN","A1AEUF1B",28,0)
 ; X may be 0 if none to delete = normal circumstance
"RTN","A1AEUF1B",29,0)
 ; X = 1 if previous testing incomplete = ok too
"RTN","A1AEUF1B",30,0)
 I '$G(A1AEFAIL) S X=$$DELTBLDS
"RTN","A1AEUF1B",31,0)
 Q
"RTN","A1AEUF1B",32,0)
 ;
"RTN","A1AEUF1B",33,0)
SHUTDOWN S X=$$DELTBLDS I 'X D
"RTN","A1AEUF1B",34,0)
 . W !,"Unable to clear test builds"
"RTN","A1AEUF1B",35,0)
 . W !," It may be necessary to delete test"
"RTN","A1AEUF1B",36,0)
 . W !," build entries in BUILD [#9.6] file"
"RTN","A1AEUF1B",37,0)
 . W !," manually [A1AE*999*n].",!
"RTN","A1AEUF1B",38,0)
 S X=$$DELTINST I 'X D
"RTN","A1AEUF1B",39,0)
 . W !,"Unable to clear test builds"
"RTN","A1AEUF1B",40,0)
 . W !," It may be necessary to delete test"
"RTN","A1AEUF1B",41,0)
 . W !," build entries in INSTALL [#9.7] file"
"RTN","A1AEUF1B",42,0)
 . W !," manually [A1AE*999*n].",!
"RTN","A1AEUF1B",43,0)
 S X=$$DELPAT I 'X D
"RTN","A1AEUF1B",44,0)
 . W !,"Unable to clear test PATCHES"
"RTN","A1AEUF1B",45,0)
 . W !," It may be necessary to delete test"
"RTN","A1AEUF1B",46,0)
 . ;W !," PATHC entries in DHCP PATCHES [#11005] file" ; JLI 150525 commented, replaced by following line
"RTN","A1AEUF1B",47,0)
 . W !," PATHC entries in "_A1AENAME_" [#"_A1AEFILE_"] file"
"RTN","A1AEUF1B",48,0)
 . W !," manually [A1AE*999*n].",!
"RTN","A1AEUF1B",49,0)
 L -^XPD(9.6):1
"RTN","A1AEUF1B",50,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUF1B",51,0)
 L -^A1AE(A1AEFILE):1
"RTN","A1AEUF1B",52,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUF1B",53,0)
 K A1AEFAIL
"RTN","A1AEUF1B",54,0)
 Q
"RTN","A1AEUF1B",55,0)
 ;
"RTN","A1AEUF1B",56,0)
 ; Testing 
"RTN","A1AEUF1B",57,0)
 ;      UTP8  PTC4KIDS(BUILD,.BARR)
"RTN","A1AEUF1B",58,0)
 ;      UTP9  PTCSTRM^A1AEF1(.SAVBLD)
"RTN","A1AEUF1B",59,0)
 ;      UTP10 UPDPAT^A1AEF1(BUILD,.BARR)
"RTN","A1AEUF1B",60,0)
 ;      UTP11 UPDPAT1^A1AEF1(PD,KIEN)
"RTN","A1AEUF1B",61,0)
 ;      UTP12 UPDPAT2^A1AEF1(A1AEKI,A1AEPI,KFILE)
"RTN","A1AEUF1B",62,0)
 ;      UTP13 UP^A1AEF1(STR)
"RTN","A1AEUF1B",63,0)
 ;      UTP14 REMOB^A1AEF1(.BARR)
"RTN","A1AEUF1B",64,0)
 ;      UTP15 BACTV^A1AEF1(BUILD)
"RTN","A1AEUF1B",65,0)
 ;
"RTN","A1AEUF1B",66,0)
 ;   PTC4KIDS^A1AEF1(BUILD,.BARR)
"RTN","A1AEUF1B",67,0)
 ;     Filter an array of builds to remove any where associated
"RTN","A1AEUF1B",68,0)
 ;     patch in 11005 doesn't match site's stream 
"RTN","A1AEUF1B",69,0)
 ;     1.  Get site's PRIMARY and save
"RTN","A1AEUF1B",70,0)
 ;     2.  Set PRIMARY to 1
"RTN","A1AEUF1B",71,0)
 ;     3.  Build array BUILD with 20 patches
"RTN","A1AEUF1B",72,0)
 ;         10 for stream 1 [A1AE*999*900 - 910]
"RTN","A1AEUF1B",73,0)
 ;         10 for stream 10001 [A1AE*999*100911 -100920]
"RTN","A1AEUF1B",74,0)
 ;     4.  Add 20 builds to BUILD 9.6
"RTN","A1AEUF1B",75,0)
 ;     5.  Add 20 builds to DHCP PATCHES 11005
"RTN","A1AEUF1B",76,0)
 ;     5.  Call PTC4KIDS
"RTN","A1AEUF1B",77,0)
 ;     6.  Check only FOIA patches remain in BUILD array
"RTN","A1AEUF1B",78,0)
 ;     7.  Reset PRIMARY
"RTN","A1AEUF1B",79,0)
 ;     8.  Delete test builds, test patches
"RTN","A1AEUF1B",80,0)
 ;
"RTN","A1AEUF1B",81,0)
UTP8 N BUILD,SAVBLD
"RTN","A1AEUF1B",82,0)
 S X=$$SETUP1 I 'X D  Q
"RTN","A1AEUF1B",83,0)
 . D FAIL^%ut("Unable to build array of BUILD names")
"RTN","A1AEUF1B",84,0)
 S X=$$SETUP2(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",85,0)
 . D FAIL^%ut("Unable to complete entry of TEST builds")
"RTN","A1AEUF1B",86,0)
 S X=$$SETUP3(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",87,0)
 . D FAIL^%ut("Unable to complete entry of TEST patches")
"RTN","A1AEUF1B",88,0)
 M SAVBLD=BUILD
"RTN","A1AEUF1B",89,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUF1B",90,0)
 . N UTOPIEN S UTOPIEN=$$UTPRIEN ; Save and set PRIMARY STREAM
"RTN","A1AEUF1B",91,0)
 . D PTC4KIDS^A1AEF1("A1AE*999*900",.BUILD,"")
"RTN","A1AEUF1B",92,0)
 . D REPPRIM
"RTN","A1AEUF1B",93,0)
 . N PD S PD=" ",X=1
"RTN","A1AEUF1B",94,0)
 . F  S PD=$O(BUILD(PD)) Q:PD=""  S:$P(PD,"*",3)>999 X=0
"RTN","A1AEUF1B",95,0)
 . D CHKEQ^%ut(1,X,"Testing PTC4KIDS Builds for sequence FAILED!")
"RTN","A1AEUF1B",96,0)
 Q
"RTN","A1AEUF1B",97,0)
 ;
"RTN","A1AEUF1B",98,0)
 ; This test entered with all the hard work for previous
"RTN","A1AEUF1B",99,0)
 ;  test done and saved in SAVBLD array
"RTN","A1AEUF1B",100,0)
UTP9 I '$G(A1AEFAIL) D
"RTN","A1AEUF1B",101,0)
 . N UTOPIEN S UTOPIEN=$$UTPRIEN ; Save PRIMARY STREAM
"RTN","A1AEUF1B",102,0)
 . K BUILD,SAVBLD
"RTN","A1AEUF1B",103,0)
 .;
"RTN","A1AEUF1B",104,0)
 . S X=$$SETUP1 I 'X D  Q
"RTN","A1AEUF1B",105,0)
 .. D REPPRIM
"RTN","A1AEUF1B",106,0)
 .. D FAIL^%ut("Unable to build array of BUILD names")
"RTN","A1AEUF1B",107,0)
 . S X=$$SETUP2(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",108,0)
 .. D REPPRIM
"RTN","A1AEUF1B",109,0)
 .. D FAIL^%ut("Unable to complete entry of TEST builds")
"RTN","A1AEUF1B",110,0)
 . S X=$$SETUP3(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",111,0)
 .. D REPPRIM
"RTN","A1AEUF1B",112,0)
 .. D FAIL^%ut("Unable to complete entry of TEST patches")
"RTN","A1AEUF1B",113,0)
 . M SAVBLD=BUILD
"RTN","A1AEUF1B",114,0)
 . D PTCSTRM^A1AEF1(.BUILD)
"RTN","A1AEUF1B",115,0)
 . D REPPRIM
"RTN","A1AEUF1B",116,0)
 . N PD S PD=" ",X=1
"RTN","A1AEUF1B",117,0)
 . F  S PD=$O(BUILD(PD)) Q:PD=""  S:$P(PD,"*",3)>999 X=0
"RTN","A1AEUF1B",118,0)
 . D CHKEQ^%ut(1,X,"Testing filtering array for patch stream FAILED!")
"RTN","A1AEUF1B",119,0)
 .; Return primary to original setting
"RTN","A1AEUF1B",120,0)
 Q
"RTN","A1AEUF1B",121,0)
 ;
"RTN","A1AEUF1B",122,0)
 ;
"RTN","A1AEUF1B",123,0)
 ; Update PAT multiple of the BUILD and all coresponding
"RTN","A1AEUF1B",124,0)
 ;   Installs  UPDPAT^A1AEF1(BUILD,.BARR)
"RTN","A1AEUF1B",125,0)
UTP10 I '$G(A1AEFAIL) D
"RTN","A1AEUF1B",126,0)
 . K BUILD,SAVBLD
"RTN","A1AEUF1B",127,0)
 . S X=$$SETUP1 I 'X D  Q
"RTN","A1AEUF1B",128,0)
 .. D FAIL^%ut("Unable to build array of BUILD names")
"RTN","A1AEUF1B",129,0)
 . S X=$$SETUP2(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",130,0)
 .. D FAIL^%ut("Unable to complete entry of TEST builds")
"RTN","A1AEUF1B",131,0)
 . S X=$$SETUP3(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",132,0)
 .. D FAIL^%ut("Unable to complete entry of TEST patches")
"RTN","A1AEUF1B",133,0)
 . M SAVBLD=BUILD
"RTN","A1AEUF1B",134,0)
 . S X=$$UP1
"RTN","A1AEUF1B",135,0)
 . D CHKEQ^%ut(1,X,"Updating PAT multiples of BUILD/INSTALLS FAILED!")
"RTN","A1AEUF1B",136,0)
 Q
"RTN","A1AEUF1B",137,0)
UP1() N NOERR S NOERR=1
"RTN","A1AEUF1B",138,0)
 N PIEN S PIEN=$P(BUILD(BUILD(921)),"^")
"RTN","A1AEUF1B",139,0)
 D UPDPAT^A1AEF1(BUILD(921),.BUILD)
"RTN","A1AEUF1B",140,0)
 N NODE S NODE=$NA(^XPD(9.6,PIEN,"PAT")),SNODE=$P(NODE,")")
"RTN","A1AEUF1B",141,0)
 S NODE=$Q(@NODE) ; Jump over first node
"RTN","A1AEUF1B",142,0)
 F  S NODE=$Q(@NODE) Q:NODE'[SNODE  D  Q:'NOERR
"RTN","A1AEUF1B",143,0)
 . I @NODE["A1AE",$D(BUILD($P(@NODE,"^",2))) D  Q
"RTN","A1AEUF1B",144,0)
 .. K BUILD($P(@NODE,"^",2))
"RTN","A1AEUF1B",145,0)
 . E  I $QS(NODE,4)'="B" S NOERR=0
"RTN","A1AEUF1B",146,0)
 I $O(BUILD(" "))'="" S NOERR=0
"RTN","A1AEUF1B",147,0)
 Q:'NOERR NOERR
"RTN","A1AEUF1B",148,0)
 K BUILD M BUILD=SAVBLD N NOERR S NOERR=1
"RTN","A1AEUF1B",149,0)
 N PIEN S PIEN=$P(BUILD(BUILD(921)),"^",2)
"RTN","A1AEUF1B",150,0)
 N NODE S NODE=$NA(^XPD(9.7,PIEN,"PAT")),SNODE=$P(NODE,")")
"RTN","A1AEUF1B",151,0)
 S NODE=$Q(@NODE) ; Jump over first node
"RTN","A1AEUF1B",152,0)
 F  S NODE=$Q(@NODE) Q:NODE'[SNODE  D  Q:'NOERR
"RTN","A1AEUF1B",153,0)
 . I @NODE["A1AE",$D(BUILD($P(@NODE,"^",2))) D  Q
"RTN","A1AEUF1B",154,0)
 .. K BUILD($P(@NODE,"^",2))
"RTN","A1AEUF1B",155,0)
 . E  I $QS(NODE,4)'="B" S NOERR=0
"RTN","A1AEUF1B",156,0)
 I $O(BUILD(" "))'="" S NOERR=0
"RTN","A1AEUF1B",157,0)
 Q NOERR
"RTN","A1AEUF1B",158,0)
 ;
"RTN","A1AEUF1B",159,0)
 ; Update the PAT muliple of this BUILD and its corresponding
"RTN","A1AEUF1B",160,0)
 ;   Installs UTP11 UPDPAT1^A1AEF1(PD,KIEN)
"RTN","A1AEUF1B",161,0)
UTP11 I '$G(A1AEFAIL) D
"RTN","A1AEUF1B",162,0)
 . K BUILD,SAVBLD
"RTN","A1AEUF1B",163,0)
 . S X=$$SETUP1 I 'X D  Q
"RTN","A1AEUF1B",164,0)
 .. D FAIL^%ut("Unable to build array of BUILD names")
"RTN","A1AEUF1B",165,0)
 . S X=$$SETUP2(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",166,0)
 .. D FAIL^%ut("Unable to complete entry of TEST builds")
"RTN","A1AEUF1B",167,0)
 . S X=$$SETUP3(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",168,0)
 .. D FAIL^%ut("Unable to complete entry of TEST patches")
"RTN","A1AEUF1B",169,0)
 . M SAVBLD=BUILD
"RTN","A1AEUF1B",170,0)
 . S X=$$UP2
"RTN","A1AEUF1B",171,0)
 . D CHKEQ^%ut(1,X,"Updating PAT single BUILD/INSTALL pair FAILED!")
"RTN","A1AEUF1B",172,0)
 Q
"RTN","A1AEUF1B",173,0)
UP2() N NOERR S NOERR=1
"RTN","A1AEUF1B",174,0)
 N PIEN S PIEN=$P(BUILD(BUILD(920)),"^")
"RTN","A1AEUF1B",175,0)
 S PD=BUILD(921)
"RTN","A1AEUF1B",176,0)
 D UPDPAT1^A1AEF1(PD,PIEN)
"RTN","A1AEUF1B",177,0)
 I ^XPD(9.6,PIEN,"PAT",1,0)'[PD S NOERR=0
"RTN","A1AEUF1B",178,0)
 N PIEN S PIEN=$P(BUILD(BUILD(920)),"^",2)
"RTN","A1AEUF1B",179,0)
 I ^XPD(9.7,PIEN,"PAT",1,0)'[PD S NOERR=0
"RTN","A1AEUF1B",180,0)
 Q NOERR
"RTN","A1AEUF1B",181,0)
 ;
"RTN","A1AEUF1B",182,0)
 ; Update the PAT mulitiple in the given BUILD or
"RTN","A1AEUF1B",183,0)
 ;   Install entry UPDPAT2^A1AEF1(A1AEKI,A1AEPI,KFILE)
"RTN","A1AEUF1B",184,0)
UTP12 I '$G(A1AEFAIL) D
"RTN","A1AEUF1B",185,0)
 . K BUILD,SAVBLD
"RTN","A1AEUF1B",186,0)
 . S X=$$SETUP1 I 'X D  Q
"RTN","A1AEUF1B",187,0)
 .. D FAIL^%ut("Unable to build array of BUILD names")
"RTN","A1AEUF1B",188,0)
 . S X=$$SETUP2(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",189,0)
 .. D FAIL^%ut("Unable to complete entry of TEST builds")
"RTN","A1AEUF1B",190,0)
 . S X=$$SETUP3(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",191,0)
 .. D FAIL^%ut("Unable to complete entry of TEST patches")
"RTN","A1AEUF1B",192,0)
 . M SAVBLD=BUILD
"RTN","A1AEUF1B",193,0)
 . S X=$$UP3
"RTN","A1AEUF1B",194,0)
 . D CHKEQ^%ut(1,X,"Updating PAT of  BUILD or INSTALL FAILED!")
"RTN","A1AEUF1B",195,0)
 Q
"RTN","A1AEUF1B",196,0)
UP3() N NOERR S NOERR=1
"RTN","A1AEUF1B",197,0)
 N A1AEKI S A1AEKI=$P(BUILD(BUILD(918)),"^")
"RTN","A1AEUF1B",198,0)
 N A1AEPI S A1AEPI=$P(BUILD(BUILD(919)),"^",3)
"RTN","A1AEUF1B",199,0)
 D UPDPAT2^A1AEF1(A1AEKI,A1AEPI,9.619)
"RTN","A1AEUF1B",200,0)
 S:+$P(^XPD(9.6,A1AEKI,"PAT",1,0),"^")'=A1AEPI NOERR=0
"RTN","A1AEUF1B",201,0)
 Q:'NOERR NOERR
"RTN","A1AEUF1B",202,0)
 N A1AEKI S A1AEKI=$P(BUILD(BUILD(918)),"^",2)
"RTN","A1AEUF1B",203,0)
 N A1AEPI S A1AEPI=$P(BUILD(BUILD(919)),"^",3)
"RTN","A1AEUF1B",204,0)
 D UPDPAT2^A1AEF1(A1AEKI,A1AEPI,9.719)
"RTN","A1AEUF1B",205,0)
 S:+$P(^XPD(9.7,A1AEKI,"PAT",1,0),"^")'=A1AEPI NOERR=0
"RTN","A1AEUF1B",206,0)
 Q NOERR
"RTN","A1AEUF1B",207,0)
 ;
"RTN","A1AEUF1B",208,0)
 ;
"RTN","A1AEUF1B",209,0)
 ; UPPER CASE function
"RTN","A1AEUF1B",210,0)
 ;  UP^A1AEF1(STR)
"RTN","A1AEUF1B",211,0)
UTP13 I '$G(A1AEFAIL) D
"RTN","A1AEUF1B",212,0)
 . N X,STR S STR="abcdefghijklmnopqrstuvwxyz1234567890"
"RTN","A1AEUF1B",213,0)
 . S X=$$UP^A1AEF1(STR)="ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
"RTN","A1AEUF1B",214,0)
 . D CHKEQ^%ut(1,X,"UPPERCASE function FAILED!")
"RTN","A1AEUF1B",215,0)
 Q
"RTN","A1AEUF1B",216,0)
 ;
"RTN","A1AEUF1B",217,0)
 ; Remove BUILDS from array that represent earlier versions
"RTN","A1AEUF1B",218,0)
 ;  of a package REMOB^A1AEF1(BARR)
"RTN","A1AEUF1B",219,0)
UTP14 I '$G(A1AEFAIL) D
"RTN","A1AEUF1B",220,0)
 . K BUILD,SAVBLD
"RTN","A1AEUF1B",221,0)
 . S X=$$SETUP1 I 'X D  Q
"RTN","A1AEUF1B",222,0)
 .. D FAIL^%ut("Unable to build array of BUILD names")
"RTN","A1AEUF1B",223,0)
 . S X=$$SETUP2(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",224,0)
 .. D FAIL^%ut("Unable to complete entry of TEST builds")
"RTN","A1AEUF1B",225,0)
 . S X=$$SETUP3(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",226,0)
 .. D FAIL^%ut("Unable to complete entry of TEST patches")
"RTN","A1AEUF1B",227,0)
 . M SAVBLD=BUILD
"RTN","A1AEUF1B",228,0)
 . S X=0
"RTN","A1AEUF1B",229,0)
 . D REMOB^A1AEF1(.BUILD)
"RTN","A1AEUF1B",230,0)
 . N BLD S BLD=$O(BUILD(" "))
"RTN","A1AEUF1B",231,0)
 . S:SAVBLD(921)=BLD X=1
"RTN","A1AEUF1B",232,0)
 . S:$O(BUILD(BLD))'="" X=0
"RTN","A1AEUF1B",233,0)
 . D CHKEQ^%ut(1,X,"Remove NON-CURRENT PKG array entries FAILED!")
"RTN","A1AEUF1B",234,0)
 Q
"RTN","A1AEUF1B",235,0)
 ;
"RTN","A1AEUF1B",236,0)
 ;
"RTN","A1AEUF1B",237,0)
 ; Check BUILD to see if it represents current or earlier
"RTN","A1AEUF1B",238,0)
 ;  version of a package
"RTN","A1AEUF1B",239,0)
UTP15 I '$G(A1AEFAIL) D
"RTN","A1AEUF1B",240,0)
 . K BUILD,SAVBLD
"RTN","A1AEUF1B",241,0)
 . S X=$$SETUP1 I 'X D  Q
"RTN","A1AEUF1B",242,0)
 .. D FAIL^%ut("Unable to build array of BUILD names")
"RTN","A1AEUF1B",243,0)
 . S X=$$SETUP2(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",244,0)
 .. D FAIL^%ut("Unable to complete entry of TEST builds")
"RTN","A1AEUF1B",245,0)
 . S X=$$SETUP3(.BUILD) I 'X D  Q
"RTN","A1AEUF1B",246,0)
 .. D FAIL^%ut("Unable to complete entry of TEST patches")
"RTN","A1AEUF1B",247,0)
 . M SAVBLD=BUILD
"RTN","A1AEUF1B",248,0)
 . S X=$$BACTV^A1AEF1(BUILD(921))
"RTN","A1AEUF1B",249,0)
 . S:$$BACTV^A1AEF1(BUILD(900))'=0 X=0
"RTN","A1AEUF1B",250,0)
 . D CHKEQ^%ut(1,X,"Check BUILD for CURRENT PKG FAILED!")
"RTN","A1AEUF1B",251,0)
 Q
"RTN","A1AEUF1B",252,0)
 ;
"RTN","A1AEUF1B",253,0)
 ;
"RTN","A1AEUF1B",254,0)
 ; Build an array of bogus BUILD NAMES
"RTN","A1AEUF1B",255,0)
 ; ENTER
"RTN","A1AEUF1B",256,0)
 ;   nothing required
"RTN","A1AEUF1B",257,0)
 ; RETURN
"RTN","A1AEUF1B",258,0)
 ;   0 = error, 1 = array built
"RTN","A1AEUF1B",259,0)
SETUP1() N I
"RTN","A1AEUF1B",260,0)
 F I=900:1:910 D
"RTN","A1AEUF1B",261,0)
 . S BUILD(I)="A1AE*999*"_I
"RTN","A1AEUF1B",262,0)
 . S BUILD(I+10)="A1AE*999*"_(10000+I+10)
"RTN","A1AEUF1B",263,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C","A1AE",0))
"RTN","A1AEUF1B",264,0)
 N ACTVER S ACTVER=$$GET1^DIQ(9.4,PKGIEN_",",13)
"RTN","A1AEUF1B",265,0)
 S BUILD(921)="A1AE*"_ACTVER_"*911"
"RTN","A1AEUF1B",266,0)
 Q:I=910 1  Q 0
"RTN","A1AEUF1B",267,0)
 ;
"RTN","A1AEUF1B",268,0)
 ; Load new builds into BUILD [#9.6] file
"RTN","A1AEUF1B",269,0)
 ; ENTER
"RTN","A1AEUF1B",270,0)
 ;   BUILD  = array of build names by reference
"RTN","A1AEUF1B",271,0)
 ; RETURN
"RTN","A1AEUF1B",272,0)
 ;   0 = error, 1 = BUILDS successfully added to 9.6
"RTN","A1AEUF1B",273,0)
 ;                  BUILD array updated
"RTN","A1AEUF1B",274,0)
SETUP2(BUILD) N X,I
"RTN","A1AEUF1B",275,0)
 F I=900:1:921 D  Q:'X
"RTN","A1AEUF1B",276,0)
 . S X=$$LDBLD(BUILD(I)) Q:'X
"RTN","A1AEUF1B",277,0)
 . S BUILD(BUILD(I))=X
"RTN","A1AEUF1B",278,0)
 . S X=$$LDINST(BUILD(I)) Q:'X
"RTN","A1AEUF1B",279,0)
 . S BUILD(BUILD(I))=BUILD(BUILD(I))_"^"_X
"RTN","A1AEUF1B",280,0)
 Q:X 1  Q X
"RTN","A1AEUF1B",281,0)
 ;
"RTN","A1AEUF1B",282,0)
 ; Load new patches into DHCP PATCHES [#11005] file
"RTN","A1AEUF1B",283,0)
 ; ENTER
"RTN","A1AEUF1B",284,0)
 ;   BUILD  = array of build names by reference
"RTN","A1AEUF1B",285,0)
 ; RETURN
"RTN","A1AEUF1B",286,0)
 ;   0 = error, 1 = PATCHES successfully added to 11005
"RTN","A1AEUF1B",287,0)
 ;                  BUILD array updated again
"RTN","A1AEUF1B",288,0)
SETUP3(BUILD) N PD S PD=" " F  S PD=$O(BUILD(PD)) Q:PD=""  D
"RTN","A1AEUF1B",289,0)
 . S X=$$MKPATCH(PD) Q:'X  D
"RTN","A1AEUF1B",290,0)
 . S BUILD(PD)=$G(BUILD(PD))_"^"_X
"RTN","A1AEUF1B",291,0)
 Q:X 1  Q X
"RTN","A1AEUF1B",292,0)
 ;  After SETUP3 we have
"RTN","A1AEUF1B",293,0)
 ;     BUILD(900)="A1AE*999*900"
"RTN","A1AEUF1B",294,0)
 ;     BUILD(901)="A1AE*999*901"
"RTN","A1AEUF1B",295,0)
 ;     BUILD(902)="A1AE*999*902"
"RTN","A1AEUF1B",296,0)
 ;     BUILD(903)="A1AE*999*903"
"RTN","A1AEUF1B",297,0)
 ;     BUILD(904)="A1AE*999*904"
"RTN","A1AEUF1B",298,0)
 ;     BUILD(905)="A1AE*999*905"
"RTN","A1AEUF1B",299,0)
 ;     BUILD(906)="A1AE*999*906"
"RTN","A1AEUF1B",300,0)
 ;     BUILD(907)="A1AE*999*907"
"RTN","A1AEUF1B",301,0)
 ;     BUILD(908)="A1AE*999*908"
"RTN","A1AEUF1B",302,0)
 ;     BUILD(909)="A1AE*999*909"
"RTN","A1AEUF1B",303,0)
 ;     BUILD(910)="A1AE*999*910"
"RTN","A1AEUF1B",304,0)
 ;     BUILD(911)="A1AE*999*10911"
"RTN","A1AEUF1B",305,0)
 ;     BUILD(912)="A1AE*999*10912"
"RTN","A1AEUF1B",306,0)
 ;     BUILD(913)="A1AE*999*10913"
"RTN","A1AEUF1B",307,0)
 ;     BUILD(914)="A1AE*999*10914"
"RTN","A1AEUF1B",308,0)
 ;     BUILD(915)="A1AE*999*10915"
"RTN","A1AEUF1B",309,0)
 ;     BUILD(916)="A1AE*999*10916"
"RTN","A1AEUF1B",310,0)
 ;     BUILD(917)="A1AE*999*10917"
"RTN","A1AEUF1B",311,0)
 ;     BUILD(918)="A1AE*999*10918"
"RTN","A1AEUF1B",312,0)
 ;     BUILD(919)="A1AE*999*10919"
"RTN","A1AEUF1B",313,0)
 ;     BUILD(920)="A1AE*999*10920"
"RTN","A1AEUF1B",314,0)
 ;     BUILD(921)="A1AE*2.4*911"
"RTN","A1AEUF1B",315,0)
 ;     BUILD("A1AE*2.4*911")="9538^9016"
"RTN","A1AEUF1B",316,0)
 ;     BUILD("A1AE*999*10911")="9487^129506"
"RTN","A1AEUF1B",317,0)
 ;     BUILD("A1AE*999*10912")="9488^129507"
"RTN","A1AEUF1B",318,0)
 ;     BUILD("A1AE*999*10913")="9489^129508"
"RTN","A1AEUF1B",319,0)
 ;     BUILD("A1AE*999*10914")="9490^129509"
"RTN","A1AEUF1B",320,0)
 ;     BUILD("A1AE*999*10915")="9491^129510"
"RTN","A1AEUF1B",321,0)
 ;     BUILD("A1AE*999*10916")="9492^129511"
"RTN","A1AEUF1B",322,0)
 ;     BUILD("A1AE*999*10917")="9493^129512"
"RTN","A1AEUF1B",323,0)
 ;     BUILD("A1AE*999*10918")="9494^129513"
"RTN","A1AEUF1B",324,0)
 ;     BUILD("A1AE*999*10919")="9495^129514"
"RTN","A1AEUF1B",325,0)
 ;     BUILD("A1AE*999*10920")="9496^129515"
"RTN","A1AEUF1B",326,0)
 ;     BUILD("A1AE*999*900")="9476^129516"
"RTN","A1AEUF1B",327,0)
 ;     BUILD("A1AE*999*901")="9477^129517"
"RTN","A1AEUF1B",328,0)
 ;     BUILD("A1AE*999*902")="9478^129518"
"RTN","A1AEUF1B",329,0)
 ;     BUILD("A1AE*999*903")="9479^129519"
"RTN","A1AEUF1B",330,0)
 ;     BUILD("A1AE*999*904")="9480^129520"
"RTN","A1AEUF1B",331,0)
 ;     BUILD("A1AE*999*905")="9481^129521"
"RTN","A1AEUF1B",332,0)
 ;     BUILD("A1AE*999*906")="9482^129522"
"RTN","A1AEUF1B",333,0)
 ;     BUILD("A1AE*999*907")="9483^129523"
"RTN","A1AEUF1B",334,0)
 ;     BUILD("A1AE*999*908")="9484^129524"
"RTN","A1AEUF1B",335,0)
 ;     BUILD("A1AE*999*909")="9485^129525"
"RTN","A1AEUF1B",336,0)
 ;     BUILD("A1AE*999*910")="9486^129526"
"RTN","A1AEUF1B",337,0)
 ;
"RTN","A1AEUF1B",338,0)
 ;
"RTN","A1AEUF1B",339,0)
 ;Load new BUILD [#9.6] entry and corresponding INSTALL entry
"RTN","A1AEUF1B",340,0)
 ;ENTER
"RTN","A1AEUF1B",341,0)
 ;  BUILD   =  Build name
"RTN","A1AEUF1B",342,0)
 ;RETURN
"RTN","A1AEUF1B",343,0)
 ;  0 = error,  n = IEN of successful entry in 9.6
"RTN","A1AEUF1B",344,0)
LDBLD(BUILD) ;
"RTN","A1AEUF1B",345,0)
 Q:BUILD="" 0_"^No BUILD Name"
"RTN","A1AEUF1B",346,0)
 S X=$O(^XPD(9.6,"B",BUILD,0)) Q:X X
"RTN","A1AEUF1B",347,0)
 N DIERR,FDA,FDAIEN
"RTN","A1AEUF1B",348,0)
 N PKGIEN S PKGIEN=+$O(^DIC(9.4,"C",$P(BUILD,"*"),0))
"RTN","A1AEUF1B",349,0)
 S FDA(3,9.6,"?+1,",.01)=BUILD
"RTN","A1AEUF1B",350,0)
 S FDA(3,9.6,"?+1,",1)=PKGIEN
"RTN","A1AEUF1B",351,0)
 S FDA(3,9.6,"?+1,",2)=0
"RTN","A1AEUF1B",352,0)
 S FDA(3,9.6,"?+1,",.02)=$$HTFM^XLFDT($H,1)
"RTN","A1AEUF1B",353,0)
 S FDA(3,9.6,"?+1,",5)="n"
"RTN","A1AEUF1B",354,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF1B",355,0)
 I $D(DIERR) Q 0
"RTN","A1AEUF1B",356,0)
 Q +$G(FDAIEN(1))
"RTN","A1AEUF1B",357,0)
 ;
"RTN","A1AEUF1B",358,0)
 ;Load new BUILD [#9.6] entry and corresponding INSTALL entry
"RTN","A1AEUF1B",359,0)
 ;ENTER
"RTN","A1AEUF1B",360,0)
 ;  BUILD   =  Build name
"RTN","A1AEUF1B",361,0)
 ;RETURN
"RTN","A1AEUF1B",362,0)
 ;  0 = error,  n = IEN of successful entry in 9.7
"RTN","A1AEUF1B",363,0)
LDINST(BUILD) ;
"RTN","A1AEUF1B",364,0)
 Q:BUILD="" 0_"^No BUILD Name"
"RTN","A1AEUF1B",365,0)
 S X=$O(^XPD(9.7,"B",BUILD,0)) Q:X X
"RTN","A1AEUF1B",366,0)
 N DIERR,FDA,FDAIEN
"RTN","A1AEUF1B",367,0)
 S FDA(3,9.7,"?+1,",.01)=BUILD
"RTN","A1AEUF1B",368,0)
 S FDA(3,9.7,"?+1,",.02)=3
"RTN","A1AEUF1B",369,0)
 S FDA(3,9.7,"?+1,",2)=$$HTFM^XLFDT($H,1)
"RTN","A1AEUF1B",370,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF1B",371,0)
 I $D(DIERR) Q 0
"RTN","A1AEUF1B",372,0)
 Q +$G(FDAIEN(1))
"RTN","A1AEUF1B",373,0)
 ;
"RTN","A1AEUF1B",374,0)
 ; ENTER
"RTN","A1AEUF1B",375,0)
 ;    PD   =  PATCH DESIGNATION
"RTN","A1AEUF1B",376,0)
 ;    RTN  =  ROUTINE NAME to add to 11005 PD entry
"RTN","A1AEUF1B",377,0)
 ; RETURNS
"RTN","A1AEUF1B",378,0)
 ;    0 = error,  IEN of patch if successful
"RTN","A1AEUF1B",379,0)
MKPATCH(PD) Q:PD="" 0
"RTN","A1AEUF1B",380,0)
 N X,Y,DA,DIC,DIEN
"RTN","A1AEUF1B",381,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C",$P(PD,"*"),0)) Q:PKGIEN="" 0
"RTN","A1AEUF1B",382,0)
 N PKGAV S PKGAV=$$GET1^DIQ(9.4,PKGIEN_",",13) Q:'PKGAV 0
"RTN","A1AEUF1B",383,0)
 N PTCHNB S PTCHNB=+$P(PD,"*",3) Q:'PTCHNB 0
"RTN","A1AEUF1B",384,0)
 N PTSTRM S PTSTRM=$S(PTCHNB>10001:10001,1:1)
"RTN","A1AEUF1B",385,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF1B",386,0)
 N FDAIEN
"RTN","A1AEUF1B",387,0)
 ; If already entry in 11005, move on to adding RTN
"RTN","A1AEUF1B",388,0)
 I +$O(^A1AE(A1AEFILE,"B",PD,0)) D  ; JLI 150525
"RTN","A1AEUF1B",389,0)
 . S FDAIEN(1)=+$O(^A1AE(A1AEFILE,"B",PD,0)) ; JLI 150525
"RTN","A1AEUF1B",390,0)
 E  D
"RTN","A1AEUF1B",391,0)
 . N DIERR
"RTN","A1AEUF1B",392,0)
 . S FDA(3,A1AEFILE,"?+1,",.01)=PD ; JLI 150525
"RTN","A1AEUF1B",393,0)
 . S FDA(3,A1AEFILE,"?+1,",.2)=PTSTRM
"RTN","A1AEUF1B",394,0)
 . S FDA(3,A1AEFILE,"?+1,",2)=PKGIEN
"RTN","A1AEUF1B",395,0)
 . S FDA(3,A1AEFILE,"?+1,",3)=PKGAV
"RTN","A1AEUF1B",396,0)
 . S FDA(3,A1AEFILE,"?+1,",4)=PTCHNB
"RTN","A1AEUF1B",397,0)
 . S FDA(3,A1AEFILE,"?+1,",5)="A1AE TEST ZZZFOR UNIT TESTS"
"RTN","A1AEUF1B",398,0)
 . D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF1B",399,0)
 ;W "NEW ENTRY=",+$G(FDAIEN(1))
"RTN","A1AEUF1B",400,0)
 Q:$D(DIERR) 0
"RTN","A1AEUF1B",401,0)
 S FDAIEN=+$G(FDAIEN(1))
"RTN","A1AEUF1B",402,0)
 Q FDAIEN
"RTN","A1AEUF1B",403,0)
 ;
"RTN","A1AEUF1B",404,0)
 ;
"RTN","A1AEUF1B",405,0)
 ; Delete all test build entries
"RTN","A1AEUF1B",406,0)
 ; RETURN
"RTN","A1AEUF1B",407,0)
 ;  1 if no errors, 0 if deletion failed
"RTN","A1AEUF1B",408,0)
 ;  Nothing to delete returns 1 for no errors
"RTN","A1AEUF1B",409,0)
DELTBLDS() N DA,DIK,X,Y S X=1
"RTN","A1AEUF1B",410,0)
 N NODE S NODE=$NA(^XPD(9.6,"B","A1AE*999"))
"RTN","A1AEUF1B",411,0)
 F  S NODE=$Q(@NODE) Q:NODE'["A1AE*999"  D  Q:'X
"RTN","A1AEUF1B",412,0)
 .  N DA,DIK,DIERR
"RTN","A1AEUF1B",413,0)
 .  S DA=$QS(NODE,4)
"RTN","A1AEUF1B",414,0)
 .  S DIK="^XPD(9.6,"
"RTN","A1AEUF1B",415,0)
 .  D ^DIK
"RTN","A1AEUF1B",416,0)
 .  S:$D(DIERR) X=0
"RTN","A1AEUF1B",417,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C","A1AE",0))
"RTN","A1AEUF1B",418,0)
 N ACTVER S ACTVER=$$GET1^DIQ(9.4,PKGIEN_",",13)
"RTN","A1AEUF1B",419,0)
 N PD S PD="A1AE*"_ACTVER_"*911"
"RTN","A1AEUF1B",420,0)
 S DA=$O(^XPD(9.6,"B",PD,0)) I DA D
"RTN","A1AEUF1B",421,0)
 . S DIK="^XPD(9.6,"
"RTN","A1AEUF1B",422,0)
 . D ^DIK
"RTN","A1AEUF1B",423,0)
 . S:$D(DIERR) X=0
"RTN","A1AEUF1B",424,0)
 Q X
"RTN","A1AEUF1B",425,0)
 ;
"RTN","A1AEUF1B",426,0)
 ; Delete all test INSTALL entries
"RTN","A1AEUF1B",427,0)
 ; RETURN
"RTN","A1AEUF1B",428,0)
 ;  1 if no errors, 0 if deletion failed
"RTN","A1AEUF1B",429,0)
 ;  Nothing to delete returns 1 for no errors
"RTN","A1AEUF1B",430,0)
DELTINST() N DA,DIK,X,Y S X=1
"RTN","A1AEUF1B",431,0)
 N NODE S NODE=$NA(^XPD(9.7,"B","A1AE*999"))
"RTN","A1AEUF1B",432,0)
 F  S NODE=$Q(@NODE) Q:NODE'["A1AE*999"  D  Q:'X
"RTN","A1AEUF1B",433,0)
 .  N DA,DIK,DIERR
"RTN","A1AEUF1B",434,0)
 .  S DA=$QS(NODE,4)
"RTN","A1AEUF1B",435,0)
 .  S DIK="^XPD(9.7,"
"RTN","A1AEUF1B",436,0)
 .  D ^DIK
"RTN","A1AEUF1B",437,0)
 .  S:$D(DIERR) X=0
"RTN","A1AEUF1B",438,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C","A1AE",0))
"RTN","A1AEUF1B",439,0)
 N ACTVER S ACTVER=$$GET1^DIQ(9.4,PKGIEN_",",13)
"RTN","A1AEUF1B",440,0)
 N PD S PD="A1AE*"_ACTVER_"*911"
"RTN","A1AEUF1B",441,0)
 S DA=$O(^XPD(9.7,"B",PD,0)) I DA D
"RTN","A1AEUF1B",442,0)
 . S DIK="^XPD(9.7,"
"RTN","A1AEUF1B",443,0)
 . D ^DIK
"RTN","A1AEUF1B",444,0)
 . S:$D(DIERR) X=0
"RTN","A1AEUF1B",445,0)
 Q X
"RTN","A1AEUF1B",446,0)
 ;
"RTN","A1AEUF1B",447,0)
 ; ENTER
"RTN","A1AEUF1B",448,0)
 ;   nothing required
"RTN","A1AEUF1B",449,0)
 ; RETURN
"RTN","A1AEUF1B",450,0)
 ;   0 = error, 1 = deletions complete
"RTN","A1AEUF1B",451,0)
DELPAT() N PD,PIEN,DIK,DA,DIERR,NOERR S PD="A1AE*999*",NOERR=1
"RTN","A1AEUF1B",452,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF1B",453,0)
 F  S PD=$O(^A1AE(A1AEFILE,"B",PD)) Q:PD'["A1AE*999"  D  Q:'NOERR
"RTN","A1AEUF1B",454,0)
 . S PIEN=$O(^A1AE(A1AEFILE,"B",PD,0)) I 'PIEN S NOERR=0 Q
"RTN","A1AEUF1B",455,0)
 . S DIK="^A1AE(A1AEFILE," S DA=+PIEN D ^DIK
"RTN","A1AEUF1B",456,0)
 . S:$D(DIERR) NOERR=0
"RTN","A1AEUF1B",457,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C","A1AE",0))
"RTN","A1AEUF1B",458,0)
 N ACTVER S ACTVER=$$GET1^DIQ(9.4,PKGIEN_",",13)
"RTN","A1AEUF1B",459,0)
 N PD S PD="A1AE*"_ACTVER_"*911"
"RTN","A1AEUF1B",460,0)
 S DA=$O(^A1AE(A1AEFILE,"B",PD,0)) I DA D
"RTN","A1AEUF1B",461,0)
 . S DIK="^A1AE(A1AEFILE,"
"RTN","A1AEUF1B",462,0)
 . D ^DIK
"RTN","A1AEUF1B",463,0)
 . S:$D(DIERR) X=0
"RTN","A1AEUF1B",464,0)
 Q NOERR
"RTN","A1AEUF1B",465,0)
 ;
"RTN","A1AEUF1B",466,0)
 ; Function to return IEN of DHCP PATCH STREAM [#11007.1]
"RTN","A1AEUF1B",467,0)
 ;   entry having PRIMARY? [#.02] field set
"RTN","A1AEUF1B",468,0)
 ;   while then setting FOIA VISTA to primary
"RTN","A1AEUF1B",469,0)
UTPRIEN() ;
"RTN","A1AEUF1B",470,0)
 N A1AEI,UTPRIM S (A1AEI,UTPRIM)=0
"RTN","A1AEUF1B",471,0)
 F  S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AEUF1B",472,0)
 . I $P(^A1AE(11007.1,A1AEI,0),U,2) S UTPRIM=A1AEI
"RTN","A1AEUF1B",473,0)
 S $P(^A1AE(11007.1,1,0),U,2)=1 ; Set PRIMARY TO FOIA VISTA
"RTN","A1AEUF1B",474,0)
 S $P(^A1AE(11007.1,10001,0),U,2)=0
"RTN","A1AEUF1B",475,0)
 N DIK,DA
"RTN","A1AEUF1B",476,0)
 S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AEUF1B",477,0)
 D ENALL2^DIK
"RTN","A1AEUF1B",478,0)
 D ENALL^DIK
"RTN","A1AEUF1B",479,0)
 Q UTPRIM
"RTN","A1AEUF1B",480,0)
 ;
"RTN","A1AEUF1B",481,0)
 ; Put PATCH STREAM PRIMARY back as it was
"RTN","A1AEUF1B",482,0)
REPPRIM S $P(^A1AE(11007.1,1,0),U,2)=0
"RTN","A1AEUF1B",483,0)
 S $P(^A1AE(11007.1,10001,0),U,2)=0
"RTN","A1AEUF1B",484,0)
 S:$G(UTOPIEN) $P(^A1AE(11007.1,UTOPIEN,0),U,2)=1
"RTN","A1AEUF1B",485,0)
 N DIK,DA
"RTN","A1AEUF1B",486,0)
 S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AEUF1B",487,0)
 D ENALL2^DIK
"RTN","A1AEUF1B",488,0)
 D ENALL^DIK
"RTN","A1AEUF1B",489,0)
 Q
"RTN","A1AEUF1B",490,0)
 ;
"RTN","A1AEUF1B",491,0)
UP(STR) Q $TR(STR,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","A1AEUF1B",492,0)
 ;
"RTN","A1AEUF1B",493,0)
XTENT ;
"RTN","A1AEUF1B",494,0)
 ;;UTP8;Testing collecting patches for KIDS
"RTN","A1AEUF1B",495,0)
 ;;UTP9;Testing filtering array for PATCH STREAM
"RTN","A1AEUF1B",496,0)
 ;;UTP10;Testing Updating PAT multiples of BUILD/INSTALLS
"RTN","A1AEUF1B",497,0)
 ;;UTP11;Testing Updating PAT single BUILD/INSTALL pair
"RTN","A1AEUF1B",498,0)
 ;;UTP12;Testing Updating PAT of  BUILD or INSTALL
"RTN","A1AEUF1B",499,0)
 ;;UTP13;Testing UPPERCASE function
"RTN","A1AEUF1B",500,0)
 ;;UTP14;Testing Remove NON-CURRENT PKG array entries
"RTN","A1AEUF1B",501,0)
 ;;UTP15;Testing Check BUILD for CURRENT PKG
"RTN","A1AEUF1B",502,0)
 ;
"RTN","A1AEUF1B",503,0)
TEST K BUILD,SAVBLD
"RTN","A1AEUF1B",504,0)
 S X=$$DELTBLDS
"RTN","A1AEUF1B",505,0)
 S X=$$DELTINST
"RTN","A1AEUF1B",506,0)
 S X=$$DELPAT
"RTN","A1AEUF1B",507,0)
 S X=$$SETUP1
"RTN","A1AEUF1B",508,0)
 S X=$$SETUP2(.BUILD)
"RTN","A1AEUF1B",509,0)
 S X=$$SETUP3(.BUILD)
"RTN","A1AEUF1B",510,0)
 M SAVBLD=BUILD
"RTN","A1AEUF1B",511,0)
 S $P(^A1AE(11007.1,1,0),U,2)=1
"RTN","A1AEUF1B",512,0)
 S $P(^A1AE(11007.1,10001,0),U,2)=1
"RTN","A1AEUF1B",513,0)
 N DIK,DA
"RTN","A1AEUF1B",514,0)
 S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AEUF1B",515,0)
 D ENALL2^DIK
"RTN","A1AEUF1B",516,0)
 D ENALL^DIK
"RTN","A1AEUF1B",517,0)
TEST1 W !,"LAST BUILD=",$O(^XPD(9.6,"A"),-1),!
"RTN","A1AEUF1B",518,0)
 W !,"LAST INSTALL=",$O(^XPD(9.7,"A"),-1),!
"RTN","A1AEUF1B",519,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF1B",520,0)
 W !,"LAST PATCH=",$O(^A1AE(A1AEFILE,"A"),-1),!
"RTN","A1AEUF1B",521,0)
 Q
"RTN","A1AEUF1B",522,0)
 ;
"RTN","A1AEUF1B",523,0)
EOR ; end of routine A1AEUF1B
"RTN","A1AEUF2")
0^75^B18115754
"RTN","A1AEUF2",1,0)
A1AEUF2 ;ven/lgc,jli-unit tests for A1AEF2 ;2014-12-18T00:17
"RTN","A1AEUF2",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUF2",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUF2",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUF2",5,0)
 ;
"RTN","A1AEUF2",6,0)
 ;
"RTN","A1AEUF2",7,0)
 ;primary change history
"RTN","A1AEUF2",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUF2",9,0)
 ;
"RTN","A1AEUF2",10,0)
 ;
"RTN","A1AEUF2",11,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUF2",12,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUF2",13,0)
 Q
"RTN","A1AEUF2",14,0)
 ;
"RTN","A1AEUF2",15,0)
STARTUP S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUF2",16,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUF2",17,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUF2",18,0)
 . S A1AEFAIL=1
"RTN","A1AEUF2",19,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUF2",20,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF2",21,0)
 ;
"RTN","A1AEUF2",22,0)
 L +^A1AE(A1AEFILE):1 I '$T D  Q
"RTN","A1AEUF2",23,0)
 . S A1AEFAIL=1
"RTN","A1AEUF2",24,0)
 . W !,"Unable to obtain lock on "_A1AENAME_" [#"_A1AEFILE_"] file"
"RTN","A1AEUF2",25,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF2",26,0)
 ;
"RTN","A1AEUF2",27,0)
 Q
"RTN","A1AEUF2",28,0)
 ;
"RTN","A1AEUF2",29,0)
SHUTDOWN L -^XPD(9.6):1
"RTN","A1AEUF2",30,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF2",31,0)
 L -^A1AE(A1AEFILE):1
"RTN","A1AEUF2",32,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUF2",33,0)
 K A1AEFAIL
"RTN","A1AEUF2",34,0)
 Q
"RTN","A1AEUF2",35,0)
 ;
"RTN","A1AEUF2",36,0)
 ;  Testing
"RTN","A1AEUF2",37,0)
 ;     UTP16 MINSET^A1AEF2(.BARR)
"RTN","A1AEUF2",38,0)
 ;     UTP17 LOADXTMP^A1AEF2(BUILD,BIEN,DTINS)
"RTN","A1AEUF2",39,0)
 ;     UTP18 DTINS^A1AEF2(BUILD)
"RTN","A1AEUF2",40,0)
 ;     UTP19 BLDMS^A1AEF2
"RTN","A1AEUF2",41,0)
 ;
"RTN","A1AEUF2",42,0)
 ; D LOADXTMP^A1AEF2("SD*5.3*41",60,7039284.85578)
"RTN","A1AEUF2",43,0)
 ;  This patch installed 2960715.144219 in FOIA accounts
"RTN","A1AEUF2",44,0)
 ;   should be same for all sites and produce equivalent
"RTN","A1AEUF2",45,0)
 ;   XTMP arrays.  Thus, we will match with one saved
"RTN","A1AEUF2",46,0)
 ;   at the end of this routine.
"RTN","A1AEUF2",47,0)
 ;
"RTN","A1AEUF2",48,0)
 ;
"RTN","A1AEUF2",49,0)
UTP16 N MINSET
"RTN","A1AEUF2",50,0)
 D MINSET^A1AEF2("SD*5.3*41")
"RTN","A1AEUF2",51,0)
 N PD S PD="",PD=$O(MINSET(PD)) S X=PD["SD*5.3*41"
"RTN","A1AEUF2",52,0)
 S PD=$O(MINSET(PD)) S X=PD=""
"RTN","A1AEUF2",53,0)
 D CHKEQ^%ut(1,X,"Testing Minimal Set from BUILD  FAILED!")
"RTN","A1AEUF2",54,0)
 Q
"RTN","A1AEUF2",55,0)
 ;
"RTN","A1AEUF2",56,0)
 ;
"RTN","A1AEUF2",57,0)
UTP17 N X S X=$$ENLD
"RTN","A1AEUF2",58,0)
 D CHKEQ^%ut(1,X,"Testing Load Build Components into XTMP FAILED!")
"RTN","A1AEUF2",59,0)
 Q
"RTN","A1AEUF2",60,0)
 ;
"RTN","A1AEUF2",61,0)
ENLD() N BLD,CNT,FNDONE,NODE,X S BLD=0
"RTN","A1AEUF2",62,0)
 F  S BLD=$O(^XPD(9.6,BLD)) Q:'BLD  Q:$G(FNDONE)  D
"RTN","A1AEUF2",63,0)
 .  S NODE=$NA(^XPD(9.6,BLD,"KRN")),CNT=0
"RTN","A1AEUF2",64,0)
 .  S SNODE=$P(NODE,")")
"RTN","A1AEUF2",65,0)
 .  F  S NODE=$Q(@NODE) Q:NODE'[SNODE  D
"RTN","A1AEUF2",66,0)
 ..  S CNT=CNT+1 I CNT>150 S FNDONE=BLD
"RTN","A1AEUF2",67,0)
 ;W !,FNDONE
"RTN","A1AEUF2",68,0)
 K BLDARR M BLDARR("KRN")=^XPD(9.6,FNDONE,"KRN")
"RTN","A1AEUF2",69,0)
 M BLDARR(4)=^XPD(9.6,FNDONE,4)
"RTN","A1AEUF2",70,0)
 ;
"RTN","A1AEUF2",71,0)
 K ^XTMP($J)
"RTN","A1AEUF2",72,0)
 D LOADXTMP^A1AEF2("LOADXTMP",FNDONE,12345)
"RTN","A1AEUF2",73,0)
 ;
"RTN","A1AEUF2",74,0)
 N X S X=0
"RTN","A1AEUF2",75,0)
 S NODE=$NA(BLDARR)
"RTN","A1AEUF2",76,0)
 F  S NODE=$Q(@NODE) Q:NODE'["BLDARR"  D
"RTN","A1AEUF2",77,0)
 .  I $QS(NODE,1)=4,$QS(NODE,2)="B" D
"RTN","A1AEUF2",78,0)
 ..  S X=$D(^XTMP($J,4,$QS(NODE,3))) Q:'X
"RTN","A1AEUF2",79,0)
 .  I $QS(NODE,1)="KRN",$QS(NODE,3)="NM",$QS(NODE,4)="B" D
"RTN","A1AEUF2",80,0)
 ..  S X=$D(^XTMP($J,$QS(NODE,2),$QS(NODE,5))) Q:'X
"RTN","A1AEUF2",81,0)
 ;W !,"X=",X,!!!
"RTN","A1AEUF2",82,0)
 Q:'X X
"RTN","A1AEUF2",83,0)
 ;
"RTN","A1AEUF2",84,0)
 S X=0
"RTN","A1AEUF2",85,0)
 S NODE=$NA(^XTMP($J)),SNODE=$P(NODE,")")
"RTN","A1AEUF2",86,0)
 F  S NODE=$Q(@NODE) Q:NODE'[SNODE  D
"RTN","A1AEUF2",87,0)
 . I $QS(NODE,2)=4 D
"RTN","A1AEUF2",88,0)
 ..; W !,NODE
"RTN","A1AEUF2",89,0)
 .. S X=$D(BLDARR(4,$QS(NODE,3))) Q:'X
"RTN","A1AEUF2",90,0)
 . E  D  Q:'X
"RTN","A1AEUF2",91,0)
 ..; W !,NODE
"RTN","A1AEUF2",92,0)
 .. S X=$D(BLDARR("KRN",$QS(NODE,2),"NM","B",$QS(NODE,3)))
"RTN","A1AEUF2",93,0)
 ;W !,"X=",X
"RTN","A1AEUF2",94,0)
 Q:'X X  Q 1
"RTN","A1AEUF2",95,0)
 ;
"RTN","A1AEUF2",96,0)
 ;
"RTN","A1AEUF2",97,0)
 ; Look for build with a date install completed
"RTN","A1AEUF2",98,0)
 ;  Pull date and calculate inverse manuall
"RTN","A1AEUF2",99,0)
 ;  See if matches answer with function
"RTN","A1AEUF2",100,0)
UTP18 N PD,PDIEN,DTIC,DTICIV S PD="DG"
"RTN","A1AEUF2",101,0)
 F  S PD=$O(^XPD(9.7,"B",PD)) Q:PD=""  D  Q:DTIC
"RTN","A1AEUF2",102,0)
 .  S PDIEN=$O(^XPD(9.7,"B",PD,0)) Q:'PDIEN
"RTN","A1AEUF2",103,0)
 .  S DTIC=$$GET1^DIQ(9.7,PDIEN_",",17,"I")
"RTN","A1AEUF2",104,0)
 S DTICIV=9999999.999999-DTIC
"RTN","A1AEUF2",105,0)
 S X=(DTICIV=$$DTINS^A1AEF2(PD))
"RTN","A1AEUF2",106,0)
 D CHKEQ^%ut(1,X,"Testing pulling INVERSE Date Installed  FAILED!")
"RTN","A1AEUF2",107,0)
 Q
"RTN","A1AEUF2",108,0)
 ;
"RTN","A1AEUF2",109,0)
 ; 
"RTN","A1AEUF2",110,0)
 ;K ^XTMP($J) D LOADXTMP^A1AEF2("SD*5.3*41",60,7039284.85578)
"RTN","A1AEUF2",111,0)
 ;Now duplicate what is in ^XTMP($J) except change
"RTN","A1AEUF2",112,0)
 ; inverse date to earlier.  Except those representing
"RTN","A1AEUF2",113,0)
 ; file changes, as we keep all file changing builds
"RTN","A1AEUF2",114,0)
 ;D BLDMS^A1AEF2 should delete the extra and run same test
"RTN","A1AEUF2",115,0)
UTP19 K ^XTMP($J) N X,XTMP
"RTN","A1AEUF2",116,0)
 D LOADXTMP^A1AEF2("SD*5.3*41",60,7039285.85578)
"RTN","A1AEUF2",117,0)
 M XTMP($J)=^XTMP($J) K ^XTMP($J)
"RTN","A1AEUF2",118,0)
 D LOADXTMP^A1AEF2("SD*5.3*41",60,7039284.85578)
"RTN","A1AEUF2",119,0)
 S NODE=$NA(XTMP) F  S NODE=$Q(@NODE) Q:NODE=""  Q:$QS(NODE,1)'=$J  D
"RTN","A1AEUF2",120,0)
 . S X=NODE,$P(X,",",5)="""SD*5.3*44""",X="^"_X
"RTN","A1AEUF2",121,0)
 . S:'(+$P(X,",",2)=4) @X=""
"RTN","A1AEUF2",122,0)
 D BLDMS^A1AEF2
"RTN","A1AEUF2",123,0)
 N PD S PD="",PD=$O(MINSET(PD)) S X=PD["SD*5.3*41"
"RTN","A1AEUF2",124,0)
 S PD=$O(MINSET(PD)) S X=PD=""
"RTN","A1AEUF2",125,0)
 D CHKEQ^%ut(1,X,"Testing Minimal Set from XTMP array  FAILED!")
"RTN","A1AEUF2",126,0)
 Q
"RTN","A1AEUF2",127,0)
 ;
"RTN","A1AEUF2",128,0)
 ;
"RTN","A1AEUF2",129,0)
XTENT ;
"RTN","A1AEUF2",130,0)
 ;;UTP16;Testing minimum set from BUILD
"RTN","A1AEUF2",131,0)
 ;;UTP17;Testing Loadinb BUILD components into XTMP
"RTN","A1AEUF2",132,0)
 ;;UTP18;Testing Inverse Date Most Recent Install
"RTN","A1AEUF2",133,0)
 ;;UTP19;Testing building MINSET from ^XTMP array
"RTN","A1AEUF2",134,0)
 Q
"RTN","A1AEUF2",135,0)
 ;
"RTN","A1AEUF2",136,0)
EOR ; end of routine A1AEUF2
"RTN","A1AEUF3")
0^76^B12556837
"RTN","A1AEUF3",1,0)
A1AEUF3 ;ven/lgc,jli-unit tests for A1AEF3 ;2015-01-01T17:32
"RTN","A1AEUF3",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUF3",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUF3",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUF3",5,0)
 ;
"RTN","A1AEUF3",6,0)
 ;
"RTN","A1AEUF3",7,0)
 ;primary change history
"RTN","A1AEUF3",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUF3",9,0)
 ;
"RTN","A1AEUF3",10,0)
 ;
"RTN","A1AEUF3",11,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUF3",12,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUF3",13,0)
 Q
"RTN","A1AEUF3",14,0)
 ;
"RTN","A1AEUF3",15,0)
STARTUP S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUF3",16,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUF3",17,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUF3",18,0)
 . S A1AEFAIL=1
"RTN","A1AEUF3",19,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUF3",20,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF3",21,0)
 ;
"RTN","A1AEUF3",22,0)
 L +^A1AE(A1AENAME):1 I '$T D  Q
"RTN","A1AEUF3",23,0)
 . S A1AEFAIL=1
"RTN","A1AEUF3",24,0)
 . W !,"Unable to obtain lock on "_A1AENAME_" [#"_A1AEFILE_"] file"
"RTN","A1AEUF3",25,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF3",26,0)
 ;
"RTN","A1AEUF3",27,0)
 Q
"RTN","A1AEUF3",28,0)
 ;
"RTN","A1AEUF3",29,0)
SHUTDOWN L -^XPD(9.6):1
"RTN","A1AEUF3",30,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF3",31,0)
 L -^A1AE(A1AEFILE)
"RTN","A1AEUF3",32,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUF3",33,0)
 K A1AEFAIL
"RTN","A1AEUF3",34,0)
 Q
"RTN","A1AEUF3",35,0)
 ;
"RTN","A1AEUF3",36,0)
 ;  Testing
"RTN","A1AEUF3",37,0)
 ;     UTP20 SELBLDS^A1AEF3(BUILD)
"RTN","A1AEUF3",38,0)
 ;     UTP21 DISPL^A1AEF3
"RTN","A1AEUF3",39,0)
 ;     UTP22 KEEP^A1AEF3(RM)
"RTN","A1AEUF3",40,0)
 ;     UTP23 UPDBLDQ^A1AEF3(BUILD)
"RTN","A1AEUF3",41,0)
 ;     UTP24 UPDDERQ^A1AEF3
"RTN","A1AEUF3",42,0)
 ;     UTP25 UPDPATQ^A1AEF3(BUILD)
"RTN","A1AEUF3",43,0)
 ;     UTP26 UPDBLD^A1AEF3(BUILD,OARR,MARR,RM,UPD)
"RTN","A1AEUF3",44,0)
 ;     UTP27 DSPNODES^A1AEF3(DPLARR)
"RTN","A1AEUF3",45,0)
 ;     UTP28 LOADINH^A1AEF3(.RARR,.OARR)
"RTN","A1AEUF3",46,0)
 ;     UTP29 UPPAT^A1AEF3(BUILD)
"RTN","A1AEUF3",47,0)
 ;
"RTN","A1AEUF3",48,0)
 ;
"RTN","A1AEUF3",49,0)
UTP21 N X,MYDT S MYDT=DTIME
"RTN","A1AEUF3",50,0)
 S DTIME=1,X=$$DISPL^A1AEF3,DTIME=MYDT
"RTN","A1AEUF3",51,0)
 D CHKEQ^%ut(0,X,"Testing DISPLAY builds query FAILED!")
"RTN","A1AEUF3",52,0)
 Q
"RTN","A1AEUF3",53,0)
 ;
"RTN","A1AEUF3",54,0)
UTP22 N X,MYDT S MYDT=DTIME
"RTN","A1AEUF3",55,0)
 S DTIME=1,X=$$KEEP^A1AEF3("R"),DTIME=MYDT
"RTN","A1AEUF3",56,0)
 I 'X S DTIME=1,X=$$KEEP^A1AEF3("M"),DTIME=MYDT
"RTN","A1AEUF3",57,0)
 D CHKEQ^%ut(0,X,"Testing KEEP query FAILED!")
"RTN","A1AEUF3",58,0)
 Q
"RTN","A1AEUF3",59,0)
 ;
"RTN","A1AEUF3",60,0)
UTP23 N X,MYDT S MYDT=DTIME
"RTN","A1AEUF3",61,0)
 S DTIME=1,X=$$UPDBLDQ^A1AEF3("TEST BUILD"),DTIME=MYDT
"RTN","A1AEUF3",62,0)
 D CHKEQ^%ut(0,X,"Testing Update Build query FAILED!")
"RTN","A1AEUF3",63,0)
 Q
"RTN","A1AEUF3",64,0)
 ;
"RTN","A1AEUF3",65,0)
UTP24 N X,MYDT S MYDT=DTIME
"RTN","A1AEUF3",66,0)
 S DTIME=1,X=$$UPDDERQ^A1AEF3,DTIME=MYDT
"RTN","A1AEUF3",67,0)
 D CHKEQ^%ut(0,X,"Testing Bring In DERIVED query FAILED!")
"RTN","A1AEUF3",68,0)
 Q
"RTN","A1AEUF3",69,0)
 ;
"RTN","A1AEUF3",70,0)
UTP25 N X,MYDT S MYDT=DTIME
"RTN","A1AEUF3",71,0)
 S DTIME=1,X=$$UPDPATQ^A1AEF3("TEST BUILD"),DTIME=MYDT
"RTN","A1AEUF3",72,0)
 D CHKEQ^%ut(0,X,"Testing Update Patches query FAILED!")
"RTN","A1AEUF3",73,0)
 Q
"RTN","A1AEUF3",74,0)
 ;
"RTN","A1AEUF3",75,0)
 ;
"RTN","A1AEUF3",76,0)
UTP25A N POO D BLDTXTA^A1AEF3("TXTZ",.POO)
"RTN","A1AEUF3",77,0)
 N CNT,TXT,X,BUILD S (X,CNT)=0
"RTN","A1AEUF3",78,0)
 F  S TXT=$P($T(TXTZ+CNT),";;",2) Q:TXT["*END*"  D  Q:'X
"RTN","A1AEUF3",79,0)
 . S CNT=CNT+1
"RTN","A1AEUF3",80,0)
 . I '$L($P(TXT,"^",2)) D  Q
"RTN","A1AEUF3",81,0)
 ..  S X=(TXT=POO(CNT))
"RTN","A1AEUF3",82,0)
 . S TXT=$P(TXT,"^",2) D  Q
"RTN","A1AEUF3",83,0)
 .. I '$D(@TXT) D  Q
"RTN","A1AEUF3",84,0)
 ... S TXT="MISSING VAR:"_TXT
"RTN","A1AEUF3",85,0)
 ... S X=(TXT=POO(CNT))
"RTN","A1AEUF3",86,0)
 .. E  D  Q
"RTN","A1AEUF3",87,0)
 ... S TXT=@TXT
"RTN","A1AEUF3",88,0)
 ... S X=(TXT=POO(CNT))
"RTN","A1AEUF3",89,0)
 D CHKEQ^%ut(1,X,"Testing building TXT array for display FAILED!")
"RTN","A1AEUF3",90,0)
 Q
"RTN","A1AEUF3",91,0)
 ;
"RTN","A1AEUF3",92,0)
 ;
"RTN","A1AEUF3",93,0)
TXTZ ;;
"RTN","A1AEUF3",94,0)
 ;;Testing BLDTXTA in A1AEF3 
"RTN","A1AEUF3",95,0)
 ;;^BUILD
"RTN","A1AEUF3",96,0)
 ;;Testing Testing Testing
"RTN","A1AEUF3",97,0)
 ;;
"RTN","A1AEUF3",98,0)
 ;; Testing
"RTN","A1AEUF3",99,0)
 ;;
"RTN","A1AEUF3",100,0)
 ;;*END*
"RTN","A1AEUF3",101,0)
XTENT ;
"RTN","A1AEUF3",102,0)
 ;;UTP21;Testing Display Builds query
"RTN","A1AEUF3",103,0)
 ;;UTP22;Testing KEEP query
"RTN","A1AEUF3",104,0)
 ;;UTP23;Testing Update Build query
"RTN","A1AEUF3",105,0)
 ;;UTP24;Testing Bring in DERIVED query
"RTN","A1AEUF3",106,0)
 ;;UTP25;Testing Update Patches query
"RTN","A1AEUF3",107,0)
 ;;UTP25A;Testing Building text array to display
"RTN","A1AEUF3",108,0)
 Q
"RTN","A1AEUF3",109,0)
 ;
"RTN","A1AEUF3",110,0)
 ;
"RTN","A1AEUF3",111,0)
EOR ; end of routine A1AEUF3
"RTN","A1AEUF4")
0^77^B126061421
"RTN","A1AEUF4",1,0)
A1AEUF4 ;ven/lgc,jli-unit tests for A1AEF4 ; 6/4/15 7:58pm
"RTN","A1AEUF4",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUF4",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUF4",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUF4",5,0)
 ;
"RTN","A1AEUF4",6,0)
 ;
"RTN","A1AEUF4",7,0)
 ;primary change history
"RTN","A1AEUF4",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUF4",9,0)
 ;
"RTN","A1AEUF4",10,0)
 ;
"RTN","A1AEUF4",11,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUF4",12,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUF4",13,0)
 Q
"RTN","A1AEUF4",14,0)
 ;
"RTN","A1AEUF4",15,0)
STARTUP S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUF4",16,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUF4",17,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUF4",18,0)
 . S A1AEFAIL=1
"RTN","A1AEUF4",19,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUF4",20,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF4",21,0)
 ;
"RTN","A1AEUF4",22,0)
 L +^A1AE(A1AEFILE):1 I '$T D  Q
"RTN","A1AEUF4",23,0)
 . S A1AEFAIL=1
"RTN","A1AEUF4",24,0)
 . W !,"Unable to obtain lock on "_A1AENAME_" [#"_A1AEFILE_"] file"
"RTN","A1AEUF4",25,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF4",26,0)
 ;
"RTN","A1AEUF4",27,0)
 ; X may be 0 if none to delete = normal circumstance
"RTN","A1AEUF4",28,0)
 ; X = 1 if previous testing incomplete = ok too
"RTN","A1AEUF4",29,0)
 N X
"RTN","A1AEUF4",30,0)
 S X=$$DELTBLDS
"RTN","A1AEUF4",31,0)
 S X=$$DELTINST
"RTN","A1AEUF4",32,0)
 S X=$$DELPAT
"RTN","A1AEUF4",33,0)
 Q
"RTN","A1AEUF4",34,0)
 ;
"RTN","A1AEUF4",35,0)
SHUTDOWN ;
"RTN","A1AEUF4",36,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF4",37,0)
 L -^XPD(9.6):1
"RTN","A1AEUF4",38,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUF4",39,0)
 K A1AEFAIL
"RTN","A1AEUF4",40,0)
 ;
"RTN","A1AEUF4",41,0)
 S X=$$DELTBLDS I 'X D
"RTN","A1AEUF4",42,0)
 . W !,"Unable to delete test builds from 9.6",!
"RTN","A1AEUF4",43,0)
 S X=$$DELTINST I 'X D
"RTN","A1AEUF4",44,0)
 . W !,"Unable to delete test installs from 9.7",!
"RTN","A1AEUF4",45,0)
 S X=$$DELPAT I 'X D
"RTN","A1AEUF4",46,0)
 . W !,"Unable to delete test patches from "_A1AEFILE,!
"RTN","A1AEUF4",47,0)
 Q
"RTN","A1AEUF4",48,0)
 ;
"RTN","A1AEUF4",49,0)
 ;  Testing
"RTN","A1AEUF4",50,0)
 ;     UTP30 OTHSTRM^A1AEF4(BUILD)
"RTN","A1AEUF4",51,0)
 ;     UTP31 DERPTC^A1AEF4(PD)
"RTN","A1AEUF4",52,0)
 ;
"RTN","A1AEUF4",53,0)
 ;   Add 900 series patches to an entry
"RTN","A1AEUF4",54,0)
 ;      
"RTN","A1AEUF4",55,0)
 ;   Run this to see if adds OSEHRA derived patches
"RTN","A1AEUF4",56,0)
UTP30 I '$G(A1AEFAIL) D
"RTN","A1AEUF4",57,0)
 .; N BUILD,SAVBLD,X
"RTN","A1AEUF4",58,0)
 . N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF4",59,0)
 . S X=$$SETUP1 I 'X D  Q
"RTN","A1AEUF4",60,0)
 .. D FAIL^%ut("Unable to build array of BUILD names")
"RTN","A1AEUF4",61,0)
 . S X=$$SETUP2(.BUILD) I 'X D  Q
"RTN","A1AEUF4",62,0)
 .. D FAIL^%ut("Unable to complete entry of TEST builds")
"RTN","A1AEUF4",63,0)
 . S X=$$SETUP3(.BUILD) I 'X D  Q
"RTN","A1AEUF4",64,0)
 .. D FAIL^%ut("Unable to complete entry of TEST patches")
"RTN","A1AEUF4",65,0)
 . M SAVBLD=BUILD
"RTN","A1AEUF4",66,0)
 .; We must have PRIMARY set to continue
"RTN","A1AEUF4",67,0)
 .;  if none is set, temporarily set the 
"RTN","A1AEUF4",68,0)
 .;  site to FOIA VISTA as PRIMARY
"RTN","A1AEUF4",69,0)
 . N UTOPIEN S UTOPIEN=$$UTPRIEN
"RTN","A1AEUF4",70,0)
 . S $P(^A1AE(11007.1,1,0),U,2)=1
"RTN","A1AEUF4",71,0)
 . S $P(^A1AE(11007.1,10001,0),U,2)=0
"RTN","A1AEUF4",72,0)
 . N DIK,DA
"RTN","A1AEUF4",73,0)
 . S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AEUF4",74,0)
 . D ENALL2^DIK
"RTN","A1AEUF4",75,0)
 . D ENALL^DIK
"RTN","A1AEUF4",76,0)
 .;
"RTN","A1AEUF4",77,0)
 .; Set up DERIVED FROM entries for OSEHRA patches
"RTN","A1AEUF4",78,0)
 . N A1AEIP S A1AEIP=$P(BUILD("A1AE*999*10911"),"^",3)
"RTN","A1AEUF4",79,0)
 . N I F I=A1AEIP:1:A1AEIP+9 D
"RTN","A1AEUF4",80,0)
 .. S $P(^A1AE(A1AEFILE,I,5),"^",2)=I+10
"RTN","A1AEUF4",81,0)
 .;
"RTN","A1AEUF4",82,0)
 . N NODE S NODE=$NA(BUILD("A1AE*2.4*911"))
"RTN","A1AEUF4",83,0)
 . S I=$P(BUILD("A1AE*999*10920"),"^",3)
"RTN","A1AEUF4",84,0)
 . F  S NODE=$Q(@NODE) Q:NODE["A1AE*999*900"  D
"RTN","A1AEUF4",85,0)
 .. S I=I+1
"RTN","A1AEUF4",86,0)
 .. S ^A1AE(A1AEFILE,"ADERIVED",$QS(NODE,1),I)=""
"RTN","A1AEUF4",87,0)
 .;
"RTN","A1AEUF4",88,0)
 . N BIEN,I
"RTN","A1AEUF4",89,0)
 . S BIEN=$P(BUILD("A1AE*999*910"),"^")
"RTN","A1AEUF4",90,0)
 . N I F I=911:1:920 S RBUILD=BUILD(I) D
"RTN","A1AEUF4",91,0)
 .. S X=$$LDRBLD(BIEN,RBUILD)
"RTN","A1AEUF4",92,0)
 .;
"RTN","A1AEUF4",93,0)
 .; Test function
"RTN","A1AEUF4",94,0)
 . S X=$$OTHSTRM^A1AEF4(BUILD(910))
"RTN","A1AEUF4",95,0)
 .;
"RTN","A1AEUF4",96,0)
 . N BIEN,A1AEIP S BIEN=$P(BUILD("A1AE*999*910"),"^")
"RTN","A1AEUF4",97,0)
 . S:'BIEN X=0
"RTN","A1AEUF4",98,0)
 . I X D  Q:'X
"RTN","A1AEUF4",99,0)
 .. N I F I=900:1:920 D  Q:'X
"RTN","A1AEUF4",100,0)
 ... Q:I=910
"RTN","A1AEUF4",101,0)
 ... S (X,A1AEIP)=$P(BUILD(BUILD(I)),"^",3) Q:'X
"RTN","A1AEUF4",102,0)
 ... S X=$O(^XPD(9.6,BIEN,"PAT","B",A1AEIP,0)) Q:'X
"RTN","A1AEUF4",103,0)
 ... S X=$O(^XPD(9.6,BIEN,"REQB","B",BUILD(I),0)) Q:'X
"RTN","A1AEUF4",104,0)
 . S:X X=1
"RTN","A1AEUF4",105,0)
 .;
"RTN","A1AEUF4",106,0)
 . D CHKEQ^%ut(1,X,"Testing pulling other stream builds FAILED!")
"RTN","A1AEUF4",107,0)
 .;
"RTN","A1AEUF4",108,0)
 . S $P(^A1AE(11007.1,1,0),U,2)=0
"RTN","A1AEUF4",109,0)
 . S $P(^A1AE(11007.1,10001,0),U,2)=0
"RTN","A1AEUF4",110,0)
 . I $G(UTOPIEN) D
"RTN","A1AEUF4",111,0)
 .. S $P(^A1AE(11007.1,UTOPIEN,0),U,2)=1
"RTN","A1AEUF4",112,0)
 . N DIK,DA
"RTN","A1AEUF4",113,0)
 . S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AEUF4",114,0)
 . D ENALL2^DIK
"RTN","A1AEUF4",115,0)
 . D ENALL^DIK
"RTN","A1AEUF4",116,0)
 Q
"RTN","A1AEUF4",117,0)
 ;
"RTN","A1AEUF4",118,0)
 ;
"RTN","A1AEUF4",119,0)
 ; Testing $$DERPTC^A1AEF4(PD) to find DERIVED FROM patch
"RTN","A1AEUF4",120,0)
UTP31 I '$G(A1AEFAIL) D
"RTN","A1AEUF4",121,0)
 . N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF4",122,0)
 . N BUILD,SAVBLD,X
"RTN","A1AEUF4",123,0)
 . S X=$$SETUP1 I 'X D  Q
"RTN","A1AEUF4",124,0)
 .. D FAIL^%ut("Unable to build array of BUILD names")
"RTN","A1AEUF4",125,0)
 . S X=$$SETUP2(.BUILD) I 'X D  Q
"RTN","A1AEUF4",126,0)
 .. D FAIL^%ut("Unable to complete entry of TEST builds")
"RTN","A1AEUF4",127,0)
 . S X=$$SETUP3(.BUILD) I 'X D  Q
"RTN","A1AEUF4",128,0)
 .. D FAIL^%ut("Unable to complete entry of TEST patches")
"RTN","A1AEUF4",129,0)
 . M SAVBLD=BUILD
"RTN","A1AEUF4",130,0)
 .; We must have PRIMARY set to continue
"RTN","A1AEUF4",131,0)
 .;  if none is set, temporarily set the 
"RTN","A1AEUF4",132,0)
 .;  site to FOIA VISTA as PRIMARY
"RTN","A1AEUF4",133,0)
 . N UTOPIEN S UTOPIEN=$$UTPRIEN
"RTN","A1AEUF4",134,0)
 . S $P(^A1AE(11007.1,1,0),U,2)=1
"RTN","A1AEUF4",135,0)
 . S $P(^A1AE(11007.1,10001,0),U,2)=0
"RTN","A1AEUF4",136,0)
 . N DIK,DA
"RTN","A1AEUF4",137,0)
 . S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AEUF4",138,0)
 . D ENALL2^DIK
"RTN","A1AEUF4",139,0)
 . D ENALL^DIK
"RTN","A1AEUF4",140,0)
 .;
"RTN","A1AEUF4",141,0)
 .; Set up DERIVED FROM entries for OSEHRA patches
"RTN","A1AEUF4",142,0)
 . N A1AEIP S A1AEIP=$P(BUILD("A1AE*999*10911"),"^",3)
"RTN","A1AEUF4",143,0)
 . N I F I=A1AEIP:1:A1AEIP+9 D
"RTN","A1AEUF4",144,0)
 .. S $P(^A1AE(A1AEFILE,I,5),"^",2)=I+10
"RTN","A1AEUF4",145,0)
 .;
"RTN","A1AEUF4",146,0)
 . N NODE S NODE=$NA(BUILD("A1AE*2.4*911"))
"RTN","A1AEUF4",147,0)
 . S I=$P(BUILD("A1AE*999*10920"),"^",3)
"RTN","A1AEUF4",148,0)
 . F  S NODE=$Q(@NODE) Q:NODE["A1AE*999*900"  D
"RTN","A1AEUF4",149,0)
 .. S I=I+1
"RTN","A1AEUF4",150,0)
 .. S ^A1AE(A1AEFILE,"ADERIVED",$QS(NODE,1),I)=""
"RTN","A1AEUF4",151,0)
 .;
"RTN","A1AEUF4",152,0)
 . S X=1
"RTN","A1AEUF4",153,0)
 . S:'$L($$DERPTC^A1AEF4("A1AE*999*10920")) X=0
"RTN","A1AEUF4",154,0)
 . S:$L($$DERPTC^A1AEF4("A1AE*999*900")) X=0
"RTN","A1AEUF4",155,0)
 . D CHKEQ^%ut(1,X,"Testing finding a derived patch FAILED!")
"RTN","A1AEUF4",156,0)
 .;
"RTN","A1AEUF4",157,0)
 . S $P(^A1AE(11007.1,1,0),U,2)=0
"RTN","A1AEUF4",158,0)
 . S $P(^A1AE(11007.1,10001,0),U,2)=0
"RTN","A1AEUF4",159,0)
 . I $G(UTOPIEN) D
"RTN","A1AEUF4",160,0)
 .. S $P(^A1AE(11007.1,UTOPIEN,0),U,2)=1
"RTN","A1AEUF4",161,0)
 . N DIK,DA
"RTN","A1AEUF4",162,0)
 . S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AEUF4",163,0)
 . D ENALL2^DIK
"RTN","A1AEUF4",164,0)
 . D ENALL^DIK
"RTN","A1AEUF4",165,0)
 Q
"RTN","A1AEUF4",166,0)
 ;
"RTN","A1AEUF4",167,0)
 ; Build an array of bogus BUILD NAMES
"RTN","A1AEUF4",168,0)
 ; ENTER
"RTN","A1AEUF4",169,0)
 ;   nothing required
"RTN","A1AEUF4",170,0)
 ; RETURN
"RTN","A1AEUF4",171,0)
 ;   0 = error, 1 = array built
"RTN","A1AEUF4",172,0)
SETUP1() N I
"RTN","A1AEUF4",173,0)
 F I=900:1:910 D
"RTN","A1AEUF4",174,0)
 . S BUILD(I)="A1AE*999*"_I
"RTN","A1AEUF4",175,0)
 . S BUILD(I+10)="A1AE*999*"_(10000+I+10)
"RTN","A1AEUF4",176,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C","A1AE",0))
"RTN","A1AEUF4",177,0)
 N ACTVER S ACTVER=$$GET1^DIQ(9.4,PKGIEN_",",13)
"RTN","A1AEUF4",178,0)
 S BUILD(921)="A1AE*"_ACTVER_"*911"
"RTN","A1AEUF4",179,0)
 Q:I=910 1  Q 0
"RTN","A1AEUF4",180,0)
 ;
"RTN","A1AEUF4",181,0)
 ; Load new builds into BUILD [#9.6] file
"RTN","A1AEUF4",182,0)
 ; ENTER
"RTN","A1AEUF4",183,0)
 ;   BUILD  = array of build names by reference
"RTN","A1AEUF4",184,0)
 ; RETURN
"RTN","A1AEUF4",185,0)
 ;   0 = error, 1 = BUILDS successfully added to 9.6
"RTN","A1AEUF4",186,0)
 ;                  BUILD array updated
"RTN","A1AEUF4",187,0)
SETUP2(BUILD) N X,I
"RTN","A1AEUF4",188,0)
 F I=900:1:921 D  Q:'X
"RTN","A1AEUF4",189,0)
 . S X=$$LDBLD(BUILD(I)) Q:'X
"RTN","A1AEUF4",190,0)
 . S BUILD(BUILD(I))=X
"RTN","A1AEUF4",191,0)
 . S X=$$LDINST(BUILD(I)) Q:'X
"RTN","A1AEUF4",192,0)
 . S BUILD(BUILD(I))=BUILD(BUILD(I))_"^"_X
"RTN","A1AEUF4",193,0)
 Q:X 1  Q X
"RTN","A1AEUF4",194,0)
 ;
"RTN","A1AEUF4",195,0)
 ; Load new patches into DHCP PATCHES [#11005] file
"RTN","A1AEUF4",196,0)
 ; ENTER
"RTN","A1AEUF4",197,0)
 ;   BUILD  = array of build names by reference
"RTN","A1AEUF4",198,0)
 ; RETURN
"RTN","A1AEUF4",199,0)
 ;   0 = error, 1 = PATCHES successfully added to 11005
"RTN","A1AEUF4",200,0)
 ;                  BUILD array updated again
"RTN","A1AEUF4",201,0)
SETUP3(BUILD) N PD S PD=" " F  S PD=$O(BUILD(PD)) Q:PD=""  D
"RTN","A1AEUF4",202,0)
 . S X=$$MKPATCH(PD) Q:'X  D
"RTN","A1AEUF4",203,0)
 . S BUILD(PD)=$G(BUILD(PD))_"^"_X
"RTN","A1AEUF4",204,0)
 Q:X 1  Q X
"RTN","A1AEUF4",205,0)
 ;  After SETUP3 we have
"RTN","A1AEUF4",206,0)
 ;     BUILD(900)="A1AE*999*900"
"RTN","A1AEUF4",207,0)
 ;     BUILD(901)="A1AE*999*901"
"RTN","A1AEUF4",208,0)
 ;     BUILD(902)="A1AE*999*902"
"RTN","A1AEUF4",209,0)
 ;     BUILD(903)="A1AE*999*903"
"RTN","A1AEUF4",210,0)
 ;     BUILD(904)="A1AE*999*904"
"RTN","A1AEUF4",211,0)
 ;     BUILD(905)="A1AE*999*905"
"RTN","A1AEUF4",212,0)
 ;     BUILD(906)="A1AE*999*906"
"RTN","A1AEUF4",213,0)
 ;     BUILD(907)="A1AE*999*907"
"RTN","A1AEUF4",214,0)
 ;     BUILD(908)="A1AE*999*908"
"RTN","A1AEUF4",215,0)
 ;     BUILD(909)="A1AE*999*909"
"RTN","A1AEUF4",216,0)
 ;     BUILD(910)="A1AE*999*910"
"RTN","A1AEUF4",217,0)
 ;     BUILD(911)="A1AE*999*10911"
"RTN","A1AEUF4",218,0)
 ;     BUILD(912)="A1AE*999*10912"
"RTN","A1AEUF4",219,0)
 ;     BUILD(913)="A1AE*999*10913"
"RTN","A1AEUF4",220,0)
 ;     BUILD(914)="A1AE*999*10914"
"RTN","A1AEUF4",221,0)
 ;     BUILD(915)="A1AE*999*10915"
"RTN","A1AEUF4",222,0)
 ;     BUILD(916)="A1AE*999*10916"
"RTN","A1AEUF4",223,0)
 ;     BUILD(917)="A1AE*999*10917"
"RTN","A1AEUF4",224,0)
 ;     BUILD(918)="A1AE*999*10918"
"RTN","A1AEUF4",225,0)
 ;     BUILD(919)="A1AE*999*10919"
"RTN","A1AEUF4",226,0)
 ;     BUILD(920)="A1AE*999*10920"
"RTN","A1AEUF4",227,0)
 ;     BUILD(921)="A1AE*2.4*911"
"RTN","A1AEUF4",228,0)
 ;     BUILD("A1AE*2.4*911")="9537^9015^129505"
"RTN","A1AEUF4",229,0)
 ;     BUILD("A1AE*999*10911")="9527^9005^129506"
"RTN","A1AEUF4",230,0)
 ;     BUILD("A1AE*999*10912")="9528^9006^129507"
"RTN","A1AEUF4",231,0)
 ;     BUILD("A1AE*999*10913")="9529^9007^129508"
"RTN","A1AEUF4",232,0)
 ;     BUILD("A1AE*999*10914")="9530^9008^129509"
"RTN","A1AEUF4",233,0)
 ;     BUILD("A1AE*999*10915")="9531^9009^129510"
"RTN","A1AEUF4",234,0)
 ;     BUILD("A1AE*999*10916")="9532^9010^129511"
"RTN","A1AEUF4",235,0)
 ;     BUILD("A1AE*999*10917")="9533^9011^129512"
"RTN","A1AEUF4",236,0)
 ;     BUILD("A1AE*999*10918")="9534^9012^129513"
"RTN","A1AEUF4",237,0)
 ;     BUILD("A1AE*999*10919")="9535^9013^129514"
"RTN","A1AEUF4",238,0)
 ;     BUILD("A1AE*999*10920")="9536^9014^129515"
"RTN","A1AEUF4",239,0)
 ;     BUILD("A1AE*999*900")="9516^8994^129516"
"RTN","A1AEUF4",240,0)
 ;     BUILD("A1AE*999*901")="9517^8995^129517"
"RTN","A1AEUF4",241,0)
 ;     BUILD("A1AE*999*902")="9518^8996^129518"
"RTN","A1AEUF4",242,0)
 ;     BUILD("A1AE*999*903")="9519^8997^129519"
"RTN","A1AEUF4",243,0)
 ;     BUILD("A1AE*999*904")="9520^8998^129520"
"RTN","A1AEUF4",244,0)
 ;     BUILD("A1AE*999*905")="9521^8999^129521"
"RTN","A1AEUF4",245,0)
 ;     BUILD("A1AE*999*906")="9522^9000^129522"
"RTN","A1AEUF4",246,0)
 ;     BUILD("A1AE*999*907")="9523^9001^129523"
"RTN","A1AEUF4",247,0)
 ;     BUILD("A1AE*999*908")="9524^9002^129524"
"RTN","A1AEUF4",248,0)
 ;     BUILD("A1AE*999*909")="9525^9003^129525"
"RTN","A1AEUF4",249,0)
 ;     BUILD("A1AE*999*910")="9526^9004^129526"
"RTN","A1AEUF4",250,0)
 ;
"RTN","A1AEUF4",251,0)
 ;
"RTN","A1AEUF4",252,0)
 ;Load new BUILD [#9.6] entry and corresponding INSTALL entry
"RTN","A1AEUF4",253,0)
 ;ENTER
"RTN","A1AEUF4",254,0)
 ;  BUILD   =  Build name
"RTN","A1AEUF4",255,0)
 ;RETURN
"RTN","A1AEUF4",256,0)
 ;  0 = error,  n = IEN of successful entry in 9.6
"RTN","A1AEUF4",257,0)
LDBLD(BUILD) ;
"RTN","A1AEUF4",258,0)
 Q:BUILD="" 0_"^No BUILD Name"
"RTN","A1AEUF4",259,0)
 S X=$O(^XPD(9.6,"B",BUILD,0)) Q:X X
"RTN","A1AEUF4",260,0)
 N DIERR,FDA,FDAIEN
"RTN","A1AEUF4",261,0)
 N PKGIEN S PKGIEN=+$O(^DIC(9.4,"C",$P(BUILD,"*"),0))
"RTN","A1AEUF4",262,0)
 S FDA(3,9.6,"?+1,",.01)=BUILD
"RTN","A1AEUF4",263,0)
 S FDA(3,9.6,"?+1,",1)=PKGIEN
"RTN","A1AEUF4",264,0)
 S FDA(3,9.6,"?+1,",2)=0
"RTN","A1AEUF4",265,0)
 S FDA(3,9.6,"?+1,",.02)=$$HTFM^XLFDT($H,1)
"RTN","A1AEUF4",266,0)
 S FDA(3,9.6,"?+1,",5)="n"
"RTN","A1AEUF4",267,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF4",268,0)
 I $D(DIERR) Q 0
"RTN","A1AEUF4",269,0)
 Q +$G(FDAIEN(1))
"RTN","A1AEUF4",270,0)
 ;
"RTN","A1AEUF4",271,0)
 ;Load new BUILD [#9.6] entry and corresponding INSTALL entry
"RTN","A1AEUF4",272,0)
 ;ENTER
"RTN","A1AEUF4",273,0)
 ;  BUILD   =  Build name
"RTN","A1AEUF4",274,0)
 ;RETURN
"RTN","A1AEUF4",275,0)
 ;  0 = error,  n = IEN of successful entry in 9.7
"RTN","A1AEUF4",276,0)
LDINST(BUILD) ;
"RTN","A1AEUF4",277,0)
 Q:BUILD="" 0_"^No BUILD Name"
"RTN","A1AEUF4",278,0)
 S X=$O(^XPD(9.7,"B",BUILD,0)) Q:X X
"RTN","A1AEUF4",279,0)
 N DIERR,FDA,FDAIEN
"RTN","A1AEUF4",280,0)
 S FDA(3,9.7,"?+1,",.01)=BUILD
"RTN","A1AEUF4",281,0)
 S FDA(3,9.7,"?+1,",.02)=3
"RTN","A1AEUF4",282,0)
 S FDA(3,9.7,"?+1,",2)=$$HTFM^XLFDT($H,1)
"RTN","A1AEUF4",283,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF4",284,0)
 I $D(DIERR) Q 0
"RTN","A1AEUF4",285,0)
 Q +$G(FDAIEN(1))
"RTN","A1AEUF4",286,0)
 ;
"RTN","A1AEUF4",287,0)
 ; ENTER
"RTN","A1AEUF4",288,0)
 ;    PD   =  PATCH DESIGNATION
"RTN","A1AEUF4",289,0)
 ;    RTN  =  ROUTINE NAME to add to 11005 PD entry
"RTN","A1AEUF4",290,0)
 ; RETURNS
"RTN","A1AEUF4",291,0)
 ;    0 = error,  IEN of patch if successful
"RTN","A1AEUF4",292,0)
MKPATCH(PD) Q:PD="" 0
"RTN","A1AEUF4",293,0)
 N X,Y,DA,DIC,DIEN
"RTN","A1AEUF4",294,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF4",295,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C",$P(PD,"*"),0)) Q:PKGIEN="" 0
"RTN","A1AEUF4",296,0)
 N PKGAV S PKGAV=$$GET1^DIQ(9.4,PKGIEN_",",13) Q:'PKGAV 0
"RTN","A1AEUF4",297,0)
 N PTCHNB S PTCHNB=+$P(PD,"*",3) Q:'PTCHNB 0
"RTN","A1AEUF4",298,0)
 N PTSTRM S PTSTRM=$S(PTCHNB>10001:10001,1:1)
"RTN","A1AEUF4",299,0)
 N DERFRM S DERFRM=$S(PTCHNB>10001:PTCHNB-10000,1:0)
"RTN","A1AEUF4",300,0)
 N FDAIEN
"RTN","A1AEUF4",301,0)
 ; If already entry in 11005, move on to adding RTN
"RTN","A1AEUF4",302,0)
 I +$O(^A1AE(A1AEFILE,"B",PD,0)) D
"RTN","A1AEUF4",303,0)
 . S FDAIEN(1)=+$O(^A1AE(A1AEFILE,"B",PD,0))
"RTN","A1AEUF4",304,0)
 E  D
"RTN","A1AEUF4",305,0)
 . N DIERR
"RTN","A1AEUF4",306,0)
 . S FDA(3,A1AEFILE,"?+1,",.01)=PD
"RTN","A1AEUF4",307,0)
 . S FDA(3,A1AEFILE,"?+1,",.2)=PTSTRM
"RTN","A1AEUF4",308,0)
 . S FDA(3,A1AEFILE,"?+1,",2)=PKGIEN
"RTN","A1AEUF4",309,0)
 . S FDA(3,A1AEFILE,"?+1,",3)=PKGAV
"RTN","A1AEUF4",310,0)
 . S FDA(3,A1AEFILE,"?+1,",4)=PTCHNB
"RTN","A1AEUF4",311,0)
 . S FDA(3,A1AEFILE,"?+1,",5)="A1AE TEST ZZZFOR UNIT TESTS"
"RTN","A1AEUF4",312,0)
 . D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF4",313,0)
 ;W "NEW ENTRY=",+$G(FDAIEN(1))
"RTN","A1AEUF4",314,0)
 Q:$D(DIERR) 0
"RTN","A1AEUF4",315,0)
 S FDAIEN=+$G(FDAIEN(1))
"RTN","A1AEUF4",316,0)
 Q FDAIEN
"RTN","A1AEUF4",317,0)
 ;
"RTN","A1AEUF4",318,0)
 ;
"RTN","A1AEUF4",319,0)
 ; Load entry into REQUIRED BUILD for this Container build
"RTN","A1AEUF4",320,0)
 ;ENTER
"RTN","A1AEUF4",321,0)
 ;   A1AEKI  = IEN OF Container Build
"RTN","A1AEUF4",322,0)
 ;   A1AEPM  = BUILD name of Member
"RTN","A1AEUF4",323,0)
 ;RETURN
"RTN","A1AEUF4",324,0)
 ;   IEN of new Member within Container BUILD
"RTN","A1AEUF4",325,0)
 ;     OR 0_"^DIERR"
"RTN","A1AEUF4",326,0)
LDRBLD(A1AEKI,RBUILD) ;
"RTN","A1AEUF4",327,0)
 Q:'A1AEKI 0_"^No Container BUILD IEN"
"RTN","A1AEUF4",328,0)
 Q:RBUILD="" 0_"^No Member BUILD Name"
"RTN","A1AEUF4",329,0)
 N FDA,DIERR,FDAIEN
"RTN","A1AEUF4",330,0)
 S FDA(3,9.611,"?+1,"_A1AEKI_",",.01)=RBUILD
"RTN","A1AEUF4",331,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF4",332,0)
 Q:$D(DIERR) 0_"^DIERR"
"RTN","A1AEUF4",333,0)
 Q +FDAIEN(1)
"RTN","A1AEUF4",334,0)
 ; Delete all test build entries
"RTN","A1AEUF4",335,0)
 ; RETURN
"RTN","A1AEUF4",336,0)
 ;  1 if no errors, 0 if deletion failed
"RTN","A1AEUF4",337,0)
 ;  Nothing to delete returns 1 for no errors
"RTN","A1AEUF4",338,0)
DELTBLDS() N DA,DIK,X,Y S X=1
"RTN","A1AEUF4",339,0)
 N NODE S NODE=$NA(^XPD(9.6,"B","A1AE*999"))
"RTN","A1AEUF4",340,0)
 F  S NODE=$Q(@NODE) Q:NODE'["A1AE*999"  D  Q:'X
"RTN","A1AEUF4",341,0)
 .  N DA,DIK,DIERR
"RTN","A1AEUF4",342,0)
 .  S DA=$QS(NODE,4)
"RTN","A1AEUF4",343,0)
 .  S DIK="^XPD(9.6,"
"RTN","A1AEUF4",344,0)
 .  D ^DIK
"RTN","A1AEUF4",345,0)
 .  S:$D(DIERR) X=0
"RTN","A1AEUF4",346,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C","A1AE",0))
"RTN","A1AEUF4",347,0)
 N ACTVER S ACTVER=$$GET1^DIQ(9.4,PKGIEN_",",13)
"RTN","A1AEUF4",348,0)
 N PD S PD="A1AE*"_ACTVER_"*911"
"RTN","A1AEUF4",349,0)
 S DA=$O(^XPD(9.6,"B",PD,0)) I DA D
"RTN","A1AEUF4",350,0)
 . S DIK="^XPD(9.6,"
"RTN","A1AEUF4",351,0)
 . D ^DIK
"RTN","A1AEUF4",352,0)
 . S:$D(DIERR) X=0
"RTN","A1AEUF4",353,0)
 Q X
"RTN","A1AEUF4",354,0)
 ;
"RTN","A1AEUF4",355,0)
 ; Delete all test INSTALL entries
"RTN","A1AEUF4",356,0)
 ; RETURN
"RTN","A1AEUF4",357,0)
 ;  1 if no errors, 0 if deletion failed
"RTN","A1AEUF4",358,0)
 ;  Nothing to delete returns 1 for no errors
"RTN","A1AEUF4",359,0)
DELTINST() N DA,DIK,X,Y S X=1
"RTN","A1AEUF4",360,0)
 N NODE S NODE=$NA(^XPD(9.7,"B","A1AE*999"))
"RTN","A1AEUF4",361,0)
 F  S NODE=$Q(@NODE) Q:NODE'["A1AE*999"  D  Q:'X
"RTN","A1AEUF4",362,0)
 .  N DA,DIK,DIERR
"RTN","A1AEUF4",363,0)
 .  S DA=$QS(NODE,4)
"RTN","A1AEUF4",364,0)
 .  S DIK="^XPD(9.7,"
"RTN","A1AEUF4",365,0)
 .  D ^DIK
"RTN","A1AEUF4",366,0)
 .  S:$D(DIERR) X=0
"RTN","A1AEUF4",367,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C","A1AE",0))
"RTN","A1AEUF4",368,0)
 N ACTVER S ACTVER=$$GET1^DIQ(9.4,PKGIEN_",",13)
"RTN","A1AEUF4",369,0)
 N PD S PD="A1AE*"_ACTVER_"*911"
"RTN","A1AEUF4",370,0)
 S DA=$O(^XPD(9.7,"B",PD,0)) I DA D
"RTN","A1AEUF4",371,0)
 . S DIK="^XPD(9.7,"
"RTN","A1AEUF4",372,0)
 . D ^DIK
"RTN","A1AEUF4",373,0)
 . S:$D(DIERR) X=0
"RTN","A1AEUF4",374,0)
 Q X
"RTN","A1AEUF4",375,0)
 ;
"RTN","A1AEUF4",376,0)
 ; ENTER
"RTN","A1AEUF4",377,0)
 ;   nothing required
"RTN","A1AEUF4",378,0)
 ; RETURN
"RTN","A1AEUF4",379,0)
 ;   0 = error, 1 = deletions complete
"RTN","A1AEUF4",380,0)
DELPAT() N PD,PIEN,DIK,DA,DIERR,NOERR S PD="A1AE*999*",NOERR=1
"RTN","A1AEUF4",381,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF4",382,0)
 F  S PD=$O(^A1AE(A1AEFILE,"B",PD)) Q:PD'["A1AE*999"  D  Q:'NOERR
"RTN","A1AEUF4",383,0)
 . S PIEN=$O(^A1AE(A1AEFILE,"B",PD,0)) I 'PIEN S NOERR=0 Q
"RTN","A1AEUF4",384,0)
 . S DIK="^A1AE(A1AEFILE," S DA=+PIEN D ^DIK
"RTN","A1AEUF4",385,0)
 . S:$D(DIERR) NOERR=0
"RTN","A1AEUF4",386,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C","A1AE",0))
"RTN","A1AEUF4",387,0)
 N ACTVER S ACTVER=$$GET1^DIQ(9.4,PKGIEN_",",13)
"RTN","A1AEUF4",388,0)
 N PD S PD="A1AE*"_ACTVER_"*911"
"RTN","A1AEUF4",389,0)
 S DA=$O(^A1AE(A1AEFILE,"B",PD,0)) I DA D
"RTN","A1AEUF4",390,0)
 . S DIK="^A1AE(A1AEFILE,"
"RTN","A1AEUF4",391,0)
 . D ^DIK
"RTN","A1AEUF4",392,0)
 . S:$D(DIERR) X=0
"RTN","A1AEUF4",393,0)
 Q NOERR
"RTN","A1AEUF4",394,0)
 ;
"RTN","A1AEUF4",395,0)
 ; Function to return IEN of DHCP PATCH STREAM [#11007.1]
"RTN","A1AEUF4",396,0)
 ;   entry having PRIMARY? [#.02] field set
"RTN","A1AEUF4",397,0)
UTPRIEN() ;
"RTN","A1AEUF4",398,0)
 N A1AEI,UTPRIM S (A1AEI,UTPRIM)=0
"RTN","A1AEUF4",399,0)
 F  S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AEUF4",400,0)
 . I $P(^A1AE(11007.1,A1AEI,0),U,2) S UTPRIM=A1AEI
"RTN","A1AEUF4",401,0)
 Q UTPRIM
"RTN","A1AEUF4",402,0)
 ;
"RTN","A1AEUF4",403,0)
XTENT ;
"RTN","A1AEUF4",404,0)
 ;;UTP30;Add builds to REQB/MULB for other stream
"RTN","A1AEUF4",405,0)
 ;;UTP31;Find name DERIVED PATCH
"RTN","A1AEUF4",406,0)
 Q
"RTN","A1AEUF4",407,0)
 ;
"RTN","A1AEUF4",408,0)
 ;
"RTN","A1AEUF4",409,0)
TEST ; Set up DERIVED FROM entries for OSEHRA patches
"RTN","A1AEUF4",410,0)
 ;
"RTN","A1AEUF4",411,0)
 D TEST^A1AEUF1B
"RTN","A1AEUF4",412,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF4",413,0)
 N A1AEIP S A1AEIP=$P(BUILD("A1AE*999*10911"),"^",3)
"RTN","A1AEUF4",414,0)
 N I F I=A1AEIP:1:A1AEIP+9 D
"RTN","A1AEUF4",415,0)
 . S $P(^A1AE(A1AEFILE,I,5),"^",2)=I+10
"RTN","A1AEUF4",416,0)
 ;
"RTN","A1AEUF4",417,0)
 N NODE S NODE=$NA(BUILD("A1AE*2.4*911"))
"RTN","A1AEUF4",418,0)
 S I=$P(BUILD("A1AE*999*10920"),"^",3)
"RTN","A1AEUF4",419,0)
 F  S NODE=$Q(@NODE) Q:NODE["A1AE*999*900"  D
"RTN","A1AEUF4",420,0)
 . S I=I+1
"RTN","A1AEUF4",421,0)
 . S ^A1AE(A1AEFILE,"ADERIVED",$QS(NODE,1),I)=""
"RTN","A1AEUF4",422,0)
 ; Pull this up before test, then check A1AE*999*910
"RTN","A1AEUF4",423,0)
 ;   has all the patches and REQB for 900 and 10900 series
"RTN","A1AEUF4",424,0)
 N BIEN,I
"RTN","A1AEUF4",425,0)
 S BIEN=$P(BUILD("A1AE*999*910"),"^")
"RTN","A1AEUF4",426,0)
 N I F I=911:1:920 S RBUILD=BUILD(I) D
"RTN","A1AEUF4",427,0)
 . S X=$$LDRBLD(BIEN,RBUILD)
"RTN","A1AEUF4",428,0)
 ;
"RTN","A1AEUF4",429,0)
 W $$OTHSTRM^A1AEF4(BUILD(910))
"RTN","A1AEUF4",430,0)
 Q
"RTN","A1AEUF4",431,0)
 ;
"RTN","A1AEUF4",432,0)
TEST1 N BIEN S BIEN=$P(BUILD("A1AE*999*910"),"^")
"RTN","A1AEUF4",433,0)
 N I F I=900:1:920 D
"RTN","A1AEUF4",434,0)
 . Q:I=910
"RTN","A1AEUF4",435,0)
 . S A1AEIP=$P(BUILD(BUILD(I)),"^",3)
"RTN","A1AEUF4",436,0)
 . W !,A1AEIP
"RTN","A1AEUF4",437,0)
 . I $O(^XPD(9.6,BIEN,"PAT","B",A1AEIP,0)) W " *"
"RTN","A1AEUF4",438,0)
 . W !,BUILD(I)
"RTN","A1AEUF4",439,0)
 . I $O(^XPD(9.6,BIEN,"REQB","B",BUILD(I),0)) W " *"
"RTN","A1AEUF4",440,0)
 Q
"RTN","A1AEUF4",441,0)
EOR ; end of routine A1AEUF4
"RTN","A1AEUF5")
0^78^B209413302
"RTN","A1AEUF5",1,0)
A1AEUF5 ;ven/lgc,jli-unit tests for A1AEF5 ;2015-06-13  9:58 PM
"RTN","A1AEUF5",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUF5",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUF5",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUF5",5,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUF5",6,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUF5",7,0)
 Q
"RTN","A1AEUF5",8,0)
 ;
"RTN","A1AEUF5",9,0)
STARTUP ;
"RTN","A1AEUF5",10,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUF5",11,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUF5",12,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5",13,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUF5",14,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5",15,0)
 ;
"RTN","A1AEUF5",16,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUF5",17,0)
 L +^A1AE(A1AEFILE):1 I '$T D  Q
"RTN","A1AEUF5",18,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5",19,0)
 . W !,"Unable to obtain lock on "_A1AENAME_" [#"_A1AEFILE_"] file"
"RTN","A1AEUF5",20,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5",21,0)
 ;
"RTN","A1AEUF5",22,0)
 I '$G(A1AEFAIL) N X S X=$$DELTBLDS I 'X D  Q
"RTN","A1AEUF5",23,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5",24,0)
 . W !,"Unable to clear test builds"
"RTN","A1AEUF5",25,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5",26,0)
 ;
"RTN","A1AEUF5",27,0)
 I '$G(A1AEFAIL) S X=$$SETUP1 I 'X D  Q
"RTN","A1AEUF5",28,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5",29,0)
 . W !,"Unable to build array of BUILD names"
"RTN","A1AEUF5",30,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5",31,0)
 ;
"RTN","A1AEUF5",32,0)
 I '$G(A1AEFAIL) S X=$$SETUP2 I 'X D  Q
"RTN","A1AEUF5",33,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5",34,0)
 . W !,"Unable to complete entry of TEST builds"
"RTN","A1AEUF5",35,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5",36,0)
 ;
"RTN","A1AEUF5",37,0)
 I '$G(A1AEFAIL) S X=$$SETUP3 I 'X D  Q
"RTN","A1AEUF5",38,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5",39,0)
 . W !,"Unable to complete build interdependencies"
"RTN","A1AEUF5",40,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5",41,0)
 Q
"RTN","A1AEUF5",42,0)
 ;
"RTN","A1AEUF5",43,0)
SHUTDOWN I '$G(A1AEFAIL) S X=$$DELTBLDS I 'X D
"RTN","A1AEUF5",44,0)
 . W !,"******* WARNING ********"
"RTN","A1AEUF5",45,0)
 . W !,"Unable to delete test BUILD entries after testing."
"RTN","A1AEUF5",46,0)
 . W !,"  BUILDS with names beginning with  A1AEXTST*1*"
"RTN","A1AEUF5",47,0)
 . W !,"  may need to be deleted manually."
"RTN","A1AEUF5",48,0)
 ;
"RTN","A1AEUF5",49,0)
 I '$G(A1AEFAIL) S X=$$DELTBLDZ I 'X D
"RTN","A1AEUF5",50,0)
 . W !,"******* WARNING ********"
"RTN","A1AEUF5",51,0)
 . W !,"Unable to delete test BUILD entries after testing."
"RTN","A1AEUF5",52,0)
 . W !,"  BUILDS with names beginning with  A1AEXTST*1*"
"RTN","A1AEUF5",53,0)
 . W !,"  may need to be deleted manually."
"RTN","A1AEUF5",54,0)
 ;
"RTN","A1AEUF5",55,0)
 I '$G(A1AEFAIL) S X=$$DELTINST I 'X D
"RTN","A1AEUF5",56,0)
 . W !,"******* WARNING ********"
"RTN","A1AEUF5",57,0)
 . W !,"Unable to delete test INSTALL entries after testing."
"RTN","A1AEUF5",58,0)
 . W !,"  BUILDS with names beginning with  A1AEXTST*1*"
"RTN","A1AEUF5",59,0)
 . W !,"  may need to be deleted manually."
"RTN","A1AEUF5",60,0)
 ;
"RTN","A1AEUF5",61,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUF5",62,0)
 I '$G(A1AEFAIL) S X=$$DELPAT I 'X D
"RTN","A1AEUF5",63,0)
 . W !,"Unable to delete test entries in "_A1AEFILE,!
"RTN","A1AEUF5",64,0)
 L -^XPD(9.6):1
"RTN","A1AEUF5",65,0)
 L -^A1AE(A1AEFILE):1
"RTN","A1AEUF5",66,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUF5",67,0)
 K A1AEFAIL,BUILD
"RTN","A1AEUF5",68,0)
 Q
"RTN","A1AEUF5",69,0)
 ;
"RTN","A1AEUF5",70,0)
 ; Testing 
"RTN","A1AEUF5",71,0)
 ;   32. REQB^A1AEF1(BUILD,.BMARR)
"RTN","A1AEUF5",72,0)
 ;   33. MULB^A1AEF1(BUILD,.BMARR)
"RTN","A1AEUF5",73,0)
 ;   34. $$BACTV^A1AEF1(BUILD)
"RTN","A1AEUF5",74,0)
 ;
"RTN","A1AEUF5",75,0)
UTP32 I '$G(A1AEFAIL) N RMA S X=$$GETARR("R",.RMA) I 'X D  Q
"RTN","A1AEUF5",76,0)
 . D FAIL^%ut("Unable to build RMA array")
"RTN","A1AEUF5",77,0)
 I '$G(A1AEFAIL) S X=$$CHKARR(.RMA,"R") D
"RTN","A1AEUF5",78,0)
 . D CHKEQ^%ut(0,X,"Testing REQB^A1AEF1 - dependencies FAILED!")
"RTN","A1AEUF5",79,0)
 Q
"RTN","A1AEUF5",80,0)
 ;
"RTN","A1AEUF5",81,0)
UTP33 I '$G(A1AEFAIL) N RMA S X=$$GETARR("M",.RMA) I 'X D  Q
"RTN","A1AEUF5",82,0)
 . D FAIL^%ut("Unable to build RMA array")
"RTN","A1AEUF5",83,0)
 I '$G(A1AEFAIL) S X=$$CHKARR(.RMA,"M") D
"RTN","A1AEUF5",84,0)
 . D CHKEQ^%ut(0,X,"Testing MULB^A1AEF1 -  members FAILED!")
"RTN","A1AEUF5",85,0)
 Q
"RTN","A1AEUF5",86,0)
 ;
"RTN","A1AEUF5",87,0)
 ; Check BUILD to see if it represents current or earlier
"RTN","A1AEUF5",88,0)
 ;  version of a package
"RTN","A1AEUF5",89,0)
UTP34 I '$G(A1AEFAIL) D
"RTN","A1AEUF5",90,0)
 . N RTN S RTN=$T(+0)
"RTN","A1AEUF5",91,0)
 . N BUILD,SAVBLD
"RTN","A1AEUF5",92,0)
 . S X=$$SETUP4 I 'X D  Q
"RTN","A1AEUF5",93,0)
 .. D FAIL^%ut("Unable to build array of BUILD names")
"RTN","A1AEUF5",94,0)
 . S X=$$SETUP5(.BUILD) I 'X D  Q
"RTN","A1AEUF5",95,0)
 .. D FAIL^%ut("Unable to complete entry of TEST builds")
"RTN","A1AEUF5",96,0)
 . S X=$$SETUP6(.BUILD,.RTN) I 'X D  Q
"RTN","A1AEUF5",97,0)
 .. D FAIL^%ut("Unable to complete entry of TEST patches")
"RTN","A1AEUF5",98,0)
 . M SAVBLD=BUILD
"RTN","A1AEUF5",99,0)
 . S X=$$BACTV^A1AEF1(BUILD(921))
"RTN","A1AEUF5",100,0)
 . S:$$BACTV^A1AEF1(BUILD(900))'=0 X=0
"RTN","A1AEUF5",101,0)
 . D CHKEQ^%ut(1,X,"Testing $$BACTV^A1AEF1 - Active Package FAILED!")
"RTN","A1AEUF5",102,0)
 Q
"RTN","A1AEUF5",103,0)
 ;
"RTN","A1AEUF5",104,0)
 ;
"RTN","A1AEUF5",105,0)
 ; Check RMA array gleaned from $T data in this routine
"RTN","A1AEUF5",106,0)
 ;   against the descendants found in REQB or MULB call
"RTN","A1AEUF5",107,0)
 ; ENTER
"RTN","A1AEUF5",108,0)
 ;    RMA   =   array of expected builds with dependancy
"RTN","A1AEUF5",109,0)
 ;              levels. Retrieved by $T in this routine
"RTN","A1AEUF5",110,0)
 ;    RM    =   "R" for REQB check
"RTN","A1AEUF5",111,0)
 ;              "M" for MULB check
"RTN","A1AEUF5",112,0)
 ; EXIT
"RTN","A1AEUF5",113,0)
 ;    X     =   0 no errors, 1 error
"RTN","A1AEUF5",114,0)
 ; example : RMA(2)="POO(1,""A1AEXTST*1*1"")=1"
"RTN","A1AEUF5",115,0)
CHKARR(RMA,RM) N NODE,POON S NODE=$NA(RMA)
"RTN","A1AEUF5",116,0)
 N X S X=0
"RTN","A1AEUF5",117,0)
 Q:'$D(RMA) 1
"RTN","A1AEUF5",118,0)
 F  S NODE=$Q(@NODE) Q:NODE'["RMA("  I @NODE="" D  Q:X
"RTN","A1AEUF5",119,0)
 . ; RMA(N)=""
"RTN","A1AEUF5",120,0)
 .  S X=$$CHK1($QS(NODE,1),RM)
"RTN","A1AEUF5",121,0)
 Q X
"RTN","A1AEUF5",122,0)
 ;
"RTN","A1AEUF5",123,0)
 ; Enter with N = subscript in RMA(N) array
"RTN","A1AEUF5",124,0)
CHK1(N,RM) N POO,RMANODE
"RTN","A1AEUF5",125,0)
 S RMANODE=$NA(RMA(N))
"RTN","A1AEUF5",126,0)
 S RMANODE=$Q(@RMANODE) I RMANODE'["RMA(" Q 0
"RTN","A1AEUF5",127,0)
 ; Cut build name out of @RMANODE
"RTN","A1AEUF5",128,0)
 N BLDNM S BLDNM=$QS($P(@RMANODE,"="),2)
"RTN","A1AEUF5",129,0)
 ; Get all descendents
"RTN","A1AEUF5",130,0)
 N RBMB S RBMB=$S(RM["R":"REQB",RM["M":"MULB",1:1)
"RTN","A1AEUF5",131,0)
 Q:+RBMB=1 1
"RTN","A1AEUF5",132,0)
CHK2 D @(RBMB_"^A1AEF1(BLDNM,.POO)")
"RTN","A1AEUF5",133,0)
 ; Get first array in descendants array
"RTN","A1AEUF5",134,0)
 N PND S PND=$NA(POO(0,0)),PND=$Q(@PND)
"RTN","A1AEUF5",135,0)
 S X=0
"RTN","A1AEUF5",136,0)
 ; Run through RMA and POO nodes in parallel looking
"RTN","A1AEUF5",137,0)
 ;  for any mismatches
"RTN","A1AEUF5",138,0)
CHK3 F  D  Q:X  S RMANODE=$Q(@RMANODE),PND=$Q(@PND) I @RMANODE="" S X=0 Q
"RTN","A1AEUF5",139,0)
 . I $QS($P(@RMANODE,"="),2)'=$P(PND,"""",2) S X=1 Q
"RTN","A1AEUF5",140,0)
 . I @$P(@RMANODE,"=")'=@PND S X=1 Q
"RTN","A1AEUF5",141,0)
 Q X
"RTN","A1AEUF5",142,0)
 ;
"RTN","A1AEUF5",143,0)
 ;
"RTN","A1AEUF5",144,0)
 ; ENTER
"RTN","A1AEUF5",145,0)
 ;   BUILD  = BUILD(28) "A1AEXTST*1*28"
"RTN","A1AEUF5",146,0)
 ;   RM     = "R" for REQB, "M" for MULB
"RTN","A1AEUF5",147,0)
 ; EXIT
"RTN","A1AEUF5",148,0)
 ;   X      = 0 for ok, 1 for error
"RTN","A1AEUF5",149,0)
LOADSCD(BUILD,RM) ;
"RTN","A1AEUF5",150,0)
 ;Run API to find REQB dependancies and enter into the REQB
"RTN","A1AEUF5",151,0)
 ;   multiple of the container BUILD ("A1AEXTST*1*28")
"RTN","A1AEUF5",152,0)
 N X
"RTN","A1AEUF5",153,0)
 I 'RM?1"R",'RM?1"M" Q 1
"RTN","A1AEUF5",154,0)
 I RM="R" S X=$$A1AEFRQB^A1AEF1(BUILD) Q:'X 1
"RTN","A1AEUF5",155,0)
 I RM="M" S X=$$A1AEFMUB^A1AEF1(BUILD) Q:'X 1
"RTN","A1AEUF5",156,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN 1
"RTN","A1AEUF5",157,0)
 K RMA S RMA=""
"RTN","A1AEUF5",158,0)
LDSCD1 N ARR,BLD,CNT,X,XXX S (CNT,X)=1
"RTN","A1AEUF5",159,0)
 S XXX=$S(RM="R":"A1AEFRB",RM="M":"A1AEFMB",1:"ERROR")
"RTN","A1AEUF5",160,0)
 Q:XXX["ERROR" 1
"RTN","A1AEUF5",161,0)
 F  S RMA=$T(@XXX+CNT^A1AEUF5E) Q:RMA["/END/"  Q:RMA=""  D  Q:'X
"RTN","A1AEUF5",162,0)
 . S BLD=$P(RMA,";;",2)
"RTN","A1AEUF5",163,0)
 . I RM="R" S X=$O(^XPD(9.6,BIEN,"REQB","B",BLD,0)) Q:'X
"RTN","A1AEUF5",164,0)
 . I RM="M" S X=$O(^XPD(9.6,BIEN,10,"B",BLD,0)) Q:'X
"RTN","A1AEUF5",165,0)
 . S CNT=CNT+1
"RTN","A1AEUF5",166,0)
 ; All RMA had a match in 9.6
"RTN","A1AEUF5",167,0)
 Q:'X 1  Q 0
"RTN","A1AEUF5",168,0)
 ;
"RTN","A1AEUF5",169,0)
 ;
"RTN","A1AEUF5",170,0)
 ; Look through routine file and find routine with a second
"RTN","A1AEUF5",171,0)
 ;   line which reflects active package and sufficient
"RTN","A1AEUF5",172,0)
 ;   patches for testing. If necessary patches will be
"RTN","A1AEUF5",173,0)
 ;   temporarily added to 11005.
"RTN","A1AEUF5",174,0)
 ;ENTER
"RTN","A1AEUF5",175,0)
 ;   RTN  = var for ROUTINE NAME passed by referece
"RTN","A1AEUF5",176,0)
 ;   POO  = array passed by reference for PATCHES needed
"RTN","A1AEUF5",177,0)
 ;          to build second line of selected rotine
"RTN","A1AEUF5",178,0)
 ;RETURN
"RTN","A1AEUF5",179,0)
 ;   0 = error, 1 = successful
"RTN","A1AEUF5",180,0)
 ;         also
"RTN","A1AEUF5",181,0)
 ;   RTN  = ROUTINE NAME [eg. DG10]
"RTN","A1AEUF5",182,0)
 ;   POO  = array of PATCHES NEEDED
"RTN","A1AEUF5",183,0)
 ;        example
"RTN","A1AEUF5",184,0)
 ;         POO("DG*5.3*232")=""
"RTN","A1AEUF5",185,0)
 ;         POO("DG*5.3*754")=129209   <<< patch ien into 11005
"RTN","A1AEUF5",186,0)
 ;         POO("DG*5.3*803")=""
"RTN","A1AEUF5",187,0)
BLDPARR(POO,RTN) K POO,RTN S RTN=""
"RTN","A1AEUF5",188,0)
 N IEN,LNG,NODE,X S NODE=$NA(^DIC(9.8,"B")),(LNG,X)=0
"RTN","A1AEUF5",189,0)
 F  S NODE=$Q(@NODE) Q:NODE'["^DIC(9.8,""B"""  D  Q:LNG>90
"RTN","A1AEUF5",190,0)
 . S IEN=$QS(NODE,4) I $O(^DIC(9.8,IEN,8,"A"),-1) D 
"RTN","A1AEUF5",191,0)
 .. S RTN=$QS(NODE,3)
"RTN","A1AEUF5",192,0)
 ..; W !,RTN
"RTN","A1AEUF5",193,0)
 ..; Watch for routines like MPIFAPI in FOIA release
"RTN","A1AEUF5",194,0)
 ..;  where the package name begins with a space
"RTN","A1AEUF5",195,0)
 .. I $E($P($T(+2^@RTN),";",4))=" " Q
"RTN","A1AEUF5",196,0)
 ..; Watch for package name on 2nd line that doesn't 
"RTN","A1AEUF5",197,0)
 ..;  match that in package file
"RTN","A1AEUF5",198,0)
 .. N LN2 S LN2=$T(+2^@RTN)
"RTN","A1AEUF5",199,0)
 .. N A1AEVR S A1AEVR=$P(LN2,";",3)
"RTN","A1AEUF5",200,0)
 .. N A1AESNM S A1AESNM=$$UP^A1AEF1($P(LN2,";",4))
"RTN","A1AEUF5",201,0)
 .. Q:A1AESNM=""
"RTN","A1AEUF5",202,0)
 .. N A1AESIEN S A1AESIEN=$O(^DIC(9.4,"B",A1AESNM,0))
"RTN","A1AEUF5",203,0)
 .. Q:A1AESIEN=""
"RTN","A1AEUF5",204,0)
 .. N A1AESABB S A1AESABB=$$GET1^DIQ(9.4,A1AESIEN_",",1)
"RTN","A1AEUF5",205,0)
 .. Q:A1AESABB=""
"RTN","A1AEUF5",206,0)
 ..;
"RTN","A1AEUF5",207,0)
 .. S LNG=$L($T(+2^@RTN)) Q:LNG<91
"RTN","A1AEUF5",208,0)
 ..; Build POO array of patch names from 2nd line of routine
"RTN","A1AEUF5",209,0)
 .. D PTC4RTN^A1AEF1(RTN,.POO) I '$D(POO) S X=0 Q
"RTN","A1AEUF5",210,0)
 ..; Confirm array has usable patch names
"RTN","A1AEUF5",211,0)
 .. S X=$$CONFRM(.POO)
"RTN","A1AEUF5",212,0)
 ..; If array not good, force looking for another
"RTN","A1AEUF5",213,0)
 .. I 'X S LNG="" Q
"RTN","A1AEUF5",214,0)
 ..; Make sure there are entries in 11005 for these patches
"RTN","A1AEUF5",215,0)
 .. S POO="" F  S POO=$O(POO(POO)) Q:POO=""  D
"RTN","A1AEUF5",216,0)
 ... S POO(POO)=$$MKPATCH(POO,RTN)
"RTN","A1AEUF5",217,0)
 Q:$G(LNG) 1  Q 0
"RTN","A1AEUF5",218,0)
 ;
"RTN","A1AEUF5",219,0)
 ; Build an array of bogus BUILD NAMES
"RTN","A1AEUF5",220,0)
SETUP1() N I
"RTN","A1AEUF5",221,0)
 F I=1:1:30 S BUILD(I)="A1AEXTST*1*"_I
"RTN","A1AEUF5",222,0)
 Q:I=30 1  Q 0
"RTN","A1AEUF5",223,0)
 ;
"RTN","A1AEUF5",224,0)
 ; Load new builds into BUILD [#9.6] file
"RTN","A1AEUF5",225,0)
SETUP2() N X,I F I=1:1:30 S X=$$LDBLD(BUILD(I)) Q:'X  D
"RTN","A1AEUF5",226,0)
 . S BUILD(BUILD(I))=X
"RTN","A1AEUF5",227,0)
 Q:X 1  Q X
"RTN","A1AEUF5",228,0)
 ;
"RTN","A1AEUF5",229,0)
 ; Use test builds to build an interdependant
"RTN","A1AEUF5",230,0)
 ;   array of CONTAINERS, PREREQUISITES, and
"RTN","A1AEUF5",231,0)
 ;   MEMBERS
"RTN","A1AEUF5",232,0)
SETUP3() ; BUILD(10)
"RTN","A1AEUF5",233,0)
 ;   REQUIRED BUILD multiple entries
"RTN","A1AEUF5",234,0)
 ;      BUILD(1)-BUILD(5)
"RTN","A1AEUF5",235,0)
 F I=1:1:5 S X=$$LDRBLD(BUILD(BUILD(10)),BUILD(I)) Q:'X
"RTN","A1AEUF5",236,0)
 Q:'X X
"RTN","A1AEUF5",237,0)
 ;   MULTIPLE BUILD multiple entries
"RTN","A1AEUF5",238,0)
 ;      BUILD(6)-BUILD(10)
"RTN","A1AEUF5",239,0)
 F I=6:1:10 S X=$$LDMBLD(BUILD(BUILD(10)),BUILD(I)) Q:'X
"RTN","A1AEUF5",240,0)
 Q:'X X
"RTN","A1AEUF5",241,0)
 ;
"RTN","A1AEUF5",242,0)
 ; BUILD(11)
"RTN","A1AEUF5",243,0)
 ;   REQUIRED BUILD multiple entries
"RTN","A1AEUF5",244,0)
 ;      BUILD(12)-BUILD(15)
"RTN","A1AEUF5",245,0)
 F I=12:1:15 S X=$$LDRBLD(BUILD(BUILD(11)),BUILD(I)) Q:'X
"RTN","A1AEUF5",246,0)
 Q:'X X
"RTN","A1AEUF5",247,0)
 ;   MULTIPLE BUILD multiple entries
"RTN","A1AEUF5",248,0)
 ;      BUILD(16)-BUILD(20)
"RTN","A1AEUF5",249,0)
 F I=16:1:20 S X=$$LDMBLD(BUILD(BUILD(11)),BUILD(I)) Q:'X
"RTN","A1AEUF5",250,0)
 Q:'X X
"RTN","A1AEUF5",251,0)
 ;
"RTN","A1AEUF5",252,0)
 ; BUILD(28)
"RTN","A1AEUF5",253,0)
 ;   REQUIRED BUILD multiple entries
"RTN","A1AEUF5",254,0)
 ;      BUILD(21)-BUILD(25)
"RTN","A1AEUF5",255,0)
 ;      BUILD(10)-BUILD(11)
"RTN","A1AEUF5",256,0)
 F I=21:1:25 S X=$$LDRBLD(BUILD(BUILD(28)),BUILD(I)) Q:'X
"RTN","A1AEUF5",257,0)
 Q:'X X
"RTN","A1AEUF5",258,0)
 F I=10:1:11 S X=$$LDRBLD(BUILD(BUILD(28)),BUILD(I)) Q:'X
"RTN","A1AEUF5",259,0)
 Q:'X X
"RTN","A1AEUF5",260,0)
 ;   MULTIPLE BUILD multiple entries
"RTN","A1AEUF5",261,0)
 ;      BUILD(26)-BUILD(27)
"RTN","A1AEUF5",262,0)
 F I=26,27 S X=$$LDMBLD(BUILD(BUILD(28)),BUILD(I)) Q:'X
"RTN","A1AEUF5",263,0)
 Q:'X X
"RTN","A1AEUF5",264,0)
 ;
"RTN","A1AEUF5",265,0)
 ; BUILD(29)
"RTN","A1AEUF5",266,0)
 ;   REQUIRED BUILD multiple entries
"RTN","A1AEUF5",267,0)
 ;      BUILD(28)
"RTN","A1AEUF5",268,0)
 S X=$$LDRBLD(BUILD(BUILD(29)),BUILD(28)) Q:'X
"RTN","A1AEUF5",269,0)
 Q:'X X
"RTN","A1AEUF5",270,0)
 ;   MULTIPLE BUILD multiple entries
"RTN","A1AEUF5",271,0)
 ;      BUILD(1)
"RTN","A1AEUF5",272,0)
 ;      BUILD(11)
"RTN","A1AEUF5",273,0)
 F I=1,11 S X=$$LDMBLD(BUILD(BUILD(29)),BUILD(I)) Q:'X
"RTN","A1AEUF5",274,0)
 Q:'X X
"RTN","A1AEUF5",275,0)
 ;
"RTN","A1AEUF5",276,0)
 ; BUILD(30)
"RTN","A1AEUF5",277,0)
 ;   REQUIRED BUILD multiple entries
"RTN","A1AEUF5",278,0)
 ;      BUILD(29)
"RTN","A1AEUF5",279,0)
 S X=$$LDRBLD(BUILD(BUILD(30)),BUILD(29)) Q:'X
"RTN","A1AEUF5",280,0)
 Q:'X X
"RTN","A1AEUF5",281,0)
 ;   MULTIPLE BUILD multiple entries
"RTN","A1AEUF5",282,0)
 ;      BUILD(28)
"RTN","A1AEUF5",283,0)
 S X=$$LDMBLD(BUILD(BUILD(29)),BUILD(28)) Q:'X
"RTN","A1AEUF5",284,0)
 Q:'X X
"RTN","A1AEUF5",285,0)
 Q 1
"RTN","A1AEUF5",286,0)
 ; Build an array of bogus BUILD NAMES
"RTN","A1AEUF5",287,0)
 ; ENTER
"RTN","A1AEUF5",288,0)
 ;   nothing required
"RTN","A1AEUF5",289,0)
 ; RETURN
"RTN","A1AEUF5",290,0)
 ;   0 = error, 1 = array built
"RTN","A1AEUF5",291,0)
SETUP4() N I
"RTN","A1AEUF5",292,0)
 F I=900:1:910 D
"RTN","A1AEUF5",293,0)
 . S BUILD(I)="A1AE*999*"_I
"RTN","A1AEUF5",294,0)
 . S BUILD(I+10)="A1AE*999*"_(10000+I+10)
"RTN","A1AEUF5",295,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C","A1AE",0))
"RTN","A1AEUF5",296,0)
 N ACTVER S ACTVER=$$GET1^DIQ(9.4,PKGIEN_",",13)
"RTN","A1AEUF5",297,0)
 S BUILD(921)="A1AE*"_ACTVER_"*911"
"RTN","A1AEUF5",298,0)
 Q:I=910 1  Q 0
"RTN","A1AEUF5",299,0)
 ;
"RTN","A1AEUF5",300,0)
 ; Load new builds into BUILD [#9.6] file
"RTN","A1AEUF5",301,0)
 ; ENTER
"RTN","A1AEUF5",302,0)
 ;   BUILD  = array of build names by reference
"RTN","A1AEUF5",303,0)
 ; RETURN
"RTN","A1AEUF5",304,0)
 ;   0 = error, 1 = BUILDS successfully added to 9.6
"RTN","A1AEUF5",305,0)
 ;                  BUILD array updated
"RTN","A1AEUF5",306,0)
SETUP5(BUILD) N X,I
"RTN","A1AEUF5",307,0)
 F I=900:1:921 D  Q:'X
"RTN","A1AEUF5",308,0)
 . S X=$$LDBLD2(BUILD(I)) Q:'X
"RTN","A1AEUF5",309,0)
 . S BUILD(BUILD(I))=X
"RTN","A1AEUF5",310,0)
 . S X=$$LDINST2(BUILD(I)) Q:'X
"RTN","A1AEUF5",311,0)
 . S BUILD(BUILD(I))=BUILD(BUILD(I))_"^"_X
"RTN","A1AEUF5",312,0)
 Q:X 1  Q X
"RTN","A1AEUF5",313,0)
 ;
"RTN","A1AEUF5",314,0)
 ; Load new patches into DHCP PATCHES [#11005] file
"RTN","A1AEUF5",315,0)
 ; ENTER
"RTN","A1AEUF5",316,0)
 ;   BUILD  = array of build names by reference
"RTN","A1AEUF5",317,0)
 ;   RTN    = name of running routine
"RTN","A1AEUF5",318,0)
 ; RETURN
"RTN","A1AEUF5",319,0)
 ;   0 = error, 1 = PATCHES successfully added to 11005
"RTN","A1AEUF5",320,0)
 ;                  BUILD array updated again
"RTN","A1AEUF5",321,0)
SETUP6(BUILD,RTN) N PD S PD=" "
"RTN","A1AEUF5",322,0)
 F  S PD=$O(BUILD(PD)) Q:PD=""  D
"RTN","A1AEUF5",323,0)
 . S X=$$MKPATCH(PD,.RTN) Q:'X  D
"RTN","A1AEUF5",324,0)
 . S BUILD(PD)=$P($G(BUILD(PD)),"^",1,2)_"^"_X
"RTN","A1AEUF5",325,0)
 Q:X 1  Q X
"RTN","A1AEUF5",326,0)
 ;  After SETUP3 we have
"RTN","A1AEUF5",327,0)
 ;     BUILD(900)="A1AE*999*900"
"RTN","A1AEUF5",328,0)
 ;     BUILD(901)="A1AE*999*901"
"RTN","A1AEUF5",329,0)
 ;     BUILD(902)="A1AE*999*902"
"RTN","A1AEUF5",330,0)
 ;     BUILD(903)="A1AE*999*903"
"RTN","A1AEUF5",331,0)
 ;     BUILD(904)="A1AE*999*904"
"RTN","A1AEUF5",332,0)
 ;     BUILD(905)="A1AE*999*905"
"RTN","A1AEUF5",333,0)
 ;     BUILD(906)="A1AE*999*906"
"RTN","A1AEUF5",334,0)
 ;     BUILD(907)="A1AE*999*907"
"RTN","A1AEUF5",335,0)
 ;     BUILD(908)="A1AE*999*908"
"RTN","A1AEUF5",336,0)
 ;     BUILD(909)="A1AE*999*909"
"RTN","A1AEUF5",337,0)
 ;     BUILD(910)="A1AE*999*910"
"RTN","A1AEUF5",338,0)
 ;     BUILD(911)="A1AE*999*10911"
"RTN","A1AEUF5",339,0)
 ;     BUILD(912)="A1AE*999*10912"
"RTN","A1AEUF5",340,0)
 ;     BUILD(913)="A1AE*999*10913"
"RTN","A1AEUF5",341,0)
 ;     BUILD(914)="A1AE*999*10914"
"RTN","A1AEUF5",342,0)
 ;     BUILD(915)="A1AE*999*10915"
"RTN","A1AEUF5",343,0)
 ;     BUILD(916)="A1AE*999*10916"
"RTN","A1AEUF5",344,0)
 ;     BUILD(917)="A1AE*999*10917"
"RTN","A1AEUF5",345,0)
 ;     BUILD(918)="A1AE*999*10918"
"RTN","A1AEUF5",346,0)
 ;     BUILD(919)="A1AE*999*10919"
"RTN","A1AEUF5",347,0)
 ;     BUILD(920)="A1AE*999*10920"
"RTN","A1AEUF5",348,0)
 ;     BUILD(921)="A1AE*2.4*911"
"RTN","A1AEUF5",349,0)
 ;     BUILD("A1AE*2.4*911")="9538^9016"
"RTN","A1AEUF5",350,0)
 ;     BUILD("A1AE*999*10911")="9487^129506"
"RTN","A1AEUF5",351,0)
 ;     BUILD("A1AE*999*10912")="9488^129507"
"RTN","A1AEUF5",352,0)
 ;     BUILD("A1AE*999*10913")="9489^129508"
"RTN","A1AEUF5",353,0)
 ;     BUILD("A1AE*999*10914")="9490^129509"
"RTN","A1AEUF5",354,0)
 ;     BUILD("A1AE*999*10915")="9491^129510"
"RTN","A1AEUF5",355,0)
 ;     BUILD("A1AE*999*10916")="9492^129511"
"RTN","A1AEUF5",356,0)
 ;     BUILD("A1AE*999*10917")="9493^129512"
"RTN","A1AEUF5",357,0)
 ;     BUILD("A1AE*999*10918")="9494^129513"
"RTN","A1AEUF5",358,0)
 ;     BUILD("A1AE*999*10919")="9495^129514"
"RTN","A1AEUF5",359,0)
 ;     BUILD("A1AE*999*10920")="9496^129515"
"RTN","A1AEUF5",360,0)
 ;     BUILD("A1AE*999*900")="9476^129516"
"RTN","A1AEUF5",361,0)
 ;     BUILD("A1AE*999*901")="9477^129517"
"RTN","A1AEUF5",362,0)
 ;     BUILD("A1AE*999*902")="9478^129518"
"RTN","A1AEUF5",363,0)
 ;     BUILD("A1AE*999*903")="9479^129519"
"RTN","A1AEUF5",364,0)
 ;     BUILD("A1AE*999*904")="9480^129520"
"RTN","A1AEUF5",365,0)
 ;     BUILD("A1AE*999*905")="9481^129521"
"RTN","A1AEUF5",366,0)
 ;     BUILD("A1AE*999*906")="9482^129522"
"RTN","A1AEUF5",367,0)
 ;     BUILD("A1AE*999*907")="9483^129523"
"RTN","A1AEUF5",368,0)
 ;     BUILD("A1AE*999*908")="9484^129524"
"RTN","A1AEUF5",369,0)
 ;     BUILD("A1AE*999*909")="9485^129525"
"RTN","A1AEUF5",370,0)
 ;     BUILD("A1AE*999*910")="9486^129526"
"RTN","A1AEUF5",371,0)
 ;
"RTN","A1AEUF5",372,0)
 ;
"RTN","A1AEUF5",373,0)
 ;Load new BUILD [#9.6] entry
"RTN","A1AEUF5",374,0)
 ;ENTER
"RTN","A1AEUF5",375,0)
 ;  BUILD   =  Build name
"RTN","A1AEUF5",376,0)
 ;RETURN
"RTN","A1AEUF5",377,0)
 ;  IEN of new BUILD entry OR 0_"^DIERR"
"RTN","A1AEUF5",378,0)
LDBLD(BUILD) ;
"RTN","A1AEUF5",379,0)
 N X,Y
"RTN","A1AEUF5",380,0)
 Q:BUILD="" 0_"^No BUILD Name"
"RTN","A1AEUF5",381,0)
 N A1AEKI,A1AEPM,DIERR,FDA,FDAIEN
"RTN","A1AEUF5",382,0)
 S FDA(3,9.6,"?+1,",.01)=BUILD
"RTN","A1AEUF5",383,0)
 S FDA(3,9.6,"?+1,",2)=0
"RTN","A1AEUF5",384,0)
 S FDA(3,9.6,"?+1,",.02)=$$HTFM^XLFDT($H,1)
"RTN","A1AEUF5",385,0)
 S FDA(3,9.6,"?+1,",5)="n"
"RTN","A1AEUF5",386,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF5",387,0)
 I $D(DIERR) Q 0_"^DIERR"
"RTN","A1AEUF5",388,0)
 Q +FDAIEN(1)
"RTN","A1AEUF5",389,0)
 ;
"RTN","A1AEUF5",390,0)
 ;Load new BUILD [#9.6] entry and corresponding INSTALL entry
"RTN","A1AEUF5",391,0)
 ;ENTER
"RTN","A1AEUF5",392,0)
 ;  BUILD   =  Build name
"RTN","A1AEUF5",393,0)
 ;RETURN
"RTN","A1AEUF5",394,0)
 ;  0 = error,  n = IEN of successful entry in 9.6
"RTN","A1AEUF5",395,0)
LDBLD2(BUILD) ;
"RTN","A1AEUF5",396,0)
 Q:BUILD="" 0_"^No BUILD Name"
"RTN","A1AEUF5",397,0)
 S X=$O(^XPD(9.6,"B",BUILD,0)) Q:X X
"RTN","A1AEUF5",398,0)
 N DIERR,FDA,FDAIEN,X,Y
"RTN","A1AEUF5",399,0)
 N PKGIEN S PKGIEN=+$O(^DIC(9.4,"C",$P(BUILD,"*"),0))
"RTN","A1AEUF5",400,0)
 S FDA(3,9.6,"?+1,",.01)=BUILD
"RTN","A1AEUF5",401,0)
 S FDA(3,9.6,"?+1,",1)=PKGIEN
"RTN","A1AEUF5",402,0)
 S FDA(3,9.6,"?+1,",2)=0
"RTN","A1AEUF5",403,0)
 S FDA(3,9.6,"?+1,",.02)=$$HTFM^XLFDT($H,1)
"RTN","A1AEUF5",404,0)
 S FDA(3,9.6,"?+1,",5)="n"
"RTN","A1AEUF5",405,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF5",406,0)
 I $D(DIERR) Q 0
"RTN","A1AEUF5",407,0)
 Q +$G(FDAIEN(1))
"RTN","A1AEUF5",408,0)
 ;
"RTN","A1AEUF5",409,0)
 ;Load new BUILD [#9.6] entry and corresponding INSTALL entry
"RTN","A1AEUF5",410,0)
 ;ENTER
"RTN","A1AEUF5",411,0)
 ;  BUILD   =  Build name
"RTN","A1AEUF5",412,0)
 ;RETURN
"RTN","A1AEUF5",413,0)
 ;  0 = error,  n = IEN of successful entry in 9.7
"RTN","A1AEUF5",414,0)
LDINST2(BUILD) ;
"RTN","A1AEUF5",415,0)
 Q:BUILD="" 0_"^No BUILD Name"
"RTN","A1AEUF5",416,0)
 S X=$O(^XPD(9.7,"B",BUILD,0)) Q:X X
"RTN","A1AEUF5",417,0)
 N DIERR,FDA,FDAIEN,X,Y
"RTN","A1AEUF5",418,0)
 S FDA(3,9.7,"?+1,",.01)=BUILD
"RTN","A1AEUF5",419,0)
 S FDA(3,9.7,"?+1,",.02)=3
"RTN","A1AEUF5",420,0)
 S FDA(3,9.7,"?+1,",2)=$$HTFM^XLFDT($H,1)
"RTN","A1AEUF5",421,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF5",422,0)
 I $D(DIERR) Q 0
"RTN","A1AEUF5",423,0)
 Q +$G(FDAIEN(1))
"RTN","A1AEUF5",424,0)
 ;
"RTN","A1AEUF5",425,0)
 ; Load entry into MULTIPLE BUILD for this Container build
"RTN","A1AEUF5",426,0)
 ;ENTER
"RTN","A1AEUF5",427,0)
 ;   A1AEKI  = IEN OF Container Build
"RTN","A1AEUF5",428,0)
 ;   A1AEPM  = BUILD name of Member
"RTN","A1AEUF5",429,0)
 ;RETURN
"RTN","A1AEUF5",430,0)
 ;   IEN of new Member within Container BUILD
"RTN","A1AEUF5",431,0)
 ;     OR 0_"^DIERR"
"RTN","A1AEUF5",432,0)
LDMBLD(A1AEKI,MBUILD) ;
"RTN","A1AEUF5",433,0)
 Q:'A1AEKI 0_"^No Container BUILD IEN"
"RTN","A1AEUF5",434,0)
 Q:MBUILD="" 0_"^No Member BUILD Name"
"RTN","A1AEUF5",435,0)
 N FDA,DIERR,FDAIEN,X,Y
"RTN","A1AEUF5",436,0)
 S FDA(3,9.63,"?+1,"_A1AEKI_",",.01)=MBUILD
"RTN","A1AEUF5",437,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF5",438,0)
 Q:$D(DIERR) 0_"^DIERR"
"RTN","A1AEUF5",439,0)
 Q +FDAIEN(1)
"RTN","A1AEUF5",440,0)
 ;
"RTN","A1AEUF5",441,0)
 ; Load entry into REQUIRED BUILD for this Container build
"RTN","A1AEUF5",442,0)
 ;ENTER
"RTN","A1AEUF5",443,0)
 ;   A1AEKI  = IEN OF Container Build
"RTN","A1AEUF5",444,0)
 ;   A1AEPM  = BUILD name of Member
"RTN","A1AEUF5",445,0)
 ;RETURN
"RTN","A1AEUF5",446,0)
 ;   IEN of new Member within Container BUILD
"RTN","A1AEUF5",447,0)
 ;     OR 0_"^DIERR"
"RTN","A1AEUF5",448,0)
LDRBLD(A1AEKI,RBUILD) ;
"RTN","A1AEUF5",449,0)
 Q:'A1AEKI 0_"^No Container BUILD IEN"
"RTN","A1AEUF5",450,0)
 Q:RBUILD="" 0_"^No Member BUILD Name"
"RTN","A1AEUF5",451,0)
 N FDA,DIERR,FDAIEN,X,Y
"RTN","A1AEUF5",452,0)
 S FDA(3,9.611,"?+1,"_A1AEKI_",",.01)=RBUILD
"RTN","A1AEUF5",453,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF5",454,0)
 Q:$D(DIERR) 0_"^DIERR"
"RTN","A1AEUF5",455,0)
 Q +FDAIEN(1)
"RTN","A1AEUF5",456,0)
 ;
"RTN","A1AEUF5",457,0)
 ;
"RTN","A1AEUF5",458,0)
 ; ENTER
"RTN","A1AEUF5",459,0)
 ;   RM    = "R" or "M" for REQB or MULB lookup
"RTN","A1AEUF5",460,0)
 ;           "F" for other
"RTN","A1AEUF5",461,0)
 ;   RMA   =  Passed by reference
"RTN","A1AEUF5",462,0)
 ; EXIT
"RTN","A1AEUF5",463,0)
 ;   RMA   = Array of builds from data listed
"RTN","A1AEUF5",464,0)
 ;           in routine
"RTN","A1AEUF5",465,0)
 ;   X     = 1 all ok, 0 = failure to match
"RTN","A1AEUF5",466,0)
GETARR(RM,RMA) ;
"RTN","A1AEUF5",467,0)
 I 'RM?1"R",'RM?1"M" Q 0
"RTN","A1AEUF5",468,0)
 N RME S RME=$S(RM="R":"REQBCHK",RM="M":"MULBCHK")
"RTN","A1AEUF5",469,0)
 ;I RM="F" S RME="A1AEFRB"
"RTN","A1AEUF5",470,0)
 K RMA
"RTN","A1AEUF5",471,0)
 N ARR,CNT S CNT=0
"RTN","A1AEUF5",472,0)
 F  S RMA=$T(@RME+CNT^A1AEUF5E) Q:RMA["/END/"  Q:RMA=""  D
"RTN","A1AEUF5",473,0)
 . S ARR=$P($T(@RME+CNT^A1AEUF5E),";;",2)
"RTN","A1AEUF5",474,0)
 . S CNT=CNT+1,RMA(CNT)=ARR
"RTN","A1AEUF5",475,0)
 ; if no RMA nodes, then error
"RTN","A1AEUF5",476,0)
 Q:'CNT 0
"RTN","A1AEUF5",477,0)
 Q 1
"RTN","A1AEUF5",478,0)
 ;
"RTN","A1AEUF5",479,0)
 ;
"RTN","A1AEUF5",480,0)
 ; Delete all test build entries
"RTN","A1AEUF5",481,0)
 ; RETURN
"RTN","A1AEUF5",482,0)
 ;  1 if no errors, 0_"^DIERR" if deletion failed
"RTN","A1AEUF5",483,0)
DELTBLDS() N DA,DIK,X,Y S X=1
"RTN","A1AEUF5",484,0)
 N NODE S NODE=$NA(^XPD(9.6,"B","A1AEXTST*1"))
"RTN","A1AEUF5",485,0)
 F  S NODE=$Q(@NODE) Q:NODE'["A1AEXTST*1"  D  Q:'X
"RTN","A1AEUF5",486,0)
 .  N DA,DIK,DIERR
"RTN","A1AEUF5",487,0)
 .  S DA=$QS(NODE,4)
"RTN","A1AEUF5",488,0)
 .  S DIK="^XPD(9.6,"
"RTN","A1AEUF5",489,0)
 .  D ^DIK
"RTN","A1AEUF5",490,0)
 .  S:$D(DIERR) X=0_"^DIERR"
"RTN","A1AEUF5",491,0)
 Q:X 1  Q X
"RTN","A1AEUF5",492,0)
 ;
"RTN","A1AEUF5",493,0)
 ; Delete all test build entries
"RTN","A1AEUF5",494,0)
 ; RETURN
"RTN","A1AEUF5",495,0)
 ;  1 if no errors, 0 if deletion failed
"RTN","A1AEUF5",496,0)
 ;  Nothing to delete returns 1 for no errors
"RTN","A1AEUF5",497,0)
DELTBLDZ() N DA,DIK,X,Y S X=1
"RTN","A1AEUF5",498,0)
 N NODE S NODE=$NA(^XPD(9.6,"B","A1AE*999"))
"RTN","A1AEUF5",499,0)
 F  S NODE=$Q(@NODE) Q:NODE'["A1AE*999"  D  Q:'X
"RTN","A1AEUF5",500,0)
 .  N DA,DIK,DIERR
"RTN","A1AEUF5",501,0)
 .  S DA=$QS(NODE,4)
"RTN","A1AEUF5",502,0)
 .  S DIK="^XPD(9.6,"
"RTN","A1AEUF5",503,0)
 .  D ^DIK
"RTN","A1AEUF5",504,0)
 .  S:$D(DIERR) X=0
"RTN","A1AEUF5",505,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C","A1AE",0))
"RTN","A1AEUF5",506,0)
 N ACTVER S ACTVER=$$GET1^DIQ(9.4,PKGIEN_",",13)
"RTN","A1AEUF5",507,0)
 N PD S PD="A1AE*"_ACTVER_"*911"
"RTN","A1AEUF5",508,0)
 S DA=$O(^XPD(9.6,"B",PD,0)) I DA D
"RTN","A1AEUF5",509,0)
 . S DIK="^XPD(9.6,"
"RTN","A1AEUF5",510,0)
 . D ^DIK
"RTN","A1AEUF5",511,0)
 . S:$D(DIERR) X=0
"RTN","A1AEUF5",512,0)
 Q X
"RTN","A1AEUF5",513,0)
 ;
"RTN","A1AEUF5",514,0)
 ; Delete all test INSTALL entries
"RTN","A1AEUF5",515,0)
 ; RETURN
"RTN","A1AEUF5",516,0)
 ;  1 if no errors, 0 if deletion failed
"RTN","A1AEUF5",517,0)
 ;  Nothing to delete returns 1 for no errors
"RTN","A1AEUF5",518,0)
DELTINST() N DA,DIK,X,Y S X=1
"RTN","A1AEUF5",519,0)
 N NODE S NODE=$NA(^XPD(9.7,"B","A1AE*999"))
"RTN","A1AEUF5",520,0)
 F  S NODE=$Q(@NODE) Q:NODE'["A1AE*999"  D  Q:'X
"RTN","A1AEUF5",521,0)
 .  N DA,DIK,DIERR
"RTN","A1AEUF5",522,0)
 .  S DA=$QS(NODE,4)
"RTN","A1AEUF5",523,0)
 .  S DIK="^XPD(9.7,"
"RTN","A1AEUF5",524,0)
 .  D ^DIK
"RTN","A1AEUF5",525,0)
 .  S:$D(DIERR) X=0
"RTN","A1AEUF5",526,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C","A1AE",0))
"RTN","A1AEUF5",527,0)
 N ACTVER S ACTVER=$$GET1^DIQ(9.4,PKGIEN_",",13)
"RTN","A1AEUF5",528,0)
 N PD S PD="A1AE*"_ACTVER_"*911"
"RTN","A1AEUF5",529,0)
 S DA=$O(^XPD(9.7,"B",PD,0)) I DA D
"RTN","A1AEUF5",530,0)
 . S DIK="^XPD(9.7,"
"RTN","A1AEUF5",531,0)
 . D ^DIK
"RTN","A1AEUF5",532,0)
 . S:$D(DIERR) X=0
"RTN","A1AEUF5",533,0)
 Q X
"RTN","A1AEUF5",534,0)
 ;
"RTN","A1AEUF5",535,0)
 ; Confirm array has usable patch names (e.g. 3 * pieces)
"RTN","A1AEUF5",536,0)
 ; ENTER
"RTN","A1AEUF5",537,0)
 ;   POO   =  array of patch names
"RTN","A1AEUF5",538,0)
 ; RETURN
"RTN","A1AEUF5",539,0)
 ;   0 = not have usable names, 1 = names ok
"RTN","A1AEUF5",540,0)
CONFRM(POO) N PNM,X,Y S PNM="",Y=0,X=1
"RTN","A1AEUF5",541,0)
 F  S PNM=$O(POO(PNM)) Q:PNM=""  D  Q:'X
"RTN","A1AEUF5",542,0)
 .  I $L(PNM,"*")'=3 S X=0 Q
"RTN","A1AEUF5",543,0)
 Q X
"RTN","A1AEUF5",544,0)
 ;
"RTN","A1AEUF5",545,0)
 ;
"RTN","A1AEUF5",546,0)
 ; ENTER
"RTN","A1AEUF5",547,0)
 ;    PD   =  PATCH DESIGNATION
"RTN","A1AEUF5",548,0)
 ;    RTN  =  ROUTINE NAME to add to 11005 PD entry
"RTN","A1AEUF5",549,0)
 ; RETURNS
"RTN","A1AEUF5",550,0)
 ;    0 = error,  IEN of patch if successful
"RTN","A1AEUF5",551,0)
MKPATCH(PD,RTN) Q:PD="" 0
"RTN","A1AEUF5",552,0)
 N X,Y,DA,DIC,DIEN
"RTN","A1AEUF5",553,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF5",554,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C",$P(PD,"*"),0)) Q:PKGIEN="" 0
"RTN","A1AEUF5",555,0)
 N PKGAV S PKGAV=$$GET1^DIQ(9.4,PKGIEN_",",13) Q:'PKGAV 0
"RTN","A1AEUF5",556,0)
 N PTCHNB S PTCHNB=+$P(PD,"*",3) Q:'PTCHNB 0
"RTN","A1AEUF5",557,0)
 N PTSTRM S PTSTRM=$S(PTCHNB>10001:10001,1:1)
"RTN","A1AEUF5",558,0)
 N FDAIEN
"RTN","A1AEUF5",559,0)
 ; If already entry in 11005, move on to adding RTN
"RTN","A1AEUF5",560,0)
 I +$O(^A1AE(A1AEFILE,"B",PD,0)) D
"RTN","A1AEUF5",561,0)
 . S FDAIEN(1)=+$O(^A1AE(A1AEFILE,"B",PD,0))
"RTN","A1AEUF5",562,0)
 E  D
"RTN","A1AEUF5",563,0)
 . N DIERR
"RTN","A1AEUF5",564,0)
 . S FDA(3,A1AEFILE,"?+1,",.01)=PD
"RTN","A1AEUF5",565,0)
 . S FDA(3,A1AEFILE,"?+1,",.2)=PTSTRM
"RTN","A1AEUF5",566,0)
 . S FDA(3,A1AEFILE,"?+1,",2)=PKGIEN
"RTN","A1AEUF5",567,0)
 . S FDA(3,A1AEFILE,"?+1,",3)=PKGAV
"RTN","A1AEUF5",568,0)
 . S FDA(3,A1AEFILE,"?+1,",4)=PTCHNB
"RTN","A1AEUF5",569,0)
 . S FDA(3,A1AEFILE,"?+1,",5)="A1AE TEST ZZZFOR UNIT TESTS"
"RTN","A1AEUF5",570,0)
 . D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF5",571,0)
 ;W "NEW ENTRY=",+$G(FDAIEN(1))
"RTN","A1AEUF5",572,0)
 Q:$D(DIERR) 0
"RTN","A1AEUF5",573,0)
 K DIERR,FDA
"RTN","A1AEUF5",574,0)
 N FDARIEN S FDARIEN=+$G(FDAIEN(1)) Q:'FDARIEN 0
"RTN","A1AEUF5",575,0)
 K FDAIEN
"RTN","A1AEUF5",576,0)
 S FDA(3,+(A1AEFILE_".03"),"?+1,"_FDARIEN_",",.01)=RTN
"RTN","A1AEUF5",577,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF5",578,0)
 Q:$D(DIERR) 0
"RTN","A1AEUF5",579,0)
 Q FDARIEN
"RTN","A1AEUF5",580,0)
 ;
"RTN","A1AEUF5",581,0)
 ; ENTER
"RTN","A1AEUF5",582,0)
 ;   nothing required
"RTN","A1AEUF5",583,0)
 ; RETURN
"RTN","A1AEUF5",584,0)
 ;   0 = error, 1 = deletions complete
"RTN","A1AEUF5",585,0)
DELPAT() N DA,DIK,PAT,NOERR,X,Y S PAT=0,NOERR=1
"RTN","A1AEUF5",586,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF5",587,0)
 F  S PAT=$O(^A1AE(A1AEFILE,PAT)) Q:'PAT  D  Q:'NOERR
"RTN","A1AEUF5",588,0)
 . I $P(^A1AE(A1AEFILE,PAT,0),"^",5)["A1AE TEST ZZZFOR UNIT TESTS" D
"RTN","A1AEUF5",589,0)
 .. S DIK="^A1AE(A1AEFILE," S DA=+PAT D ^DIK S:$D(DIERR) NOERR=0
"RTN","A1AEUF5",590,0)
 I NOERR S PAT=0 D
"RTN","A1AEUF5",591,0)
 . F  S PAT=$O(^A1AE(A1AEFILE,PAT)) Q:'PAT  D  Q:'NOERR
"RTN","A1AEUF5",592,0)
 .. I $P(^A1AE(A1AEFILE,PAT,0),"^",5)["A1AE TEST ZZZFOR UNIT TESTS" D
"RTN","A1AEUF5",593,0)
 ... S NOERR=0
"RTN","A1AEUF5",594,0)
 Q NOERR
"RTN","A1AEUF5",595,0)
 ;
"RTN","A1AEUF5",596,0)
 ;
"RTN","A1AEUF5",597,0)
UP(STR) Q $TR(STR,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","A1AEUF5",598,0)
 ;
"RTN","A1AEUF5",599,0)
 ;
"RTN","A1AEUF5",600,0)
XTENT ;
"RTN","A1AEUF5",601,0)
 ;;UTP32;Testing REQB^A1AEF1 - REQB descendants
"RTN","A1AEUF5",602,0)
 ;;UTP33;Testing MULB^A1AEF1 - MULB descendants
"RTN","A1AEUF5",603,0)
 ;;UTP34;Testing $$BACTV^A1AEF1 - Active Package
"RTN","A1AEUF5",604,0)
 Q
"RTN","A1AEUF5A")
0^79^B68204579
"RTN","A1AEUF5A",1,0)
A1AEUF5A ;ven/lgc,jli-unit tests for A1AEF5 ; 6/4/15 1:02am
"RTN","A1AEUF5A",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUF5A",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUF5A",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUF5A",5,0)
 ;
"RTN","A1AEUF5A",6,0)
 ;
"RTN","A1AEUF5A",7,0)
 ;primary change history
"RTN","A1AEUF5A",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUF5A",9,0)
 ;
"RTN","A1AEUF5A",10,0)
 ;
"RTN","A1AEUF5A",11,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUF5A",12,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUF5A",13,0)
 Q
"RTN","A1AEUF5A",14,0)
 ;
"RTN","A1AEUF5A",15,0)
STARTUP ;
"RTN","A1AEUF5A",16,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUF5A",17,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUF5A",18,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5A",19,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUF5A",20,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5A",21,0)
 ;
"RTN","A1AEUF5A",22,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUF5A",23,0)
 L +^A1AE(A1AEFILE):1 I '$T D  Q
"RTN","A1AEUF5A",24,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5A",25,0)
 . W !,"Unable to obtain lock on "_A1AENAME_" [#"_A1AEFILE_"] file"
"RTN","A1AEUF5A",26,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5A",27,0)
 Q
"RTN","A1AEUF5A",28,0)
 ;
"RTN","A1AEUF5A",29,0)
SHUTDOWN L -^XPD(9.6):1
"RTN","A1AEUF5A",30,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF5A",31,0)
 L -^A1AE(A1AEFILE):1
"RTN","A1AEUF5A",32,0)
 I '$$DELPAT D
"RTN","A1AEUF5A",33,0)
 . W !,"Unable to delete test entries in "_A1AEFILE,!
"RTN","A1AEUF5A",34,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUF5A",35,0)
 K A1AEFAIL
"RTN","A1AEUF5A",36,0)
 Q
"RTN","A1AEUF5A",37,0)
 ;
"RTN","A1AEUF5A",38,0)
 ; Testing 
"RTN","A1AEUF5A",39,0)
 ;   35. Testing $$PTC4RTN^A1AEF1 - patches to build RTN 2nd line
"RTN","A1AEUF5A",40,0)
 ;   36. Testing LOADXTMP^A1AEF2 - Load Build Components
"RTN","A1AEUF5A",41,0)
 ;   37. Testing $$DTINS^A1AEF2 - get INVERSE Install DT
"RTN","A1AEUF5A",42,0)
 ;
"RTN","A1AEUF5A",43,0)
 ;
"RTN","A1AEUF5A",44,0)
UTP35 I '$G(A1AEFAIL) S X=$$PTC4RTN D
"RTN","A1AEUF5A",45,0)
 . D CHKEQ^%ut(1,X,"$$PTC4RTN^A1AEF1 - patches to build RTN 2nd line FAILED!")
"RTN","A1AEUF5A",46,0)
 Q
"RTN","A1AEUF5A",47,0)
 ;
"RTN","A1AEUF5A",48,0)
 ; Testing PTC4RTN logic 
"RTN","A1AEUF5A",49,0)
 ;   1. Enter with RTN and POO array of patches
"RTN","A1AEUF5A",50,0)
 ;   2. Run PTC4RTN^A1AEF1 for this routine
"RTN","A1AEUF5A",51,0)
 ;   3. Pull up 2nd line of the routine and run through
"RTN","A1AEUF5A",52,0)
 ;      each "," delimited patch
"RTN","A1AEUF5A",53,0)
 ;   4. Check this patch is in POO global
"RTN","A1AEUF5A",54,0)
 ;   5. Check this patch in 11005 if POO(xxx)=ien into 11005
"RTN","A1AEUF5A",55,0)
 ;   6. Kill each POO node after check to be certain not
"RTN","A1AEUF5A",56,0)
 ;      excess POO nodes
"RTN","A1AEUF5A",57,0)
 ; ENTER
"RTN","A1AEUF5A",58,0)
 ;    nothing required
"RTN","A1AEUF5A",59,0)
 ; RETRUN
"RTN","A1AEUF5A",60,0)
 ;    0 = error, 1 = successful
"RTN","A1AEUF5A",61,0)
PTC4RTN() N X S X=1
"RTN","A1AEUF5A",62,0)
 ; Find a routine with several patches - at least one
"RTN","A1AEUF5A",63,0)
 ;  of which is found in DHCP PATHES [#11005]
"RTN","A1AEUF5A",64,0)
 N POO,RTN I '$$BLDPARR(.POO,.RTN) D  Q
"RTN","A1AEUF5A",65,0)
 . S X=0
"RTN","A1AEUF5A",66,0)
 . W !,"Unable to find suitably patched routine"
"RTN","A1AEUF5A",67,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5A",68,0)
 ;
"RTN","A1AEUF5A",69,0)
 ; Pick up 2nd line and run through each patch listed
"RTN","A1AEUF5A",70,0)
 ;   is there a POO(name) array entry
"RTN","A1AEUF5A",71,0)
 ;   if POO(name)>0 (=IEN in file 11005) 
"RTN","A1AEUF5A",72,0)
 ;      check the patch is in 11005
"RTN","A1AEUF5A",73,0)
 ;      check the routine is in the patch
"RTN","A1AEUF5A",74,0)
P1 N A1AE2LN S A1AE2LN=$T(+2^@RTN)
"RTN","A1AEUF5A",75,0)
 N A1AEVR S A1AEVR=$P(A1AE2LN,";",3)
"RTN","A1AEUF5A",76,0)
 S:A1AEVR?.EP1"0" A1AEVR=$P(A1AE2LN,";",3)
"RTN","A1AEUF5A",77,0)
 N A1AESNM S A1AESNM=$P(A1AE2LN,";",4) Q:A1AESNM="" 0
"RTN","A1AEUF5A",78,0)
 S A1AESNM=$$UP(A1AESNM)
"RTN","A1AEUF5A",79,0)
 N A1AESIEN S A1AESIEN=$O(^DIC(9.4,"B",A1AESNM,0)) Q:'A1AESIEN 0
"RTN","A1AEUF5A",80,0)
 N A1AESABB S A1AESABB=$$GET1^DIQ(9.4,A1AESIEN_",",1) Q:A1AESABB="" 0
"RTN","A1AEUF5A",81,0)
 S A1AE2LN=$P(A1AE2LN,"**",2)
"RTN","A1AEUF5A",82,0)
 N CNT,PNM,PNMB
"RTN","A1AEUF5A",83,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF5A",84,0)
 F CNT=1:1:$L(A1AE2LN,",") S PNMB=$P(A1AE2LN,",",CNT) D  Q:'X
"RTN","A1AEUF5A",85,0)
 . S PNM=A1AESABB_"*"_A1AEVR_"*"_PNMB
"RTN","A1AEUF5A",86,0)
 . I '$D(POO(PNM)) S X=0 Q
"RTN","A1AEUF5A",87,0)
 . I +POO(PNM),'$D(^A1AE(A1AEFILE,+POO(PNM))) S X=0 Q
"RTN","A1AEUF5A",88,0)
 . I +POO(PNM),'$O(^A1AE(A1AEFILE,+POO(PNM),"P","B",RTN,0)) S X=0
"RTN","A1AEUF5A",89,0)
 . K POO(PNM)
"RTN","A1AEUF5A",90,0)
 Q:$O(POO(""))="" 1
"RTN","A1AEUF5A",91,0)
 Q X
"RTN","A1AEUF5A",92,0)
 ;
"RTN","A1AEUF5A",93,0)
 ;
"RTN","A1AEUF5A",94,0)
UTP36 N X S X=$$ENLD
"RTN","A1AEUF5A",95,0)
 D CHKEQ^%ut(1,X,"Testing LOADXTMP^A1AEF2 - Load Build Components into ^XTMP FAILED!")
"RTN","A1AEUF5A",96,0)
 Q
"RTN","A1AEUF5A",97,0)
 ;
"RTN","A1AEUF5A",98,0)
ENLD() N BLD,CNT,FNDONE,NODE,SNODE,X S BLD=0
"RTN","A1AEUF5A",99,0)
 F  S BLD=$O(^XPD(9.6,BLD)) Q:'BLD  Q:$G(FNDONE)  D
"RTN","A1AEUF5A",100,0)
 .  S NODE=$NA(^XPD(9.6,BLD,"KRN")),CNT=0
"RTN","A1AEUF5A",101,0)
 .  S SNODE=$P(NODE,")")
"RTN","A1AEUF5A",102,0)
 .  F  S NODE=$Q(@NODE) Q:NODE'[SNODE  D
"RTN","A1AEUF5A",103,0)
 ..  S CNT=CNT+1 I CNT>150 S FNDONE=BLD
"RTN","A1AEUF5A",104,0)
 ;W !,FNDONE
"RTN","A1AEUF5A",105,0)
 N BLDARR M BLDARR("KRN")=^XPD(9.6,FNDONE,"KRN")
"RTN","A1AEUF5A",106,0)
 M BLDARR(4)=^XPD(9.6,FNDONE,4)
"RTN","A1AEUF5A",107,0)
 ;
"RTN","A1AEUF5A",108,0)
 K ^XTMP($J)
"RTN","A1AEUF5A",109,0)
 D LOADXTMP^A1AEF2("LOADXTMP",FNDONE,12345)
"RTN","A1AEUF5A",110,0)
 ;
"RTN","A1AEUF5A",111,0)
 N X S X=0
"RTN","A1AEUF5A",112,0)
 S NODE=$NA(BLDARR)
"RTN","A1AEUF5A",113,0)
 F  S NODE=$Q(@NODE) Q:NODE'["BLDARR"  D
"RTN","A1AEUF5A",114,0)
 .  I $QS(NODE,1)=4,$QS(NODE,2)="B" D
"RTN","A1AEUF5A",115,0)
 ..  S X=$D(^XTMP($J,4,$QS(NODE,3))) Q:'X
"RTN","A1AEUF5A",116,0)
 .  I $QS(NODE,1)="KRN",$QS(NODE,3)="NM",$QS(NODE,4)="B" D
"RTN","A1AEUF5A",117,0)
 ..  S X=$D(^XTMP($J,$QS(NODE,2),$QS(NODE,5))) Q:'X
"RTN","A1AEUF5A",118,0)
 ;W !,"X=",X,!!!
"RTN","A1AEUF5A",119,0)
 Q:'X X
"RTN","A1AEUF5A",120,0)
 ;
"RTN","A1AEUF5A",121,0)
 S X=0
"RTN","A1AEUF5A",122,0)
 S NODE=$NA(^XTMP($J)),SNODE=$P(NODE,")")
"RTN","A1AEUF5A",123,0)
 F  S NODE=$Q(@NODE) Q:NODE'[SNODE  D
"RTN","A1AEUF5A",124,0)
 . I $QS(NODE,2)=4 D
"RTN","A1AEUF5A",125,0)
 ..; W !,NODE
"RTN","A1AEUF5A",126,0)
 .. S X=$D(BLDARR(4,$QS(NODE,3))) Q:'X
"RTN","A1AEUF5A",127,0)
 . E  D  Q:'X
"RTN","A1AEUF5A",128,0)
 ..; W !,NODE
"RTN","A1AEUF5A",129,0)
 .. S X=$D(BLDARR("KRN",$QS(NODE,2),"NM","B",$QS(NODE,3)))
"RTN","A1AEUF5A",130,0)
 ;W !,"X=",X
"RTN","A1AEUF5A",131,0)
 Q:'X X  Q 1
"RTN","A1AEUF5A",132,0)
 ;
"RTN","A1AEUF5A",133,0)
 ;
"RTN","A1AEUF5A",134,0)
 ; Look for build with a date install completed
"RTN","A1AEUF5A",135,0)
 ;  Pull date and calculate inverse manuall
"RTN","A1AEUF5A",136,0)
 ;  See if matches answer with function
"RTN","A1AEUF5A",137,0)
UTP37 N PD,PDIEN,DTIC,DTICIV S PD="DG"
"RTN","A1AEUF5A",138,0)
 F  S PD=$O(^XPD(9.7,"B",PD)) Q:PD=""  D  Q:DTIC
"RTN","A1AEUF5A",139,0)
 .  S PDIEN=$O(^XPD(9.7,"B",PD,0)) Q:'PDIEN
"RTN","A1AEUF5A",140,0)
 .  S DTIC=$$GET1^DIQ(9.7,PDIEN_",",17,"I")
"RTN","A1AEUF5A",141,0)
 S DTICIV=9999999.999999-DTIC
"RTN","A1AEUF5A",142,0)
 S X=(DTICIV=$$DTINS^A1AEF2(PD))
"RTN","A1AEUF5A",143,0)
 D CHKEQ^%ut(1,X,"Testing $$DTINS^A1AEF2 - get INVERSE Install DT  FAILED!")
"RTN","A1AEUF5A",144,0)
 Q
"RTN","A1AEUF5A",145,0)
 ;
"RTN","A1AEUF5A",146,0)
 ;
"RTN","A1AEUF5A",147,0)
 ; Look through routine file and find routine with a second
"RTN","A1AEUF5A",148,0)
 ;   line which reflects active package and sufficient
"RTN","A1AEUF5A",149,0)
 ;   patches for testing. If necessary patches will be
"RTN","A1AEUF5A",150,0)
 ;   temporarily added to 11005.
"RTN","A1AEUF5A",151,0)
 ;ENTER
"RTN","A1AEUF5A",152,0)
 ;   RTN  = var for ROUTINE NAME passed by referece
"RTN","A1AEUF5A",153,0)
 ;   POO  = array passed by reference for PATCHES needed
"RTN","A1AEUF5A",154,0)
 ;          to build second line of selected rotine
"RTN","A1AEUF5A",155,0)
 ;RETURN
"RTN","A1AEUF5A",156,0)
 ;   0 = error, 1 = successful
"RTN","A1AEUF5A",157,0)
 ;         also
"RTN","A1AEUF5A",158,0)
 ;   RTN  = ROUTINE NAME [eg. DG10]
"RTN","A1AEUF5A",159,0)
 ;   POO  = array of PATCHES NEEDED
"RTN","A1AEUF5A",160,0)
 ;        example
"RTN","A1AEUF5A",161,0)
 ;         POO("DG*5.3*232")=""
"RTN","A1AEUF5A",162,0)
 ;         POO("DG*5.3*417")=""
"RTN","A1AEUF5A",163,0)
 ;         POO("DG*5.3*451")=""
"RTN","A1AEUF5A",164,0)
 ;         POO("DG*5.3*454")=""
"RTN","A1AEUF5A",165,0)
 ;         POO("DG*5.3*491")=""
"RTN","A1AEUF5A",166,0)
 ;         POO("DG*5.3*513")=""
"RTN","A1AEUF5A",167,0)
 ;         POO("DG*5.3*564")=""
"RTN","A1AEUF5A",168,0)
 ;         POO("DG*5.3*672")=""
"RTN","A1AEUF5A",169,0)
 ;         POO("DG*5.3*688")=""
"RTN","A1AEUF5A",170,0)
 ;         POO("DG*5.3*717")=""
"RTN","A1AEUF5A",171,0)
 ;         POO("DG*5.3*754")=129209   <<< patch ien into 11005
"RTN","A1AEUF5A",172,0)
 ;         POO("DG*5.3*803")=""
"RTN","A1AEUF5A",173,0)
BLDPARR(POO,RTN) K POO,RTN S RTN=""
"RTN","A1AEUF5A",174,0)
 N IEN,LNG,NODE,X S NODE=$NA(^DIC(9.8,"B")),(LNG,X)=0
"RTN","A1AEUF5A",175,0)
 F  S NODE=$Q(@NODE) Q:NODE'["^DIC(9.8,""B"""  D  Q:LNG>90
"RTN","A1AEUF5A",176,0)
 . S IEN=$QS(NODE,4) I $O(^DIC(9.8,IEN,8,"A"),-1) D 
"RTN","A1AEUF5A",177,0)
 .. S RTN=$QS(NODE,3)
"RTN","A1AEUF5A",178,0)
 ..; W !,RTN
"RTN","A1AEUF5A",179,0)
 ..; Watch for routines like MPIFAPI in FOIA release
"RTN","A1AEUF5A",180,0)
 ..;  where the package name begins with a space
"RTN","A1AEUF5A",181,0)
 .. I $E($P($T(+2^@RTN),";",4))=" " Q
"RTN","A1AEUF5A",182,0)
 ..; Watch for package name on 2nd line that doesn't 
"RTN","A1AEUF5A",183,0)
 ..;  match that in package file
"RTN","A1AEUF5A",184,0)
 .. N LN2 S LN2=$T(+2^@RTN)
"RTN","A1AEUF5A",185,0)
 .. N A1AEVR S A1AEVR=$P(LN2,";",3)
"RTN","A1AEUF5A",186,0)
 .. N A1AESNM S A1AESNM=$$UP^A1AEF1($P(LN2,";",4))
"RTN","A1AEUF5A",187,0)
 .. Q:A1AESNM=""
"RTN","A1AEUF5A",188,0)
 .. N A1AESIEN S A1AESIEN=$O(^DIC(9.4,"B",A1AESNM,0))
"RTN","A1AEUF5A",189,0)
 .. Q:A1AESIEN=""
"RTN","A1AEUF5A",190,0)
 .. N A1AESABB S A1AESABB=$$GET1^DIQ(9.4,A1AESIEN_",",1)
"RTN","A1AEUF5A",191,0)
 .. Q:A1AESABB=""
"RTN","A1AEUF5A",192,0)
 ..;
"RTN","A1AEUF5A",193,0)
 .. S LNG=$L($T(+2^@RTN)) Q:LNG<91
"RTN","A1AEUF5A",194,0)
 ..; Build POO array of patch names from 2nd line of routine
"RTN","A1AEUF5A",195,0)
 .. D PTC4RTN^A1AEF1(RTN,.POO) I '$D(POO) S X=0 Q
"RTN","A1AEUF5A",196,0)
 ..; Confirm array has usable patch names
"RTN","A1AEUF5A",197,0)
 .. S X=$$CONFRM(.POO)
"RTN","A1AEUF5A",198,0)
 ..; If array not good, force looking for another
"RTN","A1AEUF5A",199,0)
 .. I 'X S LNG="" Q
"RTN","A1AEUF5A",200,0)
 ..; Make sure there are entries in 11005 for these patches
"RTN","A1AEUF5A",201,0)
 .. S POO="" F  S POO=$O(POO(POO)) Q:POO=""  D
"RTN","A1AEUF5A",202,0)
 ... S POO(POO)=$$MKPATCH(POO,RTN)
"RTN","A1AEUF5A",203,0)
 Q:$G(LNG) 1  Q 0
"RTN","A1AEUF5A",204,0)
 ;
"RTN","A1AEUF5A",205,0)
 ;
"RTN","A1AEUF5A",206,0)
 ; Confirm array has usable patch names (e.g. 3 * pieces)
"RTN","A1AEUF5A",207,0)
 ; ENTER
"RTN","A1AEUF5A",208,0)
 ;   POO   =  array of patch names
"RTN","A1AEUF5A",209,0)
 ; RETURN
"RTN","A1AEUF5A",210,0)
 ;   0 = not have usable names, 1 = names ok
"RTN","A1AEUF5A",211,0)
CONFRM(POO) N PNM,X,Y S PNM="",Y=0,X=1
"RTN","A1AEUF5A",212,0)
 F  S PNM=$O(POO(PNM)) Q:PNM=""  D  Q:'X
"RTN","A1AEUF5A",213,0)
 .  I $L(PNM,"*")'=3 S X=0 Q
"RTN","A1AEUF5A",214,0)
 Q X
"RTN","A1AEUF5A",215,0)
 ;
"RTN","A1AEUF5A",216,0)
 ;
"RTN","A1AEUF5A",217,0)
 ; ENTER
"RTN","A1AEUF5A",218,0)
 ;    PD   =  PATCH DESIGNATION
"RTN","A1AEUF5A",219,0)
 ;    RTN  =  ROUTINE NAME to add to 11005 PD entry
"RTN","A1AEUF5A",220,0)
 ; RETURNS
"RTN","A1AEUF5A",221,0)
 ;    0 = error,  IEN of patch if successful
"RTN","A1AEUF5A",222,0)
MKPATCH(PD,RTN) Q:PD="" 0
"RTN","A1AEUF5A",223,0)
 N X,Y,DA,DIC,DIEN
"RTN","A1AEUF5A",224,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUF5A",225,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"C",$P(PD,"*"),0)) Q:PKGIEN="" 0
"RTN","A1AEUF5A",226,0)
 N PKGAV S PKGAV=$$GET1^DIQ(9.4,PKGIEN_",",13) Q:'PKGAV 0
"RTN","A1AEUF5A",227,0)
 N PTCHNB S PTCHNB=+$P(PD,"*",3) Q:'PTCHNB 0
"RTN","A1AEUF5A",228,0)
 N PTSTRM S PTSTRM=$S(PTCHNB>10001:10001,1:1)
"RTN","A1AEUF5A",229,0)
 N FDAIEN
"RTN","A1AEUF5A",230,0)
 ; If already entry in 11005, move on to adding RTN
"RTN","A1AEUF5A",231,0)
 I +$O(^A1AE(A1AEFILE,"B",PD,0)) D
"RTN","A1AEUF5A",232,0)
 . S FDAIEN(1)=+$O(^A1AE(A1AEFILE,"B",PD,0))
"RTN","A1AEUF5A",233,0)
 E  D
"RTN","A1AEUF5A",234,0)
 . N DIERR
"RTN","A1AEUF5A",235,0)
 . S FDA(3,A1AEFILE,"?+1,",.01)=PD
"RTN","A1AEUF5A",236,0)
 . S FDA(3,A1AEFILE,"?+1,",.2)=PTSTRM
"RTN","A1AEUF5A",237,0)
 . S FDA(3,A1AEFILE,"?+1,",2)=PKGIEN
"RTN","A1AEUF5A",238,0)
 . S FDA(3,A1AEFILE,"?+1,",3)=PKGAV
"RTN","A1AEUF5A",239,0)
 . S FDA(3,A1AEFILE,"?+1,",4)=PTCHNB
"RTN","A1AEUF5A",240,0)
 . S FDA(3,A1AEFILE,"?+1,",5)="A1AE TEST ZZZFOR UNIT TESTS"
"RTN","A1AEUF5A",241,0)
 . D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF5A",242,0)
 ;W "NEW ENTRY=",+$G(FDAIEN(1))
"RTN","A1AEUF5A",243,0)
 Q:$D(DIERR) 0
"RTN","A1AEUF5A",244,0)
 K DIERR,FDA
"RTN","A1AEUF5A",245,0)
 N FDARIEN S FDARIEN=+$G(FDAIEN(1)) Q:'FDARIEN 0
"RTN","A1AEUF5A",246,0)
 K FDAIEN
"RTN","A1AEUF5A",247,0)
 S FDA(3,+(A1AEFILE_".03"),"?+1,"_FDARIEN_",",.01)=RTN
"RTN","A1AEUF5A",248,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUF5A",249,0)
 Q:$D(DIERR) 0
"RTN","A1AEUF5A",250,0)
 Q FDARIEN
"RTN","A1AEUF5A",251,0)
 ;
"RTN","A1AEUF5A",252,0)
 ; ENTER
"RTN","A1AEUF5A",253,0)
 ;   nothing required
"RTN","A1AEUF5A",254,0)
 ; RETURN
"RTN","A1AEUF5A",255,0)
 ;   0 = error, 1 = deletions complete
"RTN","A1AEUF5A",256,0)
DELPAT() N DA,DIK,PAT,NOERR,X,Y S PAT=0,NOERR=1
"RTN","A1AEUF5A",257,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUF5A",258,0)
 F  S PAT=$O(^A1AE(A1AEFILE,PAT)) Q:'PAT  D  Q:'NOERR
"RTN","A1AEUF5A",259,0)
 . I $P(^A1AE(A1AEFILE,PAT,0),"^",5)["A1AE TEST ZZZFOR UNIT TESTS" D
"RTN","A1AEUF5A",260,0)
 .. S DIK="^A1AE(A1AEFILE," S DA=+PAT D ^DIK S:$D(DIERR) NOERR=0
"RTN","A1AEUF5A",261,0)
 I NOERR S PAT=0 D
"RTN","A1AEUF5A",262,0)
 . F  S PAT=$O(^A1AE(A1AEFILE,PAT)) Q:'PAT  D  Q:'NOERR
"RTN","A1AEUF5A",263,0)
 .. I $P(^A1AE(A1AEFILE,PAT,0),"^",5)["A1AE TEST ZZZFOR UNIT TESTS" D
"RTN","A1AEUF5A",264,0)
 ... S NOERR=0
"RTN","A1AEUF5A",265,0)
 Q NOERR
"RTN","A1AEUF5A",266,0)
 ;
"RTN","A1AEUF5A",267,0)
 ;
"RTN","A1AEUF5A",268,0)
UP(STR) Q $TR(STR,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","A1AEUF5A",269,0)
 ;
"RTN","A1AEUF5A",270,0)
 ;
"RTN","A1AEUF5A",271,0)
XTENT ;
"RTN","A1AEUF5A",272,0)
 ;;UTP35;Testing $$PTC4RTN^A1AEF1 - patches to build RTN 2nd line
"RTN","A1AEUF5A",273,0)
 ;;UTP36;Testing LOADXTMP^A1AEF2 - Load Build Components
"RTN","A1AEUF5A",274,0)
 ;;UTP37;Testing $$DTINS^A1AEF2 - get INVERSE Install DT
"RTN","A1AEUF5A",275,0)
 Q
"RTN","A1AEUF5A",276,0)
 ;
"RTN","A1AEUF5A",277,0)
EOR ; end of routine A1AEUF5A
"RTN","A1AEUF5B")
0^80^B186523669
"RTN","A1AEUF5B",1,0)
A1AEUF5B ;ven/lgc,jli-unit tests for A1AEF5 ;2015-06-13  10:09 PM
"RTN","A1AEUF5B",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUF5B",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUF5B",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUF5B",5,0)
 ;
"RTN","A1AEUF5B",6,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUF5B",7,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUF5B",8,0)
 Q
"RTN","A1AEUF5B",9,0)
 ;
"RTN","A1AEUF5B",10,0)
STARTUP ;
"RTN","A1AEUF5B",11,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUF5B",12,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUF5B",13,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5B",14,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUF5B",15,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5B",16,0)
 ;
"RTN","A1AEUF5B",17,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUF5B",18,0)
 L +^A1AE(A1AEFILE):1 I '$T D  Q
"RTN","A1AEUF5B",19,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5B",20,0)
 . W !,"Unable to obtain lock on "_A1AENAME_" [#"_A1AEFILE_"] file"
"RTN","A1AEUF5B",21,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5B",22,0)
 Q
"RTN","A1AEUF5B",23,0)
 ;
"RTN","A1AEUF5B",24,0)
SHUTDOWN L -^XPD(9.6):1
"RTN","A1AEUF5B",25,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF5B",26,0)
 L -^A1AE(A1AEFILE):1
"RTN","A1AEUF5B",27,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUF5B",28,0)
 K A1AEFAIL
"RTN","A1AEUF5B",29,0)
 Q
"RTN","A1AEUF5B",30,0)
 ;
"RTN","A1AEUF5B",31,0)
 ; Logic for test
"RTN","A1AEUF5B",32,0)
 ;   1. Find a build with mutiple REQB
"RTN","A1AEUF5B",33,0)
 ;   2. Run S RSLTMSG=$$FNDALL^A1AEF5(BUILD,1)
"RTN","A1AEUF5B",34,0)
 ;      a. Confirm suitability
"RTN","A1AEUF5B",35,0)
 ;
"RTN","A1AEUF5B",36,0)
 ; ENTER
"RTN","A1AEUF5B",37,0)
 ;   BUILD  = Parent BUILD under scrutiny
"RTN","A1AEUF5B",38,0)
 ;   MSG    = 1:build MSGTXT
"RTN","A1AEUF5B",39,0)
 ;            0:print statistics to terminal
"RTN","A1AEUF5B",40,0)
 ; RETURN
"RTN","A1AEUF5B",41,0)
 ;   Display statistics to terminal
"RTN","A1AEUF5B",42,0)
 ; --- FNDALL(BUILD,MSG)
"RTN","A1AEUF5B",43,0)
UTP38 I '$G(A1AEFAIL) D
"RTN","A1AEUF5B",44,0)
 . N BLDMSG S BLDMSG=$$FNDONE^A1AEUF5B
"RTN","A1AEUF5B",45,0)
 . N BUILD S BUILD=$P(BLDMSG,"^")
"RTN","A1AEUF5B",46,0)
 . K ^XTMP($J)
"RTN","A1AEUF5B",47,0)
 . N REQB,MULB S (REQB,MULB)=""
"RTN","A1AEUF5B",48,0)
 . N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEUF5B",49,0)
 . S ^XTMP($J,BUILD,BUILD)=BIEN
"RTN","A1AEUF5B",50,0)
 .;
"RTN","A1AEUF5B",51,0)
 . N CNT S CNT=0
"RTN","A1AEUF5B",52,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5B",53,0)
 . F  S REQB=$O(^XPD(9.6,BIEN,"REQB","B",REQB)) Q:REQB=""  D
"RTN","A1AEUF5B",54,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5B",55,0)
 . F  S MULB=$O(^XPD(9.6,BIEN,10,"B",MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",56,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5B",57,0)
 .;
"RTN","A1AEUF5B",58,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5B",59,0)
 . D REQB^A1AEF1(BUILD,.REQB)
"RTN","A1AEUF5B",60,0)
 . D MULB^A1AEF1(BUILD,.MULB)
"RTN","A1AEUF5B",61,0)
 . S REQB=" " F  S REQB=$O(REQB(REQB)) Q:REQB=""  D
"RTN","A1AEUF5B",62,0)
 .. S ^XTMP($J,BUILD,REQB)=REQB(REQB)
"RTN","A1AEUF5B",63,0)
 . S MULB=" " F  S MULB=$O(MULB(MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",64,0)
 .. S ^XTMP($J,BUILD,MULB)=MULB(MULB)
"RTN","A1AEUF5B",65,0)
 .;FND1
"RTN","A1AEUF5B",66,0)
 . N MULBTMP,BLD
"RTN","A1AEUF5B",67,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5B",68,0)
 .. D MULB^A1AEF1(BLD,.MULB)
"RTN","A1AEUF5B",69,0)
 .. M MULBTMP=MULB
"RTN","A1AEUF5B",70,0)
 .; Pull these into ^XTMP array
"RTN","A1AEUF5B",71,0)
 . S MULB=" " F  S MULB=$O(MULBTMP(MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",72,0)
 .. S ^XTMP($J,BUILD,MULB)=MULBTMP(MULB)
"RTN","A1AEUF5B",73,0)
 .;FND2
"RTN","A1AEUF5B",74,0)
 . N RTNARR,RTNNM
"RTN","A1AEUF5B",75,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5B",76,0)
 .. D RTNSINB(BLD,.RTNARR)
"RTN","A1AEUF5B",77,0)
 .. N PTCH,PTCHIEN,PTCHARR
"RTN","A1AEUF5B",78,0)
 .. S RTNNM="" F  S RTNNM=$O(RTNARR(RTNNM)) Q:RTNNM=""  D
"RTN","A1AEUF5B",79,0)
 ... D PTC4RTN^A1AEF1(RTNNM,.PTCHARR)
"RTN","A1AEUF5B",80,0)
 ... Q:'$D(PTCHARR)
"RTN","A1AEUF5B",81,0)
 ... S PTCH=" " F  S PTCH=$O(PTCHARR(PTCH)) Q:PTCH=""  D
"RTN","A1AEUF5B",82,0)
 ....; Fix patches integer and no .0
"RTN","A1AEUF5B",83,0)
 .... I $P(PTCH,"*",2)=$P($P(PTCH,"*",2),".") D
"RTN","A1AEUF5B",84,0)
 ..... S $P(PTCH,"*",2)=$P(PTCH,"*",2)_".0"
"RTN","A1AEUF5B",85,0)
 .... S PTCHIEN=+$O(^XPD(9.6,"B",PTCH,0))
"RTN","A1AEUF5B",86,0)
 .... S ^XTMP($J,BUILD,PTCH)=PTCHIEN
"RTN","A1AEUF5B",87,0)
 .... S ^XTMP($J,BUILD,PTCH,RTNNM,"R")=""
"RTN","A1AEUF5B",88,0)
 .;FND3
"RTN","A1AEUF5B",89,0)
 . N BLDIEN,DTINS S BLD=" "
"RTN","A1AEUF5B",90,0)
 . F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5B",91,0)
 .. S BLDIEN=+$G(^XTMP($J,BUILD,BLD))
"RTN","A1AEUF5B",92,0)
 .. I BLDIEN D
"RTN","A1AEUF5B",93,0)
 ... S DTINS=$$DTINS^A1AEF2(BLD)
"RTN","A1AEUF5B",94,0)
 ... D:DTINS LOADXTMP^A1AEF2(BUILD,BLDIEN,DTINS)
"RTN","A1AEUF5B",95,0)
 .;FND4
"RTN","A1AEUF5B",96,0)
 . N NODE,NMCMP,NMRICMP S NODE=$NA(^XPD(9.6))
"RTN","A1AEUF5B",97,0)
 . F  S NODE=$Q(@NODE) Q:NODE'["^XPD(9.6"  D
"RTN","A1AEUF5B",98,0)
 .. S BIEN=+$QS(NODE,2)
"RTN","A1AEUF5B",99,0)
 .. I $QS(NODE,3)=4,$QS(NODE,2),$QS(NODE,4),$QS(NODE,5)=0 D
"RTN","A1AEUF5B",100,0)
 ... N FNMBR S FNMBR=$QS(NODE,4)
"RTN","A1AEUF5B",101,0)
 ... I $D(^XTMP($J,4,FNMBR)) D  Q
"RTN","A1AEUF5B",102,0)
 .... S ^XTMP($J,BUILD,$P(^XPD(9.6,BIEN,0),"^"),"F")=+$QS(NODE,2)_"^"_FNMBR
"RTN","A1AEUF5B",103,0)
 ..;
"RTN","A1AEUF5B",104,0)
 .. I $QS(NODE,3)["KRN",$QS(NODE,4)["B" D
"RTN","A1AEUF5B",105,0)
 ... S NMRICMP=$QS(NODE,5)
"RTN","A1AEUF5B",106,0)
 ... S NMCMP=$QS(NODE,6)
"RTN","A1AEUF5B",107,0)
 ... I $D(^XTMP($J,NMRICMP,NMCMP)) D
"RTN","A1AEUF5B",108,0)
 .... S ^XTMP($J,BUILD,$P(^XPD(9.6,BIEN,0),"^"),"C")=BIEN_"^"_NMRICMP_"^"_NMCMP
"RTN","A1AEUF5B",109,0)
 .;Compare Globals
"RTN","A1AEUF5B",110,0)
 . K ^TMP($J)
"RTN","A1AEUF5B",111,0)
 . M ^TMP($J)=^XTMP($J)
"RTN","A1AEUF5B",112,0)
 . S X=$$FNDALL^A1AEF5(BUILD,1)
"RTN","A1AEUF5B",113,0)
 .; Now compare the two globals
"RTN","A1AEUF5B",114,0)
 . S X=1
"RTN","A1AEUF5B",115,0)
 . N NX,SNX S NX=$NA(^XTMP($J)),SNX=$P(NX,")")
"RTN","A1AEUF5B",116,0)
 . N NXT,SNXT S NXT=$NA(^TMP($J)),SNXT=$P(NXT,")")
"RTN","A1AEUF5B",117,0)
 . F  S NX=$Q(@NX) Q:NX'[SNX  S NXT=$Q(@NXT) Q:NXT'[SNXT  D  Q:'X
"RTN","A1AEUF5B",118,0)
 .. I ($P(NX,",",2,$L(NX,",")))'=($P(NXT,",",2,$L(NXT))) D  Q:'X
"RTN","A1AEUF5B",119,0)
 ... S X=0
"RTN","A1AEUF5B",120,0)
 .. I @NX'=@NXT S X=0
"RTN","A1AEUF5B",121,0)
 . K ^XTMP($J),^TMP($J)
"RTN","A1AEUF5B",122,0)
 . D CHKEQ^%ut(1,X,"Testing FNDALL^A1AEF5 pulling all associated builds  FAILED!")
"RTN","A1AEUF5B",123,0)
 Q
"RTN","A1AEUF5B",124,0)
 ;
"RTN","A1AEUF5B",125,0)
 ;
"RTN","A1AEUF5B",126,0)
 ; ENTER
"RTN","A1AEUF5B",127,0)
 ;    BUILD = name of PARENT build under inspection
"RTN","A1AEUF5B",128,0)
 ;    MSG   = 1:build MSGTXT
"RTN","A1AEUF5B",129,0)
 ;            0:print statistics to terminal
"RTN","A1AEUF5B",130,0)
 ;    ^XTMP($J,BUILD under construction
"RTN","A1AEUF5B",131,0)
 ; RETURN
"RTN","A1AEUF5B",132,0)
 ;    ^XTMP($J,BUILD updated
"RTN","A1AEUF5B",133,0)
 ; --- FND1(BUILD,MSG,MSGTXT)
"RTN","A1AEUF5B",134,0)
UTP39  I '$G(A1AEFAIL) D
"RTN","A1AEUF5B",135,0)
 . N TSTBLD S TSTBLD=$$FNDONE
"RTN","A1AEUF5B",136,0)
 . N BUILD S BUILD=$P(TSTBLD,"^")
"RTN","A1AEUF5B",137,0)
 . I (BUILD="")!('$O(^XPD(9.6,"B",BUILD,0))) D  Q
"RTN","A1AEUF5B",138,0)
 .. D FAIL^%ut("Unable to find suitable test BUILD")
"RTN","A1AEUF5B",139,0)
 .;
"RTN","A1AEUF5B",140,0)
 . K ^XTMP($J)
"RTN","A1AEUF5B",141,0)
 . N MSG S MSG=1
"RTN","A1AEUF5B",142,0)
 . N MSGTXT,REQB,MULB S (MSGTXT,REQB,MULB)=""
"RTN","A1AEUF5B",143,0)
 . N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEUF5B",144,0)
 . S ^XTMP($J,BUILD,BUILD)=BIEN
"RTN","A1AEUF5B",145,0)
 . N CNT S CNT=0
"RTN","A1AEUF5B",146,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5B",147,0)
 . F  S REQB=$O(^XPD(9.6,BIEN,"REQB","B",REQB)) Q:REQB=""  D
"RTN","A1AEUF5B",148,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5B",149,0)
 . S MSGTXT="REQB^"_CNT_"^",CNT=0
"RTN","A1AEUF5B",150,0)
 . F  S MULB=$O(^XPD(9.6,BIEN,10,"B",MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",151,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5B",152,0)
 . S MSGTXT=MSGTXT_"MULB^"_CNT_"^"
"RTN","A1AEUF5B",153,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5B",154,0)
 .; Get recursive built array of all REQB and MULB
"RTN","A1AEUF5B",155,0)
 .;  for the parent build
"RTN","A1AEUF5B",156,0)
 . D REQB^A1AEF1(BUILD,.REQB)
"RTN","A1AEUF5B",157,0)
 . D MULB^A1AEF1(BUILD,.MULB)
"RTN","A1AEUF5B",158,0)
 . S REQB=" " F  S REQB=$O(REQB(REQB)) Q:REQB=""  D
"RTN","A1AEUF5B",159,0)
 ..  S ^XTMP($J,BUILD,REQB)=REQB(REQB)
"RTN","A1AEUF5B",160,0)
 . S MULB=" " F  S MULB=$O(MULB(MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",161,0)
 ..  S ^XTMP($J,BUILD,MULB)=MULB(MULB)
"RTN","A1AEUF5B",162,0)
 . D FND1^A1AEF5(BUILD,MSG,.MSGTXT)
"RTN","A1AEUF5B",163,0)
 .; Now check that any new findings were set in ^XMTP($J) by
"RTN","A1AEUF5B",164,0)
 .;  the FND1 call
"RTN","A1AEUF5B",165,0)
 . N MULBTMP,BLD
"RTN","A1AEUF5B",166,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5B",167,0)
 .. D MULB^A1AEF1(BLD,.MULB)
"RTN","A1AEUF5B",168,0)
 . M MULBTMP=MULB
"RTN","A1AEUF5B",169,0)
 .;
"RTN","A1AEUF5B",170,0)
 . N X S X=0
"RTN","A1AEUF5B",171,0)
 . S MULB=" " F  S MULB=$O(MULBTMP(MULB)) Q:MULB=""  D  Q:'X
"RTN","A1AEUF5B",172,0)
 .. I $D(^XTMP($J,BUILD,MULB)),^XTMP($J,BUILD,MULB)=MULBTMP(MULB) S X=1
"RTN","A1AEUF5B",173,0)
 . D CHKEQ^%ut(1,X,"Testing FND1^A1AEF5 adding MULB of REQB ^XTMP($J) FAILED!")
"RTN","A1AEUF5B",174,0)
 Q
"RTN","A1AEUF5B",175,0)
 ;
"RTN","A1AEUF5B",176,0)
 ;
"RTN","A1AEUF5B",177,0)
 ;
"RTN","A1AEUF5B",178,0)
 ; ENTER
"RTN","A1AEUF5B",179,0)
 ;    BUILD = name of PARENT build under inspection
"RTN","A1AEUF5B",180,0)
 ;    MSG   = 1:build MSGTXT
"RTN","A1AEUF5B",181,0)
 ;            0:print statistics to terminal
"RTN","A1AEUF5B",182,0)
 ;    ^XTMP($J,BUILD array under construction
"RTN","A1AEUF5B",183,0)
 ; RETURN
"RTN","A1AEUF5B",184,0)
 ;    ^XTMP($J,BUILD updated
"RTN","A1AEUF5B",185,0)
 ; --- FND2(BUILD,MSG,MSGTXT)
"RTN","A1AEUF5B",186,0)
UTP40 I '$G(A1AEFAIL) D
"RTN","A1AEUF5B",187,0)
 . N BLDMSG S BLDMSG=$$FNDONE^A1AEUF5B
"RTN","A1AEUF5B",188,0)
 . N BUILD S BUILD=$P(BLDMSG,"^")
"RTN","A1AEUF5B",189,0)
 . K ^XTMP($J)
"RTN","A1AEUF5B",190,0)
 . N REQB,MULB S (REQB,MULB)=""
"RTN","A1AEUF5B",191,0)
 . N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEUF5B",192,0)
 . S ^XTMP($J,BUILD,BUILD)=BIEN
"RTN","A1AEUF5B",193,0)
 .;
"RTN","A1AEUF5B",194,0)
 . N CNT S CNT=0
"RTN","A1AEUF5B",195,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5B",196,0)
 . F  S REQB=$O(^XPD(9.6,BIEN,"REQB","B",REQB)) Q:REQB=""  D
"RTN","A1AEUF5B",197,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5B",198,0)
 . F  S MULB=$O(^XPD(9.6,BIEN,10,"B",MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",199,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5B",200,0)
 .;
"RTN","A1AEUF5B",201,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5B",202,0)
 . D REQB^A1AEF1(BUILD,.REQB)
"RTN","A1AEUF5B",203,0)
 . D MULB^A1AEF1(BUILD,.MULB)
"RTN","A1AEUF5B",204,0)
 . S REQB=" " F  S REQB=$O(REQB(REQB)) Q:REQB=""  D
"RTN","A1AEUF5B",205,0)
 ..  S ^XTMP($J,BUILD,REQB)=REQB(REQB)
"RTN","A1AEUF5B",206,0)
 . S MULB=" " F  S MULB=$O(MULB(MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",207,0)
 ..  S ^XTMP($J,BUILD,MULB)=MULB(MULB)
"RTN","A1AEUF5B",208,0)
 .;FND1
"RTN","A1AEUF5B",209,0)
 . N MULBTMP,BLD
"RTN","A1AEUF5B",210,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5B",211,0)
 .. D MULB^A1AEF1(BLD,.MULB)
"RTN","A1AEUF5B",212,0)
 .. M MULBTMP=MULB
"RTN","A1AEUF5B",213,0)
 .; Pull these into ^XTMP array
"RTN","A1AEUF5B",214,0)
 . S MULB=" " F  S MULB=$O(MULBTMP(MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",215,0)
 ..  S ^XTMP($J,BUILD,MULB)=MULBTMP(MULB)
"RTN","A1AEUF5B",216,0)
 .;FND2
"RTN","A1AEUF5B",217,0)
 . N RTNARR,RTNNM
"RTN","A1AEUF5B",218,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5B",219,0)
 .. D RTNSINB(BLD,.RTNARR)
"RTN","A1AEUF5B",220,0)
 .. N PTCH,PTCHIEN,PTCHARR
"RTN","A1AEUF5B",221,0)
 .. S RTNNM="" F  S RTNNM=$O(RTNARR(RTNNM)) Q:RTNNM=""  D
"RTN","A1AEUF5B",222,0)
 ... D PTC4RTN^A1AEF1(RTNNM,.PTCHARR)
"RTN","A1AEUF5B",223,0)
 ... Q:'$D(PTCHARR)
"RTN","A1AEUF5B",224,0)
 ... S PTCH=" " F  S PTCH=$O(PTCHARR(PTCH)) Q:PTCH=""  D
"RTN","A1AEUF5B",225,0)
 ....; Fix patches integer and no .0
"RTN","A1AEUF5B",226,0)
 .... I $P(PTCH,"*",2)=$P($P(PTCH,"*",2),".") D
"RTN","A1AEUF5B",227,0)
 ..... S $P(PTCH,"*",2)=$P(PTCH,"*",2)_".0"
"RTN","A1AEUF5B",228,0)
 .... S PTCHIEN=+$O(^XPD(9.6,"B",PTCH,0))
"RTN","A1AEUF5B",229,0)
 .... S ^XTMP($J,BUILD,PTCH)=PTCHIEN
"RTN","A1AEUF5B",230,0)
 .... S ^XTMP($J,BUILD,PTCH,RTNNM,"R")=""
"RTN","A1AEUF5B",231,0)
 .;
"RTN","A1AEUF5B",232,0)
 . K ^TMP($J) M ^TMP($J)=^XTMP($J)
"RTN","A1AEUF5B",233,0)
 .;
"RTN","A1AEUF5B",234,0)
 . K ^XTMP($J)
"RTN","A1AEUF5B",235,0)
 . N REQB,MULB S (REQB,MULB)=""
"RTN","A1AEUF5B",236,0)
 . N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEUF5B",237,0)
 . S ^XTMP($J,BUILD,BUILD)=BIEN
"RTN","A1AEUF5B",238,0)
 .;
"RTN","A1AEUF5B",239,0)
 . N CNT S CNT=0
"RTN","A1AEUF5B",240,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5B",241,0)
 . F  S REQB=$O(^XPD(9.6,BIEN,"REQB","B",REQB)) Q:REQB=""  D
"RTN","A1AEUF5B",242,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5B",243,0)
 . F  S MULB=$O(^XPD(9.6,BIEN,10,"B",MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",244,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5B",245,0)
 .;
"RTN","A1AEUF5B",246,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5B",247,0)
 . D REQB^A1AEF1(BUILD,.REQB)
"RTN","A1AEUF5B",248,0)
 . D MULB^A1AEF1(BUILD,.MULB)
"RTN","A1AEUF5B",249,0)
 . S REQB=" " F  S REQB=$O(REQB(REQB)) Q:REQB=""  D
"RTN","A1AEUF5B",250,0)
 ..  S ^XTMP($J,BUILD,REQB)=REQB(REQB)
"RTN","A1AEUF5B",251,0)
 . S MULB=" " F  S MULB=$O(MULB(MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",252,0)
 ..  S ^XTMP($J,BUILD,MULB)=MULB(MULB)
"RTN","A1AEUF5B",253,0)
 .;FND1
"RTN","A1AEUF5B",254,0)
 . N MULBTMP,BLD
"RTN","A1AEUF5B",255,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5B",256,0)
 .. D MULB^A1AEF1(BLD,.MULB)
"RTN","A1AEUF5B",257,0)
 .. M MULBTMP=MULB
"RTN","A1AEUF5B",258,0)
 .; Pull these into ^XTMP array
"RTN","A1AEUF5B",259,0)
 . S MULB=" " F  S MULB=$O(MULBTMP(MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",260,0)
 ..  S ^XTMP($J,BUILD,MULB)=MULBTMP(MULB)
"RTN","A1AEUF5B",261,0)
 .;FND2
"RTN","A1AEUF5B",262,0)
 . N MSG,MSGTXT S MSG=1,MSGTXT=""
"RTN","A1AEUF5B",263,0)
 . D FND2^A1AEF5(BUILD,.MSG,.MSGTXT)
"RTN","A1AEUF5B",264,0)
 .; Now compare the two globals
"RTN","A1AEUF5B",265,0)
 . S X=1
"RTN","A1AEUF5B",266,0)
 . N NX,SNX S NX=$NA(^XTMP($J)),SNX=$P(NX,")")
"RTN","A1AEUF5B",267,0)
 . N NXT,SNXT S NXT=$NA(^TMP($J)),SNXT=$P(NXT,")")
"RTN","A1AEUF5B",268,0)
 . F  S NX=$Q(@NX) Q:NX'[SNX  S NXT=$Q(@NXT) Q:NXT'[SNXT  D  Q:'X
"RTN","A1AEUF5B",269,0)
 .. I ($P(NX,",",2,$L(NX,",")))'=($P(NXT,",",2,$L(NXT))) D  Q:'X
"RTN","A1AEUF5B",270,0)
 ... S X=0
"RTN","A1AEUF5B",271,0)
 .. I @NX'=@NXT S X=0
"RTN","A1AEUF5B",272,0)
 . K ^XTMP($J),^TMP($J)
"RTN","A1AEUF5B",273,0)
 . D CHKEQ^%ut(1,X,"Testing FND2^A1AEF5 pulling routine patches FAILED!.")
"RTN","A1AEUF5B",274,0)
 Q
"RTN","A1AEUF5B",275,0)
 ;
"RTN","A1AEUF5B",276,0)
 ;
"RTN","A1AEUF5B",277,0)
 ; ENTER
"RTN","A1AEUF5B",278,0)
 ;    BUILD = name of PARENT build under inspection
"RTN","A1AEUF5B",279,0)
 ;    MSG   = 1:build MSGTXT
"RTN","A1AEUF5B",280,0)
 ;            0:print statistics to terminal
"RTN","A1AEUF5B",281,0)
 ;    ^XTMP($J,BUILD under construction
"RTN","A1AEUF5B",282,0)
 ; RETURN
"RTN","A1AEUF5B",283,0)
 ;    ^XTMP($J,BUILD updated
"RTN","A1AEUF5B",284,0)
 ; --- FND3(BUILD,MSG,MSGTXT)
"RTN","A1AEUF5B",285,0)
UTP41 I '$G(A1AEFAIL) D
"RTN","A1AEUF5B",286,0)
 . N BLDMSG S BLDMSG=$$FNDONE^A1AEUF5B
"RTN","A1AEUF5B",287,0)
 . N BUILD S BUILD=$P(BLDMSG,"^")
"RTN","A1AEUF5B",288,0)
 . K ^XTMP($J)
"RTN","A1AEUF5B",289,0)
 . N REQB,MULB S (REQB,MULB)=""
"RTN","A1AEUF5B",290,0)
 . N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEUF5B",291,0)
 . S ^XTMP($J,BUILD,BUILD)=BIEN
"RTN","A1AEUF5B",292,0)
 .;
"RTN","A1AEUF5B",293,0)
 . N CNT S CNT=0
"RTN","A1AEUF5B",294,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5B",295,0)
 . F  S REQB=$O(^XPD(9.6,BIEN,"REQB","B",REQB)) Q:REQB=""  D
"RTN","A1AEUF5B",296,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5B",297,0)
 . F  S MULB=$O(^XPD(9.6,BIEN,10,"B",MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",298,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5B",299,0)
 .;
"RTN","A1AEUF5B",300,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5B",301,0)
 . D REQB^A1AEF1(BUILD,.REQB)
"RTN","A1AEUF5B",302,0)
 . D MULB^A1AEF1(BUILD,.MULB)
"RTN","A1AEUF5B",303,0)
 . S REQB=" " F  S REQB=$O(REQB(REQB)) Q:REQB=""  D
"RTN","A1AEUF5B",304,0)
 ..  S ^XTMP($J,BUILD,REQB)=REQB(REQB)
"RTN","A1AEUF5B",305,0)
 . S MULB=" " F  S MULB=$O(MULB(MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",306,0)
 ..  S ^XTMP($J,BUILD,MULB)=MULB(MULB)
"RTN","A1AEUF5B",307,0)
 .;FND1
"RTN","A1AEUF5B",308,0)
 . N MULBTMP,BLD
"RTN","A1AEUF5B",309,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5B",310,0)
 .. D MULB^A1AEF1(BLD,.MULB)
"RTN","A1AEUF5B",311,0)
 .. M MULBTMP=MULB
"RTN","A1AEUF5B",312,0)
 .; Pull these into ^XTMP array
"RTN","A1AEUF5B",313,0)
 . S MULB=" " F  S MULB=$O(MULBTMP(MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",314,0)
 ..  S ^XTMP($J,BUILD,MULB)=MULBTMP(MULB)
"RTN","A1AEUF5B",315,0)
 .;FND2
"RTN","A1AEUF5B",316,0)
 . N RTNARR,RTNNM
"RTN","A1AEUF5B",317,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5B",318,0)
 .. D RTNSINB(BLD,.RTNARR)
"RTN","A1AEUF5B",319,0)
 .. N PTCH,PTCHIEN,PTCHARR
"RTN","A1AEUF5B",320,0)
 .. S RTNNM="" F  S RTNNM=$O(RTNARR(RTNNM)) Q:RTNNM=""  D
"RTN","A1AEUF5B",321,0)
 ... D PTC4RTN^A1AEF1(RTNNM,.PTCHARR)
"RTN","A1AEUF5B",322,0)
 ... Q:'$D(PTCHARR)
"RTN","A1AEUF5B",323,0)
 ... S PTCH=" " F  S PTCH=$O(PTCHARR(PTCH)) Q:PTCH=""  D
"RTN","A1AEUF5B",324,0)
 ....; Fix patches integer and no .0
"RTN","A1AEUF5B",325,0)
 .... I $P(PTCH,"*",2)=$P($P(PTCH,"*",2),".") D
"RTN","A1AEUF5B",326,0)
 ..... S $P(PTCH,"*",2)=$P(PTCH,"*",2)_".0"
"RTN","A1AEUF5B",327,0)
 .... S PTCHIEN=+$O(^XPD(9.6,"B",PTCH,0))
"RTN","A1AEUF5B",328,0)
 .... S ^XTMP($J,BUILD,PTCH)=PTCHIEN
"RTN","A1AEUF5B",329,0)
 .... S ^XTMP($J,BUILD,PTCH,RTNNM,"R")=""
"RTN","A1AEUF5B",330,0)
 .;FND3
"RTN","A1AEUF5B",331,0)
 . N BLDIEN,DTINS S BLD=" "
"RTN","A1AEUF5B",332,0)
 . F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5B",333,0)
 ..  S BLDIEN=+$G(^XTMP($J,BUILD,BLD))
"RTN","A1AEUF5B",334,0)
 ..  I BLDIEN D
"RTN","A1AEUF5B",335,0)
 ...  S DTINS=$$DTINS^A1AEF2(BLD)
"RTN","A1AEUF5B",336,0)
 ...  D:DTINS LOADXTMP^A1AEF2(BUILD,BLDIEN,DTINS)
"RTN","A1AEUF5B",337,0)
 .; Save manually built results
"RTN","A1AEUF5B",338,0)
 . K ^TMP($J) M ^TMP($J)=^XTMP($J)
"RTN","A1AEUF5B",339,0)
 .;
"RTN","A1AEUF5B",340,0)
 . K ^XTMP($J)
"RTN","A1AEUF5B",341,0)
 . N REQB,MULB S (REQB,MULB)=""
"RTN","A1AEUF5B",342,0)
 . N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEUF5B",343,0)
 . S ^XTMP($J,BUILD,BUILD)=BIEN
"RTN","A1AEUF5B",344,0)
 .;
"RTN","A1AEUF5B",345,0)
 . N CNT S CNT=0
"RTN","A1AEUF5B",346,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5B",347,0)
 . F  S REQB=$O(^XPD(9.6,BIEN,"REQB","B",REQB)) Q:REQB=""  D
"RTN","A1AEUF5B",348,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5B",349,0)
 .F  S MULB=$O(^XPD(9.6,BIEN,10,"B",MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",350,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5B",351,0)
 .;
"RTN","A1AEUF5B",352,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5B",353,0)
 . D REQB^A1AEF1(BUILD,.REQB)
"RTN","A1AEUF5B",354,0)
 . D MULB^A1AEF1(BUILD,.MULB)
"RTN","A1AEUF5B",355,0)
 . S REQB=" " F  S REQB=$O(REQB(REQB)) Q:REQB=""  D
"RTN","A1AEUF5B",356,0)
 ..  S ^XTMP($J,BUILD,REQB)=REQB(REQB)
"RTN","A1AEUF5B",357,0)
 . S MULB=" " F  S MULB=$O(MULB(MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",358,0)
 ..  S ^XTMP($J,BUILD,MULB)=MULB(MULB)
"RTN","A1AEUF5B",359,0)
 .;FND1
"RTN","A1AEUF5B",360,0)
 . N MULBTMP,BLD
"RTN","A1AEUF5B",361,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5B",362,0)
 .. D MULB^A1AEF1(BLD,.MULB)
"RTN","A1AEUF5B",363,0)
 .. M MULBTMP=MULB
"RTN","A1AEUF5B",364,0)
 .; Pull these into ^XTMP array
"RTN","A1AEUF5B",365,0)
 . S MULB=" " F  S MULB=$O(MULBTMP(MULB)) Q:MULB=""  D
"RTN","A1AEUF5B",366,0)
 ..  S ^XTMP($J,BUILD,MULB)=MULBTMP(MULB)
"RTN","A1AEUF5B",367,0)
 .;FND2
"RTN","A1AEUF5B",368,0)
 . N RTNARR,RTNNM
"RTN","A1AEUF5B",369,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5B",370,0)
 .. D RTNSINB(BLD,.RTNARR)
"RTN","A1AEUF5B",371,0)
 .. N PTCH,PTCHIEN,PTCHARR
"RTN","A1AEUF5B",372,0)
 .. S RTNNM="" F  S RTNNM=$O(RTNARR(RTNNM)) Q:RTNNM=""  D
"RTN","A1AEUF5B",373,0)
 ... D PTC4RTN^A1AEF1(RTNNM,.PTCHARR)
"RTN","A1AEUF5B",374,0)
 ... Q:'$D(PTCHARR)
"RTN","A1AEUF5B",375,0)
 ... S PTCH=" " F  S PTCH=$O(PTCHARR(PTCH)) Q:PTCH=""  D
"RTN","A1AEUF5B",376,0)
 ....; Fix patches integer and no .0
"RTN","A1AEUF5B",377,0)
 .... I $P(PTCH,"*",2)=$P($P(PTCH,"*",2),".") D
"RTN","A1AEUF5B",378,0)
 ..... S $P(PTCH,"*",2)=$P(PTCH,"*",2)_".0"
"RTN","A1AEUF5B",379,0)
 .... S PTCHIEN=+$O(^XPD(9.6,"B",PTCH,0))
"RTN","A1AEUF5B",380,0)
 .... S ^XTMP($J,BUILD,PTCH)=PTCHIEN
"RTN","A1AEUF5B",381,0)
 .... S ^XTMP($J,BUILD,PTCH,RTNNM,"R")=""
"RTN","A1AEUF5B",382,0)
 .;
"RTN","A1AEUF5B",383,0)
 . N MSG,MSGTXT S MSG=1,MSGTXT=""
"RTN","A1AEUF5B",384,0)
 . D FND3^A1AEF5(BUILD,.MSG,.MSGTXT)
"RTN","A1AEUF5B",385,0)
 .;
"RTN","A1AEUF5B",386,0)
 .; Now compare the two globals
"RTN","A1AEUF5B",387,0)
 . S X=1
"RTN","A1AEUF5B",388,0)
 . N NX,SNX S NX=$NA(^XTMP($J)),SNX=$P(NX,")")
"RTN","A1AEUF5B",389,0)
 . N NXT,SNXT S NXT=$NA(^TMP($J)),SNXT=$P(NXT,")")
"RTN","A1AEUF5B",390,0)
 . F  S NX=$Q(@NX) Q:NX'[SNX  S NXT=$Q(@NXT) Q:NXT'[SNXT  D  Q:'X
"RTN","A1AEUF5B",391,0)
 .. I ($P(NX,",",2,$L(NX,",")))'=($P(NXT,",",2,$L(NXT))) D  Q:'X
"RTN","A1AEUF5B",392,0)
 ... S X=0
"RTN","A1AEUF5B",393,0)
 .. I @NX'=@NXT S X=0
"RTN","A1AEUF5B",394,0)
 . K ^XTMP($J),^TMP($J)
"RTN","A1AEUF5B",395,0)
 . D CHKEQ^%ut(1,X,"Testing FND3^A1AEF5 add components to ^XTMP FAILED!")
"RTN","A1AEUF5B",396,0)
 Q
"RTN","A1AEUF5B",397,0)
 ;
"RTN","A1AEUF5B",398,0)
 ; Look through BUILD [#9.6] file and find one with a
"RTN","A1AEUF5B",399,0)
 ;   number of REQB entries.  Hopefully this will flesh
"RTN","A1AEUF5B",400,0)
 ;   out to one with enough components to allow for
"RTN","A1AEUF5B",401,0)
 ;   a good test of these APIs.
"RTN","A1AEUF5B",402,0)
 ; Enter
"RTN","A1AEUF5B",403,0)
 ;   nothing required
"RTN","A1AEUF5B",404,0)
 ; Return
"RTN","A1AEUF5B",405,0)
 ;   A string with BuildName^BuildIEN^NumberOfREQB
"RTN","A1AEUF5B",406,0)
FNDONE() N BIEN,CNT,I F I=40:-1:1 D  Q:BIEN
"RTN","A1AEUF5B",407,0)
 . S (BIEN,CNT)=0
"RTN","A1AEUF5B",408,0)
 . F  Q:$G(CNT)>I  S BIEN=$O(^XPD(9.6,BIEN)) Q:'BIEN  D
"RTN","A1AEUF5B",409,0)
 .. S CNT=$P($G(^XPD(9.6,BIEN,"REQB",0)),"^",4)
"RTN","A1AEUF5B",410,0)
 Q $P($G(^XPD(9.6,BIEN,0)),"^")_"^"_BIEN_"^"_$P($G(^XPD(9.6,BIEN,"REQB",0)),"^",4)
"RTN","A1AEUF5B",411,0)
 ;
"RTN","A1AEUF5B",412,0)
 ;
"RTN","A1AEUF5B",413,0)
 ; Build array of all routines contained in a BUILD
"RTN","A1AEUF5B",414,0)
 ; ENTER
"RTN","A1AEUF5B",415,0)
 ;   BUILD  = NAME OF BUILD
"RTN","A1AEUF5B",416,0)
 ;   RTNARR = ARRAY PASSED BY REFERENCE
"RTN","A1AEUF5B",417,0)
 ; RETURN
"RTN","A1AEUF5B",418,0)
 ;   RTNARR   = ARRAY OF ROUTINES IN BUILD
"RTN","A1AEUF5B",419,0)
RTNSINB(BUILD,RTNARR) ;
"RTN","A1AEUF5B",420,0)
 K RTNARR
"RTN","A1AEUF5B",421,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEUF5B",422,0)
 N RTNNM,RTNSS S RTNSS=0
"RTN","A1AEUF5B",423,0)
 F  S RTNSS=$O(^XPD(9.6,BIEN,"KRN",9.8,"NM",RTNSS)) Q:'RTNSS  D
"RTN","A1AEUF5B",424,0)
 . S RTNNM=$P($G(^XPD(9.6,BIEN,"KRN",9.8,"NM",RTNSS,0)),"^")
"RTN","A1AEUF5B",425,0)
 . I $L(RTNNM) D
"RTN","A1AEUF5B",426,0)
 ..;Take care of cases where routine name in B cross has " "
"RTN","A1AEUF5B",427,0)
 .. S:$E(RTNNM)=" " RTNNM=$E(RTNNM,2,$L(RTNNM))
"RTN","A1AEUF5B",428,0)
 .. S RTNARR(RTNNM)=""
"RTN","A1AEUF5B",429,0)
 Q
"RTN","A1AEUF5B",430,0)
 ;
"RTN","A1AEUF5B",431,0)
 ;
"RTN","A1AEUF5B",432,0)
XTENT ;
"RTN","A1AEUF5B",433,0)
 ;;UTP38;Testing FNDALL^A1AEF5 - Finding every related build
"RTN","A1AEUF5B",434,0)
 ;;UTP39;Testing FND1^A1AEF5 - Finding all MULB for all REQB
"RTN","A1AEUF5B",435,0)
 ;;UTP40;Testing FND2^A1AEF5 - Adding patches required for routines
"RTN","A1AEUF5B",436,0)
 ;;UTP41;Testing FND3^A1AEF5 - Adding components from blds in ^XTMP
"RTN","A1AEUF5B",437,0)
 Q
"RTN","A1AEUF5B",438,0)
 ;
"RTN","A1AEUF5B",439,0)
 ;
"RTN","A1AEUF5B",440,0)
EOR ; end of routine A1AEUF5B
"RTN","A1AEUF5C")
0^81^B46863553
"RTN","A1AEUF5C",1,0)
A1AEUF5C ;ven/lgc,jli-unit tests for A1AEF5 ; 6/4/15 1:00am
"RTN","A1AEUF5C",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUF5C",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUF5C",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUF5C",5,0)
 ;
"RTN","A1AEUF5C",6,0)
 ;
"RTN","A1AEUF5C",7,0)
 ;primary change history
"RTN","A1AEUF5C",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUF5C",9,0)
 ;
"RTN","A1AEUF5C",10,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUF5C",11,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUF5C",12,0)
 Q
"RTN","A1AEUF5C",13,0)
 ;
"RTN","A1AEUF5C",14,0)
STARTUP ;
"RTN","A1AEUF5C",15,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUF5C",16,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUF5C",17,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5C",18,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUF5C",19,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5C",20,0)
 ;
"RTN","A1AEUF5C",21,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUF5C",22,0)
 L +^A1AE(A1AEFILE):1 I '$T D  Q
"RTN","A1AEUF5C",23,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5C",24,0)
 . W !,"Unable to obtain lock on "_A1AENAME_" [#"_A1AEFILE_"] file"
"RTN","A1AEUF5C",25,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5C",26,0)
 Q
"RTN","A1AEUF5C",27,0)
 ;
"RTN","A1AEUF5C",28,0)
SHUTDOWN L -^XPD(9.6):1
"RTN","A1AEUF5C",29,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUF5C",30,0)
 L -^A1AE(A1AEFILE):1
"RTN","A1AEUF5C",31,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUF5C",32,0)
 K A1AEFAIL
"RTN","A1AEUF5C",33,0)
 Q
"RTN","A1AEUF5C",34,0)
 ;
"RTN","A1AEUF5C",35,0)
 ;
"RTN","A1AEUF5C",36,0)
 ; Count total nodes in ^XTMP($J as indicator of
"RTN","A1AEUF5C",37,0)
 ;  complexity of relationships
"RTN","A1AEUF5C",38,0)
 ; ENTER
"RTN","A1AEUF5C",39,0)
 ;   ^XTMP($J
"RTN","A1AEUF5C",40,0)
 ; RETURN
"RTN","A1AEUF5C",41,0)
 ;   Count of nodes
"RTN","A1AEUF5C",42,0)
 ; --- CNTNODES()
"RTN","A1AEUF5C",43,0)
UTP45  I '$G(A1AEFAIL) D
"RTN","A1AEUF5C",44,0)
 . N TSTBLD S TSTBLD=$$FNDONE
"RTN","A1AEUF5C",45,0)
 . N BUILD S BUILD=$P(TSTBLD,"^")
"RTN","A1AEUF5C",46,0)
 . I (BUILD="")!('$O(^XPD(9.6,"B",BUILD,0))) D  Q
"RTN","A1AEUF5C",47,0)
 .. D FAIL^%ut("Unable to find suitable test BUILD")
"RTN","A1AEUF5C",48,0)
 . N MSG S MSG=$$FNDALL^A1AEF5(BUILD,1)
"RTN","A1AEUF5C",49,0)
 . I MSG="" D  Q
"RTN","A1AEUF5C",50,0)
 .. D FAIL^%ut("Unable to build array in ^XTMP($J)")
"RTN","A1AEUF5C",51,0)
 . N CNTNODES S CNTNODES=$$CNTNODES^A1AEF5
"RTN","A1AEUF5C",52,0)
 . I '$G(CNTNODES) D  Q
"RTN","A1AEUF5C",53,0)
 .. D FAIL^%ut("Unable count nodes in ^XTMP($J)")
"RTN","A1AEUF5C",54,0)
 . N NODE,SNODE S NODE=$NA(^XTMP($J)),SNODE=$P(NODE,")")
"RTN","A1AEUF5C",55,0)
 . N NEWCNT S NEWCNT=0
"RTN","A1AEUF5C",56,0)
 . F  S NODE=$Q(@NODE) Q:NODE'[SNODE  S NEWCNT=NEWCNT+1
"RTN","A1AEUF5C",57,0)
 . N X S X=(CNTNODES=NEWCNT)
"RTN","A1AEUF5C",58,0)
 . D CHKEQ^%ut(1,X,"Testing $$CNTNODES^A1AEF5 - Counting nodes in ^XTMP($J) FAILED!")
"RTN","A1AEUF5C",59,0)
 Q
"RTN","A1AEUF5C",60,0)
 ;
"RTN","A1AEUF5C",61,0)
 ;
"RTN","A1AEUF5C",62,0)
 ; ENTER
"RTN","A1AEUF5C",63,0)
 ;   Nothing required
"RTN","A1AEUF5C",64,0)
 ; RETURNS
"RTN","A1AEUF5C",65,0)
 ;   CNT  =  Count of BUILDS in ^XTMP array that
"RTN","A1AEUF5C",66,0)
 ;           represent a current version of their package
"RTN","A1AEUF5C",67,0)
 ; --- CNTBLDS()
"RTN","A1AEUF5C",68,0)
UTP46 I '$G(A1AEFAIL) D
"RTN","A1AEUF5C",69,0)
 . N TSTBLD S TSTBLD=$$FNDONE
"RTN","A1AEUF5C",70,0)
 . N BUILD S BUILD=$P(TSTBLD,"^")
"RTN","A1AEUF5C",71,0)
 . I (BUILD="")!('$O(^XPD(9.6,"B",BUILD,0))) D  Q
"RTN","A1AEUF5C",72,0)
 .. D FAIL^%ut("Unable to find suitable test BUILD")
"RTN","A1AEUF5C",73,0)
 . N MSG S MSG=$$FNDALL^A1AEF5(BUILD,1)
"RTN","A1AEUF5C",74,0)
 . I MSG="" D  Q
"RTN","A1AEUF5C",75,0)
 .. D FAIL^%ut("Unable to build array in ^XTMP($J)")
"RTN","A1AEUF5C",76,0)
 . N CNTBLDS S CNTBLDS=$$CNTBLDS^A1AEF5
"RTN","A1AEUF5C",77,0)
 . I '$G(CNTBLDS) D  Q
"RTN","A1AEUF5C",78,0)
 .. D FAIL^%ut("Unable to find builds in ^XTMP($J)")
"RTN","A1AEUF5C",79,0)
 . N BLD,NEWCNT S BLD=" ",NEWCNT=0
"RTN","A1AEUF5C",80,0)
 . F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5C",81,0)
 ..  S:$$BACTV^A1AEF1(BLD) NEWCNT=NEWCNT+1
"RTN","A1AEUF5C",82,0)
 . N X S X=(CNTBLDS=NEWCNT)
"RTN","A1AEUF5C",83,0)
 . D CHKEQ^%ut(1,X,"Testing $$CNTBLDS^A1AEF5 - Counting builds in ^XTMP($J) FAILED!")
"RTN","A1AEUF5C",84,0)
 Q
"RTN","A1AEUF5C",85,0)
 ;
"RTN","A1AEUF5C",86,0)
 ;
"RTN","A1AEUF5C",87,0)
 ; Build array of all routines contained in a BUILD
"RTN","A1AEUF5C",88,0)
 ; ENTER
"RTN","A1AEUF5C",89,0)
 ;   BUILD  = NAME OF BUILD
"RTN","A1AEUF5C",90,0)
 ;   RTNARR = ARRAY PASSED BY REFERENCE
"RTN","A1AEUF5C",91,0)
 ; RETURN
"RTN","A1AEUF5C",92,0)
 ;   RTNARR   = ARRAY OF ROUTINES IN BUILD
"RTN","A1AEUF5C",93,0)
 ; --- RTNSINB(BUILD,RTNARR)
"RTN","A1AEUF5C",94,0)
 ; Look for build with lots of routines
"RTN","A1AEUF5C",95,0)
UTP47 I '$G(A1AEFAIL) D
"RTN","A1AEUF5C",96,0)
 . N BIEN,CNT,RTNARR,X S (BIEN,CNT)=0
"RTN","A1AEUF5C",97,0)
 . F  Q:$G(CNT)>10  S BIEN=$O(^XPD(9.6,BIEN)) Q:'BIEN  D
"RTN","A1AEUF5C",98,0)
 .. S CNT=$P($G(^XPD(9.6,BIEN,"KRN",9.8,"NM",0)),"^",4)
"RTN","A1AEUF5C",99,0)
 . S:'BIEN X=0
"RTN","A1AEUF5C",100,0)
 . N BUILD S BUILD=$P($G(^XPD(9.6,BIEN,0)),"^")
"RTN","A1AEUF5C",101,0)
 . D RTNSINB^A1AEF5(BUILD,.RTNARR)
"RTN","A1AEUF5C",102,0)
 . N RTN S RTN=0,X=1
"RTN","A1AEUF5C",103,0)
 . F  Q:'X  S RTN=$O(^XPD(9.6,BIEN,"KRN",9.8,"NM","B",RTN)) Q:RTN=""  D
"RTN","A1AEUF5C",104,0)
 .. S:'$D(RTNARR(RTN)) X=0
"RTN","A1AEUF5C",105,0)
 . D CHKEQ^%ut(1,X,"Testing RTNSINB^A1AEF5 - Building array of RTNS in a build FAILED!")
"RTN","A1AEUF5C",106,0)
 Q
"RTN","A1AEUF5C",107,0)
 ;
"RTN","A1AEUF5C",108,0)
 ;
"RTN","A1AEUF5C",109,0)
 ;
"RTN","A1AEUF5C",110,0)
 ; Display all builds associated with the parent BUILD
"RTN","A1AEUF5C",111,0)
 ;   which belong to a currently active package
"RTN","A1AEUF5C",112,0)
 ; ENTER
"RTN","A1AEUF5C",113,0)
 ;    BUILD = name of parent BUILD under inspection
"RTN","A1AEUF5C",114,0)
 ;    MSG   = 1:build MSGTXT
"RTN","A1AEUF5C",115,0)
 ;            0:print statistics to terminal
"RTN","A1AEUF5C",116,0)
 ; RETURN
"RTN","A1AEUF5C",117,0)
 ;    Number of builds displayed to terminal
"RTN","A1AEUF5C",118,0)
 ;DISP(BUILD,MSG)
"RTN","A1AEUF5C",119,0)
UTP48 I '$G(A1AEFAIL) D
"RTN","A1AEUF5C",120,0)
 . N TSTBLD S TSTBLD=$$FNDONE
"RTN","A1AEUF5C",121,0)
 . N BUILD S BUILD=$P(TSTBLD,"^")
"RTN","A1AEUF5C",122,0)
 . I (BUILD="")!('$O(^XPD(9.6,"B",BUILD,0))) D  Q
"RTN","A1AEUF5C",123,0)
 .. D FAIL^%ut("Unable to find suitable test BUILD")
"RTN","A1AEUF5C",124,0)
 . N MSG S MSG=$$FNDALL^A1AEF5(BUILD,1)
"RTN","A1AEUF5C",125,0)
 . I MSG="" D  Q
"RTN","A1AEUF5C",126,0)
 .. D FAIL^%ut("Unable to build array in ^XTMP($J)")
"RTN","A1AEUF5C",127,0)
 . N BLDS S BLDS=$$DISP^A1AEF5(BUILD,1)
"RTN","A1AEUF5C",128,0)
 . N BLD,CNT S BLD=" ",CNT=0
"RTN","A1AEUF5C",129,0)
 . F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5C",130,0)
 .. I $$BACTV^A1AEF1(BLD) S CNT=CNT+1
"RTN","A1AEUF5C",131,0)
 . N X S X=(BLDS=CNT)
"RTN","A1AEUF5C",132,0)
 . D CHKEQ^%ut(1,X,"$$DISP^A1AEF5 - Display all associated builds FAILED!")
"RTN","A1AEUF5C",133,0)
 Q
"RTN","A1AEUF5C",134,0)
 ;
"RTN","A1AEUF5C",135,0)
 ;
"RTN","A1AEUF5C",136,0)
 ; Display all builds associated with the parent BUILD
"RTN","A1AEUF5C",137,0)
 ;   which belong to a currently active package
"RTN","A1AEUF5C",138,0)
 ; AND
"RTN","A1AEUF5C",139,0)
 ;   Limiting associated builds to a single example
"RTN","A1AEUF5C",140,0)
 ;     of each patch array not belonging to the
"RTN","A1AEUF5C",141,0)
 ;     package of the parent BUILD being examined
"RTN","A1AEUF5C",142,0)
 ; ENTER
"RTN","A1AEUF5C",143,0)
 ;    BUILD = name of parent BUILD under inspection
"RTN","A1AEUF5C",144,0)
 ;    MSG   = 1:build MSGTXT
"RTN","A1AEUF5C",145,0)
 ;            0:print statistics to terminal
"RTN","A1AEUF5C",146,0)
 ; RETURN
"RTN","A1AEUF5C",147,0)
 ;    BLDARR    = array of builds identified
"RTN","A1AEUF5C",148,0)
 ;    BLDARR(0) = Number of builds displayed to terminal
"RTN","A1AEUF5C",149,0)
 ; --- DISPLMT(BUILD,BLDARR)
"RTN","A1AEUF5C",150,0)
UTP49 I '$G(A1AEFAIL) D
"RTN","A1AEUF5C",151,0)
 . N TSTBLD S TSTBLD=$$FNDONE
"RTN","A1AEUF5C",152,0)
 . N BUILD S BUILD=$P(TSTBLD,"^")
"RTN","A1AEUF5C",153,0)
 . I (BUILD="")!('$O(^XPD(9.6,"B",BUILD,0))) D  Q
"RTN","A1AEUF5C",154,0)
 .. D FAIL^%ut("Unable to find suitable test BUILD")
"RTN","A1AEUF5C",155,0)
 . N MSG S MSG=$$FNDALL^A1AEF5(BUILD,1)
"RTN","A1AEUF5C",156,0)
 . I MSG="" D  Q
"RTN","A1AEUF5C",157,0)
 .. D FAIL^%ut("Unable to build array in ^XTMP($J)")
"RTN","A1AEUF5C",158,0)
 . N BLDARR D DISPLMT^A1AEF5(BUILD,.BLDARR)
"RTN","A1AEUF5C",159,0)
 . N LMTCNT S LMTCNT=$G(BLDARR(0))
"RTN","A1AEUF5C",160,0)
 . I '$G(LMTCNT) D  Q
"RTN","A1AEUF5C",161,0)
 .. D FAIL^%ut("Unable to calculate Limited Builds count!")
"RTN","A1AEUF5C",162,0)
 . N BLD S BLD=" "
"RTN","A1AEUF5C",163,0)
 . K BLDARR
"RTN","A1AEUF5C",164,0)
 . F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5C",165,0)
 .. I $$BACTV^A1AEF1(BLD) D
"RTN","A1AEUF5C",166,0)
 ... I $P(BLD,"*")=$P(BUILD,"*") S BLDARR($P(BLD,"*"))="" Q
"RTN","A1AEUF5C",167,0)
 ... Q:$D(BLDARR($P(BLD,"*")))
"RTN","A1AEUF5C",168,0)
 ... S BLDARR($P(BLD,"*"))=""
"RTN","A1AEUF5C",169,0)
 . N CNT,NODE S CNT=0,NODE=$NA(BLDARR)
"RTN","A1AEUF5C",170,0)
 . F  S NODE=$Q(@NODE) Q:NODE'["BLDARR("  D
"RTN","A1AEUF5C",171,0)
 ..  S CNT=CNT+1
"RTN","A1AEUF5C",172,0)
 . N X S X=(LMTCNT=CNT)
"RTN","A1AEUF5C",173,0)
 . D CHKEQ^%ut(1,X,"Testing DISPLMT^A1AEF5 - Display limited array of builds FAILED!")
"RTN","A1AEUF5C",174,0)
 Q
"RTN","A1AEUF5C",175,0)
 ;
"RTN","A1AEUF5C",176,0)
 ;
"RTN","A1AEUF5C",177,0)
 ;
"RTN","A1AEUF5C",178,0)
UTP50 I '$G(A1AEFAIL) D
"RTN","A1AEUF5C",179,0)
 . N BLDMSG,BUILD,BIEN,CNT,REQBIEN
"RTN","A1AEUF5C",180,0)
 . S BLDMSG=$$FNDONE(),BUILD=$P(BLDMSG,"^")
"RTN","A1AEUF5C",181,0)
 . N BIEN S BIEN=$P(BLDMSG,"^",2)
"RTN","A1AEUF5C",182,0)
 . I BIEN'=$O(^XPD(9.6,"B",BUILD,0)) D  Q
"RTN","A1AEUF5C",183,0)
 .. D FAIL^%ut("BIEN from FNDONE call in error!")
"RTN","A1AEUF5C",184,0)
 . S REQBIEN=0
"RTN","A1AEUF5C",185,0)
 . F  S REQBIEN=$O(^XPD(9.6,BIEN,"REQB",REQBIEN)) Q:'REQBIEN  D
"RTN","A1AEUF5C",186,0)
 ..  S CNT=$G(CNT)+1
"RTN","A1AEUF5C",187,0)
 . N X S X=(CNT=$P(BLDMSG,"^",3))
"RTN","A1AEUF5C",188,0)
 . D CHKEQ^%ut(1,X,"Testing FINDONE^A1AEUF5C - Find a build with several REQB FAILED!")
"RTN","A1AEUF5C",189,0)
 Q
"RTN","A1AEUF5C",190,0)
 ;
"RTN","A1AEUF5C",191,0)
 ; Look through BUILD [#9.6] file and find one with a
"RTN","A1AEUF5C",192,0)
 ;   number of REQB entries.  Hopefully this will flesh
"RTN","A1AEUF5C",193,0)
 ;   out to one with enough components to allow for
"RTN","A1AEUF5C",194,0)
 ;   a good test of these APIs.
"RTN","A1AEUF5C",195,0)
 ; Enter
"RTN","A1AEUF5C",196,0)
 ;   nothing required
"RTN","A1AEUF5C",197,0)
 ; Return
"RTN","A1AEUF5C",198,0)
 ;   A string with BuildName^BuildIEN^NumberOfREQB
"RTN","A1AEUF5C",199,0)
FNDONE() N BIEN,CNT,I F I=40:-1:1 D  Q:BIEN
"RTN","A1AEUF5C",200,0)
 . S (BIEN,CNT)=0
"RTN","A1AEUF5C",201,0)
 . F  Q:$G(CNT)>I  S BIEN=$O(^XPD(9.6,BIEN)) Q:'BIEN  D
"RTN","A1AEUF5C",202,0)
 .. S CNT=$P($G(^XPD(9.6,BIEN,"REQB",0)),"^",4)
"RTN","A1AEUF5C",203,0)
 Q $P($G(^XPD(9.6,BIEN,0)),"^")_"^"_BIEN_"^"_$P($G(^XPD(9.6,BIEN,"REQB",0)),"^",4)
"RTN","A1AEUF5C",204,0)
 ;
"RTN","A1AEUF5C",205,0)
XTENT ;
"RTN","A1AEUF5C",206,0)
 ;;UTP45;Testing $$CNTNODES^A1AEF5 - Counting nodes in ^XTMP($J
"RTN","A1AEUF5C",207,0)
 ;;UTP46;Testing $$CNTBLDS^A1AEF5 - Counting builds in ^XTMP($J
"RTN","A1AEUF5C",208,0)
 ;;UTP47;Testing RTNSINB^A1AEF5 - Building array of RTNS in a build
"RTN","A1AEUF5C",209,0)
 ;;UTP48;Testing $$DISP^A1AEF5 - Display all associated builds
"RTN","A1AEUF5C",210,0)
 ;;UTP49;Testing DISPLMT^A1AEF5 - Display limited array of builds
"RTN","A1AEUF5C",211,0)
 ;;UTP50;Testing FINDONE^A1AEUF5C - Find a build with several REQB
"RTN","A1AEUF5C",212,0)
 Q
"RTN","A1AEUF5C",213,0)
 ;
"RTN","A1AEUF5C",214,0)
 ;
"RTN","A1AEUF5C",215,0)
EOR ; end of routine A1AEUF5C
"RTN","A1AEUF5D")
0^103^B58991560
"RTN","A1AEUF5D",1,0)
A1AEUF5D ;ven/lgc,jli-unit tests for A1AEF5 ;2015-06-13  10:07 PM
"RTN","A1AEUF5D",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUF5D",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUF5D",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUF5D",5,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUF5D",6,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUF5D",7,0)
 Q
"RTN","A1AEUF5D",8,0)
 ;
"RTN","A1AEUF5D",9,0)
STARTUP ;
"RTN","A1AEUF5D",10,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUF5D",11,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUF5D",12,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5D",13,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUF5D",14,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5D",15,0)
 ;
"RTN","A1AEUF5D",16,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUF5D",17,0)
 L +^A1AE(A1AEFILE):1 I '$T D  Q
"RTN","A1AEUF5D",18,0)
 . S A1AEFAIL=1
"RTN","A1AEUF5D",19,0)
 . W !,"Unable to obtain lock on "_A1AENAME_" [#"_A1AEFILE_"] file"
"RTN","A1AEUF5D",20,0)
 . W !," Unable to perform testing."
"RTN","A1AEUF5D",21,0)
 Q
"RTN","A1AEUF5D",22,0)
 ;
"RTN","A1AEUF5D",23,0)
SHUTDOWN L -^XPD(9.6):1
"RTN","A1AEUF5D",24,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(11005)) S A1AEFILE=11004 ; JLI 150525 
"RTN","A1AEUF5D",25,0)
 L -^A1AE(A1AEFILE):1
"RTN","A1AEUF5D",26,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUF5D",27,0)
 K A1AEFAIL
"RTN","A1AEUF5D",28,0)
 Q
"RTN","A1AEUF5D",29,0)
 ;
"RTN","A1AEUF5D",30,0)
 ;
"RTN","A1AEUF5D",31,0)
 ; ENTER
"RTN","A1AEUF5D",32,0)
 ;    BUILD = name of PARENT build under inspection
"RTN","A1AEUF5D",33,0)
 ;    MSG   = 1:build MSGTXT
"RTN","A1AEUF5D",34,0)
 ;            0:print statistics to terminal
"RTN","A1AEUF5D",35,0)
 ;    ^XTMP($J,BUILD
"RTN","A1AEUF5D",36,0)
 ; RETURN
"RTN","A1AEUF5D",37,0)
 ;    ^XTMP($J,BUILD updated
"RTN","A1AEUF5D",38,0)
 ; --- FND4(BUILD,MSG,MSGTXT)
"RTN","A1AEUF5D",39,0)
UTP42 I '$G(A1AEFAIL) D
"RTN","A1AEUF5D",40,0)
 . N BLDMSG S BLDMSG=$$FNDONE^A1AEUF5B
"RTN","A1AEUF5D",41,0)
 . N BUILD S BUILD=$P(BLDMSG,"^")
"RTN","A1AEUF5D",42,0)
 . K ^XTMP($J)
"RTN","A1AEUF5D",43,0)
 . N REQB,MULB S (REQB,MULB)=""
"RTN","A1AEUF5D",44,0)
 . N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEUF5D",45,0)
 . S ^XTMP($J,BUILD,BUILD)=BIEN
"RTN","A1AEUF5D",46,0)
 .;
"RTN","A1AEUF5D",47,0)
 . N CNT S CNT=0
"RTN","A1AEUF5D",48,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5D",49,0)
 . F  S REQB=$O(^XPD(9.6,BIEN,"REQB","B",REQB)) Q:REQB=""  D
"RTN","A1AEUF5D",50,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5D",51,0)
 . F  S MULB=$O(^XPD(9.6,BIEN,10,"B",MULB)) Q:MULB=""  D
"RTN","A1AEUF5D",52,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5D",53,0)
 .;
"RTN","A1AEUF5D",54,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5D",55,0)
 . D REQB^A1AEF1(BUILD,.REQB)
"RTN","A1AEUF5D",56,0)
 . D MULB^A1AEF1(BUILD,.MULB)
"RTN","A1AEUF5D",57,0)
 . S REQB=" " F  S REQB=$O(REQB(REQB)) Q:REQB=""  D
"RTN","A1AEUF5D",58,0)
 .. S ^XTMP($J,BUILD,REQB)=REQB(REQB)
"RTN","A1AEUF5D",59,0)
 . S MULB=" " F  S MULB=$O(MULB(MULB)) Q:MULB=""  D
"RTN","A1AEUF5D",60,0)
 .. S ^XTMP($J,BUILD,MULB)=MULB(MULB)
"RTN","A1AEUF5D",61,0)
 .;FND1
"RTN","A1AEUF5D",62,0)
 . N MULBTMP,BLD
"RTN","A1AEUF5D",63,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5D",64,0)
 .. D MULB^A1AEF1(BLD,.MULB)
"RTN","A1AEUF5D",65,0)
 .. M MULBTMP=MULB
"RTN","A1AEUF5D",66,0)
 .; Pull these into ^XTMP array
"RTN","A1AEUF5D",67,0)
 . S MULB=" " F  S MULB=$O(MULBTMP(MULB)) Q:MULB=""  D
"RTN","A1AEUF5D",68,0)
 .. S ^XTMP($J,BUILD,MULB)=MULBTMP(MULB)
"RTN","A1AEUF5D",69,0)
 .;FND2
"RTN","A1AEUF5D",70,0)
 . N RTNARR,RTNNM
"RTN","A1AEUF5D",71,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5D",72,0)
 .. D RTNSINB^A1AEUF5B(BLD,.RTNARR)
"RTN","A1AEUF5D",73,0)
 .. N PTCH,PTCHIEN,PTCHARR
"RTN","A1AEUF5D",74,0)
 .. S RTNNM="" F  S RTNNM=$O(RTNARR(RTNNM)) Q:RTNNM=""  D
"RTN","A1AEUF5D",75,0)
 ... D PTC4RTN^A1AEF1(RTNNM,.PTCHARR)
"RTN","A1AEUF5D",76,0)
 ... Q:'$D(PTCHARR)
"RTN","A1AEUF5D",77,0)
 ... S PTCH=" " F  S PTCH=$O(PTCHARR(PTCH)) Q:PTCH=""  D
"RTN","A1AEUF5D",78,0)
 ....; Fix patches integer and no .0
"RTN","A1AEUF5D",79,0)
 .... I $P(PTCH,"*",2)=$P($P(PTCH,"*",2),".") D
"RTN","A1AEUF5D",80,0)
 ..... S $P(PTCH,"*",2)=$P(PTCH,"*",2)_".0"
"RTN","A1AEUF5D",81,0)
 .... S PTCHIEN=+$O(^XPD(9.6,"B",PTCH,0))
"RTN","A1AEUF5D",82,0)
 .... S ^XTMP($J,BUILD,PTCH)=PTCHIEN
"RTN","A1AEUF5D",83,0)
 .... S ^XTMP($J,BUILD,PTCH,RTNNM,"R")=""
"RTN","A1AEUF5D",84,0)
 .;FND3
"RTN","A1AEUF5D",85,0)
 . N BLDIEN,DTINS S BLD=" "
"RTN","A1AEUF5D",86,0)
 . F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5D",87,0)
 .. S BLDIEN=+$G(^XTMP($J,BUILD,BLD))
"RTN","A1AEUF5D",88,0)
 .. I BLDIEN D
"RTN","A1AEUF5D",89,0)
 ... S DTINS=$$DTINS^A1AEF2(BLD)
"RTN","A1AEUF5D",90,0)
 ... D:DTINS LOADXTMP^A1AEF2(BUILD,BLDIEN,DTINS)
"RTN","A1AEUF5D",91,0)
 .;FND4
"RTN","A1AEUF5D",92,0)
 . N NMRICMP,NMCMP,NODE S NODE=$NA(^XPD(9.6))
"RTN","A1AEUF5D",93,0)
 . F  S NODE=$Q(@NODE) Q:NODE'["^XPD(9.6"  D
"RTN","A1AEUF5D",94,0)
 .. S BIEN=+$QS(NODE,2)
"RTN","A1AEUF5D",95,0)
 .. I $QS(NODE,3)=4,$QS(NODE,2),$QS(NODE,4),$QS(NODE,5)=0 D
"RTN","A1AEUF5D",96,0)
 ... N FNMBR S FNMBR=$QS(NODE,4)
"RTN","A1AEUF5D",97,0)
 ... I $D(^XTMP($J,4,FNMBR)) D  Q
"RTN","A1AEUF5D",98,0)
 .... S ^XTMP($J,BUILD,$P(^XPD(9.6,BIEN,0),"^"),"F")=+$QS(NODE,2)_"^"_FNMBR
"RTN","A1AEUF5D",99,0)
 ..;
"RTN","A1AEUF5D",100,0)
 .. I $QS(NODE,3)["KRN",$QS(NODE,4)["B" D
"RTN","A1AEUF5D",101,0)
 ... S NMRICMP=$QS(NODE,5)
"RTN","A1AEUF5D",102,0)
 ... S NMCMP=$QS(NODE,6)
"RTN","A1AEUF5D",103,0)
 ... I $D(^XTMP($J,NMRICMP,NMCMP)) D
"RTN","A1AEUF5D",104,0)
 .... S ^XTMP($J,BUILD,$P(^XPD(9.6,BIEN,0),"^"),"C")=BIEN_"^"_NMRICMP_"^"_NMCMP
"RTN","A1AEUF5D",105,0)
 .; Save manual production
"RTN","A1AEUF5D",106,0)
 . K ^TMP($J) M ^TMP($J)=^XTMP($J)
"RTN","A1AEUF5D",107,0)
 .; Now run FND4 
"RTN","A1AEUF5D",108,0)
 . K ^XTMP($J)
"RTN","A1AEUF5D",109,0)
 . N REQB,MULB S (REQB,MULB)=""
"RTN","A1AEUF5D",110,0)
 . N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) Q:'BIEN
"RTN","A1AEUF5D",111,0)
 . S ^XTMP($J,BUILD,BUILD)=BIEN
"RTN","A1AEUF5D",112,0)
 .;
"RTN","A1AEUF5D",113,0)
 . N CNT S CNT=0
"RTN","A1AEUF5D",114,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5D",115,0)
 . F  S REQB=$O(^XPD(9.6,BIEN,"REQB","B",REQB)) Q:REQB=""  D
"RTN","A1AEUF5D",116,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5D",117,0)
 . F  S MULB=$O(^XPD(9.6,BIEN,10,"B",MULB)) Q:MULB=""  D
"RTN","A1AEUF5D",118,0)
 .. S CNT=CNT+1
"RTN","A1AEUF5D",119,0)
 .;
"RTN","A1AEUF5D",120,0)
 . S (REQB,MULB)=""
"RTN","A1AEUF5D",121,0)
 . D REQB^A1AEF1(BUILD,.REQB)
"RTN","A1AEUF5D",122,0)
 . D MULB^A1AEF1(BUILD,.MULB)
"RTN","A1AEUF5D",123,0)
 . S REQB=" " F  S REQB=$O(REQB(REQB)) Q:REQB=""  D
"RTN","A1AEUF5D",124,0)
 .. S ^XTMP($J,BUILD,REQB)=REQB(REQB)
"RTN","A1AEUF5D",125,0)
 . S MULB=" " F  S MULB=$O(MULB(MULB)) Q:MULB=""  D
"RTN","A1AEUF5D",126,0)
 .. S ^XTMP($J,BUILD,MULB)=MULB(MULB)
"RTN","A1AEUF5D",127,0)
 .;FND1
"RTN","A1AEUF5D",128,0)
 . N MULBTMP,BLD
"RTN","A1AEUF5D",129,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5D",130,0)
 .. D MULB^A1AEF1(BLD,.MULB)
"RTN","A1AEUF5D",131,0)
 .. M MULBTMP=MULB
"RTN","A1AEUF5D",132,0)
 .; Pull these into ^XTMP array
"RTN","A1AEUF5D",133,0)
 . S MULB=" " F  S MULB=$O(MULBTMP(MULB)) Q:MULB=""  D
"RTN","A1AEUF5D",134,0)
 .. S ^XTMP($J,BUILD,MULB)=MULBTMP(MULB)
"RTN","A1AEUF5D",135,0)
 .;FND2
"RTN","A1AEUF5D",136,0)
 . N RTNARR,RTNNM
"RTN","A1AEUF5D",137,0)
 . S BLD=" " F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5D",138,0)
 .. D RTNSINB^A1AEUF5B(BLD,.RTNARR)
"RTN","A1AEUF5D",139,0)
 .. N PTCH,PTCHIEN,PTCHARR
"RTN","A1AEUF5D",140,0)
 .. S RTNNM="" F  S RTNNM=$O(RTNARR(RTNNM)) Q:RTNNM=""  D
"RTN","A1AEUF5D",141,0)
 ... D PTC4RTN^A1AEF1(RTNNM,.PTCHARR)
"RTN","A1AEUF5D",142,0)
 ... Q:'$D(PTCHARR)
"RTN","A1AEUF5D",143,0)
 ... S PTCH=" " F  S PTCH=$O(PTCHARR(PTCH)) Q:PTCH=""  D
"RTN","A1AEUF5D",144,0)
 ....; Fix patches integer and no .0
"RTN","A1AEUF5D",145,0)
 .... I $P(PTCH,"*",2)=$P($P(PTCH,"*",2),".") D
"RTN","A1AEUF5D",146,0)
 ..... S $P(PTCH,"*",2)=$P(PTCH,"*",2)_".0"
"RTN","A1AEUF5D",147,0)
 .... S PTCHIEN=+$O(^XPD(9.6,"B",PTCH,0))
"RTN","A1AEUF5D",148,0)
 .... S ^XTMP($J,BUILD,PTCH)=PTCHIEN
"RTN","A1AEUF5D",149,0)
 .... S ^XTMP($J,BUILD,PTCH,RTNNM,"R")=""
"RTN","A1AEUF5D",150,0)
 .;FND3
"RTN","A1AEUF5D",151,0)
 . S BLD=" "
"RTN","A1AEUF5D",152,0)
 . F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5D",153,0)
 .. S BLDIEN=+$G(^XTMP($J,BUILD,BLD))
"RTN","A1AEUF5D",154,0)
 .. I BLDIEN D
"RTN","A1AEUF5D",155,0)
 ... S DTINS=$$DTINS^A1AEF2(BLD)
"RTN","A1AEUF5D",156,0)
 ... D:DTINS LOADXTMP^A1AEF2(BUILD,BLDIEN,DTINS)
"RTN","A1AEUF5D",157,0)
 .; 
"RTN","A1AEUF5D",158,0)
 . N MSG,MSGTXT S MSG=1,MSGTXT=""
"RTN","A1AEUF5D",159,0)
 . D FND4^A1AEF5(BUILD,.MSG,.MSGTXT)
"RTN","A1AEUF5D",160,0)
 ;
"RTN","A1AEUF5D",161,0)
 ; Now compare the two globals
"RTN","A1AEUF5D",162,0)
 S X=1
"RTN","A1AEUF5D",163,0)
 N NX,SNX S NX=$NA(^XTMP($J)),SNX=$P(NX,")")
"RTN","A1AEUF5D",164,0)
 N NXT,SNXT S NXT=$NA(^TMP($J)),SNXT=$P(NXT,")")
"RTN","A1AEUF5D",165,0)
 F  S NX=$Q(@NX) Q:NX'[SNX  S NXT=$Q(@NXT) Q:NXT'[SNXT  D  Q:'X
"RTN","A1AEUF5D",166,0)
 . I ($P(NX,",",2,$L(NX,",")))'=($P(NXT,",",2,$L(NXT))) D  Q:'X
"RTN","A1AEUF5D",167,0)
 .. S X=0
"RTN","A1AEUF5D",168,0)
 . I @NX'=@NXT S X=0
"RTN","A1AEUF5D",169,0)
 K ^XTMP($J),^TMP($J)
"RTN","A1AEUF5D",170,0)
 D CHKEQ^%ut(1,X,"Testing FND4^A1AEF5 all BLDS in 9.6 with similar components FAILED!")
"RTN","A1AEUF5D",171,0)
 Q
"RTN","A1AEUF5D",172,0)
 ;
"RTN","A1AEUF5D",173,0)
 ;
"RTN","A1AEUF5D",174,0)
 ; ENTER
"RTN","A1AEUF5D",175,0)
 ;    BUILD = name of PARENT build under inspection
"RTN","A1AEUF5D",176,0)
 ;    MSG     = 1:build MSGTXT
"RTN","A1AEUF5D",177,0)
 ;              0:print statistics to terminal
"RTN","A1AEUF5D",178,0)
 ;    MSGTXT  = Summary statistics message
"RTN","A1AEUF5D",179,0)
 ;    BLDARR  = array of associated builds after limiting
"RTN","A1AEUF5D",180,0)
 ;              BLDARR(0)=total number
"RTN","A1AEUF5D",181,0)
 ; RETURN
"RTN","A1AEUF5D",182,0)
 ;    MSG = 1, MSGTXT updated
"RTN","A1AEUF5D",183,0)
 ;    MSG = 0, informational text and total to terminal
"RTN","A1AEUF5D",184,0)
 ; --- FND5(BUILD,MSG,MSGTXT)
"RTN","A1AEUF5D",185,0)
UTP43 I '$G(A1AEFAIL) D
"RTN","A1AEUF5D",186,0)
 . N TSTBLD S TSTBLD=$$FNDONE^A1AEUF5B
"RTN","A1AEUF5D",187,0)
 . N BUILD S BUILD=$P(TSTBLD,"^")
"RTN","A1AEUF5D",188,0)
 . I (BUILD="")!('$O(^XPD(9.6,"B",BUILD,0))) D  Q
"RTN","A1AEUF5D",189,0)
 .. D FAIL^%ut("Unable to find suitable test BUILD")
"RTN","A1AEUF5D",190,0)
 .; Run FND5^A1AEF5 and capture MSGTXT
"RTN","A1AEUF5D",191,0)
 . N MSG,MSGTXT S MSG=1,MSGTXT=""
"RTN","A1AEUF5D",192,0)
 . D FND5^A1AEF5(BUILD,.MSG,.MSGTXT)
"RTN","A1AEUF5D",193,0)
 . I MSGTXT="" D  Q
"RTN","A1AEUF5D",194,0)
 .. D FAIL^%ut("Unable to calculate Limited BLDs from ^XTMP($J)")
"RTN","A1AEUF5D",195,0)
 .; Calculate Limited build count manually
"RTN","A1AEUF5D",196,0)
 . N BLDARR,BLD S BLD=" "
"RTN","A1AEUF5D",197,0)
 . F  S BLD=$O(^XTMP($J,BUILD,BLD)) Q:BLD=""  D
"RTN","A1AEUF5D",198,0)
 .. I $$BACTV^A1AEF1(BLD) D
"RTN","A1AEUF5D",199,0)
 ... I $P(BLD,"*")=$P(BUILD,"*") S BLDARR($P(BLD,"*"))="" Q
"RTN","A1AEUF5D",200,0)
 ... Q:$D(BLDARR($P(BLD,"*")))
"RTN","A1AEUF5D",201,0)
 ... S BLDARR($P(BLD,"*"))=""
"RTN","A1AEUF5D",202,0)
 . N CNT,NODE S CNT=0,NODE=$NA(BLDARR)
"RTN","A1AEUF5D",203,0)
 . F  S NODE=$Q(@NODE) Q:NODE'["BLDARR("  D
"RTN","A1AEUF5D",204,0)
 ..  S CNT=CNT+1
"RTN","A1AEUF5D",205,0)
 . N X S X=($P(MSGTXT,"^",2)=CNT)
"RTN","A1AEUF5D",206,0)
 . D CHKEQ^%ut(1,X,"Testing FND5^A1AEF5 Limited Cnt in ^XTMP($J) FAILED!")
"RTN","A1AEUF5D",207,0)
 Q
"RTN","A1AEUF5D",208,0)
 ;
"RTN","A1AEUF5D",209,0)
 ;
"RTN","A1AEUF5D",210,0)
UTP44 I '$G(A1AEFAIL) D
"RTN","A1AEUF5D",211,0)
 . N BLDMSG,BUILD,BIEN,CNT,REQBIEN
"RTN","A1AEUF5D",212,0)
 . S BLDMSG=$$FNDONE^A1AEUF5B(),BUILD=$P(BLDMSG,"^")
"RTN","A1AEUF5D",213,0)
 . N BIEN S BIEN=$P(BLDMSG,"^",2)
"RTN","A1AEUF5D",214,0)
 . I BIEN'=$O(^XPD(9.6,"B",BUILD,0)) D  Q
"RTN","A1AEUF5D",215,0)
 .. D FAIL^%ut("BIEN from FNDONE call in error!")
"RTN","A1AEUF5D",216,0)
 . S REQBIEN=0
"RTN","A1AEUF5D",217,0)
 . F  S REQBIEN=$O(^XPD(9.6,BIEN,"REQB",REQBIEN)) Q:'REQBIEN  D
"RTN","A1AEUF5D",218,0)
 ..  S CNT=$G(CNT)+1
"RTN","A1AEUF5D",219,0)
 . N X S X=(CNT=$P(BLDMSG,"^",3))
"RTN","A1AEUF5D",220,0)
 . D CHKEQ^%ut(1,X,"Testing FNDONE^A1AEUF5B API for build with REQBs failed!")
"RTN","A1AEUF5D",221,0)
 Q
"RTN","A1AEUF5D",222,0)
XTENT ;
"RTN","A1AEUF5D",223,0)
 ;;UTP42;Testing FND4^A1AEF5 - Adding BLDS in 9.6 matching components
"RTN","A1AEUF5D",224,0)
 ;;UTP43;Testing FND5^A1AEF5 - Compute limited set of builds
"RTN","A1AEUF5D",225,0)
 ;;UTP44;Testing FNDONE^A1AEUF5B - Find build with multiple REQB
"RTN","A1AEUF5D",226,0)
 Q
"RTN","A1AEUF5E")
0^104^B35624611
"RTN","A1AEUF5E",1,0)
A1AEUF5E ;ven/lgc,jli-unit tests for A1AEF5 ;2015-06-13  9:56 PM
"RTN","A1AEUF5E",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUF5E",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUF5E",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUF5E",5,0)
 ;
"RTN","A1AEUF5E",6,0)
 ; Data for A1AEUF5
"RTN","A1AEUF5E",7,0)
REQBCHK ;;
"RTN","A1AEUF5E",8,0)
 ;;POO(1,"A1AEXTST*1*1")=1
"RTN","A1AEUF5E",9,0)
 ;;
"RTN","A1AEUF5E",10,0)
 ;;POO(1,"A1AEXTST*1*2")=1
"RTN","A1AEUF5E",11,0)
 ;;
"RTN","A1AEUF5E",12,0)
 ;;POO(1,"A1AEXTST*1*3")=1
"RTN","A1AEUF5E",13,0)
 ;;
"RTN","A1AEUF5E",14,0)
 ;;POO(1,"A1AEXTST*1*4")=1
"RTN","A1AEUF5E",15,0)
 ;;
"RTN","A1AEUF5E",16,0)
 ;;POO(1,"A1AEXTST*1*5")=1
"RTN","A1AEUF5E",17,0)
 ;;
"RTN","A1AEUF5E",18,0)
 ;;POO(1,"A1AEXTST*1*6")=1
"RTN","A1AEUF5E",19,0)
 ;;
"RTN","A1AEUF5E",20,0)
 ;;POO(1,"A1AEXTST*1*7")=1
"RTN","A1AEUF5E",21,0)
 ;;
"RTN","A1AEUF5E",22,0)
 ;;POO(1,"A1AEXTST*1*8")=1
"RTN","A1AEUF5E",23,0)
 ;;
"RTN","A1AEUF5E",24,0)
 ;;POO(1,"A1AEXTST*1*9")=1
"RTN","A1AEUF5E",25,0)
 ;;
"RTN","A1AEUF5E",26,0)
 ;;POO(1,"A1AEXTST*1*10")=1
"RTN","A1AEUF5E",27,0)
 ;;POO(2,"A1AEXTST*1*1")=2
"RTN","A1AEUF5E",28,0)
 ;;POO(3,"A1AEXTST*1*2")=2
"RTN","A1AEUF5E",29,0)
 ;;POO(4,"A1AEXTST*1*3")=2
"RTN","A1AEUF5E",30,0)
 ;;POO(5,"A1AEXTST*1*4")=2
"RTN","A1AEUF5E",31,0)
 ;;POO(6,"A1AEXTST*1*5")=2
"RTN","A1AEUF5E",32,0)
 ;;
"RTN","A1AEUF5E",33,0)
 ;;POO(1,"A1AEXTST*1*11")=1
"RTN","A1AEUF5E",34,0)
 ;;POO(2,"A1AEXTST*1*12")=2
"RTN","A1AEUF5E",35,0)
 ;;POO(3,"A1AEXTST*1*13")=2
"RTN","A1AEUF5E",36,0)
 ;;POO(4,"A1AEXTST*1*14")=2
"RTN","A1AEUF5E",37,0)
 ;;POO(5,"A1AEXTST*1*15")=2
"RTN","A1AEUF5E",38,0)
 ;;
"RTN","A1AEUF5E",39,0)
 ;;POO(1,"A1AEXTST*1*12")=1
"RTN","A1AEUF5E",40,0)
 ;;
"RTN","A1AEUF5E",41,0)
 ;;POO(1,"A1AEXTST*1*13")=1
"RTN","A1AEUF5E",42,0)
 ;;
"RTN","A1AEUF5E",43,0)
 ;;POO(1,"A1AEXTST*1*14")=1
"RTN","A1AEUF5E",44,0)
 ;;
"RTN","A1AEUF5E",45,0)
 ;;POO(1,"A1AEXTST*1*15")=1
"RTN","A1AEUF5E",46,0)
 ;;
"RTN","A1AEUF5E",47,0)
 ;;POO(1,"A1AEXTST*1*16")=1
"RTN","A1AEUF5E",48,0)
 ;;
"RTN","A1AEUF5E",49,0)
 ;;POO(1,"A1AEXTST*1*17")=1
"RTN","A1AEUF5E",50,0)
 ;;
"RTN","A1AEUF5E",51,0)
 ;;POO(1,"A1AEXTST*1*18")=1
"RTN","A1AEUF5E",52,0)
 ;;
"RTN","A1AEUF5E",53,0)
 ;;POO(1,"A1AEXTST*1*19")=1
"RTN","A1AEUF5E",54,0)
 ;;
"RTN","A1AEUF5E",55,0)
 ;;POO(1,"A1AEXTST*1*20")=1
"RTN","A1AEUF5E",56,0)
 ;;
"RTN","A1AEUF5E",57,0)
 ;;POO(1,"A1AEXTST*1*21")=1
"RTN","A1AEUF5E",58,0)
 ;;
"RTN","A1AEUF5E",59,0)
 ;;POO(1,"A1AEXTST*1*22")=1
"RTN","A1AEUF5E",60,0)
 ;;
"RTN","A1AEUF5E",61,0)
 ;;POO(1,"A1AEXTST*1*23")=1
"RTN","A1AEUF5E",62,0)
 ;;
"RTN","A1AEUF5E",63,0)
 ;;POO(1,"A1AEXTST*1*24")=1
"RTN","A1AEUF5E",64,0)
 ;;
"RTN","A1AEUF5E",65,0)
 ;;POO(1,"A1AEXTST*1*25")=1
"RTN","A1AEUF5E",66,0)
 ;;
"RTN","A1AEUF5E",67,0)
 ;;POO(1,"A1AEXTST*1*26")=1
"RTN","A1AEUF5E",68,0)
 ;;
"RTN","A1AEUF5E",69,0)
 ;;POO(1,"A1AEXTST*1*27")=1
"RTN","A1AEUF5E",70,0)
 ;;
"RTN","A1AEUF5E",71,0)
 ;;POO(1,"A1AEXTST*1*28")=1
"RTN","A1AEUF5E",72,0)
 ;;POO(2,"A1AEXTST*1*10")=2
"RTN","A1AEUF5E",73,0)
 ;;POO(3,"A1AEXTST*1*1")=3
"RTN","A1AEUF5E",74,0)
 ;;POO(4,"A1AEXTST*1*2")=3
"RTN","A1AEUF5E",75,0)
 ;;POO(5,"A1AEXTST*1*3")=3
"RTN","A1AEUF5E",76,0)
 ;;POO(6,"A1AEXTST*1*4")=3
"RTN","A1AEUF5E",77,0)
 ;;POO(7,"A1AEXTST*1*5")=3
"RTN","A1AEUF5E",78,0)
 ;;POO(8,"A1AEXTST*1*11")=2
"RTN","A1AEUF5E",79,0)
 ;;POO(9,"A1AEXTST*1*12")=3
"RTN","A1AEUF5E",80,0)
 ;;POO(10,"A1AEXTST*1*13")=3
"RTN","A1AEUF5E",81,0)
 ;;POO(11,"A1AEXTST*1*14")=3
"RTN","A1AEUF5E",82,0)
 ;;POO(12,"A1AEXTST*1*15")=3
"RTN","A1AEUF5E",83,0)
 ;;POO(13,"A1AEXTST*1*21")=2
"RTN","A1AEUF5E",84,0)
 ;;POO(14,"A1AEXTST*1*22")=2
"RTN","A1AEUF5E",85,0)
 ;;POO(15,"A1AEXTST*1*23")=2
"RTN","A1AEUF5E",86,0)
 ;;POO(16,"A1AEXTST*1*24")=2
"RTN","A1AEUF5E",87,0)
 ;;POO(17,"A1AEXTST*1*25")=2
"RTN","A1AEUF5E",88,0)
 ;;
"RTN","A1AEUF5E",89,0)
 ;;POO(1,"A1AEXTST*1*29")=1
"RTN","A1AEUF5E",90,0)
 ;;POO(2,"A1AEXTST*1*28")=2
"RTN","A1AEUF5E",91,0)
 ;;POO(3,"A1AEXTST*1*10")=3
"RTN","A1AEUF5E",92,0)
 ;;POO(4,"A1AEXTST*1*1")=4
"RTN","A1AEUF5E",93,0)
 ;;POO(5,"A1AEXTST*1*2")=4
"RTN","A1AEUF5E",94,0)
 ;;POO(6,"A1AEXTST*1*3")=4
"RTN","A1AEUF5E",95,0)
 ;;POO(7,"A1AEXTST*1*4")=4
"RTN","A1AEUF5E",96,0)
 ;;POO(8,"A1AEXTST*1*5")=4
"RTN","A1AEUF5E",97,0)
 ;;POO(9,"A1AEXTST*1*11")=3
"RTN","A1AEUF5E",98,0)
 ;;POO(10,"A1AEXTST*1*12")=4
"RTN","A1AEUF5E",99,0)
 ;;POO(11,"A1AEXTST*1*13")=4
"RTN","A1AEUF5E",100,0)
 ;;POO(12,"A1AEXTST*1*14")=4
"RTN","A1AEUF5E",101,0)
 ;;POO(13,"A1AEXTST*1*15")=4
"RTN","A1AEUF5E",102,0)
 ;;POO(14,"A1AEXTST*1*21")=3
"RTN","A1AEUF5E",103,0)
 ;;POO(15,"A1AEXTST*1*22")=3
"RTN","A1AEUF5E",104,0)
 ;;POO(16,"A1AEXTST*1*23")=3
"RTN","A1AEUF5E",105,0)
 ;;POO(17,"A1AEXTST*1*24")=3
"RTN","A1AEUF5E",106,0)
 ;;POO(18,"A1AEXTST*1*25")=3
"RTN","A1AEUF5E",107,0)
 ;;
"RTN","A1AEUF5E",108,0)
 ;;POO(1,"A1AEXTST*1*30")=1
"RTN","A1AEUF5E",109,0)
 ;;POO(2,"A1AEXTST*1*29")=2
"RTN","A1AEUF5E",110,0)
 ;;POO(3,"A1AEXTST*1*28")=3
"RTN","A1AEUF5E",111,0)
 ;;POO(4,"A1AEXTST*1*10")=4
"RTN","A1AEUF5E",112,0)
 ;;POO(5,"A1AEXTST*1*1")=5
"RTN","A1AEUF5E",113,0)
 ;;POO(6,"A1AEXTST*1*2")=5
"RTN","A1AEUF5E",114,0)
 ;;POO(7,"A1AEXTST*1*3")=5
"RTN","A1AEUF5E",115,0)
 ;;POO(8,"A1AEXTST*1*4")=5
"RTN","A1AEUF5E",116,0)
 ;;POO(9,"A1AEXTST*1*5")=5
"RTN","A1AEUF5E",117,0)
 ;;POO(10,"A1AEXTST*1*11")=4
"RTN","A1AEUF5E",118,0)
 ;;POO(11,"A1AEXTST*1*12")=5
"RTN","A1AEUF5E",119,0)
 ;;POO(12,"A1AEXTST*1*13")=5
"RTN","A1AEUF5E",120,0)
 ;;POO(13,"A1AEXTST*1*14")=5
"RTN","A1AEUF5E",121,0)
 ;;POO(14,"A1AEXTST*1*15")=5
"RTN","A1AEUF5E",122,0)
 ;;POO(15,"A1AEXTST*1*21")=4
"RTN","A1AEUF5E",123,0)
 ;;POO(16,"A1AEXTST*1*22")=4
"RTN","A1AEUF5E",124,0)
 ;;POO(17,"A1AEXTST*1*23")=4
"RTN","A1AEUF5E",125,0)
 ;;POO(18,"A1AEXTST*1*24")=4
"RTN","A1AEUF5E",126,0)
 ;;POO(19,"A1AEXTST*1*25")=4
"RTN","A1AEUF5E",127,0)
 ;;
"RTN","A1AEUF5E",128,0)
 ;;/END/
"RTN","A1AEUF5E",129,0)
 ;;
"RTN","A1AEUF5E",130,0)
 ;;
"RTN","A1AEUF5E",131,0)
 ;;
"RTN","A1AEUF5E",132,0)
MULBCHK ;;
"RTN","A1AEUF5E",133,0)
 ;;POO(1,"A1AEXTST*1*1")=1
"RTN","A1AEUF5E",134,0)
 ;;
"RTN","A1AEUF5E",135,0)
 ;;POO(1,"A1AEXTST*1*2")=1
"RTN","A1AEUF5E",136,0)
 ;;
"RTN","A1AEUF5E",137,0)
 ;;POO(1,"A1AEXTST*1*3")=1
"RTN","A1AEUF5E",138,0)
 ;;
"RTN","A1AEUF5E",139,0)
 ;;POO(1,"A1AEXTST*1*4")=1
"RTN","A1AEUF5E",140,0)
 ;;
"RTN","A1AEUF5E",141,0)
 ;;POO(1,"A1AEXTST*1*5")=1
"RTN","A1AEUF5E",142,0)
 ;;
"RTN","A1AEUF5E",143,0)
 ;;POO(1,"A1AEXTST*1*6")=1
"RTN","A1AEUF5E",144,0)
 ;;
"RTN","A1AEUF5E",145,0)
 ;;POO(1,"A1AEXTST*1*7")=1
"RTN","A1AEUF5E",146,0)
 ;;
"RTN","A1AEUF5E",147,0)
 ;;POO(1,"A1AEXTST*1*8")=1
"RTN","A1AEUF5E",148,0)
 ;;
"RTN","A1AEUF5E",149,0)
 ;;POO(1,"A1AEXTST*1*9")=1
"RTN","A1AEUF5E",150,0)
 ;;
"RTN","A1AEUF5E",151,0)
 ;;POO(1,"A1AEXTST*1*10")=1
"RTN","A1AEUF5E",152,0)
 ;;POO(2,"A1AEXTST*1*6")=2
"RTN","A1AEUF5E",153,0)
 ;;POO(3,"A1AEXTST*1*7")=2
"RTN","A1AEUF5E",154,0)
 ;;POO(4,"A1AEXTST*1*8")=2
"RTN","A1AEUF5E",155,0)
 ;;POO(5,"A1AEXTST*1*9")=2
"RTN","A1AEUF5E",156,0)
 ;;
"RTN","A1AEUF5E",157,0)
 ;;POO(1,"A1AEXTST*1*11")=1
"RTN","A1AEUF5E",158,0)
 ;;POO(2,"A1AEXTST*1*16")=2
"RTN","A1AEUF5E",159,0)
 ;;POO(3,"A1AEXTST*1*17")=2
"RTN","A1AEUF5E",160,0)
 ;;POO(4,"A1AEXTST*1*18")=2
"RTN","A1AEUF5E",161,0)
 ;;POO(5,"A1AEXTST*1*19")=2
"RTN","A1AEUF5E",162,0)
 ;;POO(6,"A1AEXTST*1*20")=2
"RTN","A1AEUF5E",163,0)
 ;;
"RTN","A1AEUF5E",164,0)
 ;;POO(1,"A1AEXTST*1*12")=1
"RTN","A1AEUF5E",165,0)
 ;;
"RTN","A1AEUF5E",166,0)
 ;;POO(1,"A1AEXTST*1*13")=1
"RTN","A1AEUF5E",167,0)
 ;;
"RTN","A1AEUF5E",168,0)
 ;;POO(1,"A1AEXTST*1*14")=1
"RTN","A1AEUF5E",169,0)
 ;;
"RTN","A1AEUF5E",170,0)
 ;;POO(1,"A1AEXTST*1*15")=1
"RTN","A1AEUF5E",171,0)
 ;;
"RTN","A1AEUF5E",172,0)
 ;;POO(1,"A1AEXTST*1*16")=1
"RTN","A1AEUF5E",173,0)
 ;;
"RTN","A1AEUF5E",174,0)
 ;;POO(1,"A1AEXTST*1*17")=1
"RTN","A1AEUF5E",175,0)
 ;;
"RTN","A1AEUF5E",176,0)
 ;;POO(1,"A1AEXTST*1*18")=1
"RTN","A1AEUF5E",177,0)
 ;;
"RTN","A1AEUF5E",178,0)
 ;;POO(1,"A1AEXTST*1*19")=1
"RTN","A1AEUF5E",179,0)
 ;;
"RTN","A1AEUF5E",180,0)
 ;;POO(1,"A1AEXTST*1*20")=1
"RTN","A1AEUF5E",181,0)
 ;;
"RTN","A1AEUF5E",182,0)
 ;;POO(1,"A1AEXTST*1*21")=1
"RTN","A1AEUF5E",183,0)
 ;;
"RTN","A1AEUF5E",184,0)
 ;;POO(1,"A1AEXTST*1*22")=1
"RTN","A1AEUF5E",185,0)
 ;;
"RTN","A1AEUF5E",186,0)
 ;;POO(1,"A1AEXTST*1*23")=1
"RTN","A1AEUF5E",187,0)
 ;;
"RTN","A1AEUF5E",188,0)
 ;;POO(1,"A1AEXTST*1*24")=1
"RTN","A1AEUF5E",189,0)
 ;;
"RTN","A1AEUF5E",190,0)
 ;;POO(1,"A1AEXTST*1*25")=1
"RTN","A1AEUF5E",191,0)
 ;;
"RTN","A1AEUF5E",192,0)
 ;;POO(1,"A1AEXTST*1*26")=1
"RTN","A1AEUF5E",193,0)
 ;;
"RTN","A1AEUF5E",194,0)
 ;;POO(1,"A1AEXTST*1*27")=1
"RTN","A1AEUF5E",195,0)
 ;;
"RTN","A1AEUF5E",196,0)
 ;;POO(1,"A1AEXTST*1*28")=1
"RTN","A1AEUF5E",197,0)
 ;;POO(2,"A1AEXTST*1*26")=2
"RTN","A1AEUF5E",198,0)
 ;;POO(3,"A1AEXTST*1*27")=2
"RTN","A1AEUF5E",199,0)
 ;;
"RTN","A1AEUF5E",200,0)
 ;;POO(1,"A1AEXTST*1*29")=1
"RTN","A1AEUF5E",201,0)
 ;;POO(2,"A1AEXTST*1*1")=2
"RTN","A1AEUF5E",202,0)
 ;;POO(3,"A1AEXTST*1*11")=2
"RTN","A1AEUF5E",203,0)
 ;;POO(4,"A1AEXTST*1*16")=3
"RTN","A1AEUF5E",204,0)
 ;;POO(5,"A1AEXTST*1*17")=3
"RTN","A1AEUF5E",205,0)
 ;;POO(6,"A1AEXTST*1*18")=3
"RTN","A1AEUF5E",206,0)
 ;;POO(7,"A1AEXTST*1*19")=3
"RTN","A1AEUF5E",207,0)
 ;;POO(8,"A1AEXTST*1*20")=3
"RTN","A1AEUF5E",208,0)
 ;;POO(9,"A1AEXTST*1*28")=2
"RTN","A1AEUF5E",209,0)
 ;;POO(10,"A1AEXTST*1*26")=3
"RTN","A1AEUF5E",210,0)
 ;;POO(11,"A1AEXTST*1*27")=3
"RTN","A1AEUF5E",211,0)
 ;;
"RTN","A1AEUF5E",212,0)
 ;;POO(1,"A1AEXTST*1*30")=1
"RTN","A1AEUF5E",213,0)
 ;;
"RTN","A1AEUF5E",214,0)
 ;;/END/
"RTN","A1AEUF5E",215,0)
 ;;
"RTN","A1AEUF5E",216,0)
A1AEFRB ;;
"RTN","A1AEUF5E",217,0)
 ;;A1AEXTST*1*1
"RTN","A1AEUF5E",218,0)
 ;;A1AEXTST*1*10
"RTN","A1AEUF5E",219,0)
 ;;A1AEXTST*1*11
"RTN","A1AEUF5E",220,0)
 ;;A1AEXTST*1*12
"RTN","A1AEUF5E",221,0)
 ;;A1AEXTST*1*13
"RTN","A1AEUF5E",222,0)
 ;;A1AEXTST*1*14
"RTN","A1AEUF5E",223,0)
 ;;A1AEXTST*1*15
"RTN","A1AEUF5E",224,0)
 ;;A1AEXTST*1*2
"RTN","A1AEUF5E",225,0)
 ;;A1AEXTST*1*21
"RTN","A1AEUF5E",226,0)
 ;;A1AEXTST*1*22
"RTN","A1AEUF5E",227,0)
 ;;A1AEXTST*1*23
"RTN","A1AEUF5E",228,0)
 ;;A1AEXTST*1*24
"RTN","A1AEUF5E",229,0)
 ;;A1AEXTST*1*25
"RTN","A1AEUF5E",230,0)
 ;;A1AEXTST*1*3
"RTN","A1AEUF5E",231,0)
 ;;A1AEXTST*1*4
"RTN","A1AEUF5E",232,0)
 ;;A1AEXTST*1*5
"RTN","A1AEUF5E",233,0)
 ;;/END/
"RTN","A1AEUF5E",234,0)
 ;;
"RTN","A1AEUF5E",235,0)
A1AEFMB ;;
"RTN","A1AEUF5E",236,0)
 ;;A1AEXTST*1*1
"RTN","A1AEUF5E",237,0)
 ;;A1AEXTST*1*11
"RTN","A1AEUF5E",238,0)
 ;;A1AEXTST*1*16
"RTN","A1AEUF5E",239,0)
 ;;A1AEXTST*1*17
"RTN","A1AEUF5E",240,0)
 ;;A1AEXTST*1*18
"RTN","A1AEUF5E",241,0)
 ;;A1AEXTST*1*19
"RTN","A1AEUF5E",242,0)
 ;;A1AEXTST*1*20
"RTN","A1AEUF5E",243,0)
 ;;A1AEXTST*1*26
"RTN","A1AEUF5E",244,0)
 ;;A1AEXTST*1*27
"RTN","A1AEUF5E",245,0)
 ;;A1AEXTST*1*28
"RTN","A1AEUF5E",246,0)
 ;;/END/
"RTN","A1AEUF5E",247,0)
 ;
"RTN","A1AEUK1")
0^106^B167715864
"RTN","A1AEUK1",1,0)
A1AEUK1 ;ven/lgc,jli-unit tests for A1AEK1 ; 6/4/15 7:35pm
"RTN","A1AEUK1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUK1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUK1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUK1",5,0)
 ;
"RTN","A1AEUK1",6,0)
 ;
"RTN","A1AEUK1",7,0)
 ;primary change history
"RTN","A1AEUK1",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUK1",9,0)
 ;
"RTN","A1AEUK1",10,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUK1",11,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUK1",12,0)
 Q
"RTN","A1AEUK1",13,0)
 ;
"RTN","A1AEUK1",14,0)
STARTUP ;
"RTN","A1AEUK1",15,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUK1",16,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUK1",17,0)
 . S A1AEFAIL=1
"RTN","A1AEUK1",18,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUK1",19,0)
 . W !," Unable to perform testing."
"RTN","A1AEUK1",20,0)
 ;
"RTN","A1AEUK1",21,0)
 L +^A1AE(11005):1 I '$T D  Q
"RTN","A1AEUK1",22,0)
 . S A1AEFAIL=1
"RTN","A1AEUK1",23,0)
 . W !,"Unable to obtain lock on PATCHES [#11005] file"
"RTN","A1AEUK1",24,0)
 . W !," Unable to perform testing."
"RTN","A1AEUK1",25,0)
 Q
"RTN","A1AEUK1",26,0)
 ;
"RTN","A1AEUK1",27,0)
SHUTDOWN L -^XPD(9.6):1
"RTN","A1AEUK1",28,0)
 L -^A1AE(11005):1
"RTN","A1AEUK1",29,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUK1",30,0)
 K A1AEFAIL
"RTN","A1AEUK1",31,0)
 Q
"RTN","A1AEUK1",32,0)
 ;
"RTN","A1AEUK1",33,0)
 ; Testing
"RTN","A1AEUK1",34,0)
 ;  A1AEK1             UTP60
"RTN","A1AEUK1",35,0)
 ;  EN^A1AEK1          UTP61
"RTN","A1AEUK1",36,0)
 ;  SSEKSY^A1AEK1      UTP62
"RTN","A1AEUK1",37,0)
 ;  SSEKSN^A1AEK1      UTP63
"RTN","A1AEUK1",38,0)
 ;  GLSTINST^A1AEK1    UTP64
"RTN","A1AEUK1",39,0)
 ;  MISSING^A1AEK1     UTP65
"RTN","A1AEUK1",40,0)
 ;  SHOWMSQN^A1AEK1    UTP66
"RTN","A1AEUK1",41,0)
 ;  ANSWQ^A1AEK1       UTP67
"RTN","A1AEUK1",42,0)
 ;  SSEKS^A1AEK1       UTP68
"RTN","A1AEUK1",43,0)
 ;  SITEVAR^A1AEK1     UTP69
"RTN","A1AEUK1",44,0)
 ;  KIDVAR^A1AEK1      UTP70
"RTN","A1AEUK1",45,0)
 ;  ACTVERS^A1AEK1     UTP71
"RTN","A1AEUK1",46,0)
 ;  ERRMSG^A1AEK1      UTP72
"RTN","A1AEUK1",47,0)
 ;  WARN^A1AEK1        UTP73
"RTN","A1AEUK1",48,0)
 ;
"RTN","A1AEUK1",49,0)
 ;A1AEK1
"RTN","A1AEUK1",50,0)
UTP60 ; Test entering routine at top
"RTN","A1AEUK1",51,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",52,0)
 . K ^XTMP($J,"A1AEK1 FROM TOP")
"RTN","A1AEUK1",53,0)
 . D ^A1AEK1
"RTN","A1AEUK1",54,0)
 . S X=$D(^XTMP($J,"A1AEK1 FROM TOP"))
"RTN","A1AEUK1",55,0)
 . D CHKEQ^%ut(1,X,"Testing calling A1AEK1 from Top FAILED!")
"RTN","A1AEUK1",56,0)
 . Q
"RTN","A1AEUK1",57,0)
 ;
"RTN","A1AEUK1",58,0)
 ;EN^A1AEK1
"RTN","A1AEUK1",59,0)
UTP61 ; Test suitability of patch for install
"RTN","A1AEUK1",60,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",61,0)
 . N X
"RTN","A1AEUK1",62,0)
 . N SV D SITEVAR^A1AEK1(.SV)
"RTN","A1AEUK1",63,0)
 . S SV("ACTPKGV")=$$ACTVERS^A1AEK1("DG")
"RTN","A1AEUK1",64,0)
 . N NODE S NODE=$NA(^DIC(9.4,"A1AESEQ","DG",SV("ACTPKGV")))
"RTN","A1AEUK1",65,0)
 . S NODE=$Q(@NODE)
"RTN","A1AEUK1",66,0)
 . N XPDT S XPDT(1)="1234^"_$QS(NODE,7)
"RTN","A1AEUK1",67,0)
 . S ^XTMP("XPDI",1234,"A1AEUK1",4321,0)=$QS(NODE,7)_"^DG^0^3080108^y"
"RTN","A1AEUK1",68,0)
 . N KV D KIDVAR^A1AEK1(.KV,.XPDT,1)
"RTN","A1AEUK1",69,0)
 . N A1AEHDR S A1AEHDR="Released "_KV("PTCHNM")_"SEQ #681"
"RTN","A1AEUK1",70,0)
 . S X=999
"RTN","A1AEUK1",71,0)
 . N MYDT S MYDT=DTIME,DTIME=1
"RTN","A1AEUK1",72,0)
 . S X=$$EN^A1AEK1(A1AEHDR)
"RTN","A1AEUK1",73,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",74,0)
 . S X=($G(X)<2)
"RTN","A1AEUK1",75,0)
 . D CHKEQ^%ut(1,X,"Testing suitability of patch for install FAILED!")
"RTN","A1AEUK1",76,0)
 . Q
"RTN","A1AEUK1",77,0)
 ;
"RTN","A1AEUK1",78,0)
 ;SSEKSY^A1AEK1
"RTN","A1AEUK1",79,0)
UTP62 ; Test procedures when Patch and Site Stream match
"RTN","A1AEUK1",80,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",81,0)
 . N X
"RTN","A1AEUK1",82,0)
 . N SV D SITEVAR^A1AEK1(.SV)
"RTN","A1AEUK1",83,0)
 . S SV("ACTPKGV")=$$ACTVERS^A1AEK1("DG")
"RTN","A1AEUK1",84,0)
 . N NODE S NODE=$NA(^DIC(9.4,"A1AESEQ","DG",SV("ACTPKGV")))
"RTN","A1AEUK1",85,0)
 . S NODE=$Q(@NODE)
"RTN","A1AEUK1",86,0)
 . N XPDT S XPDT(1)="1234^"_$QS(NODE,7)
"RTN","A1AEUK1",87,0)
 . S ^XTMP("XPDI",1234,"A1AEUK1",4321,0)=$QS(NODE,7)_"^DG^0^3080108^y"
"RTN","A1AEUK1",88,0)
 . N KV D KIDVAR^A1AEK1(.KV,.XPDT,1)
"RTN","A1AEUK1",89,0)
 . K ^XTMP("XPDI",1234,"A1AEUK1",4321,0)
"RTN","A1AEUK1",90,0)
 . N SSEKS S SSEKS=$$SSEKS^A1AEK1(.SV,.KV)
"RTN","A1AEUK1",91,0)
 . N ABORT,MSSEQ S (ABORT,MSSEQ(0))=0
"RTN","A1AEUK1",92,0)
 . S (X,ABORT)=$$SSEKSY^A1AEK1(.MSSEQ,.ABORT)
"RTN","A1AEUK1",93,0)
 .; ABORT should return unchanged. No missing back patches
"RTN","A1AEUK1",94,0)
 . I ABORT D  Q
"RTN","A1AEUK1",95,0)
 .. D CHKEQ^%ut(0,X,"Testing KIDS/Site Stream Match FAILED!")
"RTN","A1AEUK1",96,0)
 .; Missing back patches, site hasn't changed Streams
"RTN","A1AEUK1",97,0)
 . N STRMCHNG S STRMCHNG=0
"RTN","A1AEUK1",98,0)
 . S MSSEQ(KV("PTCHSTRM"),1)=""
"RTN","A1AEUK1",99,0)
 . N MYDT S MYDT=DTIME,DTIME=1
"RTN","A1AEUK1",100,0)
 . S (X,ABORT)=$$SSEKSY^A1AEK1(.MSSEQ,.ABORT)
"RTN","A1AEUK1",101,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",102,0)
 . I ABORT D  Q
"RTN","A1AEUK1",103,0)
 .. D CHKEQ^%ut(0,X,"Testing KIDS/Site Stream Match FAILED!")
"RTN","A1AEUK1",104,0)
 .; Missing back patches, site has changed streams
"RTN","A1AEUK1",105,0)
 . S STRMCHNG=1
"RTN","A1AEUK1",106,0)
 . S MYDT=DTIME,DTIME=1
"RTN","A1AEUK1",107,0)
 . S (X,ABORT)=$$SSEKSY^A1AEK1(.MSSEQ,.ABORT)
"RTN","A1AEUK1",108,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",109,0)
 . D CHKEQ^%ut(1,X,"Testing KIDS/Site Stream Match FAILED!")
"RTN","A1AEUK1",110,0)
 . Q
"RTN","A1AEUK1",111,0)
 ;
"RTN","A1AEUK1",112,0)
 ;SSEKSN^A1AEK1
"RTN","A1AEUK1",113,0)
UTP63 ; Test procedures when Patch and Site Stream DO NOT match
"RTN","A1AEUK1",114,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",115,0)
 . N X
"RTN","A1AEUK1",116,0)
 . N SV D SITEVAR^A1AEK1(.SV)
"RTN","A1AEUK1",117,0)
 . S SV("ACTPKGV")=$$ACTVERS^A1AEK1("DG")
"RTN","A1AEUK1",118,0)
 . N NODE S NODE=$NA(^DIC(9.4,"A1AESEQ","DG",SV("ACTPKGV")))
"RTN","A1AEUK1",119,0)
 . S NODE=$Q(@NODE)
"RTN","A1AEUK1",120,0)
 . N XPDT S XPDT(1)="1234^"_$QS(NODE,7)
"RTN","A1AEUK1",121,0)
 . S ^XTMP("XPDI",1234,"A1AEUK1",4321,0)=$QS(NODE,7)_"^DG^0^3080108^y"
"RTN","A1AEUK1",122,0)
 . N KV D KIDVAR^A1AEK1(.KV,.XPDT,1)
"RTN","A1AEUK1",123,0)
 . K ^XTMP("XPDI",1234,"A1AEUK1",4321,0)
"RTN","A1AEUK1",124,0)
 . N SSEKS S SSEKS=0
"RTN","A1AEUK1",125,0)
 . N ABORT,MSSEQ S (ABORT,MSSEQ(0))=0
"RTN","A1AEUK1",126,0)
 . S KV("PTCHSTRM")=9 ; No such patch stream exists
"RTN","A1AEUK1",127,0)
 . N MYDT S MYDT=DTIME,DTIME=1
"RTN","A1AEUK1",128,0)
 . S (X,ABORT)=$$SSEKSN^A1AEK1(.MSSEQ,.ABORT)
"RTN","A1AEUK1",129,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",130,0)
 . I 'ABORT D  Q
"RTN","A1AEUK1",131,0)
 .. D CHKEQ^%ut(1,X,"Testing KIDS/Site Stream NOT Match FAILED!")
"RTN","A1AEUK1",132,0)
 . N PTCINST S PTCINST(KV("PTCHSTRM"),KV("PKGPRFX"))=""
"RTN","A1AEUK1",133,0)
 . S KV("PTCHSQN")=99
"RTN","A1AEUK1",134,0)
 . N FI S FI(SV("STRM"))=9
"RTN","A1AEUK1",135,0)
 . S DTIME=1
"RTN","A1AEUK1",136,0)
 . S (X,ABORT)=$$SSEKSN^A1AEK1(.MSSEQ,.ABORT)
"RTN","A1AEUK1",137,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",138,0)
 . I 'ABORT D  Q
"RTN","A1AEUK1",139,0)
 .. D CHKEQ^%ut(1,X,"Testing KIDS/Site Stream NOT Match FAILED!")
"RTN","A1AEUK1",140,0)
 . S KV("PTCHSQN")=9
"RTN","A1AEUK1",141,0)
 . S FI(SV("STRM"))=99
"RTN","A1AEUK1",142,0)
 . S DTIME=1
"RTN","A1AEUK1",143,0)
 . S (X,ABORT)=$$SSEKSN^A1AEK1(.MSSEQ,.ABORT)
"RTN","A1AEUK1",144,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",145,0)
 . D CHKEQ^%ut(0,X,"Testing KIDS/Site Stream NOT Match FAILED!")
"RTN","A1AEUK1",146,0)
 . Q
"RTN","A1AEUK1",147,0)
 ;
"RTN","A1AEUK1",148,0)
 ;
"RTN","A1AEUK1",149,0)
 ;GLSTINST^A1AEK1
"RTN","A1AEUK1",150,0)
UTP64 ; Test building array of installed patches for this package
"RTN","A1AEUK1",151,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK1",152,0)
 . N PKGPRFX,PKGVER,X S X=1
"RTN","A1AEUK1",153,0)
 . S PKGPRFX="DG"
"RTN","A1AEUK1",154,0)
 . S PKGVER=$$ACTVERS^A1AEK1(PKGPRFX)
"RTN","A1AEUK1",155,0)
 .; Run API with POO variables
"RTN","A1AEUK1",156,0)
 . N POO,POOSTCH,LIPOO,FIPOO
"RTN","A1AEUK1",157,0)
 . D GLSTINST^A1AEK1(PKGPRFX,PKGVER,.POO,.POOSTCH,.LIPOO,.FIPOO)
"RTN","A1AEUK1",158,0)
 .; Now build new set of variables
"RTN","A1AEUK1",159,0)
 . N PTCINST,STRMCHNG,LI,FI
"RTN","A1AEUK1",160,0)
 . S STRMCHNG=0
"RTN","A1AEUK1",161,0)
 . S PTCINST(0)=0
"RTN","A1AEUK1",162,0)
 . N NODE S NODE=$NA(^DIC(9.4,"A1AESEQ",PKGPRFX,PKGVER))
"RTN","A1AEUK1",163,0)
 . N STRM,SC,SNODE S SC=0,SNODE=$P(NODE,")")
"RTN","A1AEUK1",164,0)
 . F  S NODE=$Q(@NODE) Q:NODE'[SNODE  D
"RTN","A1AEUK1",165,0)
 .. I ($G(STRM)'=$QS(NODE,5)) S STRM=$QS(NODE,5) D
"RTN","A1AEUK1",166,0)
 ... S FI($QS(NODE,5))=$QS(NODE,6)
"RTN","A1AEUK1",167,0)
 .. S PTCINST($QS(NODE,5),$QS(NODE,6),PKGPRFX,PKGVER,$QS(NODE,7))=""
"RTN","A1AEUK1",168,0)
 .. S LI($QS(NODE,5))=$QS(NODE,6)
"RTN","A1AEUK1",169,0)
 .. S PTCINST(0)=$G(PTCINST(0))+1
"RTN","A1AEUK1",170,0)
 .. S SC=$S(SC=0:SC=$QS(NODE,5),SC=$QS(NODE,5):$QS(NODE,5),1:"C")
"RTN","A1AEUK1",171,0)
 . S STRMCHNG=$S(SC="C":1,1:0)
"RTN","A1AEUK1",172,0)
 .; Now check arrays
"RTN","A1AEUK1",173,0)
 . N NA,NB S NA=$NA(POO),NB=$NA(PTCINST)
"RTN","A1AEUK1",174,0)
 . S X=1
"RTN","A1AEUK1",175,0)
 . F  S NA=$Q(@NA),NB=$Q(@NB) Q:NA'["POO"  Q:NB'["PTSA"  D  Q:'X
"RTN","A1AEUK1",176,0)
 .. I $QS(NA,1)'=$QS(NB,1) S X=0
"RTN","A1AEUK1",177,0)
 .. I $QS(NA,2)'=$QS(NB,2) S X=0
"RTN","A1AEUK1",178,0)
 .. I @NA'=@NB S X=0
"RTN","A1AEUK1",179,0)
 .; X=1 shows full match
"RTN","A1AEUK1",180,0)
 . I 'X D  Q
"RTN","A1AEUK1",181,0)
 .. D CHKEQ^%ut(1,X,"Test array of installed patches FAILED!")
"RTN","A1AEUK1",182,0)
 . S NA=$NA(FIPOO),NB=$NA(FI)
"RTN","A1AEUK1",183,0)
 . F  S NA=$Q(@NA),NB=$Q(@NB) Q:NA'["POO"  Q:NB'["PTSA"  D  Q:'X
"RTN","A1AEUK1",184,0)
 .. I $QS(NA,1)'=$QS(NB,1) S X=0
"RTN","A1AEUK1",185,0)
 .. I $QS(NA,2)'=$QS(NB,2) S X=0
"RTN","A1AEUK1",186,0)
 .. I @NA'=@NB S X=0
"RTN","A1AEUK1",187,0)
 .; X=1 shows full match
"RTN","A1AEUK1",188,0)
 . I 'X D  Q
"RTN","A1AEUK1",189,0)
 .. D CHKEQ^%ut(1,X,"Test array of installed patches FAILED!")
"RTN","A1AEUK1",190,0)
 . S NA=$NA(LIPOO),NB=$NA(LI)
"RTN","A1AEUK1",191,0)
 . F  S NA=$Q(@NA),NB=$Q(@NB) Q:NA'["POO"  Q:NB'["PTSA"  D  Q:'X
"RTN","A1AEUK1",192,0)
 .. I $QS(NA,1)'=$QS(NB,1) S X=0
"RTN","A1AEUK1",193,0)
 .. I $QS(NA,2)'=$QS(NB,2) S X=0
"RTN","A1AEUK1",194,0)
 .. I @NA'=@NB S X=0
"RTN","A1AEUK1",195,0)
 .; X=1 shows full match
"RTN","A1AEUK1",196,0)
 . I 'X D  Q
"RTN","A1AEUK1",197,0)
 .. D CHKEQ^%ut(1,X,"Test array of installed patches FAILED!")
"RTN","A1AEUK1",198,0)
 .;
"RTN","A1AEUK1",199,0)
 . S:X X=(POOSTCH=STRMCHNG)
"RTN","A1AEUK1",200,0)
 . D CHKEQ^%ut(1,X,"Test array of installed patches FAILED!")
"RTN","A1AEUK1",201,0)
 Q
"RTN","A1AEUK1",202,0)
 ;
"RTN","A1AEUK1",203,0)
 ;MISSING^A1AEK1
"RTN","A1AEUK1",204,0)
UTP65 ; Test building missing patches array
"RTN","A1AEUK1",205,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK1",206,0)
 . N PKGPRFX,PKGVER,PTCHSQN,MSSEQ,POO
"RTN","A1AEUK1",207,0)
 . S PKGPRFX="DG",PKGVER=5.3,PTCHSQN=100
"RTN","A1AEUK1",208,0)
 . D MISSING^A1AEK1(PKGPRFX,PKGVER,PTCHSQN,.MSSEQ)
"RTN","A1AEUK1",209,0)
 . M POO=MSSEQ K MSSEQ
"RTN","A1AEUK1",210,0)
 . N STRM,SEQN,STRMABB,PTCHNM S STRMABB=""
"RTN","A1AEUK1",211,0)
 . F  S STRMABB=$O(^A1AE(11007.1,"C",STRMABB)) Q:STRMABB=""  D
"RTN","A1AEUK1",212,0)
 .. S STRM=+$O(^A1AE(11007.1,"C",STRMABB,0)) Q:'STRM
"RTN","A1AEUK1",213,0)
 .. F SEQN=1:1:PTCHSQN D
"RTN","A1AEUK1",214,0)
 ... I $D(^DIC(9.4,"A1AESEQ",PKGPRFX,PKGVER,STRM,SEQN)) Q
"RTN","A1AEUK1",215,0)
 ... S MSSEQ(STRM,SEQN)=""
"RTN","A1AEUK1",216,0)
 .; Now compare MSSEQ and POO
"RTN","A1AEUK1",217,0)
 . N NODE,X S NODE=$NA(MSSEQ),X=1
"RTN","A1AEUK1",218,0)
 . F  S NODE=$Q(@NODE) Q:NODE'["MSSEQ"  D  Q:'X
"RTN","A1AEUK1",219,0)
 .. I '$D(POO($QS(NODE,1),$QS(NODE,2))) S X=0 Q
"RTN","A1AEUK1",220,0)
 .. K POO($QS(NODE,1),$QS(NODE,2))
"RTN","A1AEUK1",221,0)
 . I $D(POO) S X=0
"RTN","A1AEUK1",222,0)
 . D CHKEQ^%ut(1,X,"Testing Creating Missing SEQ # array FAILED!")
"RTN","A1AEUK1",223,0)
 Q
"RTN","A1AEUK1",224,0)
 ;
"RTN","A1AEUK1",225,0)
 ;SHOWMSQN^A1AEK1
"RTN","A1AEUK1",226,0)
UTP66 ; Test showing missing patches
"RTN","A1AEUK1",227,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK1",228,0)
 . N MSA S MSA(0)=0
"RTN","A1AEUK1",229,0)
 . N STRM S STRM=99
"RTN","A1AEUK1",230,0)
 . N MSSEQ S MSSEQ(0)=1,MSSEQ(99,33)=""
"RTN","A1AEUK1",231,0)
 . S MSA=$$SHOWMSQN^A1AEK1(.MSSEQ,"DG",STRM,0,.MSA)
"RTN","A1AEUK1",232,0)
 . S X=($D(MSA)>1)
"RTN","A1AEUK1",233,0)
 . D CHKEQ^%ut(1,X,"Testing Listing Missing SEQ # FAILED!")
"RTN","A1AEUK1",234,0)
 Q
"RTN","A1AEUK1",235,0)
 ;
"RTN","A1AEUK1",236,0)
 ;ANSWQ^A1AEK1
"RTN","A1AEUK1",237,0)
UTP67 ; Test No/Yes query
"RTN","A1AEUK1",238,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK1",239,0)
 . N X,MYDT S MYDT=DTIME S DTIME=1
"RTN","A1AEUK1",240,0)
 . S X=$$ANSWQ^A1AEK1
"RTN","A1AEUK1",241,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",242,0)
 . D CHKEQ^%ut(0,X,"Testing No/Yes query FAILED!")
"RTN","A1AEUK1",243,0)
 Q
"RTN","A1AEUK1",244,0)
 ;
"RTN","A1AEUK1",245,0)
 ;SSEKS^A1AEK1
"RTN","A1AEUK1",246,0)
UTP68 ; Test variable for Site = KIDS Stream
"RTN","A1AEUK1",247,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",248,0)
 . N KV,SV S KV("PTCHSTRM")=1,SV("STRM")=1
"RTN","A1AEUK1",249,0)
 . S X=$$SSEKS^A1AEK1(.SV,.KV)
"RTN","A1AEUK1",250,0)
 . S:X KV("PTCHSTRM")=1,SV("STRM")=10001
"RTN","A1AEUK1",251,0)
 . S:X X='$$SSEKS^A1AEK1(.SV,.KV)
"RTN","A1AEUK1",252,0)
 . D CHKEQ^%ut(1,X,"Test variable for Site = KIDS Stream FAILED!")
"RTN","A1AEUK1",253,0)
 . Q
"RTN","A1AEUK1",254,0)
 ;
"RTN","A1AEUK1",255,0)
 ;SITEVAR^A1AEK1
"RTN","A1AEUK1",256,0)
UTP69 ; Test building relavent Site Variables
"RTN","A1AEUK1",257,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",258,0)
 . N SV D SITEVAR^A1AEK1(.SV)
"RTN","A1AEUK1",259,0)
 . N STRM S STRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEUK1",260,0)
 . I STRM S X=(SV("STRM")=STRM)
"RTN","A1AEUK1",261,0)
 . I X S X=(SV("STRMNM")=$P($G(^A1AE(11007.1,STRM,0)),"^"))
"RTN","A1AEUK1",262,0)
 . I X S X=(SV("STRMDT")=$O(^A1AE(11007.1,STRM,1,"B","A"),-1))
"RTN","A1AEUK1",263,0)
 . I X S X=(SV("STRMPRFX")=$$GET1^DIQ(11007.1,STRM,.05))
"RTN","A1AEUK1",264,0)
 . D CHKEQ^%ut(1,X,"Test building relavent Site Variables FAILED!")
"RTN","A1AEUK1",265,0)
 . Q
"RTN","A1AEUK1",266,0)
 ;
"RTN","A1AEUK1",267,0)
 ;KIDVAR^A1AEK1
"RTN","A1AEUK1",268,0)
UTP70 ; Test building relavent KIDS Variables
"RTN","A1AEUK1",269,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",270,0)
 . N X
"RTN","A1AEUK1",271,0)
 . N SV D SITEVAR^A1AEK1(.SV)
"RTN","A1AEUK1",272,0)
 . S SV("ACTPKGV")=$$ACTVERS^A1AEK1("DG")
"RTN","A1AEUK1",273,0)
 . N NODE S NODE=$NA(^DIC(9.4,"A1AESEQ","DG",SV("ACTPKGV")))
"RTN","A1AEUK1",274,0)
 . S NODE=$Q(@NODE)
"RTN","A1AEUK1",275,0)
 . N XPDT S XPDT(1)="1234^"_$QS(NODE,7)
"RTN","A1AEUK1",276,0)
 . S ^XTMP("XPDI",1234,"A1AEUK1",4321,0)=$QS(NODE,7)_"^DG^0^3080108^y"
"RTN","A1AEUK1",277,0)
 . N KV D KIDVAR^A1AEK1(.KV,.XPDT,1)
"RTN","A1AEUK1",278,0)
 . K ^XTMP("XPDI",1234,"A1AEUK1",4321,0)
"RTN","A1AEUK1",279,0)
 . N PTCHNM S PTCHNM=$P(XPDT(1),"^",2)
"RTN","A1AEUK1",280,0)
 . S X=(PTCHNM=KV("PTCHNM"))
"RTN","A1AEUK1",281,0)
 . S:X X=(KV("PKGPRFX")=$P(PTCHNM,"*"))
"RTN","A1AEUK1",282,0)
 . S:X X=(KV("PTCHVER")=$P(PTCHNM,"*",2))
"RTN","A1AEUK1",283,0)
 . S:X X=(KV("PTCHNBR")=$P(PTCHNM,"*",3))
"RTN","A1AEUK1",284,0)
 . N I,KVPTCS S I=0
"RTN","A1AEUK1",285,0)
 . F  S I=$O(^A1AE(11007.1,I)) Q:'I  Q:(I>KV("PTCHNBR"))  D
"RTN","A1AEUK1",286,0)
 .. S KVPTCS=I
"RTN","A1AEUK1",287,0)
 . S:X X=(KV("PTCHSTRM")=KVPTCS)
"RTN","A1AEUK1",288,0)
 . S:X X=(KV("PTCHRDT")=3080108)
"RTN","A1AEUK1",289,0)
 . D CHKEQ^%ut(1,X,"Test building relavent KIDS Variables FAILED!")
"RTN","A1AEUK1",290,0)
 . Q
"RTN","A1AEUK1",291,0)
 ;
"RTN","A1AEUK1",292,0)
 ;
"RTN","A1AEUK1",293,0)
 ;ACTVERS^A1AEK1
"RTN","A1AEUK1",294,0)
UTP71 ; Test returning Site's Active Version of a package
"RTN","A1AEUK1",295,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",296,0)
 . N PKGPRFX S PKGPRFX="DG"
"RTN","A1AEUK1",297,0)
 . N I S I=$O(^DIC(9.4,"C",PKGPRFX,0))
"RTN","A1AEUK1",298,0)
 . N X S X=($G(I)>0)
"RTN","A1AEUK1",299,0)
 . N DGVER
"RTN","A1AEUK1",300,0)
 . S:X DGVER=$$GET1^DIQ(9.4,I_",",13)
"RTN","A1AEUK1",301,0)
 . S:X X=($G(DGVER)>0)
"RTN","A1AEUK1",302,0)
 . S:X X=(DGVER=$$ACTVERS^A1AEK1("DG"))
"RTN","A1AEUK1",303,0)
 . D CHKEQ^%ut(1,X,"Test finding Site's Active PKG version  FAILED!")
"RTN","A1AEUK1",304,0)
 . Q
"RTN","A1AEUK1",305,0)
 ;
"RTN","A1AEUK1",306,0)
 ;ERRMSG^A1AEK1
"RTN","A1AEUK1",307,0)
UTP72 ; Test building appropriate error message
"RTN","A1AEUK1",308,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",309,0)
 . N MSG,STRNG,X
"RTN","A1AEUK1",310,0)
 . S MSG(1)="Couln't ascertain active package version on system^93"
"RTN","A1AEUK1",311,0)
 . S MSG(2)="Does not represent current package version^93"
"RTN","A1AEUK1",312,0)
 . S MSG(3)="Earler SEQUENCE #'d patches for package not installed^93"
"RTN","A1AEUK1",313,0)
 . S MSG(4)="KIDS install not for your package STREAM^93"
"RTN","A1AEUK1",314,0)
 .; Test finding active package version
"RTN","A1AEUK1",315,0)
 . S MSG=$P($T(PKGVERR^A1AEK1),";;",2)
"RTN","A1AEUK1",316,0)
 . S STRNG=$$ERRMSG^A1AEK1(MSG,93)
"RTN","A1AEUK1",317,0)
 . S X=(STRNG=MSG(1))
"RTN","A1AEUK1",318,0)
 .; Test site not have KIDS package version 
"RTN","A1AEUK1",319,0)
 . S:X MSG=$P($T(VRSNERR^A1AEK1),";;",2)
"RTN","A1AEUK1",320,0)
 . S:X STRNG=$$ERRMSG^A1AEK1(MSG,93)
"RTN","A1AEUK1",321,0)
 . S:X X=(STRNG=MSG(2))
"RTN","A1AEUK1",322,0)
 .; Test earlier SEQ# patch installation
"RTN","A1AEUK1",323,0)
 . S:X MSG=$P($T(MSNGSQN^A1AEK1),";;",2)
"RTN","A1AEUK1",324,0)
 . S:X STRNG=$$ERRMSG^A1AEK1(MSG,93)
"RTN","A1AEUK1",325,0)
 . S:X X=(STRNG=MSG(3))
"RTN","A1AEUK1",326,0)
 .; Test not for your  package stream
"RTN","A1AEUK1",327,0)
 . S:X MSG=$P($T(WRNGSTRM^A1AEK1),";;",2)
"RTN","A1AEUK1",328,0)
 . S:X STRNG=$$ERRMSG^A1AEK1(MSG,93)
"RTN","A1AEUK1",329,0)
 . S:X X=(STRNG=MSG(4))
"RTN","A1AEUK1",330,0)
 .;
"RTN","A1AEUK1",331,0)
 .D CHKEQ^%ut(1,X,"Test building appropriate error message FAILED!")
"RTN","A1AEUK1",332,0)
 . Q
"RTN","A1AEUK1",333,0)
 ;
"RTN","A1AEUK1",334,0)
 ;WARN^A1AEK1
"RTN","A1AEUK1",335,0)
UTP73 ; Test building Warning message
"RTN","A1AEUK1",336,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",337,0)
 . N STRNG S STRNG=$$WARN^A1AEK1(1)
"RTN","A1AEUK1",338,0)
 . S X=(STRNG="*END*")
"RTN","A1AEUK1",339,0)
 . D CHKEQ^%ut(1,X,"Test building warning message FAILED!")
"RTN","A1AEUK1",340,0)
 . Q
"RTN","A1AEUK1",341,0)
 ;
"RTN","A1AEUK1",342,0)
 ;
"RTN","A1AEUK1",343,0)
XTENT ;
"RTN","A1AEUK1",344,0)
 ;;UTP60;Test entering routine at top
"RTN","A1AEUK1",345,0)
 ;;UTP61;Test suitability of patch for install
"RTN","A1AEUK1",346,0)
 ;;UTP62;Test procedures when Patch and Site Stream match
"RTN","A1AEUK1",347,0)
 ;;UTP63;Test procedures when Patch and Site Stream DO NOT match
"RTN","A1AEUK1",348,0)
 ;;UTP64;Test building array of installed patches
"RTN","A1AEUK1",349,0)
 ;;UTP65;Test building missing patches array
"RTN","A1AEUK1",350,0)
 ;;UTP66;Test showing missing patches
"RTN","A1AEUK1",351,0)
 ;;UTP67;Test No/Yes query
"RTN","A1AEUK1",352,0)
 ;;UTP68;Test Test variable for Site = KIDS Stream
"RTN","A1AEUK1",353,0)
 ;;UTP69;Test building relavent Site Variables
"RTN","A1AEUK1",354,0)
 ;;UTP71;Test returning Site's Active Version of a package
"RTN","A1AEUK1",355,0)
 ;;UTP72;Test building appropriate error message
"RTN","A1AEUK1",356,0)
 ;;UTP72;Test building appropriate error message
"RTN","A1AEUK1",357,0)
 ;;UTP73;Test building appropriate error message
"RTN","A1AEUK1",358,0)
 Q
"RTN","A1AEUK1",359,0)
 ;;UTP60;Test entering routine at top
"RTN","A1AEUK1",360,0)
 ;;UTP61;Test suitability of patch for install
"RTN","A1AEUK1",361,0)
 ;;UTP62;Test procedures when Patch and Site Stream match
"RTN","A1AEUK1",362,0)
 ;;UTP63;Test procedures when Patch and Site Stream DO NOT match
"RTN","A1AEUK1",363,0)
 ;;UTP64;Test building array of installed patches
"RTN","A1AEUK1",364,0)
 ;;UTP65;Test building missing patches array
"RTN","A1AEUK1",365,0)
 ;;UTP66;Test showing missing patches
"RTN","A1AEUK1",366,0)
 ;;UTP67;Test No/Yes query
"RTN","A1AEUK1",367,0)
 ;;UTP68;Test variable for Site Stream = KIDS Stream
"RTN","A1AEUK1",368,0)
 ;;UTP69;Test building relavent Site Variables
"RTN","A1AEUK1",369,0)
 ;;UTP70;Test building relavent KIDS Variables
"RTN","A1AEUK1",370,0)
 ;;UTP71;Test returning Site's Active Version of a package
"RTN","A1AEUK1",371,0)
 ;;UTP72;Test building appropriate error message
"RTN","A1AEUK1",372,0)
 ;;UTP73;Test building appropriate error message
"RTN","A1AEUK1",373,0)
 Q
"RTN","A1AEUK1",374,0)
 ;
"RTN","A1AEUK1",375,0)
 ;
"RTN","A1AEUK1",376,0)
EOR ; end of routine A1AEUK1
"RTN","A1AEUK2")
0^107^B265577528
"RTN","A1AEUK2",1,0)
A1AEUK2 ;ven/lgc,jli-unit tests for A1AEK2 ; 6/4/15 12:55am
"RTN","A1AEUK2",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUK2",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUK2",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUK2",5,0)
 ;
"RTN","A1AEUK2",6,0)
 ;
"RTN","A1AEUK2",7,0)
 ;primary change history
"RTN","A1AEUK2",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUK2",9,0)
 ;
"RTN","A1AEUK2",10,0)
 ; CHANGE VEN/LGC 2015 05 27
"RTN","A1AEUK2",11,0)
 ;   UTP84 modified to add complete message DATA array
"RTN","A1AEUK2",12,0)
 ;
"RTN","A1AEUK2",13,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUK2",14,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUK2",15,0)
 Q
"RTN","A1AEUK2",16,0)
 ;
"RTN","A1AEUK2",17,0)
STARTUP ;
"RTN","A1AEUK2",18,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUK2",19,0)
 L +^A1AE(11007.1):1 I '$T D  Q
"RTN","A1AEUK2",20,0)
 . S A1AEFAIL=1
"RTN","A1AEUK2",21,0)
 . W !,"Unable to obtain lock on DHCP PATCH STREAM  [#11007.1] file"
"RTN","A1AEUK2",22,0)
 . W !," Unable to perform testing."
"RTN","A1AEUK2",23,0)
 ;
"RTN","A1AEUK2",24,0)
 ;
"RTN","A1AEUK2",25,0)
 N MAILGRP S MAILGRP=$O(^XMB(3.8,"B","A1AESTRMCHG",0))
"RTN","A1AEUK2",26,0)
 I 'MAILGRP D  Q
"RTN","A1AEUK2",27,0)
 . S A1AEFAIL=1
"RTN","A1AEUK2",28,0)
 . W !,"G.A1AESTRMCHG mail group is not set up on this system"
"RTN","A1AEUK2",29,0)
 . W !," Unable to perform testing."
"RTN","A1AEUK2",30,0)
 ;
"RTN","A1AEUK2",31,0)
 K ^XTMP("A1AEUK2","UNIT TEST")
"RTN","A1AEUK2",32,0)
 M ^XTMP("A1AEUK2","UNIT TEST",11007.1)=^A1AE(11007.1)
"RTN","A1AEUK2",33,0)
 ;
"RTN","A1AEUK2",34,0)
 Q
"RTN","A1AEUK2",35,0)
 ;
"RTN","A1AEUK2",36,0)
SHUTDOWN I '$G(A1AEFAIL) D
"RTN","A1AEUK2",37,0)
 .; Reverse change in 11007.1
"RTN","A1AEUK2",38,0)
 . D FIXDPS
"RTN","A1AEUK2",39,0)
 L -^XPD(11007.1):1
"RTN","A1AEUK2",40,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUK2",41,0)
 K A1AEFAIL
"RTN","A1AEUK2",42,0)
 Q
"RTN","A1AEUK2",43,0)
 ;
"RTN","A1AEUK2",44,0)
 ; Testing
"RTN","A1AEUK2",45,0)
 ;  STRM^A1AEK2      UTP80
"RTN","A1AEUK2",46,0)
 ;  CONFIRM^A1AEK2   UTP81
"RTN","A1AEUK2",47,0)
 ;  NEWSTRM^A1AEK2   UTP82
"RTN","A1AEUK2",48,0)
 ;  PRCSMAIL^A1AEK2  UTP83
"RTN","A1AEUK2",49,0)
 ;  FCNF0^A1AEK2     UTP84
"RTN","A1AEUK2",50,0)
 ;  FCNF1^A1AEK2     UTP85
"RTN","A1AEUK2",51,0)
 ;  FCNF2^A1AEK2     UTP86
"RTN","A1AEUK2",52,0)
 ;  FCNF3^A1AEK2     UTP87
"RTN","A1AEUK2",53,0)
 ;  FCNF4^A1AEK2     UTP88
"RTN","A1AEUK2",54,0)
 ;  FCNF5^A1AEK2     UTP89
"RTN","A1AEUK2",55,0)
 ;  SNDMAIL^A1AEK2   UTP90
"RTN","A1AEUK2",56,0)
 ;  FND^A1AEK2       UTP91
"RTN","A1AEUK2",57,0)
 ;
"RTN","A1AEUK2",58,0)
 ;
"RTN","A1AEUK2",59,0)
 ; Normally STRM^A1AEK2 is called through an INPUT TRANSFORM
"RTN","A1AEUK2",60,0)
 ;  or an Option when the site's user requests changing
"RTN","A1AEUK2",61,0)
 ;  their Patch Stream.  In this case, an email with a
"RTN","A1AEUK2",62,0)
 ;  special subject "SUBSCRIPTION CHNG REQUEST" is sent
"RTN","A1AEUK2",63,0)
 ;  to the PRCSMAIL linetag in A1AEK2 which forwards it
"RTN","A1AEUK2",64,0)
 ;  to Forum.
"RTN","A1AEUK2",65,0)
 ; To assist in unit testing, the input transform code
"RTN","A1AEUK2",66,0)
 ;  will run as normally EXCEPT setting the SLNT variable
"RTN","A1AEUK2",67,0)
 ;  to 1, for silent to FORUM, will generate a similar
"RTN","A1AEUK2",68,0)
 ;  email message except the subject is prefixed with
"RTN","A1AEUK2",69,0)
 ;  A1AE:::.  This is processed through PRCSMAIL as
"RTN","A1AEUK2",70,0)
 ;  before, however since the subject is prefixed with
"RTN","A1AEUK2",71,0)
 ;  A1AE::: the mail is not forwarded to FORM, but rather
"RTN","A1AEUK2",72,0)
 ;  an indicating email with the subject A1AE FCFN0 is
"RTN","A1AEUK2",73,0)
 ;  generated and again sent to the A1AESTRMCHG mail 
"RTN","A1AEUK2",74,0)
 ;  group.  This second email does not contain a trapping
"RTN","A1AEUK2",75,0)
 ;  string and spawns no further activity.
"RTN","A1AEUK2",76,0)
 ; Thus, we are able to check the entire input transform
"RTN","A1AEUK2",77,0)
 ;  path without bothering FORUM.
"RTN","A1AEUK2",78,0)
 ;
"RTN","A1AEUK2",79,0)
 ;  STRM^A1AEK2
"RTN","A1AEUK2",80,0)
 ;Testing Input Transform on SEQUENCE change
"RTN","A1AEUK2",81,0)
UTP80 I '$G(A1AEFAIL) D
"RTN","A1AEUK2",82,0)
 . N X,MYDT S MYDT=DTIME,DTIME=1
"RTN","A1AEUK2",83,0)
 . N LASTXMZ S LASTXMZ=$O(^XMB(3.9,"A"),-1)
"RTN","A1AEUK2",84,0)
 . N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEUK2",85,0)
 . N NSTRM S NSTRM=$O(^A1AE(11007.1,"ASUBS",0,0))
"RTN","A1AEUK2",86,0)
 . N SLNT S SLNT=1
"RTN","A1AEUK2",87,0)
 . D STRM^A1AEK2(NSTRM,"YES",.SLNT)
"RTN","A1AEUK2",88,0)
 .; This should produce two emails. The 1st generates the 2nd
"RTN","A1AEUK2",89,0)
 .;   subj A1AE:::SUBSCRIPTION CHNG REQUEST
"RTN","A1AEUK2",90,0)
 .;   subj A1AE FCNF0
"RTN","A1AEUK2",91,0)
 . H 20 ; Wait for slow email
"RTN","A1AEUK2",92,0)
 . N SUBJ S SUBJ=$E("A1AE:::SUBSCRIPTION CHNG REQUEST",1,30)
"RTN","A1AEUK2",93,0)
 . N NODE S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",94,0)
 . N XMZ1 S XMZ1=$O(@NODE,-1)
"RTN","A1AEUK2",95,0)
 . S X=(XMZ1>LASTXMZ)
"RTN","A1AEUK2",96,0)
 . I 'X S DTIME=MYDT D  Q
"RTN","A1AEUK2",97,0)
 .. D CHKEQ^%ut(1,X,"Testing1 SEQUENCE Input Transform FAILED!")
"RTN","A1AEUK2",98,0)
 . S X=XMZ1
"RTN","A1AEUK2",99,0)
 . S:X X=$O(^XMB(3.9,XMZ1,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",100,0)
 . S:X X=(^XMB(3.9,XMZ1,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",101,0)
 . I 'X S DTIME=MYDT D  Q
"RTN","A1AEUK2",102,0)
 .. D CHKEQ^%ut(1,X,"Testing2 SEQUENCE Input Transform FAILED!")
"RTN","A1AEUK2",103,0)
 . S SUBJ="A1AE FCNF0"
"RTN","A1AEUK2",104,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",105,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",106,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ1
"RTN","A1AEUK2",107,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",108,0)
 .. D CHKEQ^%ut(1,X,"Testing3 failed due to slow email!")
"RTN","A1AEUK2",109,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",110,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",111,0)
 . S X=XMZ2
"RTN","A1AEUK2",112,0)
 . S:X X=(XMZ1<XMZ2)
"RTN","A1AEUK2",113,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",114,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",115,0)
 . S DTIME=MYDT
"RTN","A1AEUK2",116,0)
 . D CHKEQ^%ut(1,X,"Testing4 SEQUENCE Input Transform FAILED!")
"RTN","A1AEUK2",117,0)
 Q
"RTN","A1AEUK2",118,0)
 ;
"RTN","A1AEUK2",119,0)
 ;  CONFIRM^A1AEK2
"RTN","A1AEUK2",120,0)
 ;Testing CONFIRM query
"RTN","A1AEUK2",121,0)
UTP81 I '$G(A1AEFAIL) D
"RTN","A1AEUK2",122,0)
 . N X,MYDT S MYDT=DTIME
"RTN","A1AEUK2",123,0)
 . S DTIME=1,X=$$CONFIRM^A1AEK2,DTIME=MYDT
"RTN","A1AEUK2",124,0)
 . D CHKEQ^%ut(0,X,"Testing CONFIRM query FAILED!")
"RTN","A1AEUK2",125,0)
 Q
"RTN","A1AEUK2",126,0)
 ;
"RTN","A1AEUK2",127,0)
 ;
"RTN","A1AEUK2",128,0)
 ; See notes for UTP70.  This tests the same message
"RTN","A1AEUK2",129,0)
 ;  generating procedures, however, tests the extrinsic
"RTN","A1AEUK2",130,0)
 ;  function, $$NEWSTRM^A1AEK2, specifically
"RTN","A1AEUK2",131,0)
 ;  NEWSTRM^A1AEK2
"RTN","A1AEUK2",132,0)
 ;Testing building formatted stream change email
"RTN","A1AEUK2",133,0)
UTP82 I '$G(A1AEFAIL) D
"RTN","A1AEUK2",134,0)
 . N X,MYDT S MYDT=DTIME
"RTN","A1AEUK2",135,0)
 . N NSTRM S NSTRM=$O(^A1AE(11007.1,"ASUBS",0,0))
"RTN","A1AEUK2",136,0)
 . N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEUK2",137,0)
 . N ACTSTRMD S ACTSTRMD=$O(^A1AE(11007.1,+$G(ACTSTRM),1,"B","A"),-1)
"RTN","A1AEUK2",138,0)
 . N SERVER S SERVER=$$GET1^DIQ(8989.3,1_",",.01)
"RTN","A1AEUK2",139,0)
 . N SLNT S SLNT=1
"RTN","A1AEUK2",140,0)
 . N REQDT S REQDT=$$HTFM^XLFDT($H)
"RTN","A1AEUK2",141,0)
 . S X=$$NEWSTRM^A1AEK2(DUZ,REQDT,SERVER,NSTRM,.SLNT)
"RTN","A1AEUK2",142,0)
 .; This should produce two emails. The 1st generates the 2nd
"RTN","A1AEUK2",143,0)
 .;   subj A1AE:::SUBSCRIPTION CHNG REQUEST
"RTN","A1AEUK2",144,0)
 .;   subj A1AE FCNF0
"RTN","A1AEUK2",145,0)
 . N SUBJ S SUBJ=$E("A1AE:::SUBSCRIPTION CHNG REQUEST",1,30)
"RTN","A1AEUK2",146,0)
 . N NODE S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",147,0)
 . N XMZ1 S XMZ1=$O(@NODE,-1)
"RTN","A1AEUK2",148,0)
 . S X=XMZ1
"RTN","A1AEUK2",149,0)
 . S:X X=$O(^XMB(3.9,XMZ1,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",150,0)
 . S:X X=(^XMB(3.9,XMZ1,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",151,0)
 . I 'X S DTIME=MYDT D  Q
"RTN","A1AEUK2",152,0)
 .. D CHKEQ^%ut(1,X,"Testing SEQUENCE Input Transform FAILED!")
"RTN","A1AEUK2",153,0)
 . S SUBJ="A1AE FCNF0"
"RTN","A1AEUK2",154,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",155,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",156,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ1
"RTN","A1AEUK2",157,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",158,0)
 .. D CHKEQ^%ut(1,X,"Testing failed due to slow email!")
"RTN","A1AEUK2",159,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",160,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",161,0)
 . S X=XMZ2
"RTN","A1AEUK2",162,0)
 . S:X X=(XMZ1<XMZ2)
"RTN","A1AEUK2",163,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",164,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",165,0)
 . S DTIME=MYDT
"RTN","A1AEUK2",166,0)
 . D CHKEQ^%ut(1,X,"Testing SEQUENCE Input Transform FAILED!")
"RTN","A1AEUK2",167,0)
 Q
"RTN","A1AEUK2",168,0)
 ;
"RTN","A1AEUK2",169,0)
 ; To check that the server S.A1AENEWSTRM is working
"RTN","A1AEUK2",170,0)
 ;  correctly, build and send an email with a subject
"RTN","A1AEUK2",171,0)
 ;  that is not recognized as email that requires
"RTN","A1AEUK2",172,0)
 ;  processing for FORUM.
"RTN","A1AEUK2",173,0)
 ; If called as a function $$PRCSMAIL^A1AEK2 returns
"RTN","A1AEUK2",174,0)
 ;  the result of the loop searching for a indicator
"RTN","A1AEUK2",175,0)
 ;  subject.  Not finding one, "*END*" is returned.
"RTN","A1AEUK2",176,0)
 ; Note that UTP70 and UTP71 run a similar test,
"RTN","A1AEUK2",177,0)
 ;  however these do trap an indicator subject line.
"RTN","A1AEUK2",178,0)
 ;  PRCSMAIL^A1AEK2
"RTN","A1AEUK2",179,0)
 ;Testing Server on Mailgroup
"RTN","A1AEUK2",180,0)
UTP83 I '$G(A1AEFAIL) D
"RTN","A1AEUK2",181,0)
 .; Build email and send through "G.A1AESTRMCHG" mail group.
"RTN","A1AEUK2",182,0)
 . N DATA S DATA(0)=1,DATA(1)="UNIT TEST UTP73 LINE 1"
"RTN","A1AEUK2",183,0)
 . N XMSUBJ S XMSUBJ="UNIT TEST UTP73"
"RTN","A1AEUK2",184,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",185,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",186,0)
 . N X S X=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",187,0)
 .; I 'X then we have sendmail error, otherwise is XMZ
"RTN","A1AEUK2",188,0)
 . I 'X D  Q
"RTN","A1AEUK2",189,0)
 .. D CHKEQ^%ut(1,X,"Testing Mail Server S.A1AENEWSTRM FAILED!")
"RTN","A1AEUK2",190,0)
 . N XMZ S XMZ=X
"RTN","A1AEUK2",191,0)
 .; OK. Mail through group sucessful. Check Server worked
"RTN","A1AEUK2",192,0)
 .; Check that email (XMZ should = mail) went through
"RTN","A1AEUK2",193,0)
 .;  the A1AESTRMCHG mail group
"RTN","A1AEUK2",194,0)
 . S X=$O(^XMB(3.9,XMZ,6,"B","G.A1AESTRMCHG",0))
"RTN","A1AEUK2",195,0)
 . I 'X D  Q
"RTN","A1AEUK2",196,0)
 .. D CHKEQ^%ut(1,X,"Testing Mail Server S.A1AENEWSTRM FAILED!")
"RTN","A1AEUK2",197,0)
 .; Check that email went through the server
"RTN","A1AEUK2",198,0)
 . S X=$O(^XMB(3.9,XMZ,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",199,0)
 . I 'X D  Q
"RTN","A1AEUK2",200,0)
 .. D CHKEQ^%ut(1,X,"Testing Mail Server S.A1AENEWSTRM FAILED!")
"RTN","A1AEUK2",201,0)
 .; Now check PRCSMAIL piece?
"RTN","A1AEUK2",202,0)
 . S X=$$PRCSMAIL^A1AEK2
"RTN","A1AEUK2",203,0)
 . S X=(X="*END*")
"RTN","A1AEUK2",204,0)
 . D CHKEQ^%ut(1,X,"Testing Mail Server S.A1AENEWSTRM FAILED!")
"RTN","A1AEUK2",205,0)
 Q
"RTN","A1AEUK2",206,0)
 ;
"RTN","A1AEUK2",207,0)
 ; Build and send email to mail group with subject of
"RTN","A1AEUK2",208,0)
 ;  A1AE:::TESTING UTP74 and simple DATA array
"RTN","A1AEUK2",209,0)
 ;  D FCNF0^A1AEK2 generates another email
"RTN","A1AEUK2",210,0)
 ;  with a subject of A1AE FCNF0 SBSCRPT CHNG REQUEST
"RTN","A1AEUK2",211,0)
 ;  proving that the original email was shuttled to the
"RTN","A1AEUK2",212,0)
 ;  correct linetag in A1AEK2
"RTN","A1AEUK2",213,0)
 ;  FCNF0^A1AEK2
"RTN","A1AEUK2",214,0)
 ;Testing Outgoing subscription change request
"RTN","A1AEUK2",215,0)
UTP84 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",216,0)
 . S XMSUBJ="A1AE:::TESTING UTP74"
"RTN","A1AEUK2",217,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",218,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",219,0)
 . N DATA S DATA(0)=5
"RTN","A1AEUK2",220,0)
 . S DATA(1)="SERVER:::"_$$GET1^DIQ(8989.3,1_",",.01)
"RTN","A1AEUK2",221,0)
 . S DATA(2)="DATE SUBSCRIPTION ACTIVE:::3110101.1234"
"RTN","A1AEUK2",222,0)
 . S DATA(3)="REQUESTOR DUZ:::1"
"RTN","A1AEUK2",223,0)
 . S DATA(4)="SWITCH TO SUBSCRIPTION:::10001"
"RTN","A1AEUK2",224,0)
 . S DATA(5)="SWITCH REQUEST DATE:::3110202.1234"
"RTN","A1AEUK2",225,0)
 . N X,XMZ S (X,XMZ)=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",226,0)
 . S:X X=$O(^XMB(3.9,XMZ,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",227,0)
 . S:X X=(^XMB(3.9,XMZ,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",228,0)
 . I 'X D  Q
"RTN","A1AEUK2",229,0)
 .. D CHKEQ^%ut(1,X,"Testing Outgoing Subscription CHNG FAILED!")
"RTN","A1AEUK2",230,0)
 . D FCNF0^A1AEK2
"RTN","A1AEUK2",231,0)
 . S SUBJ="A1AE FCNF0"
"RTN","A1AEUK2",232,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",233,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",234,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ
"RTN","A1AEUK2",235,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",236,0)
 .. D CHKEQ^%ut(1,X,"Testing failed due to slow email!")
"RTN","A1AEUK2",237,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",238,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",239,0)
 . S X=XMZ2
"RTN","A1AEUK2",240,0)
 . S:X X=(XMZ<XMZ2)
"RTN","A1AEUK2",241,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",242,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",243,0)
 . D CHKEQ^%ut(1,X,"Testing Outgoing Subscription CHNG FAILED!")
"RTN","A1AEUK2",244,0)
 Q
"RTN","A1AEUK2",245,0)
 ;
"RTN","A1AEUK2",246,0)
 ;  FCNF1^A1AEK2
"RTN","A1AEUK2",247,0)
 ;Testing Incoming Forum approval
"RTN","A1AEUK2",248,0)
UTP85 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",249,0)
 .; Build and send FORUM APPROVAL email
"RTN","A1AEUK2",250,0)
 . N NSTRM S NSTRM=$O(^A1AE(11007.1,"ASUBS",0,0))
"RTN","A1AEUK2",251,0)
 . N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEUK2",252,0)
 . N ACTSTRMD S ACTSTRMD=$O(^A1AE(11007.1,+$G(ACTSTRM),1,"B","A"),-1)
"RTN","A1AEUK2",253,0)
 . N SERVER S SERVER=$$GET1^DIQ(8989.3,1_",",.01)
"RTN","A1AEUK2",254,0)
 . N SLNT S SLNT=1
"RTN","A1AEUK2",255,0)
 . N REQDT S REQDT=$$HTFM^XLFDT($H)
"RTN","A1AEUK2",256,0)
 . N DATA S DATA(0)=7
"RTN","A1AEUK2",257,0)
 . S DATA(1)="SERVER:::"_SERVER
"RTN","A1AEUK2",258,0)
 . S DATA(2)="ACTIVE SUBSCRIPTION:::"_ACTSTRM
"RTN","A1AEUK2",259,0)
 . S DATA(3)="DATE SUBSCRIPTION ACTIVE:::"_ACTSTRMD
"RTN","A1AEUK2",260,0)
 . S DATA(4)="REQUESTOR DUZ:::"_DUZ
"RTN","A1AEUK2",261,0)
 . S DATA(5)="SWITCH TO SUBSCRIPTION:::"_NSTRM
"RTN","A1AEUK2",262,0)
 . S DATA(6)="SWITCH REQUEST DATE:::"_REQDT
"RTN","A1AEUK2",263,0)
 . S DATA(7)="APPROVED:::YES"
"RTN","A1AEUK2",264,0)
 .; Set subject fail server processing
"RTN","A1AEUK2",265,0)
 . N XMSUBJ S XMSUBJ="FCNF1 A1AEK2"
"RTN","A1AEUK2",266,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",267,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",268,0)
 .; Get IEN into 3.9 for outgoing message
"RTN","A1AEUK2",269,0)
 . N XMZ,X S (X,XMZ)=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",270,0)
 . I 'X D  Q
"RTN","A1AEUK2",271,0)
 .. D CHKEQ^%ut(1,X,"Testing Incoming Forum Approval FAILED!")
"RTN","A1AEUK2",272,0)
 .; Run FCNF1 as extrinsic to signal unit testing
"RTN","A1AEUK2",273,0)
 . S X=$$FCNF1^A1AEK2
"RTN","A1AEUK2",274,0)
 . D CHKEQ^%ut(0,X,"Testing Incoming Forum Approval FAILED!")
"RTN","A1AEUK2",275,0)
 .; I X=0 put 11007.1 back as it was before
"RTN","A1AEUK2",276,0)
 . Q
"RTN","A1AEUK2",277,0)
 ;
"RTN","A1AEUK2",278,0)
 ;  FCNF2^A1AEK2
"RTN","A1AEUK2",279,0)
 ;Testing Incoming Forum rejection
"RTN","A1AEUK2",280,0)
UTP86 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",281,0)
 . S XMSUBJ="A1AE:::TESTING UTP76"
"RTN","A1AEUK2",282,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",283,0)
 . N DATA S DATA(0)=1,DATA(1)="UTP76 UNIT TEST"
"RTN","A1AEUK2",284,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",285,0)
 . N X,XMZ S (X,XMZ)=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",286,0)
 . S:X X=$O(^XMB(3.9,XMZ,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",287,0)
 . S:X X=(^XMB(3.9,XMZ,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",288,0)
 . I 'X D  Q
"RTN","A1AEUK2",289,0)
 .. D CHKEQ^%ut(1,X,"Testing Incoming Forum Rejection FAILED!")
"RTN","A1AEUK2",290,0)
 . D FCNF2^A1AEK2
"RTN","A1AEUK2",291,0)
 . S SUBJ="A1AE FCNF2"
"RTN","A1AEUK2",292,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",293,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",294,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ
"RTN","A1AEUK2",295,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",296,0)
 .. D CHKEQ^%ut(1,X,"Testing failed due to slow email!")
"RTN","A1AEUK2",297,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",298,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",299,0)
 . S X=XMZ2
"RTN","A1AEUK2",300,0)
 . S:X X=(XMZ<XMZ2)
"RTN","A1AEUK2",301,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",302,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",303,0)
 . D CHKEQ^%ut(1,X,"Testing Incoming Forum Rejection FAILED!")
"RTN","A1AEUK2",304,0)
 Q
"RTN","A1AEUK2",305,0)
 ;
"RTN","A1AEUK2",306,0)
 ;  FCNF3^A1AEK2
"RTN","A1AEUK2",307,0)
 ;Testing Sending subscription change confirmation
"RTN","A1AEUK2",308,0)
UTP87 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",309,0)
 . S XMSUBJ="A1AE:::TESTING UTP77"
"RTN","A1AEUK2",310,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",311,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",312,0)
 . N DATA S DATA(0)=1,DATA(1)="UTP77 UNIT TEST"
"RTN","A1AEUK2",313,0)
 . N X,XMZ S (X,XMZ)=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",314,0)
 . S:X X=$O(^XMB(3.9,XMZ,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",315,0)
 . S:X X=(^XMB(3.9,XMZ,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",316,0)
 . I 'X D  Q
"RTN","A1AEUK2",317,0)
 .. D CHKEQ^%ut(1,X,"Testing Subscript change confirmed msg FAILED!")
"RTN","A1AEUK2",318,0)
 . D FCNF3^A1AEK2
"RTN","A1AEUK2",319,0)
 . S SUBJ="A1AE FCNF3"
"RTN","A1AEUK2",320,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",321,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",322,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ
"RTN","A1AEUK2",323,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",324,0)
 .. D CHKEQ^%ut(1,X,"Testing failed due to slow email!")
"RTN","A1AEUK2",325,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",326,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",327,0)
 . S X=XMZ2
"RTN","A1AEUK2",328,0)
 . S:X X=(XMZ<XMZ2)
"RTN","A1AEUK2",329,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",330,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",331,0)
 . D CHKEQ^%ut(1,X,"Testing Subscript change confirmed msg FAILED!")
"RTN","A1AEUK2",332,0)
 Q
"RTN","A1AEUK2",333,0)
 ;
"RTN","A1AEUK2",334,0)
 ;  FCNF4^A1AEK2
"RTN","A1AEUK2",335,0)
 ;Testing Sending subscription change failed msg
"RTN","A1AEUK2",336,0)
UTP88 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",337,0)
 . S XMSUBJ="A1AE:::TESTING UTP78"
"RTN","A1AEUK2",338,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",339,0)
 . N DATA S DATA(0)=1,DATA(1)="UTP78 UNIT TEST"
"RTN","A1AEUK2",340,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",341,0)
 . N X,XMZ S (X,XMZ)=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",342,0)
 . S:X X=$O(^XMB(3.9,XMZ,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",343,0)
 . S:X X=(^XMB(3.9,XMZ,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",344,0)
 . I 'X D  Q
"RTN","A1AEUK2",345,0)
 .. D CHKEQ^%ut(1,X,"Testing Subscript change failed msg FAILED!")
"RTN","A1AEUK2",346,0)
 . D FCNF4^A1AEK2
"RTN","A1AEUK2",347,0)
 . S SUBJ="A1AE FCNF4"
"RTN","A1AEUK2",348,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",349,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",350,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ
"RTN","A1AEUK2",351,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",352,0)
 .. D CHKEQ^%ut(1,X,"Testing failed due to slow email!")
"RTN","A1AEUK2",353,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",354,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",355,0)
 . S X=XMZ2
"RTN","A1AEUK2",356,0)
 . S:X X=(XMZ<XMZ2)
"RTN","A1AEUK2",357,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",358,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",359,0)
 . D CHKEQ^%ut(1,X,"Testing Subscript change failed msg FAILED!")
"RTN","A1AEUK2",360,0)
 Q
"RTN","A1AEUK2",361,0)
 ;
"RTN","A1AEUK2",362,0)
 ;  FCNF5^A1AEK2
"RTN","A1AEUK2",363,0)
 ;Testing Forum confirmation of subscription change
"RTN","A1AEUK2",364,0)
UTP89 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",365,0)
 . S XMSUBJ="A1AE:::TESTING UTP79"
"RTN","A1AEUK2",366,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",367,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",368,0)
 . N DATA S DATA(0)=1,DATA(1)="UTP79 UNIT TEST"
"RTN","A1AEUK2",369,0)
 . N X,XMZ S (X,XMZ)=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",370,0)
 . S:X X=$O(^XMB(3.9,XMZ,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",371,0)
 . S:X X=(^XMB(3.9,XMZ,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",372,0)
 . I 'X D  Q
"RTN","A1AEUK2",373,0)
 .. D CHKEQ^%ut(1,X,"Testing Forum Confirms New Subscription FAILED!")
"RTN","A1AEUK2",374,0)
 . D FCNF5^A1AEK2
"RTN","A1AEUK2",375,0)
 . S SUBJ="A1AE FCNF5"
"RTN","A1AEUK2",376,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",377,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",378,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ
"RTN","A1AEUK2",379,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",380,0)
 .. D CHKEQ^%ut(1,X,"Testing failed due to slow email!")
"RTN","A1AEUK2",381,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",382,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",383,0)
 . S X=XMZ2
"RTN","A1AEUK2",384,0)
 . S:X X=(XMZ<XMZ2)
"RTN","A1AEUK2",385,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",386,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",387,0)
 . D CHKEQ^%ut(1,X,"Testing Forum Confirms New Subscription FAILED!")
"RTN","A1AEUK2",388,0)
 Q
"RTN","A1AEUK2",389,0)
 ;
"RTN","A1AEUK2",390,0)
 ;  SNDMAIL^A1AEK2
"RTN","A1AEUK2",391,0)
 ;Testing Sending mail
"RTN","A1AEUK2",392,0)
UTP90 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",393,0)
 . S XMSUBJ="A1AE:::TESTING SNDMAIL FUNCTION"
"RTN","A1AEUK2",394,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",395,0)
 . N DATA S DATA(0)=1,DATA(1)="UTP80 UNIT TEST"
"RTN","A1AEUK2",396,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",397,0)
 . N X S X=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",398,0)
 .; X=XMZ (IEN of message in ^XMB(3.9 if worked
"RTN","A1AEUK2",399,0)
 . S X=$S(X>0:1,1:0)
"RTN","A1AEUK2",400,0)
 . D CHKEQ^%ut(1,X,"Testing Sending Mail FAILED!")
"RTN","A1AEUK2",401,0)
 Q
"RTN","A1AEUK2",402,0)
 ;
"RTN","A1AEUK2",403,0)
 ;  FND^A1AEK2
"RTN","A1AEUK2",404,0)
 ;Testing Finding data in structured email
"RTN","A1AEUK2",405,0)
UTP91 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",406,0)
 . N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEUK2",407,0)
 . N ACTSTRMD S ACTSTRMD=$O(^A1AE(11007.1,+$G(ACTSTRM),1,"B","A"),-1)
"RTN","A1AEUK2",408,0)
 . N SERVER S SERVER=$$GET1^DIQ(8989.3,1_",",.01)
"RTN","A1AEUK2",409,0)
 . N UTP81DT S UTP81DT=$$HTFM^XLFDT($H)
"RTN","A1AEUK2",410,0)
 . N DATA
"RTN","A1AEUK2",411,0)
 . S DATA(0)=6
"RTN","A1AEUK2",412,0)
 . S DATA(1)="SERVER:::"_SERVER
"RTN","A1AEUK2",413,0)
 . S DATA(2)="ACTIVE SUBSCRIPTION:::"_ACTSTRM
"RTN","A1AEUK2",414,0)
 . S DATA(3)="DATE SUBSCRIPTION ACTIVE:::"_ACTSTRMD
"RTN","A1AEUK2",415,0)
 . S DATA(4)="REQUESTOR DUZ:::"_DUZ
"RTN","A1AEUK2",416,0)
 . S DATA(5)="SWITCH TO SUBSCRIPTION:::"_1
"RTN","A1AEUK2",417,0)
 . S DATA(6)="SWITCH REQUEST DATE:::"_UTP81DT
"RTN","A1AEUK2",418,0)
 . N X S X=($$FND^A1AEK2(.DATA,"ACTIVE SUBSCRIPTION")=ACTSTRM)
"RTN","A1AEUK2",419,0)
 . D CHKEQ^%ut(1,X,"Testing Finding data in structured email FAILED!")
"RTN","A1AEUK2",420,0)
 . Q
"RTN","A1AEUK2",421,0)
 ;
"RTN","A1AEUK2",422,0)
 ;
"RTN","A1AEUK2",423,0)
UTP92 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",424,0)
 . K ^XTMP($J,"A1AEK2 FROM TOP")
"RTN","A1AEUK2",425,0)
 . D ^A1AEK2
"RTN","A1AEUK2",426,0)
 . S X=$D(^XTMP($J,"A1AEK2 FROM TOP"))
"RTN","A1AEUK2",427,0)
 . D CHKEQ^%ut(1,X,"Testing calling A1AEK2 from Top FAILED!")
"RTN","A1AEUK2",428,0)
 . Q
"RTN","A1AEUK2",429,0)
 ;
"RTN","A1AEUK2",430,0)
FMTMSG ;;FORMATTED MESSAGE LINES 1-6
"RTN","A1AEUK2",431,0)
 ;;SERVER:::^SERVER
"RTN","A1AEUK2",432,0)
 ;;ACTIVE SUBSCRIPTION:::^ACTSTRM
"RTN","A1AEUK2",433,0)
 ;;DATE SUBSCRIPTION ACTIVE:::^ACTSTRMD
"RTN","A1AEUK2",434,0)
 ;;REQUESTOR DUZ:::^DUZ
"RTN","A1AEUK2",435,0)
 ;;SWITCH TO SUBSCRIPTION:::^NSTRM
"RTN","A1AEUK2",436,0)
 ;;SWITCH REQUEST DATE:::^REQDT
"RTN","A1AEUK2",437,0)
 ;;**END**
"RTN","A1AEUK2",438,0)
 ;
"RTN","A1AEUK2",439,0)
 ; Subroutine to put DHCP PATCH STREAM [#11007.1] file
"RTN","A1AEUK2",440,0)
 ;  back to exactly what is was before testing
"RTN","A1AEUK2",441,0)
FIXDPS ;Return DHCP PATCH STREAM file to original structure
"RTN","A1AEUK2",442,0)
 N NODE S NODE=$NA(^A1AE(11007.1))
"RTN","A1AEUK2",443,0)
 F  S NODE=$Q(@NODE) Q:NODE'["^A1AE(11007.1"  D
"RTN","A1AEUK2",444,0)
 .; Build NODX = similar node in ^XTMP
"RTN","A1AEUK2",445,0)
 . S TXT="^XTMP(""A1AEUK2"",""UNIT TEST"","_$P($P(NODE,"(",2),")")_")"
"RTN","A1AEUK2",446,0)
 . S NODX=$NA(@TXT)
"RTN","A1AEUK2",447,0)
 .; If similar node not in ^XTMP, kill the node in 11007.1
"RTN","A1AEUK2",448,0)
 . I '$D(@NODX) K @NODE Q
"RTN","A1AEUK2",449,0)
 .; If similar node in ^XTMP identical, nothing has
"RTN","A1AEUK2",450,0)
 .;  changed since unit test was run.  Keep looking.
"RTN","A1AEUK2",451,0)
 . I (@NODE=@NODX) Q
"RTN","A1AEUK2",452,0)
 .; If simlar node in ^XTMP differs in content
"RTN","A1AEUK2",453,0)
 .;  swap the contents for that in existence befor
"RTN","A1AEUK2",454,0)
 .;  running unit test
"RTN","A1AEUK2",455,0)
 . S (@NODE)=(@NODX)
"RTN","A1AEUK2",456,0)
 ; To be sure all is well, re-index entire file
"RTN","A1AEUK2",457,0)
 N DA,DIK
"RTN","A1AEUK2",458,0)
 S DIK="^A1AE(11007.1,"
"RTN","A1AEUK2",459,0)
 D IXALL2^DIK
"RTN","A1AEUK2",460,0)
 D IXALL^DIK
"RTN","A1AEUK2",461,0)
 Q
"RTN","A1AEUK2",462,0)
 ;;
"RTN","A1AEUK2",463,0)
XTENT ;
"RTN","A1AEUK2",464,0)
 ;;UTP80;Testing Input Transform on SEQUENCE change
"RTN","A1AEUK2",465,0)
 ;;UTP81;Testing CONFIRM query
"RTN","A1AEUK2",466,0)
 ;;UTP82;Testing building formatted stream change email
"RTN","A1AEUK2",467,0)
 ;;UTP83;Testing Server on Mailgroup
"RTN","A1AEUK2",468,0)
 ;;UTP84;Testing Outgoing subscription change request
"RTN","A1AEUK2",469,0)
 ;;UTP85;Testing Incoming Forum approval
"RTN","A1AEUK2",470,0)
 ;;UTP86;Testing Incoming Forum rejection
"RTN","A1AEUK2",471,0)
 ;;UTP87;Testing Sending subscription change confirmation
"RTN","A1AEUK2",472,0)
 ;;UTP88;Testing Sending subscription change failed msg
"RTN","A1AEUK2",473,0)
 ;;UTP89;Testing Forum confirmation of subscription change
"RTN","A1AEUK2",474,0)
 ;;UTP90;Testing Sending mail
"RTN","A1AEUK2",475,0)
 ;;UTP91;Testing Finding data in structured email
"RTN","A1AEUK2",476,0)
 ;;UTP92;Testing Entering A1AEK2 at Top of routine
"RTN","A1AEUK2",477,0)
 Q
"RTN","A1AEUK2",478,0)
 ;
"RTN","A1AEUK2",479,0)
 ;
"RTN","A1AEUK2",480,0)
EOR ; end of routine A1AEUK2
"RTN","A1AEUK3")
0^85^B268297865
"RTN","A1AEUK3",1,0)
A1AEUK3 ;ven/lgc,jli-unit tests for A1AEK3 ;2015-06-03T00:12
"RTN","A1AEUK3",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUK3",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUK3",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUK3",5,0)
 ;
"RTN","A1AEUK3",6,0)
 ;
"RTN","A1AEUK3",7,0)
 ;primary change history
"RTN","A1AEUK3",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUK3",9,0)
 ;
"RTN","A1AEUK3",10,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUK3",11,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUK3",12,0)
 Q
"RTN","A1AEUK3",13,0)
 ;
"RTN","A1AEUK3",14,0)
STARTUP ;
"RTN","A1AEUK3",15,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUK3",16,0)
 S A1AEDUZ=DUZ ; KILLED IN SHUTDOWN
"RTN","A1AEUK3",17,0)
 ;
"RTN","A1AEUK3",18,0)
 N MAILGRP S MAILGRP=$O(^XMB(3.8,"B","A1AEFMSC",0))
"RTN","A1AEUK3",19,0)
 I 'MAILGRP D  Q
"RTN","A1AEUK3",20,0)
 . S A1AEFAIL=1
"RTN","A1AEUK3",21,0)
 . W !,"G.A1AEFMSC mail group is not set up on this system"
"RTN","A1AEUK3",22,0)
 . W !," Unable to perform testing."
"RTN","A1AEUK3",23,0)
 ;
"RTN","A1AEUK3",24,0)
 ;
"RTN","A1AEUK3",25,0)
 ; Enter a new DOMAIN - A1AEUK3MUNIT
"RTN","A1AEUK3",26,0)
 N FDA,DIERR,FDAIEN
"RTN","A1AEUK3",27,0)
 S FDA(3,4.2,"?+1,",.01)="A1AEUK3MUNIT"
"RTN","A1AEUK3",28,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUK3",29,0)
 I '($G(FDAIEN(1))>0) D  Q
"RTN","A1AEUK3",30,0)
 . S A1AEFAIL=1
"RTN","A1AEUK3",31,0)
 . W !,"Could not add A1AEUK3MUNIT to domain file"
"RTN","A1AEUK3",32,0)
 . W !," Unable to perform testing."
"RTN","A1AEUK3",33,0)
 ;
"RTN","A1AEUK3",34,0)
 ; Build new entry in 11007.2 for A1AEUK3MUNIT
"RTN","A1AEUK3",35,0)
 K FDA,DIERR
"RTN","A1AEUK3",36,0)
 S FDA(3,11007.2,"?+1,",.01)=+FDAIEN(1)
"RTN","A1AEUK3",37,0)
 K FDAIEN D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUK3",38,0)
 I '($G(FDAIEN(1))>0) D  Q
"RTN","A1AEUK3",39,0)
 . S A1AEFAIL=1
"RTN","A1AEUK3",40,0)
 . W !,"Could not add A1AEUK3MUNIT to PATCH STREAM HISTORY"
"RTN","A1AEUK3",41,0)
 . W !," Unable to perform testing."
"RTN","A1AEUK3",42,0)
 ;
"RTN","A1AEUK3",43,0)
 ; Enter a new DOMAIN - A1AEUK3MUFAIL
"RTN","A1AEUK3",44,0)
 K FDA,DIERR,FDAIEN
"RTN","A1AEUK3",45,0)
 S FDA(3,4.2,"?+1,",.01)="A1AEUK3MUFAIL"
"RTN","A1AEUK3",46,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUK3",47,0)
 I '($G(FDAIEN(1))>0) D  Q
"RTN","A1AEUK3",48,0)
 . S A1AEFAIL=1
"RTN","A1AEUK3",49,0)
 . W !,"Could not add A1AEUK3MUFAIL to domain file"
"RTN","A1AEUK3",50,0)
 . W !," Unable to perform testing."
"RTN","A1AEUK3",51,0)
 ;
"RTN","A1AEUK3",52,0)
 ; Build new entry in 11007.2 for A1AEUK3MUFAIL
"RTN","A1AEUK3",53,0)
 K FDA,DIERR
"RTN","A1AEUK3",54,0)
 S FDA(3,11007.2,"?+1,",.01)=+FDAIEN(1)
"RTN","A1AEUK3",55,0)
 K FDAIEN D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUK3",56,0)
 I '($G(FDAIEN(1))>0) D  Q
"RTN","A1AEUK3",57,0)
 . S A1AEFAIL=1
"RTN","A1AEUK3",58,0)
 . W !,"Could not add A1AEUK3MUFAIL to PATCH STREAM HISTORY"
"RTN","A1AEUK3",59,0)
 . W !," Unable to perform testing."
"RTN","A1AEUK3",60,0)
 ;
"RTN","A1AEUK3",61,0)
 ; If FOIA VISTA and OSEHRA VISTA don't have FORUM DOMAIN [.07]
"RTN","A1AEUK3",62,0)
 ;  entries, they should.  Just fix that now.
"RTN","A1AEUK3",63,0)
 I $$GET1^DIQ(11007.1,1_",",.07)'="FORUM.VA.GOV" D
"RTN","A1AEUK3",64,0)
 . S $P(^A1AE(11007.1,1,0),"^",7)="FORUM.VA.GOV"
"RTN","A1AEUK3",65,0)
 I $$GET1^DIQ(11007.1,10001_",",.07)'="FORUM.OSEHRA.ORG" D
"RTN","A1AEUK3",66,0)
 . S $P(^A1AE(11007.1,10001,0),"^",7)="FORUM.OSEHRA.ORG"
"RTN","A1AEUK3",67,0)
 ; Re-index DHCP PATCH STREAM file
"RTN","A1AEUK3",68,0)
 S DIK(1)=".07",DIK="^A1AE(11007.1,"
"RTN","A1AEUK3",69,0)
 D ENALL2^DIK
"RTN","A1AEUK3",70,0)
 D ENALL^DIK
"RTN","A1AEUK3",71,0)
 ;
"RTN","A1AEUK3",72,0)
 K ^XTMP("A1AEUK3","UNIT TEST")
"RTN","A1AEUK3",73,0)
 ;
"RTN","A1AEUK3",74,0)
 Q
"RTN","A1AEUK3",75,0)
 ;
"RTN","A1AEUK3",76,0)
SHUTDOWN ; If an entries in PATCH STREAM HISTORY exists for
"RTN","A1AEUK3",77,0)
 ;   A1AEUK3MUNIT and A1AEUK3MUFAIL, delete them
"RTN","A1AEUK3",78,0)
 N DA,DIK,A1AEI42
"RTN","A1AEUK3",79,0)
 S A1AEI42=$O(^DIC(4.2,"B","A1AEUK3MUNIT",0))
"RTN","A1AEUK3",80,0)
 I A1AEI42 S DA=$O(^A1AE(11007.2,"B",A1AEI42,0)) D
"RTN","A1AEUK3",81,0)
 . S DIK="^A1AE(11007.2," D ^DIK
"RTN","A1AEUK3",82,0)
 ; If a domain A1AEUK3MUNIT exists, delete it
"RTN","A1AEUK3",83,0)
 I A1AEI42 S DA=A1AEI42,DIK="^DIC(4.2," D ^DIK
"RTN","A1AEUK3",84,0)
 ;
"RTN","A1AEUK3",85,0)
 K DA,DIK,A1AEI42
"RTN","A1AEUK3",86,0)
 S A1AEI42=$O(^DIC(4.2,"B","A1AEUK3MUFAIL",0))
"RTN","A1AEUK3",87,0)
 I A1AEI42 S DA=$O(^A1AE(11007.2,"B",A1AEI42,0)) D
"RTN","A1AEUK3",88,0)
 . S DIK="^A1AE(11007.2," D ^DIK
"RTN","A1AEUK3",89,0)
 ; If a domain A1AEUK3MUFAIL exists, delete it
"RTN","A1AEUK3",90,0)
 I A1AEI42 S DA=A1AEI42,DIK="^DIC(4.2," D ^DIK
"RTN","A1AEUK3",91,0)
 ;
"RTN","A1AEUK3",92,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUK3",93,0)
 K A1AEFAIL
"RTN","A1AEUK3",94,0)
 ; ZEXCEPT: A1AEDUZ - defined in STARTUP
"RTN","A1AEUK3",95,0)
 K A1AEDUZ
"RTN","A1AEUK3",96,0)
 Q
"RTN","A1AEUK3",97,0)
 ;
"RTN","A1AEUK3",98,0)
 ; Testing
"RTN","A1AEUK3",99,0)
 ;  ^A1AEK3          UTP100
"RTN","A1AEUK3",100,0)
 ;  PRCSMAIL^A1AEK3  UTP101
"RTN","A1AEUK3",101,0)
 ;  FCNF1^A1AEK3     UTP102
"RTN","A1AEUK3",102,0)
 ;  FRMAPPR^A1AEK3   UTP103
"RTN","A1AEUK3",103,0)
 ;  FCNF2^A1AEK3     UTP104
"RTN","A1AEUK3",104,0)
 ;  FCNF3^A1AEK3     UTP105
"RTN","A1AEUK3",105,0)
 ;  EMDATA^A1AEK3    UTP106
"RTN","A1AEUK3",106,0)
 ;  UPDDOMA^A1AEK3   UTP107
"RTN","A1AEUK3",107,0)
 ;  SNDMAIL^A1AEK3   UTP108
"RTN","A1AEUK3",108,0)
 ;  FND^A1AEK3       UTP109
"RTN","A1AEUK3",109,0)
 ;  CHKMTCH^A1AEK3   UTP110
"RTN","A1AEUK3",110,0)
 ;  FCNF4^A1AEK3     UTP111
"RTN","A1AEUK3",111,0)
 ;
"RTN","A1AEUK3",112,0)
 ; ^A1AEK3
"RTN","A1AEUK3",113,0)
UTP100 ;Testing Calling A1AEK3 from Top
"RTN","A1AEUK3",114,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK3",115,0)
 . K ^XTMP($J,"A1AEK3 FROM TOP")
"RTN","A1AEUK3",116,0)
 . D ^A1AEK3
"RTN","A1AEUK3",117,0)
 . S X=$D(^XTMP($J,"A1AEK3 FROM TOP"))
"RTN","A1AEUK3",118,0)
 . D CHKEQ^%ut(1,X,"Testing calling A1AEK3 from Top FAILED!")
"RTN","A1AEUK3",119,0)
 . Q
"RTN","A1AEUK3",120,0)
 Q
"RTN","A1AEUK3",121,0)
 ;
"RTN","A1AEUK3",122,0)
 ;
"RTN","A1AEUK3",123,0)
 ; To check that the server S.A1AEFMSC is working
"RTN","A1AEUK3",124,0)
 ;  correctly, build and send an email with a subject
"RTN","A1AEUK3",125,0)
 ;  that is not recognized as email that requires
"RTN","A1AEUK3",126,0)
 ;  processing for FORUM.
"RTN","A1AEUK3",127,0)
 ; If called as a function $$PRCSMAIL^A1AEK3 returns
"RTN","A1AEUK3",128,0)
 ;  the result of the loop searching for a indicator
"RTN","A1AEUK3",129,0)
 ;  subject.  Not finding one, "*END*" is returned.
"RTN","A1AEUK3",130,0)
 ;  PRCSMAIL^A1AEK3
"RTN","A1AEUK3",131,0)
UTP101 ;Testing Server on Mail Group
"RTN","A1AEUK3",132,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK3",133,0)
 .; Build email and send through "G.A1AEFMSC" mail group.
"RTN","A1AEUK3",134,0)
 . N DATA S DATA(0)=1,DATA(1)="UNIT TEST UTP101 LINE 1"
"RTN","A1AEUK3",135,0)
 . N XMSUBJ S XMSUBJ="UNIT TEST UTP101"
"RTN","A1AEUK3",136,0)
 . N MAILGRP S MAILGRP="G.A1AEFMSC"
"RTN","A1AEUK3",137,0)
 .; D DUZ^XUP(A1AEDUZ)
"RTN","A1AEUK3",138,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK3",139,0)
 . N X S X=$$SNDMAIL^A1AEK3(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK3",140,0)
 .; I 'X then we have sendmail error, otherwise is XMZ
"RTN","A1AEUK3",141,0)
 . I 'X D  Q
"RTN","A1AEUK3",142,0)
 .. D CHKEQ^%ut(1,X,"Testing Server on Mail Group FAILED!")
"RTN","A1AEUK3",143,0)
 . N XMZ S XMZ=X
"RTN","A1AEUK3",144,0)
 .; OK. Mail through group sucessful. Check Server worked
"RTN","A1AEUK3",145,0)
 .; Check that email (XMZ should = mail) went through
"RTN","A1AEUK3",146,0)
 .;  the A1AEFMSC mail group
"RTN","A1AEUK3",147,0)
 . S X=$O(^XMB(3.9,XMZ,6,"B","G.A1AEFMSC",0))
"RTN","A1AEUK3",148,0)
 . I 'X D  Q
"RTN","A1AEUK3",149,0)
 .. D CHKEQ^%ut(1,X,"Testing Server on Mail Group FAILED!")
"RTN","A1AEUK3",150,0)
 .; Check that email went through the server
"RTN","A1AEUK3",151,0)
 . S X=$O(^XMB(3.9,XMZ,1,"C","S.A1AEFMSC",0))
"RTN","A1AEUK3",152,0)
 . I 'X D  Q
"RTN","A1AEUK3",153,0)
 .. D CHKEQ^%ut(1,X,"Testing Server on Mail Group FAILED!")
"RTN","A1AEUK3",154,0)
 .; Now check PRCSMAIL piece?
"RTN","A1AEUK3",155,0)
 . S X=$$PRCSMAIL^A1AEK3
"RTN","A1AEUK3",156,0)
 . S X=(X="*END*")
"RTN","A1AEUK3",157,0)
 . D CHKEQ^%ut(1,X,"Testing Server on Mail Group FAILED!")
"RTN","A1AEUK3",158,0)
 Q
"RTN","A1AEUK3",159,0)
 ;
"RTN","A1AEUK3",160,0)
 ; FCNF1^A1AEUK3
"RTN","A1AEUK3",161,0)
UTP102 ;Testing patch stream change request
"RTN","A1AEUK3",162,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK3",163,0)
 .; Build in incoming patch stream change request
"RTN","A1AEUK3",164,0)
 . N XMSUBJ,DATA
"RTN","A1AEUK3",165,0)
 . S XMSUBJ="A1AE:::SUBSCRIPTION CHNG REQUEST"
"RTN","A1AEUK3",166,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK3",167,0)
 . N DATA S DATA(0)=6
"RTN","A1AEUK3",168,0)
 . S DATA(1)="SERVER:::A1AEUK3MUNIT"
"RTN","A1AEUK3",169,0)
 . S DATA(2)="ACTIVE SUBSCRIPTION:::1"
"RTN","A1AEUK3",170,0)
 . S DATA(3)="DATE SUBSCRIPTION ACTIVE:::3010101.0101"
"RTN","A1AEUK3",171,0)
 . S DATA(4)="REQUESTOR DUZ:::46"
"RTN","A1AEUK3",172,0)
 . S DATA(5)="SWITCH TO SUBSCRIPTION:::10001"
"RTN","A1AEUK3",173,0)
 . S DATA(6)="SWITCH REQUEST DATE:::3150504.1345"
"RTN","A1AEUK3",174,0)
 .; D DUZ^XUP(A1AEDUZ)
"RTN","A1AEUK3",175,0)
 . N MAILGRP S MAILGRP=DUZ
"RTN","A1AEUK3",176,0)
 .; Send message to DUZ
"RTN","A1AEUK3",177,0)
 . S X=$$SNDMAIL^A1AEK3(XMSUBJ,.DATA,MAILGRP,VAP)
"RTN","A1AEUK3",178,0)
 . N XMZ S XMZ=X
"RTN","A1AEUK3",179,0)
 . S X=($G(X)>0)
"RTN","A1AEUK3",180,0)
 . I 'X D  Q
"RTN","A1AEUK3",181,0)
 .. D CHKEQ^%ut(1,X,"Testing patch stream change request FAILED!")
"RTN","A1AEUK3",182,0)
 .; Check for entry in 11007.2 with SCS set to 2
"RTN","A1AEUK3",183,0)
 . H 10 ; hang for slow email delivery
"RTN","A1AEUK3",184,0)
 . D FCNF1^A1AEK3
"RTN","A1AEUK3",185,0)
 . H 10 ; hang for slow email delivery
"RTN","A1AEUK3",186,0)
 . S X=0
"RTN","A1AEUK3",187,0)
 . N A1AE42I,A1AE72I
"RTN","A1AEUK3",188,0)
 . S A1AE42I=$O(^DIC(4.2,"B","A1AEUK3MUNIT",0))
"RTN","A1AEUK3",189,0)
 . I A1AE42I S A1AE72I=$O(^A1AE(11007.2,"B",A1AE42I,0))
"RTN","A1AEUK3",190,0)
 . I A1AE72I S X=$$GET1^DIQ(11007.2,A1AE72I,.06,"I")
"RTN","A1AEUK3",191,0)
 . I A1AE72I S X=($G(X)=2)
"RTN","A1AEUK3",192,0)
 . D CHKEQ^%ut(1,X,"Testing patch stream change request FAILED!")
"RTN","A1AEUK3",193,0)
 Q
"RTN","A1AEUK3",194,0)
 ;
"RTN","A1AEUK3",195,0)
 ; FRMAPPR^A1AEK3
"RTN","A1AEUK3",196,0)
UTP103 ;Testing Forum Approving Change Request
"RTN","A1AEUK3",197,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK3",198,0)
 .; D DUZ^XUP(A1AEDUZ)
"RTN","A1AEUK3",199,0)
 .; Set up X1 and X2 to emulate Forum Edit
"RTN","A1AEUK3",200,0)
 . N X1,X2 S X1=2,X2=1
"RTN","A1AEUK3",201,0)
 . N A1AE42I S A1AE42I=$O(^DIC(4.2,"B","A1AEUK3MUNIT",0))
"RTN","A1AEUK3",202,0)
 . N A1AE72I S A1AE72I=$O(^A1AE(11007.2,"B",A1AE42I,0))
"RTN","A1AEUK3",203,0)
 .; Global set Stream Change Status to 1, fix C cross
"RTN","A1AEUK3",204,0)
 . S $P(^A1AE(11007.2,A1AE72I,0),"^",6)=1
"RTN","A1AEUK3",205,0)
 . K ^A1AE(11007.2,"C",A1AE42I)
"RTN","A1AEUK3",206,0)
 . S ^A1AE(11007.2,"C",A1AE42I,1,A1AE72I)=""
"RTN","A1AEUK3",207,0)
 .; Add unit test trigger to second piece of D
"RTN","A1AEUK3",208,0)
 . N D S D=A1AE42I_"^"_"A1AE:::"
"RTN","A1AEUK3",209,0)
 . D FRMAPPR^A1AEK3(X1,X2,D)
"RTN","A1AEUK3",210,0)
 . H 30 ; Wait for email
"RTN","A1AEUK3",211,0)
 . N NODE S NODE=$NA(^A1AE(11007.2,A1AE72I,1,"B","A"))
"RTN","A1AEUK3",212,0)
 . N A1AEDT S A1AEDT=$O(@NODE,-1)
"RTN","A1AEUK3",213,0)
 . N A1AEDTI S A1AEDTI=$O(^A1AE(11007.2,A1AE72I,1,"B",A1AEDT,0))
"RTN","A1AEUK3",214,0)
 . N IENS S IENS=A1AEDTI_","_A1AE72I_","
"RTN","A1AEUK3",215,0)
 . N A1AEDAP
"RTN","A1AEUK3",216,0)
 . S A1AEDAP=$$GET1^DIQ(11007.21,IENS,7)
"RTN","A1AEUK3",217,0)
 . S X=(A1AEDAP["YES")
"RTN","A1AEUK3",218,0)
 . D CHKEQ^%ut(1,X,"Testing Forum Approving Change Request FAILED!")
"RTN","A1AEUK3",219,0)
 Q
"RTN","A1AEUK3",220,0)
 ;
"RTN","A1AEUK3",221,0)
 ; FCNF2^A1AEK3
"RTN","A1AEUK3",222,0)
UTP104 ;Testing Patch Stream Change Completed
"RTN","A1AEUK3",223,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK3",224,0)
 .; Build in incoming patch stream change successful message
"RTN","A1AEUK3",225,0)
 . N XMSUBJ
"RTN","A1AEUK3",226,0)
 . S XMSUBJ="A1AE:::SUBSCRIPTION CHNG COMPLETED"
"RTN","A1AEUK3",227,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK3",228,0)
 . N DATA S DATA(0)=6
"RTN","A1AEUK3",229,0)
 . S DATA(1)="SERVER:::A1AEUK3MUNIT"
"RTN","A1AEUK3",230,0)
 . S DATA(2)="ACTIVE SUBSCRIPTION:::1"
"RTN","A1AEUK3",231,0)
 . S DATA(3)="DATE SUBSCRIPTION ACTIVE:::3010101.0101"
"RTN","A1AEUK3",232,0)
 . S DATA(4)="REQUESTOR DUZ:::46"
"RTN","A1AEUK3",233,0)
 . S DATA(5)="SWITCH TO SUBSCRIPTION:::10001"
"RTN","A1AEUK3",234,0)
 . S DATA(6)="SWITCH REQUEST DATE:::3150504.1345"
"RTN","A1AEUK3",235,0)
 . S DATA(7)="APPROVED:::YES"
"RTN","A1AEUK3",236,0)
 . S DATA(8)="FORUM ACTION EDIT:::SUCCESSFUL"
"RTN","A1AEUK3",237,0)
 . S DATA(9)="NEW SUBSCRIPTION DATE:::3150506.1623"
"RTN","A1AEUK3",238,0)
 . S DATA(10)="NEW ACTIVE SUBSCRIPTION:::10001"
"RTN","A1AEUK3",239,0)
 .; D DUZ^XUP(A1AEDUZ)
"RTN","A1AEUK3",240,0)
 .; Send message to DUZ
"RTN","A1AEUK3",241,0)
 . N MAILGRP S MAILGRP=DUZ
"RTN","A1AEUK3",242,0)
 . S X=$$SNDMAIL^A1AEK3(XMSUBJ,.DATA,MAILGRP,VAP)
"RTN","A1AEUK3",243,0)
 . N XMZ S XMZ=X
"RTN","A1AEUK3",244,0)
 . S X=($G(X)>0)
"RTN","A1AEUK3",245,0)
 . I 'X D  Q
"RTN","A1AEUK3",246,0)
 .. D CHKEQ^%ut(1,X,"Testing Patch Stream Change Completed FAILED!")
"RTN","A1AEUK3",247,0)
 .; Check for entry in 11007.2 with SCS set to 3
"RTN","A1AEUK3",248,0)
 . H 10 ; hang for slow email delivery
"RTN","A1AEUK3",249,0)
 . D FCNF2^A1AEK3
"RTN","A1AEUK3",250,0)
 . H 10 ; hang for slow email delivery
"RTN","A1AEUK3",251,0)
 . S X=0
"RTN","A1AEUK3",252,0)
 . N A1AE42I,A1AE72I
"RTN","A1AEUK3",253,0)
 . S A1AE42I=$O(^DIC(4.2,"B","A1AEUK3MUNIT",0))
"RTN","A1AEUK3",254,0)
 . I A1AE42I S A1AE72I=$O(^A1AE(11007.2,"B",A1AE42I,0))
"RTN","A1AEUK3",255,0)
 . I A1AE72I S X=$$GET1^DIQ(11007.2,A1AE72I,.06,"I")
"RTN","A1AEUK3",256,0)
 . I A1AE72I S X=($G(X)=3)
"RTN","A1AEUK3",257,0)
 . D CHKEQ^%ut(1,X,"Testing Patch Stream Change Completed FAILED!")
"RTN","A1AEUK3",258,0)
 Q
"RTN","A1AEUK3",259,0)
 ;
"RTN","A1AEUK3",260,0)
 ;FCNF3^A1AEK3
"RTN","A1AEUK3",261,0)
UTP105 ;Testing client side change failure
"RTN","A1AEUK3",262,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK3",263,0)
 .; Build in incoming patch stream change request
"RTN","A1AEUK3",264,0)
 . N XMSUBJ,DATA
"RTN","A1AEUK3",265,0)
 . S XMSUBJ="A1AE:::SUBSCRIPTION CHNG REQUEST"
"RTN","A1AEUK3",266,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK3",267,0)
 . N DATA S DATA(0)=6
"RTN","A1AEUK3",268,0)
 . S DATA(1)="SERVER:::A1AEUK3MUFAIL"
"RTN","A1AEUK3",269,0)
 . S DATA(2)="ACTIVE SUBSCRIPTION:::1"
"RTN","A1AEUK3",270,0)
 . S DATA(3)="DATE SUBSCRIPTION ACTIVE:::3010101.0101"
"RTN","A1AEUK3",271,0)
 . S DATA(4)="REQUESTOR DUZ:::46"
"RTN","A1AEUK3",272,0)
 . S DATA(5)="SWITCH TO SUBSCRIPTION:::10001"
"RTN","A1AEUK3",273,0)
 . S DATA(6)="SWITCH REQUEST DATE:::3150504.1345"
"RTN","A1AEUK3",274,0)
 .; D DUZ^XUP(A1AEDUZ)
"RTN","A1AEUK3",275,0)
 . N MAILGRP S MAILGRP=DUZ
"RTN","A1AEUK3",276,0)
 .; Send message through DUZ
"RTN","A1AEUK3",277,0)
 . S X=$$SNDMAIL^A1AEK3(XMSUBJ,.DATA,MAILGRP,VAP)
"RTN","A1AEUK3",278,0)
 . N XMZ S XMZ=X
"RTN","A1AEUK3",279,0)
 . S X=($G(X)>0)
"RTN","A1AEUK3",280,0)
 . I 'X D  Q
"RTN","A1AEUK3",281,0)
 .. D CHKEQ^%ut(1,X,"Testing client side change failure FAILED!")
"RTN","A1AEUK3",282,0)
 .; Check for entry in 11007.2 with SCS set to 2
"RTN","A1AEUK3",283,0)
 . H 10 ; hang for slow email delivery
"RTN","A1AEUK3",284,0)
 . D FCNF1^A1AEK3
"RTN","A1AEUK3",285,0)
 . H 10 ; hang for slow email delivery
"RTN","A1AEUK3",286,0)
 . S X=0
"RTN","A1AEUK3",287,0)
 . N A1AE42I,A1AE72I
"RTN","A1AEUK3",288,0)
 . S A1AE42I=$O(^DIC(4.2,"B","A1AEUK3MUFAIL",0))
"RTN","A1AEUK3",289,0)
 . I A1AE42I S A1AE72I=$O(^A1AE(11007.2,"B",A1AE42I,0))
"RTN","A1AEUK3",290,0)
 . I A1AE72I S X=$$GET1^DIQ(11007.2,A1AE72I,.06,"I")
"RTN","A1AEUK3",291,0)
 . I A1AE72I S X=($G(X)=2)
"RTN","A1AEUK3",292,0)
 . I 'X D  Q
"RTN","A1AEUK3",293,0)
 .. D CHKEQ^%ut(1,X,"Testing1 client side change failure FAILED!")
"RTN","A1AEUK3",294,0)
 .; Now edit the request to approval YES by Forum
"RTN","A1AEUK3",295,0)
 .; D DUZ^XUP(A1AEDUZ)
"RTN","A1AEUK3",296,0)
 .; Set up X1 and X2 to emulate Forum Edit
"RTN","A1AEUK3",297,0)
 . N X1,X2 S X1=2,X2=1
"RTN","A1AEUK3",298,0)
 . N A1AE42I S A1AE42I=$O(^DIC(4.2,"B","A1AEUK3MUFAIL",0))
"RTN","A1AEUK3",299,0)
 . N A1AE72I S A1AE72I=$O(^A1AE(11007.2,"B",A1AE42I,0))
"RTN","A1AEUK3",300,0)
 .; Global set Stream Change Status to 1, fix C cross
"RTN","A1AEUK3",301,0)
 . S $P(^A1AE(11007.2,A1AE72I,0),"^",6)=1
"RTN","A1AEUK3",302,0)
 . K ^A1AE(11007.2,"C",A1AE42I)
"RTN","A1AEUK3",303,0)
 . S ^A1AE(11007.2,"C",A1AE42I,1,A1AE72I)=""
"RTN","A1AEUK3",304,0)
 .; Add unit test trigger to second piece of D
"RTN","A1AEUK3",305,0)
 . N D S D=A1AE42I_"^"_"A1AE:::"
"RTN","A1AEUK3",306,0)
 . D FRMAPPR^A1AEK3(X1,X2,D)
"RTN","A1AEUK3",307,0)
 . H 30 ; Wait for email
"RTN","A1AEUK3",308,0)
 . N NODE S NODE=$NA(^A1AE(11007.2,A1AE72I,1,"B","A"))
"RTN","A1AEUK3",309,0)
 . N A1AEDT S A1AEDT=$O(@NODE,-1)
"RTN","A1AEUK3",310,0)
 . N A1AEDTI S A1AEDTI=$O(^A1AE(11007.2,A1AE72I,1,"B",A1AEDT,0))
"RTN","A1AEUK3",311,0)
 . N IENS S IENS=A1AEDTI_","_A1AE72I_","
"RTN","A1AEUK3",312,0)
 . N A1AEDAP
"RTN","A1AEUK3",313,0)
 . S A1AEDAP=$$GET1^DIQ(11007.21,IENS,7)
"RTN","A1AEUK3",314,0)
 . S X=(A1AEDAP["YES")
"RTN","A1AEUK3",315,0)
 . I 'X D  Q
"RTN","A1AEUK3",316,0)
 .. D CHKEQ^%ut(1,X,"Testing2 client side change failure FAILED!")
"RTN","A1AEUK3",317,0)
 .; Build in incoming patch stream change successful message
"RTN","A1AEUK3",318,0)
 . N XMSUBJ
"RTN","A1AEUK3",319,0)
 . S XMSUBJ="A1AE:::SUBSCRIPTION CHNG FAILED"
"RTN","A1AEUK3",320,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK3",321,0)
 . N DATA S DATA(0)=6
"RTN","A1AEUK3",322,0)
 . S DATA(1)="SERVER:::A1AEUK3MUFAIL"
"RTN","A1AEUK3",323,0)
 . S DATA(2)="ACTIVE SUBSCRIPTION:::1"
"RTN","A1AEUK3",324,0)
 . S DATA(3)="DATE SUBSCRIPTION ACTIVE:::3010101.0101"
"RTN","A1AEUK3",325,0)
 . S DATA(4)="REQUESTOR DUZ:::46"
"RTN","A1AEUK3",326,0)
 . S DATA(5)="SWITCH TO SUBSCRIPTION:::10001"
"RTN","A1AEUK3",327,0)
 . S DATA(6)="SWITCH REQUEST DATE:::3150504.1345"
"RTN","A1AEUK3",328,0)
 . S DATA(7)="APPROVED:::YES"
"RTN","A1AEUK3",329,0)
 . S DATA(8)="FORUM ACTION EDIT:::FAILED"
"RTN","A1AEUK3",330,0)
 .; D DUZ^XUP(A1AEDUZ)
"RTN","A1AEUK3",331,0)
 . N MAILGRP S MAILGRP=DUZ
"RTN","A1AEUK3",332,0)
 .; Send message through DUZ
"RTN","A1AEUK3",333,0)
 . S X=$$SNDMAIL^A1AEK3(XMSUBJ,.DATA,MAILGRP,VAP)
"RTN","A1AEUK3",334,0)
 . N XMZ S XMZ=X
"RTN","A1AEUK3",335,0)
 . S X=($G(X)>0)
"RTN","A1AEUK3",336,0)
 . I 'X D  Q
"RTN","A1AEUK3",337,0)
 .. D CHKEQ^%ut(1,X,"Testing3 client side change failure FAILED!")
"RTN","A1AEUK3",338,0)
 .; Check for entry in 11007.2 with SCS set to 3
"RTN","A1AEUK3",339,0)
 . H 10 ; hang for slow email delivery
"RTN","A1AEUK3",340,0)
 . D FCNF3^A1AEK3
"RTN","A1AEUK3",341,0)
 . H 10 ; hang for slow email delivery
"RTN","A1AEUK3",342,0)
 . S X=0
"RTN","A1AEUK3",343,0)
 . N A1AE42I,A1AE72I
"RTN","A1AEUK3",344,0)
 . S A1AE42I=$O(^DIC(4.2,"B","A1AEUK3MUFAIL",0))
"RTN","A1AEUK3",345,0)
 . I A1AE42I S A1AE72I=$O(^A1AE(11007.2,"B",A1AE42I,0))
"RTN","A1AEUK3",346,0)
 . I A1AE72I S X=$$GET1^DIQ(11007.2,A1AE72I,.06,"I")
"RTN","A1AEUK3",347,0)
 . I A1AE72I S X=($G(X)=3)
"RTN","A1AEUK3",348,0)
 . D CHKEQ^%ut(1,X,"Testing3 client side change failure FAILED!")
"RTN","A1AEUK3",349,0)
 Q
"RTN","A1AEUK3",350,0)
 ;
"RTN","A1AEUK3",351,0)
 ;
"RTN","A1AEUK3",352,0)
 ;EMDATA^A1AEK3
"RTN","A1AEUK3",353,0)
UTP106 ;Testing pulling text from email
"RTN","A1AEUK3",354,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK3",355,0)
 .; Look up email,save XMZ
"RTN","A1AEUK3",356,0)
 . N XMSUBJ,X
"RTN","A1AEUK3",357,0)
 . S XMSUBJ="A1AE:::SUBSCRIPTION CHNG COMPL"
"RTN","A1AEUK3",358,0)
 . N XMZ S XMZ=$O(^XMB(3.9,"B",XMSUBJ,"A"),-1)
"RTN","A1AEUK3",359,0)
 . N XMBD M XMBD=^XMB(3.9,XMZ,2)
"RTN","A1AEUK3",360,0)
 .; Pull structured array from 3.9, save in FDATA
"RTN","A1AEUK3",361,0)
 . N DATA D EMDATA^A1AEK3(XMZ,.DATA)
"RTN","A1AEUK3",362,0)
 .; Compare XMBD with DATA
"RTN","A1AEUK3",363,0)
 . N NODEX,NODED
"RTN","A1AEUK3",364,0)
 . S NODEX=$NA(XMBD(0)),NODED=$NA(DATA(0))
"RTN","A1AEUK3",365,0)
 . S X=""
"RTN","A1AEUK3",366,0)
 . F  S NODEX=$Q(@NODEX) Q:NODEX'["XMBD"  S NODED=$Q(@NODED) D
"RTN","A1AEUK3",367,0)
 .. S X=$G(X)_(@NODEX=@NODED)
"RTN","A1AEUK3",368,0)
 . S X=(X'["0")
"RTN","A1AEUK3",369,0)
 . D CHKEQ^%ut(1,X,"Testing pulling text from email FAILED!")
"RTN","A1AEUK3",370,0)
 Q
"RTN","A1AEUK3",371,0)
 ;
"RTN","A1AEUK3",372,0)
 ;
"RTN","A1AEUK3",373,0)
 ;UPDDOMA^A1AEK3
"RTN","A1AEUK3",374,0)
UTP107 ;Testing updating PATCH STREAM HISTORY file
"RTN","A1AEUK3",375,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK3",376,0)
 .; Get email ien listed in our test entry
"RTN","A1AEUK3",377,0)
 . N A1AE42I S A1AE42I=$O(^DIC(4.2,"B","A1AEUK3MUNIT",0))
"RTN","A1AEUK3",378,0)
 . N A1AE72I S A1AE72I=$O(^A1AE(11007.2,"B",A1AE42I,0))
"RTN","A1AEUK3",379,0)
 . N NODE S NODE=$NA(^A1AE(11007.2,A1AE72I,1,"B","A"))
"RTN","A1AEUK3",380,0)
 . N A1AEDT S A1AEDT=$O(@NODE,-1)
"RTN","A1AEUK3",381,0)
 . N A1AEDTI S A1AEDTI=$O(^A1AE(11007.2,A1AE72I,1,"B",A1AEDT,0))
"RTN","A1AEUK3",382,0)
 . N IENS S IENS=A1AEDTI_","_A1AE72I_","
"RTN","A1AEUK3",383,0)
 . N XMZ
"RTN","A1AEUK3",384,0)
 . S XMZ=$$GET1^DIQ(11007.21,IENS,12,"I")
"RTN","A1AEUK3",385,0)
 .; Pull DATA array from message
"RTN","A1AEUK3",386,0)
 . D EMDATA^A1AEK3(XMZ,.DATA)
"RTN","A1AEUK3",387,0)
 .; Change DUZ DATA(4)="REQUESTOR DUZ:::46"
"RTN","A1AEUK3",388,0)
 . S DATA("RDUZ")=1234567
"RTN","A1AEUK3",389,0)
 .; Update entry
"RTN","A1AEUK3",390,0)
 . N X S X=$$UPDDOMA^A1AEK3(.DATA)
"RTN","A1AEUK3",391,0)
 . H 10
"RTN","A1AEUK3",392,0)
 .; Look for change in entry in 11007.2
"RTN","A1AEUK3",393,0)
 . N RDUZ S RDUZ=$$GET1^DIQ(11007.21,IENS,4)
"RTN","A1AEUK3",394,0)
 . S X=(RDUZ="1234567")
"RTN","A1AEUK3",395,0)
 . D CHKEQ^%ut(1,X,"Testing updating PATCH STREAM HISTORY file FAILED!")
"RTN","A1AEUK3",396,0)
 Q
"RTN","A1AEUK3",397,0)
 ;
"RTN","A1AEUK3",398,0)
 ;  SNDMAIL^A1AEK3
"RTN","A1AEUK3",399,0)
UTP108 ;Testing Sending mail
"RTN","A1AEUK3",400,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK3",401,0)
 . S XMSUBJ="A1AE:::UNIT TESTING SNDMAIL FUNCTION"
"RTN","A1AEUK3",402,0)
 . N MAILGRP S MAILGRP="G.A1AEFMSC"
"RTN","A1AEUK3",403,0)
 . N DATA S DATA(0)=1,DATA(1)="UTP107 UNIT TEST"
"RTN","A1AEUK3",404,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK3",405,0)
 .; D DUZ^XUP(DUZ)
"RTN","A1AEUK3",406,0)
 . N X S X=$$SNDMAIL^A1AEK3(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK3",407,0)
 .; X=XMZ (IEN of message in ^XMB(3.9 if worked
"RTN","A1AEUK3",408,0)
 . S X=$S(X>0:1,1:0)
"RTN","A1AEUK3",409,0)
 . D CHKEQ^%ut(1,X,"Testing Sending mail FAILED!")
"RTN","A1AEUK3",410,0)
 Q
"RTN","A1AEUK3",411,0)
 ;
"RTN","A1AEUK3",412,0)
 ;  FND^A1AEK3
"RTN","A1AEUK3",413,0)
UTP109 ;Testing Finding data in structured email
"RTN","A1AEUK3",414,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK3",415,0)
 . N DATA
"RTN","A1AEUK3",416,0)
 . S DATA(0)=6
"RTN","A1AEUK3",417,0)
 . S DATA(1)="SERVER:::ABCDEFGH"
"RTN","A1AEUK3",418,0)
 . S DATA(2)="ACTIVE SUBSCRIPTION:::1"
"RTN","A1AEUK3",419,0)
 . S DATA(3)="DATE SUBSCRIPTION ACTIVE:::3110101.1234"
"RTN","A1AEUK3",420,0)
 . S DATA(4)="REQUESTOR DUZ:::799"
"RTN","A1AEUK3",421,0)
 . S DATA(5)="SWITCH TO SUBSCRIPTION:::10001"
"RTN","A1AEUK3",422,0)
 . S DATA(6)="SWITCH REQUEST DATE:::3150401.1234"
"RTN","A1AEUK3",423,0)
 . N X S X=($$FND^A1AEK3(.DATA,"SERVER")="ABCDEFGH")
"RTN","A1AEUK3",424,0)
 . D CHKEQ^%ut(1,X,"Testing Finding data in structured email FAILED!")
"RTN","A1AEUK3",425,0)
 Q
"RTN","A1AEUK3",426,0)
 ;
"RTN","A1AEUK3",427,0)
 ;
"RTN","A1AEUK3",428,0)
 ;CHKMTCH^A1AEK3
"RTN","A1AEUK3",429,0)
UTP110 ;Testing matching DATA array to active entry
"RTN","A1AEUK3",430,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK3",431,0)
 .; Get email ien listed in our test entry
"RTN","A1AEUK3",432,0)
 . N A1AE42I S A1AE42I=$O(^DIC(4.2,"B","A1AEUK3MUNIT",0))
"RTN","A1AEUK3",433,0)
 . N A1AE72I S A1AE72I=$O(^A1AE(11007.2,"B",A1AE42I,0))
"RTN","A1AEUK3",434,0)
 . N NODE S NODE=$NA(^A1AE(11007.2,A1AE72I,1,"B","A"))
"RTN","A1AEUK3",435,0)
 . N A1AEDT S A1AEDT=$O(@NODE,-1)
"RTN","A1AEUK3",436,0)
 . N A1AEDTI S A1AEDTI=$O(^A1AE(11007.2,A1AE72I,1,"B",A1AEDT,0))
"RTN","A1AEUK3",437,0)
 . N IENS S IENS=A1AEDTI_","_A1AE72I_","
"RTN","A1AEUK3",438,0)
 . N XMZ
"RTN","A1AEUK3",439,0)
 . S XMZ=$$GET1^DIQ(11007.21,IENS,12,"I")
"RTN","A1AEUK3",440,0)
 .; Pull DATA array from message
"RTN","A1AEUK3",441,0)
 . D EMDATA^A1AEK3(XMZ,.DATA)
"RTN","A1AEUK3",442,0)
 .; Now compare DATA array to message
"RTN","A1AEUK3",443,0)
 . N X S X=$$CHKMTCH^A1AEK3(XMZ,.DATA)
"RTN","A1AEUK3",444,0)
 . S X=(X>0)
"RTN","A1AEUK3",445,0)
 . D CHKEQ^%ut(1,X,"Testing matching DATA array to active entry FAILED!")
"RTN","A1AEUK3",446,0)
 Q
"RTN","A1AEUK3",447,0)
 ;
"RTN","A1AEUK3",448,0)
 ;
"RTN","A1AEUK3",449,0)
 ;FCFN4^A1AEK3
"RTN","A1AEUK3",450,0)
UTP111 ;Testing Other Forums receiving confirmation
"RTN","A1AEUK3",451,0)
 ;Build and send an email to user DUZ
"RTN","A1AEUK3",452,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK3",453,0)
 . N LASTMAIL S LASTMAIL=$O(^XMB(3.9,"A"),-1)
"RTN","A1AEUK3",454,0)
 . N DATA
"RTN","A1AEUK3",455,0)
 . S DATA(0)=10
"RTN","A1AEUK3",456,0)
 . S DATA(1)="SERVER:::ABCDEFGH"
"RTN","A1AEUK3",457,0)
 . S DATA(2)="ACTIVE SUBSCRIPTION:::1"
"RTN","A1AEUK3",458,0)
 . S DATA(3)="DATE SUBSCRIPTION ACTIVE:::3110101.1234"
"RTN","A1AEUK3",459,0)
 . S DATA(4)="REQUESTOR DUZ:::799"
"RTN","A1AEUK3",460,0)
 . S DATA(5)="SWITCH TO SUBSCRIPTION:::10001"
"RTN","A1AEUK3",461,0)
 . S DATA(6)="SWITCH REQUEST DATE:::3150401.1234"
"RTN","A1AEUK3",462,0)
 . S DATA(7)="APPROVED:::YES"
"RTN","A1AEUK3",463,0)
 . S DATA(8)="FORUM ACTION EDIT:::SUCCESSFUL"
"RTN","A1AEUK3",464,0)
 . S DATA(9)="NEW SUBSCRIPTION DATE:::3150506.1623"
"RTN","A1AEUK3",465,0)
 . S DATA(10)="NEW ACTIVE SUBSCRIPTION:::10001"
"RTN","A1AEUK3",466,0)
 . S XMSUBJ="A1AE:::SUBSCRIPTION CHNG CONFIRMED"
"RTN","A1AEUK3",467,0)
 . N MAILGRP S MAILGRP=DUZ
"RTN","A1AEUK3",468,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK3",469,0)
 . N XMZ S XMZ=$$SNDMAIL^A1AEK3(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK3",470,0)
 . H 10
"RTN","A1AEUK3",471,0)
 . D FCNF4^A1AEK3
"RTN","A1AEUK3",472,0)
 . H 20
"RTN","A1AEUK3",473,0)
 .;Look for email with subject "A1AE:::UNIT TEST FCNF4"
"RTN","A1AEUK3",474,0)
 . S XMZ=$O(^XMB(3.9,"B","A1AE:::UNIT TEST FCNF4","A"),-1)
"RTN","A1AEUK3",475,0)
 . S X=(XMZ>LASTMAIL)
"RTN","A1AEUK3",476,0)
 . D CHKEQ^%ut(1,X,"Testing Other Forums receiving confirmation FAILED!")
"RTN","A1AEUK3",477,0)
 Q
"RTN","A1AEUK3",478,0)
 ;
"RTN","A1AEUK3",479,0)
 ;;
"RTN","A1AEUK3",480,0)
XTENT ;
"RTN","A1AEUK3",481,0)
 ;;UTP100;Testing Calling A1AEK3 from Top
"RTN","A1AEUK3",482,0)
 ;;UTP101;Testing Server on Mail Group
"RTN","A1AEUK3",483,0)
 ;;UTP102;Testing client patch stream change request
"RTN","A1AEUK3",484,0)
 ;;UTP103;Testing Forum Approving Change Request
"RTN","A1AEUK3",485,0)
 ;;UTP104;Testing Patch Stream Change Completed
"RTN","A1AEUK3",486,0)
 ;;UTP105;Testing client side change failure
"RTN","A1AEUK3",487,0)
 ;;UTP106;Testing pulling text from email
"RTN","A1AEUK3",488,0)
 ;;UTP107;Testing updating PATCH STREAM HISTORY file
"RTN","A1AEUK3",489,0)
 ;;UTP108;Testing Sending mail
"RTN","A1AEUK3",490,0)
 ;;UTP109;Testing Finding data in structured email
"RTN","A1AEUK3",491,0)
 ;;UTP110;Testing matching DATA array to active entry
"RTN","A1AEUK3",492,0)
 ;;UTP111;Testing Other Forums receiving confirmation
"RTN","A1AEUK3",493,0)
 Q
"RTN","A1AEUK3",494,0)
 ;
"RTN","A1AEUK3",495,0)
 Q
"RTN","A1AEUK3",496,0)
 ;
"RTN","A1AEUK3",497,0)
 ;
"RTN","A1AEUK3",498,0)
EOR ; end of routine A1AEUK3
"RTN","A1AEUPS1")
0^63^B54027214
"RTN","A1AEUPS1",1,0)
A1AEUPS1 ;ven/lgc,jli-unit tests for the patch module ;2015-01-06T23:29
"RTN","A1AEUPS1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUPS1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUPS1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUPS1",5,0)
 ;
"RTN","A1AEUPS1",6,0)
 ;
"RTN","A1AEUPS1",7,0)
 ;primary change history
"RTN","A1AEUPS1",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUPS1",9,0)
 ;
"RTN","A1AEUPS1",10,0)
 ; CHANGE: (VEN/LGC) Corrected calls to Post Install
"RTN","A1AEUPS1",11,0)
 ;        The Post install was moved out of the A1AEUTL
"RTN","A1AEUPS1",12,0)
 ;        routine and placed in the A1AE2POS routine
"RTN","A1AEUPS1",13,0)
 ;        now designated as the post install repository
"RTN","A1AEUPS1",14,0)
 ; CHANGE: (VEN/LGC) 9/29/2014
"RTN","A1AEUPS1",15,0)
 ;        Added code at UTS0+7 to save entry temporarily
"RTN","A1AEUPS1",16,0)
 ;        stream set to subscription, to assure after
"RTN","A1AEUPS1",17,0)
 ;        testing this was returned to 0
"RTN","A1AEUPS1",18,0)
 ; CHANGE: (VEN/LGC) 10/16/2014
"RTN","A1AEUPS1",19,0)
 ;        Added code to check for exsitence and DD
"RTN","A1AEUPS1",20,0)
 ;        of files before continuing with testing
"RTN","A1AEUPS1",21,0)
 ;        Added A1AEFAIL to indicate when testing
"RTN","A1AEUPS1",22,0)
 ;        should not continue.
"RTN","A1AEUPS1",23,0)
 ; CHANGE: (JLI/LGC) 01/06/2015
"RTN","A1AEUPS1",24,0)
 ;        Added code to check setting of A1AESEQ
"RTN","A1AEUPS1",25,0)
 ;        cross-reference on NAME field of PATCH
"RTN","A1AEUPS1",26,0)
 ;        APPLICATION HISTORY subfile of VERSION
"RTN","A1AEUPS1",27,0)
 ;        subfile of PACKAGE file
"RTN","A1AEUPS1",28,0)
 ;
"RTN","A1AEUPS1",29,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUPS1",30,0)
 ; N A1AEFAIL S A1AEFAIL=0 ; JLI 141017 moved to STARTUP
"RTN","A1AEUPS1",31,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUPS1",32,0)
 Q
"RTN","A1AEUPS1",33,0)
 ;
"RTN","A1AEUPS1",34,0)
STARTUP ;
"RTN","A1AEUPS1",35,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN ; JLI 141017
"RTN","A1AEUPS1",36,0)
 I '$D(^A1AE(11007.1)) D  Q
"RTN","A1AEUPS1",37,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS1",38,0)
 . W !,"DHCP PATCH STREAM [#11007.1] file missing"
"RTN","A1AEUPS1",39,0)
 . W !,"Unable to continue testing.  Try again later"
"RTN","A1AEUPS1",40,0)
 .;
"RTN","A1AEUPS1",41,0)
 L +^A1AE(11007.1):1 I '$T D  Q
"RTN","A1AEUPS1",42,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS1",43,0)
 . W !,"Unable to obtain lock on DHCP PATCH STREAM [#11007.1] file"
"RTN","A1AEUPS1",44,0)
 . W !,"Unable to continue testing.  Try again later"
"RTN","A1AEUPS1",45,0)
 ;
"RTN","A1AEUPS1",46,0)
 ; Check structure of 11007.1 correct
"RTN","A1AEUPS1",47,0)
 I $$GET1^DIQ(11007.1,1,.01)'="FOIA VISTA" D  Q
"RTN","A1AEUPS1",48,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS1",49,0)
 . W !,"DHCP PATCH STREAM [#11007.1] missing FOIA VISTA"
"RTN","A1AEUPS1",50,0)
 . W !,"Unable to continue testing.  Try again later"
"RTN","A1AEUPS1",51,0)
 ;
"RTN","A1AEUPS1",52,0)
 I $$GET1^DIQ(11007.1,10001,.01)'="OSEHRA VISTA" D  Q
"RTN","A1AEUPS1",53,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS1",54,0)
 . W !,"DHCP PATCH STREAM [#11007.1] missing OSEHRA VISTA"
"RTN","A1AEUPS1",55,0)
 . W !,"Unable to continue testing.  Try again later"
"RTN","A1AEUPS1",56,0)
 ;
"RTN","A1AEUPS1",57,0)
 I $$GET1^DIQ(11007.1,1,.001)'=1 D  Q
"RTN","A1AEUPS1",58,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS1",59,0)
 . W !,"File #11007.1 FOIA VISTA .001 field corrupt. "
"RTN","A1AEUPS1",60,0)
 . W !,"Unable to continue testing.  Try again later"
"RTN","A1AEUPS1",61,0)
 ;
"RTN","A1AEUPS1",62,0)
 I $$GET1^DIQ(11007.1,10001,.001)'=10001 D  Q
"RTN","A1AEUPS1",63,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS1",64,0)
 . W !,"File #11007.1] OSEHRA .001 field corrupt"
"RTN","A1AEUPS1",65,0)
 . W !,"Unable to continue testing.  Try again later"
"RTN","A1AEUPS1",66,0)
 Q
"RTN","A1AEUPS1",67,0)
 ;
"RTN","A1AEUPS1",68,0)
SHUTDOWN L -^A1AE(11007.1)
"RTN","A1AEUPS1",69,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUPS1",70,0)
 K A1AEFAIL
"RTN","A1AEUPS1",71,0)
 Q
"RTN","A1AEUPS1",72,0)
 ;
"RTN","A1AEUPS1",73,0)
 ; Unit Test setting all PRIMARY to 0
"RTN","A1AEUPS1",74,0)
 ;   1. Save the IEN of entry now set as PRIMARY
"RTN","A1AEUPS1",75,0)
 ;   2. Run A1AEP0
"RTN","A1AEUPS1",76,0)
 ;   3. Find IEN set to 1 (shouldn't be any)
"RTN","A1AEUPS1",77,0)
 ;   4. Return original PRIMARY setting
"RTN","A1AEUPS1",78,0)
 ;   5. Run Unit Test
"RTN","A1AEUPS1",79,0)
 ;
"RTN","A1AEUPS1",80,0)
 ;
"RTN","A1AEUPS1",81,0)
UTP1 ;
"RTN","A1AEUPS1",82,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP, killed in SHUTDOWN
"RTN","A1AEUPS1",83,0)
 I A1AEFAIL=1 D  Q
"RTN","A1AEUPS1",84,0)
 . ;D FAIL^%ut("Unable to perform testing") ;commented out JLI 141017
"RTN","A1AEUPS1",85,0)
 ;
"RTN","A1AEUPS1",86,0)
 N A1AEI,UTOIEN,UTPOST
"RTN","A1AEUPS1",87,0)
 ; Save IEN of entry now set as PRIMARY?
"RTN","A1AEUPS1",88,0)
 S UTOIEN=$$UTPRIEN
"RTN","A1AEUPS1",89,0)
 ; If no Stream was set to PRIMARY, we must set one
"RTN","A1AEUPS1",90,0)
 ;  or we are unable to check that clearing all PRIMARY works
"RTN","A1AEUPS1",91,0)
 S:'UTOIEN $P(^A1AE(11007.1,1,0),U,2)=1
"RTN","A1AEUPS1",92,0)
 ; Call should set all PRIMARY to 0
"RTN","A1AEUPS1",93,0)
 D A1AEP1A^A1AE2POS
"RTN","A1AEUPS1",94,0)
 ; See if all PRIMARY are 0
"RTN","A1AEUPS1",95,0)
 S UTPOST=$$UTPRIEN
"RTN","A1AEUPS1",96,0)
 ;
"RTN","A1AEUPS1",97,0)
 ; Return PRIMARY to original value
"RTN","A1AEUPS1",98,0)
 S:UTOIEN $P(^A1AE(11007.1,UTOIEN,0),U,2)=1
"RTN","A1AEUPS1",99,0)
 D CHKEQ^%ut(0,UTPOST,"Set all PRIMARY to 0 FAILED")
"RTN","A1AEUPS1",100,0)
 ;
"RTN","A1AEUPS1",101,0)
 ; Now that we have returned PRIMARY to original setting
"RTN","A1AEUPS1",102,0)
 ;   clean up everything by rebuilding all cross-references
"RTN","A1AEUPS1",103,0)
 N DIK,DA
"RTN","A1AEUPS1",104,0)
 S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AEUPS1",105,0)
 D ENALL2^DIK
"RTN","A1AEUPS1",106,0)
 D ENALL^DIK
"RTN","A1AEUPS1",107,0)
 Q
"RTN","A1AEUPS1",108,0)
 ;
"RTN","A1AEUPS1",109,0)
 ;
"RTN","A1AEUPS1",110,0)
 ; Note in Unit Testing of setting PRIMARY? to match that
"RTN","A1AEUPS1",111,0)
 ;   assigned for specific FORUM Domains, that a non-FORUM
"RTN","A1AEUPS1",112,0)
 ;   site will test only that an incorrect PRIMARY? will
"RTN","A1AEUPS1",113,0)
 ;   not be set.
"RTN","A1AEUPS1",114,0)
 ;   The test in a FORUM Domain site will test whether
"RTN","A1AEUPS1",115,0)
 ;   the PRIMARY? is set, AND set correctly
"RTN","A1AEUPS1",116,0)
 ; Logic for Post Install setting or PRIMARY worked correctly
"RTN","A1AEUPS1",117,0)
 ;   UTDOM = MAIL PARAMETERS not have FORUM domain = NO PRIMARY
"RTN","A1AEUPS1",118,0)
 ;   UTDOM = NOT A FORUM domain = NO PRIMARY
"RTN","A1AEUPS1",119,0)
 ;   UTDOM = FORUM.XXX.YYY
"RTN","A1AEUPS1",120,0)
 ;       A FORUM DOMAIN entry = MAIL PARAMETER DOMAIN = is PRIMARY
"RTN","A1AEUPS1",121,0)
 ;       No FORUM DOMAIN entry = MAIL PARAMETER DOMAIN = NO PRIMARY
"RTN","A1AEUPS1",122,0)
 ;
"RTN","A1AEUPS1",123,0)
UTP2 ;
"RTN","A1AEUPS1",124,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP, killed in SHUTDONW
"RTN","A1AEUPS1",125,0)
 I A1AEFAIL=1 D  Q
"RTN","A1AEUPS1",126,0)
 . ;D FAIL^%ut("Unable to perform testing") ; JLI 141017 COMMENTED OUT
"RTN","A1AEUPS1",127,0)
 ;
"RTN","A1AEUPS1",128,0)
 N A1AEI,UTDOM,UTOIEN,UTPOST,X
"RTN","A1AEUPS1",129,0)
 S UTDOM=$$GET1^DIQ(4.3,"1,",.01)
"RTN","A1AEUPS1",130,0)
 ; Save present PRIMARY patch stream IEN - if one set
"RTN","A1AEUPS1",131,0)
 S UTOIEN=$$UTPRIEN
"RTN","A1AEUPS1",132,0)
 ; If a Patch Stream PRIMARY? is set to YES, set to NO
"RTN","A1AEUPS1",133,0)
 S:UTOIEN $P(^A1AE(11007.1,UTOIEN,0),U,2)=0
"RTN","A1AEUPS1",134,0)
 ; Run code to set PRIMARY? according to FORUM DOMAIN entry
"RTN","A1AEUPS1",135,0)
 D A1AEP1B^A1AE2POS
"RTN","A1AEUPS1",136,0)
 ; Get the IEN of the entry having PRIMARY? set to yes now
"RTN","A1AEUPS1",137,0)
 ; Note that if no FORUM DOMAIN entry is filled into
"RTN","A1AEUPS1",138,0)
 ;   an entry in DHCP PATCH STREAM then all entries
"RTN","A1AEUPS1",139,0)
 ;   remain CORRECTLY at PRIMARY=0
"RTN","A1AEUPS1",140,0)
 S UTPOST=$$UTPRIEN
"RTN","A1AEUPS1",141,0)
 S X=1
"RTN","A1AEUPS1",142,0)
 ; If all PRIMARY are 0, and
"RTN","A1AEUPS1",143,0)
 ;    a) and MAIL DOMAIN not contain "FORUM" --- correct
"RTN","A1AEUPS1",144,0)
 ;    b) and no FORUM DOMAIN fields set in 11007.1 --- correct
"RTN","A1AEUPS1",145,0)
 ; If there is a PRIMARY set then correct if,
"RTN","A1AEUPS1",146,0)
 ;    a) the mail domain (UTDOM) contains "FORUM"
"RTN","A1AEUPS1",147,0)
 ;    b) and, the FORUM DOMAIN for this entry set to PRIMARY
"RTN","A1AEUPS1",148,0)
 ;            matches the mail domain
"RTN","A1AEUPS1",149,0)
 I 'UTPOST,$P($G(UTDOM),".")'["FORUM" S X=0
"RTN","A1AEUPS1",150,0)
 I 'UTPOST,'$D(^A1AE(11007.1,"AFORUM")) S X=0
"RTN","A1AEUPS1",151,0)
 I $P(UTDOM,".")["FORUM",UTDOM=$$GET1^DIQ(11007.1,UTPOST_",",.07) D
"RTN","A1AEUPS1",152,0)
 . S X=0
"RTN","A1AEUPS1",153,0)
 D CHKEQ^%ut(0,X,"Set FORUM SITE PRIMARY to 1 FAILED")
"RTN","A1AEUPS1",154,0)
 ; Put settings back as they were, even if incorrect
"RTN","A1AEUPS1",155,0)
 I UTOIEN'=UTPOST D
"RTN","A1AEUPS1",156,0)
 .  S $P(^A1AE(11007.1,UTPOST,0),U,2)=0
"RTN","A1AEUPS1",157,0)
 .  S $P(^A1AE(11007.1,UTOIEN,0),U,2)=1
"RTN","A1AEUPS1",158,0)
 N DIK,DA
"RTN","A1AEUPS1",159,0)
 S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AEUPS1",160,0)
 D ENALL2^DIK
"RTN","A1AEUPS1",161,0)
 D ENALL^DIK
"RTN","A1AEUPS1",162,0)
 Q
"RTN","A1AEUPS1",163,0)
 ;
"RTN","A1AEUPS1",164,0)
 ;
"RTN","A1AEUPS1",165,0)
 ; Unit Testing for subroutine that sets all SUBSCRIPTION [#.06]
"RTN","A1AEUPS1",166,0)
 ;   to 0 [NO], then sets SUBSCRIPTION to YES for the FOIA VISTA
"RTN","A1AEUPS1",167,0)
 ;   Stream.
"RTN","A1AEUPS1",168,0)
 ; Rather than correct a site's entries if they are set wrong
"RTN","A1AEUPS1",169,0)
 ;   we will first save off their present SUBSCRIPTION entry
"RTN","A1AEUPS1",170,0)
 ;   in the DHCP PATCH STREAM [#11007.1] file so we might
"RTN","A1AEUPS1",171,0)
 ;   set it back after our test.
"RTN","A1AEUPS1",172,0)
 ; Logic for test
"RTN","A1AEUPS1",173,0)
 ;   1. Save off IEN for entry in DHCP PATCH STREAM [#11007.1]
"RTN","A1AEUPS1",174,0)
 ;       SUBSCRIPTION presently set to 1 [YES]
"RTN","A1AEUPS1",175,0)
 ;   2. Run A1AEP1C^A1AE2POS in the Post Install routine
"RTN","A1AEUPS1",176,0)
 ;      which should set SUBSCRIPTION to 0, then set
"RTN","A1AEUPS1",177,0)
 ;      the FOIA VISTA site to SUBSCRIPTION
"RTN","A1AEUPS1",178,0)
 ;   3. Set the IEN for Stream SUBSCRIPTION back to original
"RTN","A1AEUPS1",179,0)
 ;   4. Run Unit Test code
"RTN","A1AEUPS1",180,0)
 ;
"RTN","A1AEUPS1",181,0)
UTP3 ;
"RTN","A1AEUPS1",182,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP, killed in SHUTDOWN
"RTN","A1AEUPS1",183,0)
 I A1AEFAIL=1 D  Q
"RTN","A1AEUPS1",184,0)
 . ;D FAIL^%ut("Unable to perform testing") ; JLI 141017 commented out
"RTN","A1AEUPS1",185,0)
 ;
"RTN","A1AEUPS1",186,0)
 N A1AEI,UTOIEN,UTPOST,UTMPOST
"RTN","A1AEUPS1",187,0)
 ; Save off stream now set to SUBSCRIPTION
"RTN","A1AEUPS1",188,0)
 S UTOIEN=$$UTSUBS
"RTN","A1AEUPS1",189,0)
 ; If no Stream was set to SUBSCRIPTION, we must set one
"RTN","A1AEUPS1",190,0)
 ;  or we are unable to check that clearing all SUBSCRIPTION works
"RTN","A1AEUPS1",191,0)
 I 'UTOIEN S A1AEI=$O(^A1AE(11007.1,"A"),-1) D
"RTN","A1AEUPS1",192,0)
 .  S $P(^A1AE(11007.1,A1AEI,0),U,6)=1
"RTN","A1AEUPS1",193,0)
 .  S UTMPOST=A1AEI ; Temporariy set
"RTN","A1AEUPS1",194,0)
 ; Call subroutine in Post Install routine that sets
"RTN","A1AEUPS1",195,0)
 ;   SUBSCRIPTION to the FOIA VISTA entry
"RTN","A1AEUPS1",196,0)
 D A1AEP1C^A1AE2POS
"RTN","A1AEUPS1",197,0)
 ; See what entry in 11007.1 file is now set to SUBSCRIPTION
"RTN","A1AEUPS1",198,0)
 S UTPOST=$$UTSUBS
"RTN","A1AEUPS1",199,0)
 ; Return SUBSCRIPTION to original value
"RTN","A1AEUPS1",200,0)
 I 'UTOIEN,$G(UTMPOST) S $P(^A1AE(11007.1,UTMPOST,0),U,6)=0
"RTN","A1AEUPS1",201,0)
 I UTOIEN,UTOIEN'=UTPOST D
"RTN","A1AEUPS1",202,0)
 . S $P(^A1AE(11007.1,UTPOST,0),U,6)=0
"RTN","A1AEUPS1",203,0)
 . S $P(^A1AE(11007.1,UTOIEN,0),U,6)=1
"RTN","A1AEUPS1",204,0)
 S X=1
"RTN","A1AEUPS1",205,0)
 I UTPOST,$P(^A1AE(11007.1,UTPOST,0),U)="FOIA VISTA" S X=0
"RTN","A1AEUPS1",206,0)
 D CHKEQ^%ut(0,X,"Set SEQUENCE appropriate for FORUM DOMAIN FAILED")
"RTN","A1AEUPS1",207,0)
 N DIK,DA
"RTN","A1AEUPS1",208,0)
 S DIK(1)=".06",DIK="^A1AE(11007.1,"
"RTN","A1AEUPS1",209,0)
 D ENALL2^DIK
"RTN","A1AEUPS1",210,0)
 D ENALL^DIK
"RTN","A1AEUPS1",211,0)
 Q
"RTN","A1AEUPS1",212,0)
 ;
"RTN","A1AEUPS1",213,0)
 ;
"RTN","A1AEUPS1",214,0)
 ;
"RTN","A1AEUPS1",215,0)
 ; Function to return IEN in DHCP PATCH STREAM [#11007.1]
"RTN","A1AEUPS1",216,0)
 ;   entry having PRIMARY? [#.02] field set
"RTN","A1AEUPS1",217,0)
UTPRIEN() N A1AEI,UTPRIM S (A1AEI,UTPRIM)=0
"RTN","A1AEUPS1",218,0)
 F  S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AEUPS1",219,0)
 .  I $P(^A1AE(11007.1,A1AEI,0),U,2) S UTPRIM=A1AEI
"RTN","A1AEUPS1",220,0)
 Q UTPRIM
"RTN","A1AEUPS1",221,0)
 ;
"RTN","A1AEUPS1",222,0)
 ; Function to return IEN in DHCP PATCH STREAM [#11007.1]
"RTN","A1AEUPS1",223,0)
 ;   entry having SUBSCRIPTION [#.03] field set
"RTN","A1AEUPS1",224,0)
UTSUBS() N UTSUBS S (A1AEI,UTSUBS)=0
"RTN","A1AEUPS1",225,0)
 F  S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AEUPS1",226,0)
 .  I $P(^A1AE(11007.1,A1AEI,0),U,6) S UTSUBS=A1AEI
"RTN","A1AEUPS1",227,0)
 Q UTSUBS
"RTN","A1AEUPS1",228,0)
 ;
"RTN","A1AEUPS1",229,0)
CHKPLUS  ; @TEST check setting of Pre-LookUp Transforms
"RTN","A1AEUPS1",230,0)
 ; remove existing nodes that will be set
"RTN","A1AEUPS1",231,0)
 K ^DD(9.49,.01,7.5),^DD(9.6,.01,7.5),^DD(9.7,.01,7.5)
"RTN","A1AEUPS1",232,0)
 ; now run code to set them
"RTN","A1AEUPS1",233,0)
 D SETPLUS^A1AE2POS
"RTN","A1AEUPS1",234,0)
 ; and check that they are set
"RTN","A1AEUPS1",235,0)
 D CHKTF^%ut($D(^DD(9.49,.01,7.5)),"Failed to set Pre-Lookup Transform (node 7.5) for subfile 9.49")
"RTN","A1AEUPS1",236,0)
 D CHKTF^%ut($D(^DD(9.6,.01,7.5)),"Failed to set Pre-Lookup Transform (node 7.5) for file 9.6")
"RTN","A1AEUPS1",237,0)
 D CHKTF^%ut($D(^DD(9.7,.01,7.5)),"Failed to set Pre-Lookup Transform (node 7.5) for file 9.7")
"RTN","A1AEUPS1",238,0)
 Q
"RTN","A1AEUPS1",239,0)
 ;
"RTN","A1AEUPS1",240,0)
CHECKSEQ ; @TEST check setting of sequence cross-reference
"RTN","A1AEUPS1",241,0)
 F NODE=0:0 S NODE=$O(^DD(9.4901,.01,1,NODE)) Q:NODE'>0  I $G(^(NODE,0))="9.4^A1AESEQ^MUMPS" Q
"RTN","A1AEUPS1",242,0)
 I NODE>0 K ^DD(9.4901,.01,1,NODE),^DD(9.4,0,"IX","A1AESEQ",9.4901,.01) ; remove current entries
"RTN","A1AEUPS1",243,0)
 ;
"RTN","A1AEUPS1",244,0)
 D SETSEQ^A1AE2POS
"RTN","A1AEUPS1",245,0)
 ;
"RTN","A1AEUPS1",246,0)
 D CHKTF^%ut($D(^DD(9.4,0,"IX","A1AESEQ",9.4901,.01)),"Did not create main node under ^DD(9.4,0,")
"RTN","A1AEUPS1",247,0)
 F NODE=0:0 S NODE=$O(^DD(9.4901,.01,1,NODE)) Q:NODE'>0  I $G(^(NODE,0))="9.4^A1AESEQ^MUMPS" Q
"RTN","A1AEUPS1",248,0)
 D CHKTF^%ut(NODE,"Did not create cross-reference for NAME in PATCH APPLICATION HISTORY")
"RTN","A1AEUPS1",249,0)
 N VALUE S VALUE=$O(^DIC(9.4,"A1AESEQ",""))
"RTN","A1AEUPS1",250,0)
 D CHKTF^%ut(VALUE'="","A1AESEQ cross-reference not built for data in file 9.4")
"RTN","A1AEUPS1",251,0)
 Q
"RTN","A1AEUPS1",252,0)
 ;
"RTN","A1AEUPS1",253,0)
XTENT ;
"RTN","A1AEUPS1",254,0)
 ;;UTP1;Testing setting of all PRIMARY? to NO in 11007.1
"RTN","A1AEUPS1",255,0)
 ;;UTP2;Testing setting PRIMARY? to yes if FORUM site
"RTN","A1AEUPS1",256,0)
 ;;UTP3;Testing setting of SUBSCRIPTION to FOIA VISTA
"RTN","A1AEUPS1",257,0)
 Q
"RTN","A1AEUPS1",258,0)
 ;
"RTN","A1AEUPS1",259,0)
 ;
"RTN","A1AEUPS1",260,0)
EOR ; end of routine A1AEUPS1
"RTN","A1AEUPS2")
0^64^B114795891
"RTN","A1AEUPS2",1,0)
A1AEUPS2 ;ven/lgc,jli-unit tests for the patch module ;2014-10-28T22:24
"RTN","A1AEUPS2",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUPS2",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUPS2",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUPS2",5,0)
 ;
"RTN","A1AEUPS2",6,0)
 ;
"RTN","A1AEUPS2",7,0)
 ;primary change history
"RTN","A1AEUPS2",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUPS2",9,0)
 ;
"RTN","A1AEUPS2",10,0)
 ; CHANGE: (VEN/LGC) 10/14/2014
"RTN","A1AEUPS2",11,0)
 ;     Added code to check for correct PATCH field
"RTN","A1AEUPS2",12,0)
 ;     DD in file 9.6 and 9.7
"RTN","A1AEUPS2",13,0)
 ;
"RTN","A1AEUPS2",14,0)
 ; Unit Test for Post Install which loads all BUILD [#9.6]
"RTN","A1AEUPS2",15,0)
 ;   and INSTALL [#9.7] entries with pointers to 
"RTN","A1AEUPS2",16,0)
 ;   DHCP PATCHES [#11005] file in the PAT multiple
"RTN","A1AEUPS2",17,0)
 ;   
"RTN","A1AEUPS2",18,0)
 ;   1. Lock DHCP PATCHES,BUILD,INSTALL files
"RTN","A1AEUPS2",19,0)
 ;   2. Select 10 patches from DHCP PATCHES [#11005]
"RTN","A1AEUPS2",20,0)
 ;   3. Install test entries
"RTN","A1AEUPS2",21,0)
 ;   5. Check new entries match expected
"RTN","A1AEUPS2",22,0)
 ;   6. Run section of Post Install to be tested
"RTN","A1AEUPS2",23,0)
 ;   7. Run Unit Test to ensure PAT entries correct
"RTN","A1AEUPS2",24,0)
 ;   8. Delete builds (1),(2) and (3)
"RTN","A1AEUPS2",25,0)
 ;   9. Release Locks
"RTN","A1AEUPS2",26,0)
 ;
"RTN","A1AEUPS2",27,0)
 ;
"RTN","A1AEUPS2",28,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUPS2",29,0)
 ; N A1AEFAIL S A1AEFAIL=0 ; moved to STARTUP
"RTN","A1AEUPS2",30,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUPS2",31,0)
 Q
"RTN","A1AEUPS2",32,0)
 ;
"RTN","A1AEUPS2",33,0)
STARTUP ;
"RTN","A1AEUPS2",34,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUPS2",35,0)
 I '$D(^XPD(9.6)) D  Q
"RTN","A1AEUPS2",36,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",37,0)
 . W !,"BUILD [#9.6] file not in environment"
"RTN","A1AEUPS2",38,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",39,0)
 ;
"RTN","A1AEUPS2",40,0)
 I '$D(^XPD(9.7)) D  Q
"RTN","A1AEUPS2",41,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",42,0)
 . W !,"INSTALL [#9.7] file not in environment"
"RTN","A1AEUPS2",43,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",44,0)
 ;
"RTN","A1AEUPS2",45,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUPS2",46,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",47,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUPS2",48,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",49,0)
 ;
"RTN","A1AEUPS2",50,0)
 L +^XPD(9.7):1 I '$T D  Q
"RTN","A1AEUPS2",51,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",52,0)
 . W !,"Unable to obtain lock on INSTALL [#9.6] file"
"RTN","A1AEUPS2",53,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",54,0)
 ;
"RTN","A1AEUPS2",55,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUPS2",56,0)
 I '$D(^A1AE(A1AEFILE)) D  Q
"RTN","A1AEUPS2",57,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",58,0)
 . W !,A1AENAME_" [#"_A1AEFILE_"] not in environment"
"RTN","A1AEUPS2",59,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",60,0)
 ;
"RTN","A1AEUPS2",61,0)
 I $G(^DD(9.6,19,0))'["PATCH^9.619PA^^PAT;0" D  Q
"RTN","A1AEUPS2",62,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",63,0)
 . W !,"PATCH multiple [#19] not found in BUILD file"
"RTN","A1AEUPS2",64,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",65,0)
 ;
"RTN","A1AEUPS2",66,0)
 I $G(^DD(9.7,19,0))'["PATCH^9.719PA^^PAT;0" D  Q
"RTN","A1AEUPS2",67,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",68,0)
 . W !,"PATCH multiple [#19] not found in INSTALL file"
"RTN","A1AEUPS2",69,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",70,0)
 ;
"RTN","A1AEUPS2",71,0)
 D ENTDEL I ERRMSG'["OK" D  Q
"RTN","A1AEUPS2",72,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",73,0)
 . W !,"Unable to clear special 9.6,9.7 entries before test"
"RTN","A1AEUPS2",74,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",75,0)
 ;
"RTN","A1AEUPS2",76,0)
 S X=$$DELPAT I 'X D  Q
"RTN","A1AEUPS2",77,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",78,0)
 . W !,"Unable to clear test patches from "_A1AENAME_" [#"_A1AEFILE_"]"
"RTN","A1AEUPS2",79,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",80,0)
 ;
"RTN","A1AEUPS2",81,0)
 S X=$$NEWPAT I 'X D  Q
"RTN","A1AEUPS2",82,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",83,0)
 . W !,"Unable to add test patches to "_A1AENAME_" [#"_A1AEFILE_"]"
"RTN","A1AEUPS2",84,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",85,0)
 Q
"RTN","A1AEUPS2",86,0)
 ;
"RTN","A1AEUPS2",87,0)
 ;
"RTN","A1AEUPS2",88,0)
 ;
"RTN","A1AEUPS2",89,0)
SHUTDOWN L -^XPD(9.6)
"RTN","A1AEUPS2",90,0)
 L -^XPD(9.7)
"RTN","A1AEUPS2",91,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUPS2",92,0)
 K A1AEFAIL
"RTN","A1AEUPS2",93,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUPS2",94,0)
 S X=$$DELPAT I 'X D  Q
"RTN","A1AEUPS2",95,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",96,0)
 . W !,"Unable to clear test patches from "_A1AENAME_" [#"_A1AEFILE_"]"
"RTN","A1AEUPS2",97,0)
 . W !," A1AE*2.4*900 through A1AE*2.4*915 and."
"RTN","A1AEUPS2",98,0)
 . W !," A1AE*2.4*19900 through A1AE*2.4*19915"
"RTN","A1AEUPS2",99,0)
 . W !," may need to be deleted manually"
"RTN","A1AEUPS2",100,0)
 ;
"RTN","A1AEUPS2",101,0)
 D ENTDEL I ERRMSG'["OK" D  Q
"RTN","A1AEUPS2",102,0)
 . W !,"***** WARNING *****"
"RTN","A1AEUPS2",103,0)
 . W !,"Unable to clear special 9.6,9.7 entries after test"
"RTN","A1AEUPS2",104,0)
 . W !,"  BUILDS with names beginning with  A1AEXTST*1*"
"RTN","A1AEUPS2",105,0)
 . W !,"  may need to be deleted manually."
"RTN","A1AEUPS2",106,0)
 Q
"RTN","A1AEUPS2",107,0)
 ;
"RTN","A1AEUPS2",108,0)
UTP4 I $G(A1AEFAIL) D  Q
"RTN","A1AEUPS2",109,0)
 . D FAIL^%ut("Unable to perform test.")
"RTN","A1AEUPS2",110,0)
 ;
"RTN","A1AEUPS2",111,0)
 N ERRMSG S ERRMSG="OK"
"RTN","A1AEUPS2",112,0)
 I '$$SEL10(.A1AEP) D  Q
"RTN","A1AEUPS2",113,0)
 .  D FAIL^%ut("Unable to select 10 test patches")
"RTN","A1AEUPS2",114,0)
 D LOADBLDS I ERRMSG'["OK" D  Q
"RTN","A1AEUPS2",115,0)
 .  D FAIL^%ut(ERRMSG)
"RTN","A1AEUPS2",116,0)
 D LOADINST I ERRMSG'["OK" D  Q
"RTN","A1AEUPS2",117,0)
 .  D FAIL^%ut(ERRMSG)
"RTN","A1AEUPS2",118,0)
 S OK=$$CHKIBENT I OK D  Q
"RTN","A1AEUPS2",119,0)
 . D FAIL^%ut("Loading BUILDS and INSTALLS for testing FAILED!")
"RTN","A1AEUPS2",120,0)
 ; Run post install to add PAT multiple to new 9.6 and 9.7 entries
"RTN","A1AEUPS2",121,0)
 D RUNPOST
"RTN","A1AEUPS2",122,0)
 ;  Test whether the post install worked correctly.
"RTN","A1AEUPS2",123,0)
 S OK=$$CHKIBPAT
"RTN","A1AEUPS2",124,0)
 D CHKEQ^%ut(0,OK,"Setting PAT multiple in 9.6 and 9.7 FAILED")
"RTN","A1AEUPS2",125,0)
 Q
"RTN","A1AEUPS2",126,0)
 ;
"RTN","A1AEUPS2",127,0)
 ; Build an array of TEST entries in DHCP PATCHES [#11005]
"RTN","A1AEUPS2",128,0)
 ; ENTER
"RTN","A1AEUPS2",129,0)
 ;   A1AEP  passed by reference
"RTN","A1AEUPS2",130,0)
 ; RETURN
"RTN","A1AEUPS2",131,0)
 ;   A1AEP(n) array of entries in 11005
"RTN","A1AEUPS2",132,0)
 ;   0 = error ,  1 = selection complete
"RTN","A1AEUPS2",133,0)
SEL10(A1AEP) K A1AEP
"RTN","A1AEUPS2",134,0)
 N X S X=1
"RTN","A1AEUPS2",135,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUPS2",136,0)
 N I F I=1:1:9 S A1AEP(I)="A1AE*2.4*"_(900+I) D  Q:'X
"RTN","A1AEUPS2",137,0)
 . S X=$O(^A1AE(A1AEFILE,"B",A1AEP(I),0))
"RTN","A1AEUPS2",138,0)
 Q:'X X
"RTN","A1AEUPS2",139,0)
 S A1AEP(10)="A1AE*999.1*12345"
"RTN","A1AEUPS2",140,0)
 Q 1
"RTN","A1AEUPS2",141,0)
 ;
"RTN","A1AEUPS2",142,0)
 ;
"RTN","A1AEUPS2",143,0)
 ;
"RTN","A1AEUPS2",144,0)
ENTDEL N PM
"RTN","A1AEUPS2",145,0)
 D RMVENT(9.6,"A1AE*1.0*9999980",.ERRMSG) Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",146,0)
 D RMVENT(9.6,"A1AE MUNITPOO 1.0",.ERRMSG) Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",147,0)
 D RMVENT(9.6,"A1AE*1.0*9999981",.ERRMSG) Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",148,0)
 D RMVENT(9.7,"A1AE*1.0*9999980",.ERRMSG) Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",149,0)
 N I F I=1:1:10 D  Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",150,0)
 . Q:$G(A1AEP(I))=""
"RTN","A1AEUPS2",151,0)
 . I $O(^XPD(9.6,"B",A1AEP(I),0)) D
"RTN","A1AEUPS2",152,0)
 .. D RMVENT(9.6,$G(A1AEP(I)),.ERRMSG)
"RTN","A1AEUPS2",153,0)
 Q
"RTN","A1AEUPS2",154,0)
 ;
"RTN","A1AEUPS2",155,0)
 ; Remove all entries with this PATCH DESIGNATION
"RTN","A1AEUPS2",156,0)
RMVENT(KFILE,PM,ERRMSG) ;
"RTN","A1AEUPS2",157,0)
 N DA,DIERR,DIK K ERRMSG S ERRMSG="OK"
"RTN","A1AEUPS2",158,0)
 F  S DA=$O(^XPD(KFILE,"B",PM,0)) Q:'DA  D  Q:ERRMSG["DIERR"
"RTN","A1AEUPS2",159,0)
 .  S DIK="^XPD("_KFILE_","
"RTN","A1AEUPS2",160,0)
 .  D ^DIK
"RTN","A1AEUPS2",161,0)
 .  S:$D(DIERR) ERRMSG="DIERR"
"RTN","A1AEUPS2",162,0)
 Q
"RTN","A1AEUPS2",163,0)
 ;
"RTN","A1AEUPS2",164,0)
 ; Load the necessary BUILDS
"RTN","A1AEUPS2",165,0)
 ;
"RTN","A1AEUPS2",166,0)
LOADBLDS N PTCHARR,PM
"RTN","A1AEUPS2",167,0)
 S PM="A1AE*1.0*9999980"
"RTN","A1AEUPS2",168,0)
 S PTCHARR(1)=$P(A1AEP(1),"^")
"RTN","A1AEUPS2",169,0)
 S PTCHARR(2)="A1AE MUNITPOO 1.0"
"RTN","A1AEUPS2",170,0)
 D LDBLDS(9.6,PM,.PTCHARR) Q:ERRMSG'["OK"
"RTN","A1AEUPS2",171,0)
 ;
"RTN","A1AEUPS2",172,0)
 K PTCHARR
"RTN","A1AEUPS2",173,0)
 S PM="A1AE MUNITPOO 1.0"
"RTN","A1AEUPS2",174,0)
 F I=2:1:8 S PTCHARR(I)=$P(A1AEP(I),"^")
"RTN","A1AEUPS2",175,0)
 D LDBLDS(9.6,PM,.PTCHARR) Q:ERRMSG'["OK"
"RTN","A1AEUPS2",176,0)
 ;
"RTN","A1AEUPS2",177,0)
 K PTCHARR
"RTN","A1AEUPS2",178,0)
 S PM="A1AE*1.0*9999981"
"RTN","A1AEUPS2",179,0)
 F I=9:1:10 S PTCHARR(I)=$P(A1AEP(I),"^")
"RTN","A1AEUPS2",180,0)
 D LDBLDS(9.6,PM,.PTCHARR) Q:ERRMSG'["OK"
"RTN","A1AEUPS2",181,0)
 ;
"RTN","A1AEUPS2",182,0)
 ; Load patches selected from 11005 into 9.6
"RTN","A1AEUPS2",183,0)
 ;   as builds
"RTN","A1AEUPS2",184,0)
 K PTCHARR
"RTN","A1AEUPS2",185,0)
 F I=1:1:10 S PM=A1AEP(I) D LDBLDS(9.6,PM,.PTCHARR)
"RTN","A1AEUPS2",186,0)
 Q
"RTN","A1AEUPS2",187,0)
 ;
"RTN","A1AEUPS2",188,0)
 ;
"RTN","A1AEUPS2",189,0)
LOADINST N PM
"RTN","A1AEUPS2",190,0)
 S PM="A1AE*1.0*9999980"
"RTN","A1AEUPS2",191,0)
 D LDINST(9.7,PM) Q:ERRMSG'["OK"
"RTN","A1AEUPS2",192,0)
 D LDINST(9.7,PM) Q:ERRMSG'["OK"
"RTN","A1AEUPS2",193,0)
 Q
"RTN","A1AEUPS2",194,0)
 ;
"RTN","A1AEUPS2",195,0)
 ;
"RTN","A1AEUPS2",196,0)
 ;
"RTN","A1AEUPS2",197,0)
LDBLDS(KFILE,PM,PTCHARR) ;
"RTN","A1AEUPS2",198,0)
 N A1AEKI,A1AEPM,DIERR,FDA,FIEN
"RTN","A1AEUPS2",199,0)
 ;W !,"PM=",PM
"RTN","A1AEUPS2",200,0)
 S FDA(3,KFILE,"?+1,",.01)=PM
"RTN","A1AEUPS2",201,0)
 S FDA(3,KFILE,"?+1,",2)=0
"RTN","A1AEUPS2",202,0)
 S FDA(3,KFILE,"?+1,",.02)=$$HTFM^XLFDT($H,1)
"RTN","A1AEUPS2",203,0)
 S FDA(3,KFILE,"?+1,",5)="n"
"RTN","A1AEUPS2",204,0)
 D UPDATE^DIE("","FDA(3)","FIEN")
"RTN","A1AEUPS2",205,0)
 I $D(DIERR) D  Q
"RTN","A1AEUPS2",206,0)
 . S ERRMSG="*** DIERR encountered while attempting to enter BUILDS!"
"RTN","A1AEUPS2",207,0)
 S A1AEKI=+FIEN(1)
"RTN","A1AEUPS2",208,0)
 I A1AEKI D  Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",209,0)
 . N PTCHS S PTCHS=0
"RTN","A1AEUPS2",210,0)
 . F  S PTCHS=$O(PTCHARR(PTCHS)) Q:'PTCHS  D  Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",211,0)
 .. S A1AEPM=PTCHARR(PTCHS)
"RTN","A1AEUPS2",212,0)
 .. D LDBLDS1(A1AEKI,A1AEPM,9.63)
"RTN","A1AEUPS2",213,0)
 Q
"RTN","A1AEUPS2",214,0)
 ;
"RTN","A1AEUPS2",215,0)
LDBLDS1(A1AEKI,A1AEPM,KSFILE) ;
"RTN","A1AEUPS2",216,0)
 N FDA,DIERR
"RTN","A1AEUPS2",217,0)
 S FDA(3,KSFILE,"?+1,"_A1AEKI_",",.01)=A1AEPM
"RTN","A1AEUPS2",218,0)
 D UPDATE^DIE("","FDA(3)","")
"RTN","A1AEUPS2",219,0)
 I $D(DIERR) D  Q
"RTN","A1AEUPS2",220,0)
 . S ERRMSG="*** DIERR encountered while entering MULTIPLE BUILDS!"
"RTN","A1AEUPS2",221,0)
 Q
"RTN","A1AEUPS2",222,0)
 ;
"RTN","A1AEUPS2",223,0)
 ;
"RTN","A1AEUPS2",224,0)
 ;
"RTN","A1AEUPS2",225,0)
LDINST(KFILE,PM) ;
"RTN","A1AEUPS2",226,0)
 N FDA,DIERR
"RTN","A1AEUPS2",227,0)
 S FDA(3,KFILE,"+1,",.01)=PM
"RTN","A1AEUPS2",228,0)
 S FDA(3,KFILE,"+1,",.02)=3
"RTN","A1AEUPS2",229,0)
 S FDA(3,KFILE,"+1,",2)=$$HTFM^XLFDT($H)
"RTN","A1AEUPS2",230,0)
 D UPDATE^DIE("","FDA(3)","")
"RTN","A1AEUPS2",231,0)
 I $D(DIERR) D  Q
"RTN","A1AEUPS2",232,0)
 . S ERRMSG="*** DIERR encountered while entering MULTIPLE INSTALLS!"
"RTN","A1AEUPS2",233,0)
 Q
"RTN","A1AEUPS2",234,0)
 ;
"RTN","A1AEUPS2",235,0)
 ; Run post install subroutine which builds
"RTN","A1AEUPS2",236,0)
 ;  the BUILD [#9.6] and INSTALL [#9.7] PAT [#19] multiple
"RTN","A1AEUPS2",237,0)
RUNPOST ;
"RTN","A1AEUPS2",238,0)
 N BN,KIEN S KIEN=$O(^XPD(9.6,"B","A1AE*1.0*9999980",0))
"RTN","A1AEUPS2",239,0)
 S BN="A1AE*1.0*9999980"
"RTN","A1AEUPS2",240,0)
 N BMARR D A1AEP2A^A1AE2POS(BN,.BMARR,KIEN)
"RTN","A1AEUPS2",241,0)
 Q
"RTN","A1AEUPS2",242,0)
 ;
"RTN","A1AEUPS2",243,0)
 ; **************** CHK BLD/INS INIT ENTRIES START
"RTN","A1AEUPS2",244,0)
 ; Check BUILD's and INSTALL's entries Multiple Builds
"RTN","A1AEUPS2",245,0)
 ; BUILDS (1st piece of A1AEP(n)=PM)
"RTN","A1AEUPS2",246,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUPS2",247,0)
 ;     A1AEP(1)
"RTN","A1AEUPS2",248,0)
 ;     A1AE MUNITPOO 1.0
"RTN","A1AEUPS2",249,0)
CHKIBENT() N BLDNM,MB,OK
"RTN","A1AEUPS2",250,0)
 S BLDNM="A1AE*1.0*9999980"
"RTN","A1AEUPS2",251,0)
 S MB(1)=$P(A1AEP(1),"^")
"RTN","A1AEUPS2",252,0)
 S MB(2)="A1AE MUNITPOO 1.0"
"RTN","A1AEUPS2",253,0)
 S OK=$$CHKB0(BLDNM,.MB)
"RTN","A1AEUPS2",254,0)
 ;W !,"A1AE*1.0*9999980"," OK=",OK
"RTN","A1AEUPS2",255,0)
 Q:OK
"RTN","A1AEUPS2",256,0)
 ;
"RTN","A1AEUPS2",257,0)
 ;   A1AE MUNITPOO 1.0
"RTN","A1AEUPS2",258,0)
 ;     A1AE(2)-A1AE(8)
"RTN","A1AEUPS2",259,0)
 S BLDNM="A1AE MUNITPOO 1.0"
"RTN","A1AEUPS2",260,0)
 K MB N I F I=2:1:8 S MB(I)=$P(A1AEP(I),"^")
"RTN","A1AEUPS2",261,0)
 S OK=$$CHKB0(BLDNM,.MB)
"RTN","A1AEUPS2",262,0)
 ;W !,"A1AE MUNITPOO 1.0"," OK=",OK
"RTN","A1AEUPS2",263,0)
 Q:OK OK
"RTN","A1AEUPS2",264,0)
 ;
"RTN","A1AEUPS2",265,0)
 ;   A1AE*1.0*9999981
"RTN","A1AEUPS2",266,0)
 ;     A1AE(9)-A1AE(10)
"RTN","A1AEUPS2",267,0)
 S BLDNM="A1AE*1.0*9999981"
"RTN","A1AEUPS2",268,0)
 K MB N I F I=9:1:10 S MB(I)=$P(A1AEP(I),"^")
"RTN","A1AEUPS2",269,0)
 S OK=$$CHKB0(BLDNM,.MB)
"RTN","A1AEUPS2",270,0)
 ;W !,"A1AE*1.0*9999981"," OK=",OK
"RTN","A1AEUPS2",271,0)
 Q:OK OK
"RTN","A1AEUPS2",272,0)
 ;
"RTN","A1AEUPS2",273,0)
 ; INSTALLS (1st piece of A1AEP(n)=PM)
"RTN","A1AEUPS2",274,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUPS2",275,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUPS2",276,0)
 S OK=$$CHKI0("A1AE*1.0*9999980")
"RTN","A1AEUPS2",277,0)
 ;W !,"A1AE*1.0*9999980 INSTALLS"," OK=",OK
"RTN","A1AEUPS2",278,0)
 Q:'OK OK
"RTN","A1AEUPS2",279,0)
 Q 1
"RTN","A1AEUPS2",280,0)
 ;
"RTN","A1AEUPS2",281,0)
 ; Check BUILD entry and Multiple Build entries OK
"RTN","A1AEUPS2",282,0)
 ; ENTER
"RTN","A1AEUPS2",283,0)
 ;   BLDNM  = BUILD name
"RTN","A1AEUPS2",284,0)
 ;   MB   = Array of Multiple Builds associated
"RTN","A1AEUPS2",285,0)
 ; EXIT
"RTN","A1AEUPS2",286,0)
 ;   0 = all OK
"RTN","A1AEUPS2",287,0)
 ;   1 = fail
"RTN","A1AEUPS2",288,0)
CHKB0(BLDNM,MB) N A1AEI,BIEN,OK S OK=0
"RTN","A1AEUPS2",289,0)
 S A1AEI=$O(^XPD(9.6,"B",BLDNM,0)) Q:'A1AEI A1AEI
"RTN","A1AEUPS2",290,0)
 S BIEN=0 F  S BIEN=$O(MB(BIEN)) Q:'BIEN  D  Q:'OK
"RTN","A1AEUPS2",291,0)
 . S OK=$O(^XPD(9.6,A1AEI,10,"B",MB(BIEN),0))
"RTN","A1AEUPS2",292,0)
 Q:'OK 1  Q:'BIEN 0
"RTN","A1AEUPS2",293,0)
 ;
"RTN","A1AEUPS2",294,0)
 ; Check INSTALL entry OK
"RTN","A1AEUPS2",295,0)
 ; ENTER
"RTN","A1AEUPS2",296,0)
 ;   INSTNM  = INSTALL name
"RTN","A1AEUPS2",297,0)
 ; EXIT
"RTN","A1AEUPS2",298,0)
 ;   0 = all OK
"RTN","A1AEUPS2",299,0)
 ;   1 = fail
"RTN","A1AEUPS2",300,0)
CHKI0(INSTNM) ;
"RTN","A1AEUPS2",301,0)
 Q:$O(^XPD(9.7,"B",INSTNM,0)) 0
"RTN","A1AEUPS2",302,0)
 Q 1
"RTN","A1AEUPS2",303,0)
 ; **************** CHK BLD/INS INIT ENTRIES END
"RTN","A1AEUPS2",304,0)
 ;
"RTN","A1AEUPS2",305,0)
 ;
"RTN","A1AEUPS2",306,0)
 ; **************** CHK BLD/INS FOR PAT START
"RTN","A1AEUPS2",307,0)
CHKIBPAT() ;
"RTN","A1AEUPS2",308,0)
 ; Check BUILD's and INSTALL's entries for PAT
"RTN","A1AEUPS2",309,0)
 ; BUILDS (1st piece of A1AEP(n)=PM)
"RTN","A1AEUPS2",310,0)
 ; INSTALLS (2nd piece of A1AEP(n)=A1AEPI (IEN 11005)
"RTN","A1AEUPS2",311,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUPS2",312,0)
 ;     A1AEP(1)
"RTN","A1AEUPS2",313,0)
 ;     A1AE MUNITPOO 1.0
"RTN","A1AEUPS2",314,0)
 N FILENBR,BINAME,PTCHS
"RTN","A1AEUPS2",315,0)
 S FILENBR=9.6
"RTN","A1AEUPS2",316,0)
 S BINAME="A1AE*1.0*9999980"
"RTN","A1AEUPS2",317,0)
 N I F I=1:1:8 S PTCHS(I)=+$P(A1AEP(1),"^",2)
"RTN","A1AEUPS2",318,0)
 S OK=$$CHKIBP(FILENBR,BINAME,.PTCHS)
"RTN","A1AEUPS2",319,0)
 ;W !,"A1AE*1.0*9999980 PAT BLD","OK=",OK
"RTN","A1AEUPS2",320,0)
 Q:ERRMSG'["OK" 1
"RTN","A1AEUPS2",321,0)
 ;
"RTN","A1AEUPS2",322,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUPS2",323,0)
 ;     A1AEP(1)
"RTN","A1AEUPS2",324,0)
 ;     A1AE MUNITPOO 1.0
"RTN","A1AEUPS2",325,0)
 S FILENBR=9.7
"RTN","A1AEUPS2",326,0)
 S BINAME="A1AE*1.0*9999980"
"RTN","A1AEUPS2",327,0)
 K PTCHS F I=1:1:8 S PTCHS(I)=+$P(A1AEP(1),"^",2)
"RTN","A1AEUPS2",328,0)
 S OK=$$CHKIBP(FILENBR,BINAME,.PTCHS)
"RTN","A1AEUPS2",329,0)
 ;W !,"A1AE*1.0*9999980 PAT INSTS","OK=",OK
"RTN","A1AEUPS2",330,0)
 Q:ERRMSG'["OK" 1
"RTN","A1AEUPS2",331,0)
 ;
"RTN","A1AEUPS2",332,0)
 ;   A1AE MUNITPOO 1.0
"RTN","A1AEUPS2",333,0)
 ;     A1AE(2)-A1AE(8)
"RTN","A1AEUPS2",334,0)
 S FILENBR=9.6
"RTN","A1AEUPS2",335,0)
 S BINAME="A1AE MUNITPOO 1.0"
"RTN","A1AEUPS2",336,0)
 K PTCHS F I=2:1:8 S PTCHS(I)=+$P(A1AEP(1),"^",2)
"RTN","A1AEUPS2",337,0)
 S OK=$$CHKIBP(FILENBR,BINAME,.PTCHS)
"RTN","A1AEUPS2",338,0)
 ;W !,"A1AE MUNITPOO 1.0 PAT BLD","OK=",OK
"RTN","A1AEUPS2",339,0)
 Q:ERRMSG'["OK" 1
"RTN","A1AEUPS2",340,0)
 ;
"RTN","A1AEUPS2",341,0)
 ;   A1AE*1.0*9999981
"RTN","A1AEUPS2",342,0)
 ;     A1AE(9)-A1AE(10)
"RTN","A1AEUPS2",343,0)
 S FILENBR=9.6
"RTN","A1AEUPS2",344,0)
 S BINAME="A1AE*1.0*9999981"
"RTN","A1AEUPS2",345,0)
 S PTCHS(9)=$P(A1AEP(9),"^")
"RTN","A1AEUPS2",346,0)
 S OK=$$CHKIBP(FILENBR,BINAME,.PTCHS)
"RTN","A1AEUPS2",347,0)
 ;W !,"A1AE*1.0*9999981 PAT BLD","OK=",OK
"RTN","A1AEUPS2",348,0)
 Q:ERRMSG'["OK" 1
"RTN","A1AEUPS2",349,0)
 Q 0
"RTN","A1AEUPS2",350,0)
 ;
"RTN","A1AEUPS2",351,0)
 ; Check INSTALL/BUILD entry PAT multiples OK
"RTN","A1AEUPS2",352,0)
 ; ENTER
"RTN","A1AEUPS2",353,0)
 ;   BINAME = BUILD/INSTALL name
"RTN","A1AEUPS2",354,0)
 ;   PTCHS  = Array of Patches IEN's associated
"RTN","A1AEUPS2",355,0)
 ;   FILENB = 9.6 for BUILD, 9.7 for INSTALL
"RTN","A1AEUPS2",356,0)
 ; EXIT
"RTN","A1AEUPS2",357,0)
 ;   0 = all OK
"RTN","A1AEUPS2",358,0)
 ;   1 = fail
"RTN","A1AEUPS2",359,0)
CHKIBP(FILENBR,BINAME,PTCHS) N A1AEI,BIEN,OK S OK=0
"RTN","A1AEUPS2",360,0)
 S A1AEI=$O(^XPD(FILENBR,"B",BINAME,0)) Q:'A1AEI A1AEI
"RTN","A1AEUPS2",361,0)
 S BIEN=0 F  S BIEN=$O(PTCHS(BIEN)) Q:'BIEN  D  Q:'OK
"RTN","A1AEUPS2",362,0)
 . S OK=$O(^XPD(FILENBR,A1AEI,"PAT","B",PTCHS(BIEN),0))
"RTN","A1AEUPS2",363,0)
 Q:'OK 1  Q:'BIEN 0
"RTN","A1AEUPS2",364,0)
 ; **************** CHK BLD/INS FOR PAT END
"RTN","A1AEUPS2",365,0)
 ;
"RTN","A1AEUPS2",366,0)
 ; Load new test patches into DHCP PATCHES [#11005]
"RTN","A1AEUPS2",367,0)
 ; Enter 15 for stream 1 and 15 for stream 10001
"RTN","A1AEUPS2",368,0)
NEWPAT() N I,PAT,DERFRM
"RTN","A1AEUPS2",369,0)
 S DERFRM=0
"RTN","A1AEUPS2",370,0)
 F I=900:1:915 S PAT="A1AE*2.4*"_I_"^1^"_DERFRM D  Q:'X
"RTN","A1AEUPS2",371,0)
  . S X=$$LDPAT(PAT) Q:'X
"RTN","A1AEUPS2",372,0)
 . S DERFRM=X
"RTN","A1AEUPS2",373,0)
 . S PAT="A1AE*2.4*19"_I_"^10001^"_DERFRM D  Q:'X
"RTN","A1AEUPS2",374,0)
 .. S X=$$LDPAT(PAT) Q:'X
"RTN","A1AEUPS2",375,0)
 .. S DERFRM=X
"RTN","A1AEUPS2",376,0)
 Q:'X X  Q 1
"RTN","A1AEUPS2",377,0)
 ;
"RTN","A1AEUPS2",378,0)
 ; Loads a new patch into 11005.
"RTN","A1AEUPS2",379,0)
 ; ENTER
"RTN","A1AEUPS2",380,0)
 ;   PAT           =  Patch name^Patch Stream^Derived from
"RTN","A1AEUPS2",381,0)
 ;   Patch Name    =  A1AE*2.4*nnnn
"RTN","A1AEUPS2",382,0)
 ;   Patch Stream  =  1 or 10001 (get from 11007.1)
"RTN","A1AEUPS2",383,0)
 ;   Derived from  =  IEN of entry in 11005 from which
"RTN","A1AEUPS2",384,0)
 ;                    this patch derived
"RTN","A1AEUPS2",385,0)
 ; RETURN
"RTN","A1AEUPS2",386,0)
 ;   0  = error,  +n = IEN of new entry
"RTN","A1AEUPS2",387,0)
LDPAT(PAT) ;
"RTN","A1AEUPS2",388,0)
 N PN S PN=$P(PAT,"^") I $L(PAT,"*")'=3 Q 0
"RTN","A1AEUPS2",389,0)
 N PTCHSTRM S PTCHSTRM=+$P(PAT,"^",2)
"RTN","A1AEUPS2",390,0)
 Q:'$D(^A1AE(11007.1,PTCHSTRM,0)) 0
"RTN","A1AEUPS2",391,0)
 N DERFRM S DERFRM=+$P(PAT,"^",3)
"RTN","A1AEUPS2",392,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"B","PATCH MODULE",0))
"RTN","A1AEUPS2",393,0)
 N DIERR,FDA,FDAIEN
"RTN","A1AEUPS2",394,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUPS2",395,0)
 S FDA(3,A1AEFILE,"?+1,",.01)=PN
"RTN","A1AEUPS2",396,0)
 S FDA(3,A1AEFILE,"?+1,",.2)=PTCHSTRM
"RTN","A1AEUPS2",397,0)
 S FDA(3,A1AEFILE,"?+1,",2)=PKGIEN
"RTN","A1AEUPS2",398,0)
 S FDA(3,A1AEFILE,"?+1,",3)=2.4
"RTN","A1AEUPS2",399,0)
 S FDA(3,A1AEFILE,"?+1,",4)=$P(PN,"*",3)
"RTN","A1AEUPS2",400,0)
 S FDA(3,A1AEFILE,"?+1,",5)="A1AE TEST ZZZFOR UNIT TESTS"
"RTN","A1AEUPS2",401,0)
 I $G(DERFRM),$D(^A1AE(A1AEFILE,DERFRM)) D
"RTN","A1AEUPS2",402,0)
 . S FDA(3,A1AEFILE,"?+1,",5.2)=DERFRM
"RTN","A1AEUPS2",403,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUPS2",404,0)
 Q:+FDAIEN(1) +FDAIEN(1)
"RTN","A1AEUPS2",405,0)
 Q 0
"RTN","A1AEUPS2",406,0)
 ;
"RTN","A1AEUPS2",407,0)
 ; RETURNS
"RTN","A1AEUPS2",408,0)
 ;   0  = error, 1 = deletions completed
"RTN","A1AEUPS2",409,0)
DELPAT() N DA,DIK,PAT S PAT=0
"RTN","A1AEUPS2",410,0)
 N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525 
"RTN","A1AEUPS2",411,0)
 F  S PAT=$O(^A1AE(A1AEFILE,PAT)) Q:'PAT  D
"RTN","A1AEUPS2",412,0)
 . I $P(^A1AE(A1AEFILE,PAT,0),"^",5)["A1AE TEST ZZZFOR UNIT TESTS" D
"RTN","A1AEUPS2",413,0)
 .. S DIK="^A1AE(A1AEFILE," S DA=+PAT D ^DIK
"RTN","A1AEUPS2",414,0)
 Q:$O(^A1AE(A1AEFILE,"B","A1AE*2.4*899"))["A1AE*2.4" 0
"RTN","A1AEUPS2",415,0)
 Q 1
"RTN","A1AEUPS2",416,0)
 ;
"RTN","A1AEUPS2",417,0)
XTENT ;
"RTN","A1AEUPS2",418,0)
 ;;UTP4;Testing post install setting 9.6, 9.7 PAT multiple
"RTN","A1AEUPS2",419,0)
 Q
"RTN","A1AEUPS2",420,0)
 ;
"RTN","A1AEUPS2",421,0)
EOR ; end of routine A1AEUPS2
"RTN","A1AEUSPL")
0^88^B9585934
"RTN","A1AEUSPL",1,0)
A1AEUSPL ;VEN/JLI - Unit tests for A1AESPLT routine ;2015-07-27  7:39 PM
"RTN","A1AEUSPL",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUSPL",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUSPL",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUSPL",5,0)
 ;
"RTN","A1AEUSPL",6,0)
 I $T(EN^%ut)'="" D EN^%ut("A1AEUSPL")
"RTN","A1AEUSPL",7,0)
 Q
"RTN","A1AEUSPL",8,0)
 ;
"RTN","A1AEUSPL",9,0)
SPLIT ; @TEST - setting up a initial patch in a new stream and releasing it
"RTN","A1AEUSPL",10,0)
 N A1AEDA,DA,DAIEN,DIK,PKGIEN,SEQ,STREAM,VERIEN,XMDA,XMIEN,XMTITLE
"RTN","A1AEUSPL",11,0)
 L +^A1AE(11005):1 I '$T W !,"SKIPPING TEST OF SETPACKG^A1AESPLT - can't get lock" Q
"RTN","A1AEUSPL",12,0)
 S PKGIEN=$P(^DIC(9.4,0),U,3)+200 ;
"RTN","A1AEUSPL",13,0)
 S VERIEN=1 S ^DIC(9.4,PKGIEN,0)="ZZJJ TEST PACKAGE^ZZJJ^ZZDESCRIPTION^"
"RTN","A1AEUSPL",14,0)
 S ^DIC(9.4,PKGIEN,22,0)="^9.49I^2^2"
"RTN","A1AEUSPL",15,0)
 S ^DIC(9.4,PKGIEN,22,1,0)="1.0^3150326^3150326^799"
"RTN","A1AEUSPL",16,0)
 S ^DIC(9.4,PKGIEN,8,22,1,"PAH",0)="^9.4901^^"
"RTN","A1AEUSPL",17,0)
 S ^A1AE(11007.1,4001,0)="TEST STREAM^0^^^TS^O^TEST.STREAM.ORG"
"RTN","A1AEUSPL",18,0)
 S ^A1AE(11007,PKGIEN,0)=PKGIEN_"^Y^n^n^y"
"RTN","A1AEUSPL",19,0)
 N DA,DIK
"RTN","A1AEUSPL",20,0)
 S DIK="^DIC(9.4,",DA=PKGIEN    D IX1^DIK
"RTN","A1AEUSPL",21,0)
 S DIK="^A1AE(11007.1",DA=4001  D IX1^DIK
"RTN","A1AEUSPL",22,0)
 S DIK="^A1AE(11007,",DA=PKGIEN D IX1^DIK
"RTN","A1AEUSPL",23,0)
 S STREAM=4001
"RTN","A1AEUSPL",24,0)
 ;
"RTN","A1AEUSPL",25,0)
 ;SETPACKG ; set up for releasing a patch in a new stream
"RTN","A1AEUSPL",26,0)
 D SETPACKG^A1AESPLT(PKGIEN,VERIEN,STREAM)
"RTN","A1AEUSPL",27,0)
 ;
"RTN","A1AEUSPL",28,0)
 S DA=$O(^A1AE(11005,"B","ZZJJ*1*4001",""))
"RTN","A1AEUSPL",29,0)
 D CHKTF(DA>0,"No entry created in 11005 for ZZJJ*1*4001")
"RTN","A1AEUSPL",30,0)
 ;
"RTN","A1AEUSPL",31,0)
 D CHKTF($D(^A1AE(11007,PKGIEN,"V",VERIEN,1,4001,"PB")),"No ""PB"" entry under DHCP PATCH/PROBLEM PACKAGE")
"RTN","A1AEUSPL",32,0)
 D CHKEQ($G(^A1AE(11007,PKGIEN,"V",VERIEN,1,4001,"PB")),4001,"Bad entry value for ""PB"" in 11007")
"RTN","A1AEUSPL",33,0)
 D CHKEQ($G(^A1AE(11005.1,+DA,2,3,0)),"This patch marks the release of the TEST STREAM stream for ","Missing expected entry in file 1105.1")
"RTN","A1AEUSPL",34,0)
 D CHKEQ($G(^A1AE(11005.1,A1AEIEN,2,194,0)),"$END KID ZZJJ*1.0*4001","Last enry in file 11005.1 message not as expected.")
"RTN","A1AEUSPL",35,0)
 ;
"RTN","A1AEUSPL",36,0)
 ;RELSSTRM - release the stream data
"RTN","A1AEUSPL",37,0)
 S SEQ=20
"RTN","A1AEUSPL",38,0)
 S A1AEDA=DA
"RTN","A1AEUSPL",39,0)
 D RELSSTRM^A1AESPLT(DA,PKGIEN,VERIEN,SEQ)
"RTN","A1AEUSPL",40,0)
 S XMIEN=$O(^XMB(3.9,"Released ZZJJ*1*4001 SEQ #20","")),XMDA=XMIEN
"RTN","A1AEUSPL",41,0)
 I XMIEN'>0 S XMIEN=$P(^XMB(3.9,0),U,3),XMTITLE=$P(^XMB(3.9,XMIEN,0),U)
"RTN","A1AEUSPL",42,0)
 D CHKEQ(XMTITLE,"Released ZZJJ*1*4001 SEQ #20","Incorrect title for release message")
"RTN","A1AEUSPL",43,0)
 D CHKEQ($G(^A1AE(11007,PKGIEN,"V",VERIEN,1,4001,"PH")),4001,"Bad entry value for ""PH"" in 11007")
"RTN","A1AEUSPL",44,0)
 ; W !,"XMDA=",+XMDA,"  DA=",DA
"RTN","A1AEUSPL",45,0)
 ; W !!!! ZWR ^A1AE(11005,A1AEDA,*)
"RTN","A1AEUSPL",46,0)
 ; W !!!! ZWR ^A1AE(11007,PKGIEN,*)
"RTN","A1AEUSPL",47,0)
 ; W !!!! ZWR ^A1AE(11007.1,4001,*)
"RTN","A1AEUSPL",48,0)
 ; W !!!! ZWR ^A1AE(11005.1,A1AEDA,*)
"RTN","A1AEUSPL",49,0)
 ; I XMDA>0 W !!!! ZWR ^XMB(3.9,XMDA,*)
"RTN","A1AEUSPL",50,0)
 ; and clean up
"RTN","A1AEUSPL",51,0)
 I XMDA>0 S DA=XMDA,DIK="^XMB(3.9," D ^DIK
"RTN","A1AEUSPL",52,0)
 S DA=STREAM,DIK="^A1AE(11007.1," D ^DIK
"RTN","A1AEUSPL",53,0)
 S DA=$P(^A1AE(11005,0),U,3) I $P(^A1AE(11005,DA,0),U)="ZZJJ*1*4001" D
"RTN","A1AEUSPL",54,0)
 . S DAIEN=DA,DIK="^A1AE(11005.1," D ^DIK
"RTN","A1AEUSPL",55,0)
 . S DA=DAIEN,DIK="^A1AE(11005," D ^DIK
"RTN","A1AEUSPL",56,0)
 K ^DIC(9.4,VERIEN)
"RTN","A1AEUSPL",57,0)
 L -^A1AE(11005)
"RTN","A1AEUSPL",58,0)
 Q
"RTN","A1AEUSPL",59,0)
 ;
"RTN","A1AEUSPL",60,0)
CHKEQ(ARG1,ARG2,MESSG) ;
"RTN","A1AEUSPL",61,0)
 D CHKEQ^%ut(ARG1,ARG2,MESSG)
"RTN","A1AEUSPL",62,0)
 Q
"RTN","A1AEUSPL",63,0)
 ;
"RTN","A1AEUSPL",64,0)
CHKTF(COND,MESSG) ;
"RTN","A1AEUSPL",65,0)
 D CHKTF^%ut(COND,MESSG)
"RTN","A1AEUSPL",66,0)
 Q
"RTN","A1AEUSPL",67,0)
 ;
"RTN","A1AEUSPL",68,0)
EOR ;
"RTN","A1AEUT1")
0^54^B196291289
"RTN","A1AEUT1",1,0)
A1AEUT1 ;ven/smh-unit tests for the patch module ;2015-07-27  10:16 PM
"RTN","A1AEUT1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUT1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUT1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUT1",5,0)
 ;
"RTN","A1AEUT1",6,0)
 ;
"RTN","A1AEUT1",7,0)
 ;
"RTN","A1AEUT1",8,0)
 ; Change History:
"RTN","A1AEUT1",9,0)
 ;
"RTN","A1AEUT1",10,0)
 ; 2014 01 22: Sam Habiel of the VISTA Expertise Network (VEN/SMH)
"RTN","A1AEUT1",11,0)
 ; developed this routine throughout January 2014, with this date
"RTN","A1AEUT1",12,0)
 ; being his most recent edit.
"RTN","A1AEUT1",13,0)
 ;
"RTN","A1AEUT1",14,0)
 ; 2014 02 25: Rick Marshall of the VISTA Expertise Network (VEN/TOAD)
"RTN","A1AEUT1",15,0)
 ; edited MKSTREAM to use the new standardized name for patch stream
"RTN","A1AEUT1",16,0)
 ; OSEHRA VISTA, set field Abbreviation (.05) to OV, to change
"RTN","A1AEUT1",17,0)
 ; field 2 with field .02, comment with field names, and change from
"RTN","A1AEUT1",18,0)
 ; index PRIM to APRIM. In PATCHVER, fix bug by replacing hardcoded 1
"RTN","A1AEUT1",19,0)
 ; with DA.
"RTN","A1AEUT1",20,0)
 ;
"RTN","A1AEUT1",21,0)
 ; NB: Order matters here. Each test depends on the one before it.
"RTN","A1AEUT1",22,0)
 ; TODO:
"RTN","A1AEUT1",23,0)
 ; 1. Write a Unit Test to check for the presence of the checksums
"RTN","A1AEUT1",24,0)
 ;    after a patch is verified in the stream file routine multiple.
"RTN","A1AEUT1",25,0)
 D EN^%ut($T(+0),1) QUIT
"RTN","A1AEUT1",26,0)
 ;
"RTN","A1AEUT1",27,0)
STARTUP ; Delete all test data
"RTN","A1AEUT1",28,0)
 N DIK,DA ; fur Fileman
"RTN","A1AEUT1",29,0)
 S DUZ=.5 ; Must be defined for auditing.
"RTN","A1AEUT1",30,0)
 N PKGAB S PKGAB="ZZZ"
"RTN","A1AEUT1",31,0)
 ; Get entry from package file if it exists.
"RTN","A1AEUT1",32,0)
 N PKIEN S PKIEN=$O(^DIC(9.4,"C",PKGAB,0))
"RTN","A1AEUT1",33,0)
 ; If package is there, delete everything that belongs to it
"RTN","A1AEUT1",34,0)
 I PKIEN D 
"RTN","A1AEUT1",35,0)
 . S DA="" F  S DA=$O(^A1AE(11005,"D",PKIEN,DA)) Q:'DA  D
"RTN","A1AEUT1",36,0)
 . . F DIK="^A1AE(11005,","^A1AE(11005.1," D ^DIK  ; PM Patch and Message files
"RTN","A1AEUT1",37,0)
 . S DIK="^A1AE(11007,",DA=PKIEN D ^DIK  ; PM Package File
"RTN","A1AEUT1",38,0)
 . S DIK="^DIC(9.4,",DA=PKIEN D ^DIK  ; Package file
"RTN","A1AEUT1",39,0)
 ;
"RTN","A1AEUT1",40,0)
 ; Delete the Stream Entries.
"RTN","A1AEUT1",41,0)
 QUIT:$$PROD^XUPROD()
"RTN","A1AEUT1",42,0)
 S DIK="^A1AE(11007.1," S DA=0 F  S DA=$O(^A1AE(11007.1,DA)) Q:'DA  D ^DIK
"RTN","A1AEUT1",43,0)
 ;
"RTN","A1AEUT1",44,0)
 QUIT
"RTN","A1AEUT1",45,0)
 ;
"RTN","A1AEUT1",46,0)
SHUTDOWN ; but don't delete test data here. I want to see it.
"RTN","A1AEUT1",47,0)
 ; ZEXCEPT: %ut,%utLIST - belong to M-Unit and are scoped there.
"RTN","A1AEUT1",48,0)
 D
"RTN","A1AEUT1",49,0)
 . N %ut,%utLIST
"RTN","A1AEUT1",50,0)
 . D KILL^XUSCLEAN
"RTN","A1AEUT1",51,0)
 QUIT
"RTN","A1AEUT1",52,0)
 ;
"RTN","A1AEUT1",53,0)
SETUP ;
"RTN","A1AEUT1",54,0)
 QUIT
"RTN","A1AEUT1",55,0)
 ;
"RTN","A1AEUT1",56,0)
TEARDOWN ;
"RTN","A1AEUT1",57,0)
 QUIT
"RTN","A1AEUT1",58,0)
 ;
"RTN","A1AEUT1",59,0)
MKSTREAM ; @TEST Make OSEHRA Stream
"RTN","A1AEUT1",60,0)
 N % S %=$$PRIMSTRM^A1AEUTL()
"RTN","A1AEUT1",61,0)
 D ASSERT(%<10**6+1,"No primary stream should give us 1m+1")
"RTN","A1AEUT1",62,0)
 D ASSERT($D(^A1AE(11007.1,1,0)),"VA Stream should be created by default")
"RTN","A1AEUT1",63,0)
 ;
"RTN","A1AEUT1",64,0)
 ; Quit if you are on production
"RTN","A1AEUT1",65,0)
 I $$PROD^XUPROD() QUIT
"RTN","A1AEUT1",66,0)
 ;
"RTN","A1AEUT1",67,0)
 ; Create OSEHRA Patch Stream
"RTN","A1AEUT1",68,0)
 N FDA,IENS,IEN
"RTN","A1AEUT1",69,0)
 S IENS="+1,"
"RTN","A1AEUT1",70,0)
 S IEN(1)=10001 ; field Patch Number Start (.001)
"RTN","A1AEUT1",71,0)
 S FDA(11007.1,IENS,.01)="OSEHRA VISTA" ; Name
"RTN","A1AEUT1",72,0)
 S FDA(11007.1,IENS,.02)="YES" ; Primary?
"RTN","A1AEUT1",73,0)
 S FDA(11007.1,IENS,.05)="OV" ; Abbreviation
"RTN","A1AEUT1",74,0)
 S FDA(11007.1,IENS,.06)="NO" ; Subscription
"RTN","A1AEUT1",75,0)
 S FDA(11007.1,IENS,.07)="FORUM.OSEHRA.ORG"
"RTN","A1AEUT1",76,0)
 N DIERR,ERR
"RTN","A1AEUT1",77,0)
 D UPDATE^DIE("E",$NA(FDA),$NA(IEN),$NA(ERR))
"RTN","A1AEUT1",78,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",79,0)
 ;
"RTN","A1AEUT1",80,0)
 ; OSEHRA Patch stream is now primary
"RTN","A1AEUT1",81,0)
 N % S %=$$PRIMSTRM^A1AEUTL()
"RTN","A1AEUT1",82,0)
 D CHKEQ(%,10001)
"RTN","A1AEUT1",83,0)
 ;
"RTN","A1AEUT1",84,0)
 ; Get the old primary stream
"RTN","A1AEUT1",85,0)
 N OLDPRIM S OLDPRIM=$O(^A1AE(11007.1,"APRIM",1,""))
"RTN","A1AEUT1",86,0)
 I 'OLDPRIM S OLDPRIM=1
"RTN","A1AEUT1",87,0)
 ;
"RTN","A1AEUT1",88,0)
 ; Make VA patch stream primary then switch back. Test APRIM1 xref logic.
"RTN","A1AEUT1",89,0)
 N DA,DIE,DR S DA=1,DIE="^A1AE(11007.1,",DR=".02///1" D ^DIE
"RTN","A1AEUT1",90,0)
 D CHKEQ($$PRIMSTRM^A1AEUTL(),1)
"RTN","A1AEUT1",91,0)
 ;
"RTN","A1AEUT1",92,0)
 N DA,DIE,DR S DA=OLDPRIM,DIE="^A1AE(11007.1,",DR=".02///1" D ^DIE
"RTN","A1AEUT1",93,0)
 D CHKEQ($$PRIMSTRM^A1AEUTL(),10001)
"RTN","A1AEUT1",94,0)
 QUIT
"RTN","A1AEUT1",95,0)
 ;
"RTN","A1AEUT1",96,0)
MKPKGTST ; @TEST Make Package in Package (#9.4) File
"RTN","A1AEUT1",97,0)
 ; ZEXCEPT: PKIEN - leak to the symbol table
"RTN","A1AEUT1",98,0)
 S PKIEN=$$MKPKG()
"RTN","A1AEUT1",99,0)
 D ASSERT(PKIEN)
"RTN","A1AEUT1",100,0)
 QUIT
"RTN","A1AEUT1",101,0)
 ;
"RTN","A1AEUT1",102,0)
MKPKG() ; Create a new package
"RTN","A1AEUT1",103,0)
 N FDA,IEN,DIERR
"RTN","A1AEUT1",104,0)
 S FDA(9.4,"+1,",.01)="TEST PACKAGE"
"RTN","A1AEUT1",105,0)
 S FDA(9.4,"+1,",1)="ZZZ"
"RTN","A1AEUT1",106,0)
 S FDA(9.4,"+1,",2)="Used for testing the Patch Module"
"RTN","A1AEUT1",107,0)
 S FDA(9.49,"+2,+1,",.01)="1.0" ; version number
"RTN","A1AEUT1",108,0)
 D UPDATE^DIE("E","FDA","IEN")
"RTN","A1AEUT1",109,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",110,0)
 QUIT IEN(1)
"RTN","A1AEUT1",111,0)
 ;
"RTN","A1AEUT1",112,0)
MKUSRTST ; @TEST Make Users in NEW PERSON (#200) File
"RTN","A1AEUT1",113,0)
 ; ZEXCEPT: DEV,COM,VER,USR - Create these here and leak to the ST
"RTN","A1AEUT1",114,0)
 S DUZ(0)="@" ; Necessary for the keys multiple which checks this in the Input Transform
"RTN","A1AEUT1",115,0)
 D DELUSR("PATCHMODULE,DEVELOPER")
"RTN","A1AEUT1",116,0)
 D DELUSR("PATCHMODULE,COMPLETER")
"RTN","A1AEUT1",117,0)
 D DELUSR("PATCHMODULE,VERIFER")
"RTN","A1AEUT1",118,0)
 D DELUSR("PATCHMODULE,USER")
"RTN","A1AEUT1",119,0)
 ;
"RTN","A1AEUT1",120,0)
 S DEV=$$MKUSR("PATCHMODULE,DEVELOPER","A1AE DEVELOPER")
"RTN","A1AEUT1",121,0)
 S COM=$$MKUSR("PATCHMODULE,COMPLETER","A1AE DEVELOPER")
"RTN","A1AEUT1",122,0)
 S VER=$$MKUSR("PATCHMODULE,VERIFER","A1AE PHVER")
"RTN","A1AEUT1",123,0)
 S USR=$$MKUSR("PATCHMODULE,USER")
"RTN","A1AEUT1",124,0)
 S DUZ(0)=""
"RTN","A1AEUT1",125,0)
 ;
"RTN","A1AEUT1",126,0)
 ; Assert the user IEN, the presence of an access code, the presence of a mail box
"RTN","A1AEUT1",127,0)
 D ASSERT(DEV),ASSERT($L($P(^VA(200,DEV,0),U,3))),ASSERT($D(^XMB(3.7,DEV,0)))
"RTN","A1AEUT1",128,0)
 D ASSERT(COM),ASSERT($L($P(^VA(200,COM,0),U,3))),ASSERT($D(^XMB(3.7,COM,0)))
"RTN","A1AEUT1",129,0)
 D ASSERT(VER),ASSERT($L($P(^VA(200,VER,0),U,3))),ASSERT($D(^XMB(3.7,VER,0)))
"RTN","A1AEUT1",130,0)
 D ASSERT(USR),ASSERT($L($P(^VA(200,USR,0),U,3))),ASSERT($D(^XMB(3.7,USR,0)))
"RTN","A1AEUT1",131,0)
 ;
"RTN","A1AEUT1",132,0)
 QUIT
"RTN","A1AEUT1",133,0)
 ;
"RTN","A1AEUT1",134,0)
DELUSR(NAME) ; Remove user and their mailbox
"RTN","A1AEUT1",135,0)
 N DA S DA=$O(^VA(200,"B",NAME,0)) Q:'DA
"RTN","A1AEUT1",136,0)
 S DUZ=.5 D TERMMBOX^XMXAPIB(DA) ; DUZ must be .5 for this to work
"RTN","A1AEUT1",137,0)
 N DIK S DIK="^VA(200," D ^DIK
"RTN","A1AEUT1",138,0)
 QUIT
"RTN","A1AEUT1",139,0)
 ;
"RTN","A1AEUT1",140,0)
MKUSR(NAME,KEY) ; Make Users for the Package
"RTN","A1AEUT1",141,0)
 Q:$O(^VA(200,"B",NAME,0)) $O(^(0)) ; Quit if the entry exists with entry
"RTN","A1AEUT1",142,0)
 ;
"RTN","A1AEUT1",143,0)
 N C0XFDA,C0XIEN,C0XERR,DIERR
"RTN","A1AEUT1",144,0)
 S C0XFDA(200,"?+1,",.01)=NAME ; Name
"RTN","A1AEUT1",145,0)
 S C0XFDA(200,"?+1,",1)="USP" ; Initials
"RTN","A1AEUT1",146,0)
 S C0XFDA(200,"?+1,",28)="SMART" ; Mail Code
"RTN","A1AEUT1",147,0)
 S C0XFDA(200.05,"?+2,?+1,",.01)="`144" ; Person Class - Allopathic docs.
"RTN","A1AEUT1",148,0)
 S C0XFDA(200.05,"?+2,?+1,",2)=2700101 ; Date active
"RTN","A1AEUT1",149,0)
 S:$L($G(KEY)) C0XFDA(200.051,"?+3,?+1,",.01)="`"_$O(^DIC(19.1,"B",KEY,""))
"RTN","A1AEUT1",150,0)
 ;
"RTN","A1AEUT1",151,0)
 N DIC S DIC(0)="" ; An XREF in File 200 requires this.
"RTN","A1AEUT1",152,0)
 D UPDATE^DIE("E",$NA(C0XFDA),$NA(C0XIEN),$NA(C0XERR)) ; Typical UPDATE
"RTN","A1AEUT1",153,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",154,0)
 ;
"RTN","A1AEUT1",155,0)
 K C0XFDA
"RTN","A1AEUT1",156,0)
 S C0XFDA(200,C0XIEN(1)_",",2)=$TR(NAME,",",".") ; Access Code
"RTN","A1AEUT1",157,0)
 D FILE^DIE("",$NA(C0XFDA),$NA(C0XERR))
"RTN","A1AEUT1",158,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",159,0)
 ;
"RTN","A1AEUT1",160,0)
 I $D(^XMB(3.7,C0XIEN(1),0))[0 N Y S Y=C0XIEN(1) D NEW^XM ;Make sure has a Mailbox
"RTN","A1AEUT1",161,0)
 ;
"RTN","A1AEUT1",162,0)
 Q C0XIEN(1) ;Provider IEN ;
"RTN","A1AEUT1",163,0)
 ;
"RTN","A1AEUT1",164,0)
PKGADD ; @TEST - Add package to Patch Module
"RTN","A1AEUT1",165,0)
 ; ZEXCEPT: A1AEPK,A1AEPKIF,A1AEPKNM - Created by PKG^A1AEUTL
"RTN","A1AEUT1",166,0)
 N A1AE S A1AE(0)="ML" ; Multiple indexes/Laygo
"RTN","A1AEUT1",167,0)
 N X S X="ZZZ" ; Input to ^DIC
"RTN","A1AEUT1",168,0)
 D PKG^A1AEUTL
"RTN","A1AEUT1",169,0)
 D CHKEQ(A1AEPK,"ZZZ") ; PK abbr is ZZZ
"RTN","A1AEUT1",170,0)
 D ASSERT(A1AEPKIF) ; Must be positive
"RTN","A1AEUT1",171,0)
 QUIT
"RTN","A1AEUT1",172,0)
 ;
"RTN","A1AEUT1",173,0)
PKGSETUP ; @TEST Setup package in Patch module
"RTN","A1AEUT1",174,0)
 ; ZEXCEPT: A1AEPKIF - Created by PKGADD
"RTN","A1AEUT1",175,0)
 ; ZEXCEPT: VER,DEV,COM,USR - Created by MKUSRTST
"RTN","A1AEUT1",176,0)
 N IENS S IENS=A1AEPKIF_","
"RTN","A1AEUT1",177,0)
 N FDA,DIERR
"RTN","A1AEUT1",178,0)
 S FDA(11007,IENS,2)="NO" ; USER SELECTION PERMITTED//^S X="NO"
"RTN","A1AEUT1",179,0)
 S FDA(11007,IENS,4)="NO" ; FOR TEST SITE ONLY?//^S X="NO"
"RTN","A1AEUT1",180,0)
 S FDA(11007,IENS,5)="YES" ; ASK PATCH DESCRIPTION COPY
"RTN","A1AEUT1",181,0)
 D FILE^DIE("EKT",$NA(FDA))
"RTN","A1AEUT1",182,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",183,0)
 ;
"RTN","A1AEUT1",184,0)
 S FDA(11007.02,"+1,"_IENS,.01)="`"_VER  ; SUPPORT PERSONNEL
"RTN","A1AEUT1",185,0)
 S FDA(11007.02,"+1,"_IENS,2)="V"  ; VERIFY PERSONNEL
"RTN","A1AEUT1",186,0)
 S FDA(11007.03,"+2,"_IENS,.01)="`"_DEV ; DEVELOPMENT PERSONNEL
"RTN","A1AEUT1",187,0)
 S FDA(11007.03,"+3,"_IENS,.01)="`"_COM ; DITTO
"RTN","A1AEUT1",188,0)
 S FDA(11007.05,"+4,"_IENS,.01)="`"_USR ; USERS
"RTN","A1AEUT1",189,0)
 S FDA(11007.05,"+4,"_IENS,2)="T" ; Today
"RTN","A1AEUT1",190,0)
 D UPDATE^DIE("E",$NA(FDA))
"RTN","A1AEUT1",191,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",192,0)
 D ASSERT($D(^A1AE(11007,A1AEPKIF,"PB")))  ; Verifier Nodes
"RTN","A1AEUT1",193,0)
 D ASSERT($D(^A1AE(11007,A1AEPKIF,"PH")))  ; Developer Nodes
"RTN","A1AEUT1",194,0)
 QUIT
"RTN","A1AEUT1",195,0)
 ;
"RTN","A1AEUT1",196,0)
VERSETUP ; @TEST Setup version
"RTN","A1AEUT1",197,0)
 ; ZEXCEPT: A1AEPKIF - Created by PKGADD
"RTN","A1AEUT1",198,0)
 ; ZEXCEPT: A1AEVR - Created here by VER^A1AEUTL
"RTN","A1AEUT1",199,0)
 N X,A1AE S A1AE(0)="L",X=1 ; X is version number; input to ^DIC
"RTN","A1AEUT1",200,0)
 D VER^A1AEUTL
"RTN","A1AEUT1",201,0)
 D CHKEQ(A1AEVR,1)
"RTN","A1AEUT1",202,0)
 D ASSERT($D(^A1AE(11007,A1AEPKIF,"V",1,0)))
"RTN","A1AEUT1",203,0)
 QUIT
"RTN","A1AEUT1",204,0)
 ;
"RTN","A1AEUT1",205,0)
DELMSGS ; @TEST Delete all Messages in Q-PATCH basket.
"RTN","A1AEUT1",206,0)
 N XMDUZ,XMK,XMZ
"RTN","A1AEUT1",207,0)
 S XMDUZ=.5
"RTN","A1AEUT1",208,0)
 N % S %=$O(^XMB(3.7,.5,2,"B","Q-PATCH"))
"RTN","A1AEUT1",209,0)
 S XMK=$O(^XMB(3.7,.5,2,"B",%,0))
"RTN","A1AEUT1",210,0)
 S XMZ=0 F  S XMZ=$O(^XMB(3.7,.5,2,XMK,1,XMZ)) Q:'XMZ  D KL^XMA1B
"RTN","A1AEUT1",211,0)
 D ASSERT($O(^XMB(3.7,.5,2,XMK,1,0))="")
"RTN","A1AEUT1",212,0)
 QUIT
"RTN","A1AEUT1",213,0)
 ;
"RTN","A1AEUT1",214,0)
MAILKIDS ; @TEST Mail a KIDS build to XXX@Q-PATCH.OSEHRA.ORG
"RTN","A1AEUT1",215,0)
 ; ZEXCEPT: MESSAGEIEN - Leak to symbol table
"RTN","A1AEUT1",216,0)
 ; ZEXCEPT: A1AEUT1PD - Used by this routine. Overrides default patch name for UT checks.
"RTN","A1AEUT1",217,0)
 N MESS,LN0,LN
"RTN","A1AEUT1",218,0)
 N I F I=1:1 S LN0=$T(KIDS+I^A1AEUT2),LN=$P(LN0,";;",2,99) S MESS(I,0)=LN Q:LN["$END KID"
"RTN","A1AEUT1",219,0)
 N FLAGS S FLAGS("TYPE")="K" ; KIDS
"RTN","A1AEUT1",220,0)
 S DUZ=.5
"RTN","A1AEUT1",221,0)
 N PD S PD=$G(A1AEUT1PD,"ZZZ*1.0*1")
"RTN","A1AEUT1",222,0)
 D SENDMSG^XMXAPI(DUZ,PD,$NA(MESS),"XXX@Q-PATCH.OSEHRA.ORG",.FLAGS,.MESSAGEIEN)
"RTN","A1AEUT1",223,0)
 D ASSERT(MESSAGEIEN)
"RTN","A1AEUT1",224,0)
 QUIT
"RTN","A1AEUT1",225,0)
 ;
"RTN","A1AEUT1",226,0)
QUE ; @TEST Get Postmaster Basket for Q-PATCH in variable QUE.
"RTN","A1AEUT1",227,0)
 ; ZEXCEPT: QUE
"RTN","A1AEUT1",228,0)
 D QUE^A1AEM
"RTN","A1AEUT1",229,0)
 D ASSERT(QUE>1000) ; Assert that it is a forwarding que in the Postmaster basket.
"RTN","A1AEUT1",230,0)
 QUIT
"RTN","A1AEUT1",231,0)
 ;
"RTN","A1AEUT1",232,0)
PATCHNO ; @TEST Obtain next patch number
"RTN","A1AEUT1",233,0)
 ; Next two lines required by API.
"RTN","A1AEUT1",234,0)
 ; ZEXCEPT: A1AENB - Created by NUM^A1AEUTL
"RTN","A1AEUT1",235,0)
 ; ZEXCEPT: A1AEUT1PN - Used by this Unit Testing routine to override default patch no
"RTN","A1AEUT1",236,0)
 ; ZEXCEPT: DEV,COM,VER,USR
"RTN","A1AEUT1",237,0)
 ; ZEXCEPT: A1AEPD - Created by PKGADD
"RTN","A1AEUT1",238,0)
 ; ZEXCEPT: A1AESTREAM - Gets the stream used in NUM^A1AEUTL.
"RTN","A1AEUT1",239,0)
 N A1AEFL,A1AETY
"RTN","A1AEUT1",240,0)
 S A1AEFL=11005,A1AETY="PH"
"RTN","A1AEUT1",241,0)
 S A1AESTREAM=$$PRIMSTRM^A1AEUTL()
"RTN","A1AEUT1",242,0)
 S DUZ=DEV
"RTN","A1AEUT1",243,0)
 N DIC,DINUM
"RTN","A1AEUT1",244,0)
 S DIC("S")="I $D(^A1AE(11007,+Y,A1AETY,DUZ,0))"
"RTN","A1AEUT1",245,0)
 S DINUM=$O(^A1AE(A1AEFL," "),-1)+1
"RTN","A1AEUT1",246,0)
 S DIC("DR")="5///TEST"
"RTN","A1AEUT1",247,0)
 S DIC(0)="L"
"RTN","A1AEUT1",248,0)
 D NUM^A1AEUTL
"RTN","A1AEUT1",249,0)
 N PATNUMTOCHECK S PATNUMTOCHECK=$S(A1AESTREAM>1:A1AESTREAM+1,1:A1AESTREAM) ; cuz first patch now is switch patch; next patch is the new one.
"RTN","A1AEUT1",250,0)
 I $D(A1AEUT1PN) S A1AEUT1PN=$S(A1AESTREAM>1:A1AEUT1PN+1,1:A1AEUT1PN)
"RTN","A1AEUT1",251,0)
 D CHKEQ(A1AENB,$G(A1AEUT1PN,PATNUMTOCHECK))
"RTN","A1AEUT1",252,0)
 D ASSERT(A1AEPD["ZZZ*1")
"RTN","A1AEUT1",253,0)
 D ASSERT($D(^A1AE(11005,"D",A1AEPKIF)))
"RTN","A1AEUT1",254,0)
 QUIT
"RTN","A1AEUT1",255,0)
 ;
"RTN","A1AEUT1",256,0)
PATCHSET ; @TEST Set-Up patch a la 1+3^A1AEPH1
"RTN","A1AEUT1",257,0)
 ; ZEXCEPT: DA - leaked by NUM^A1AEUTL
"RTN","A1AEUT1",258,0)
 ; ZEXCEPT: A1AEPKIF,A1AEVR,A1AENB
"RTN","A1AEUT1",259,0)
 S $P(^A1AE(11005,DA,0),"^",8)="u"
"RTN","A1AEUT1",260,0)
 S $P(^(0),"^",9)=DUZ
"RTN","A1AEUT1",261,0)
 S $P(^(0),"^",12)=DT
"RTN","A1AEUT1",262,0)
 S ^A1AE(11005,"AS",A1AEPKIF,A1AEVR,"u",A1AENB,DA)=""
"RTN","A1AEUT1",263,0)
 N FDA,DIERR S FDA(11005,DA_",",.2)=$$GETSTRM^A1AEK2M0(A1AEPD)
"RTN","A1AEUT1",264,0)
 D FILE^DIE("",$NA(FDA)) I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",265,0)
 D CHKEQ($$GET1^DIQ(11005,DA,8),"UNDER DEVELOPMENT")
"RTN","A1AEUT1",266,0)
 QUIT
"RTN","A1AEUT1",267,0)
 ;
"RTN","A1AEUT1",268,0)
PATCHROU ; @TEST Add routine set in Message file a la 1+5^A1AEPH1
"RTN","A1AEUT1",269,0)
 ; NB: There is an error here. You MUST LEAK the DIC(0) variable as it is reused from a previous call.
"RTN","A1AEUT1",270,0)
 ; ZEXCEPT: DA - leaked by NUM^A1AEUTL
"RTN","A1AEUT1",271,0)
 NEW DIC,X,DINUM,DD,DO,DE,DQ,DR
"RTN","A1AEUT1",272,0)
 S DIC(0)="L"
"RTN","A1AEUT1",273,0)
 S (X,DINUM)=DA,DIC="^A1AE(11005.1,",DIC("DR")="20///"_"No routines included" K DD,DO D FILE^DICN K DE,DQ,DR,DIC("DR")
"RTN","A1AEUT1",274,0)
 D CHKEQ(^A1AE(11005.1,DA,2,1,0),"No routines included")
"RTN","A1AEUT1",275,0)
 QUIT
"RTN","A1AEUT1",276,0)
 ;
"RTN","A1AEUT1",277,0)
 ;
"RTN","A1AEUT1",278,0)
LOC ; @TEST Get messages matching A1AEPD in Q-PATCH queue in variable A1AERD
"RTN","A1AEUT1",279,0)
 ; ZEXCEPT: A1AEPD,A1AERD,A1AEUT1PD - patch description, return variable
"RTN","A1AEUT1",280,0)
 D LOC^A1AEM
"RTN","A1AEUT1",281,0)
 D ASSERT(A1AERD(1)[$G(A1AEUT1PD,"ZZZ*1.0*1"))
"RTN","A1AEUT1",282,0)
 QUIT
"RTN","A1AEUT1",283,0)
 ;
"RTN","A1AEUT1",284,0)
PATCHCR ; @TEST Create a Patch
"RTN","A1AEUT1",285,0)
 ; ZEXCEPT: DA - leaked by NUM^A1AEUTL
"RTN","A1AEUT1",286,0)
 ; ZEXCEPT: MESSAGEIEN - leaked by MAILKIDS
"RTN","A1AEUT1",287,0)
 N FDA,IENS
"RTN","A1AEUT1",288,0)
 N DIERR
"RTN","A1AEUT1",289,0)
 S IENS=DA_","
"RTN","A1AEUT1",290,0)
 S FDA(11005,IENS,"PATCH SUBJECT")="TEST"
"RTN","A1AEUT1",291,0)
 S FDA(11005,IENS,"PRIORITY")="e" ; emergency
"RTN","A1AEUT1",292,0)
 D FILE^DIE("E",$NA(FDA))
"RTN","A1AEUT1",293,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",294,0)
 K FDA
"RTN","A1AEUT1",295,0)
 ;
"RTN","A1AEUT1",296,0)
 ; Category of patch
"RTN","A1AEUT1",297,0)
 S FDA(11005.05,"+1,"_IENS,.01)="d"
"RTN","A1AEUT1",298,0)
 S FDA(11005.05,"+2,"_IENS,.01)="i"
"RTN","A1AEUT1",299,0)
 S FDA(11005.05,"+3,"_IENS,.01)="p"
"RTN","A1AEUT1",300,0)
 S FDA(11005.05,"+4,"_IENS,.01)="r"
"RTN","A1AEUT1",301,0)
 D UPDATE^DIE("",$NA(FDA)) ; NB: Internal format b/c some codes won't parse with external as e.g there is d and dd.
"RTN","A1AEUT1",302,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",303,0)
 K FDA
"RTN","A1AEUT1",304,0)
 ;
"RTN","A1AEUT1",305,0)
 ; This loads the message text into field PATCH DESCRIPTION in 11005
"RTN","A1AEUT1",306,0)
 N A1AELINE ; returned by LINE^A1AECOPD
"RTN","A1AEUT1",307,0)
 N X,AXMZ ; X - User Input; AXMZ = Patch Message IEN
"RTN","A1AEUT1",308,0)
 S AXMZ=MESSAGEIEN,X="ALL" D LINESIL^A1AECOPD ; Returns A1AELINE: # of lines.
"RTN","A1AEUT1",309,0)
 ;
"RTN","A1AEUT1",310,0)
 N A1AEFRLN,A1AETOLN S A1AEFRLN=1,A1AETOLN=A1AELINE ; from to 
"RTN","A1AEUT1",311,0)
 D SETUTI^A1AECOPD ; Set util global
"RTN","A1AEUT1",312,0)
 D ASSERT($O(^UTILITY($J,"A1AECP",0))>0)
"RTN","A1AEUT1",313,0)
 N A1AELNIN,A1AEBOT S A1AELNIN=0,A1AEBOT=0 ; necessary for below
"RTN","A1AEUT1",314,0)
 D COPY^A1AECOPD ; copy into patch description
"RTN","A1AEUT1",315,0)
 D ASSERT($O(^A1AE(11005,DA,"D",0))>0) ; Assert that it was copied into PATCH DESCRIPTION
"RTN","A1AEUT1",316,0)
 ;
"RTN","A1AEUT1",317,0)
 ; This loads the KIDS build from either the Mail Message or the File System.
"RTN","A1AEUT1",318,0)
 ; Stores it in MESSAGE TEXT in file 11005.1. Template does a Backwards Jump.
"RTN","A1AEUT1",319,0)
 ; ZEXCEPT: A1AEKIDS - ASKS^A1AEM1 leaks that when it detects the the Mail message type is a KIDS message.
"RTN","A1AEUT1",320,0)
 D ASKS^A1AEM1
"RTN","A1AEUT1",321,0)
 D ASSERT($O(^A1AE(11005.1,DA,2,0))>0)
"RTN","A1AEUT1",322,0)
 D ASSERT(^A1AE(11005,DA,"P",1,0)="ZOSV2GTM^B7008460^**275,425**")
"RTN","A1AEUT1",323,0)
 ;
"RTN","A1AEUT1",324,0)
 ; Because ^A1AECOPY and ^A1AECOPR both reference Packman
"RTN","A1AEUT1",325,0)
 ; formats in SETUTI, it's most likely that Wally intended for us to skip this.
"RTN","A1AEUT1",326,0)
 ; ^A1AECOPY uses Cache's ZLOAD.
"RTN","A1AEUT1",327,0)
 ; 
"RTN","A1AEUT1",328,0)
 ; ROUTINE NAME
"RTN","A1AEUT1",329,0)
 ;    ROUTINE NAME
"RTN","A1AEUT1",330,0)
 ;    W !?20,"editing DESCRIPTION OF ROUTINE CHANGES"
"RTN","A1AEUT1",331,0)
 ;    D ^A1AECOPY
"RTN","A1AEUT1",332,0)
 ;    D ^A1AECOPR
"RTN","A1AEUT1",333,0)
 ;    DESCRIPTION OF ROUTINE CHANGES
"RTN","A1AEUT1",334,0)
 ;    ROUTINE CHECKSUM
"RTN","A1AEUT1",335,0)
 ; @8
"RTN","A1AEUT1",336,0)
 S FDA(11005,IENS,"DISPLAY ROUTINE PATCH LIST")="Yes"
"RTN","A1AEUT1",337,0)
 N DIERR
"RTN","A1AEUT1",338,0)
 D FILE^DIE("E",$NA(FDA))
"RTN","A1AEUT1",339,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",340,0)
 ;
"RTN","A1AEUT1",341,0)
 N WP
"RTN","A1AEUT1",342,0)
 S WP(1,0)="Test Comments"
"RTN","A1AEUT1",343,0)
 N DIERR
"RTN","A1AEUT1",344,0)
 D WP^DIE(11005,IENS,16,"K",$NA(WP))
"RTN","A1AEUT1",345,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",346,0)
 ; PATCH RELEASE CHECK
"RTN","A1AEUT1",347,0)
 ;    ALL
"RTN","A1AEUT1",348,0)
 ; W !
"RTN","A1AEUT1",349,0)
 ; @10
"RTN","A1AEUT1",350,0)
 ; ZEXCEPT: A1AETVR,A1AEST - Copied from Input Template. I don't have a clue what these do now.
"RTN","A1AEUT1",351,0)
 K A1AETVR,A1AEST,A1AEKIDS
"RTN","A1AEUT1",352,0)
 D CHKEQ(^A1AE(11005,DA,"X",1,0),"Test Comments")
"RTN","A1AEUT1",353,0)
 D CHKEQ(^A1AE(11005,DA,5),1)
"RTN","A1AEUT1",354,0)
 QUIT
"RTN","A1AEUT1",355,0)
 ; STATUS OF PATCH
"RTN","A1AEUT1",356,0)
 ; S Y=$S(X="e":"@20",X="r":"@30",1:"@99")
"RTN","A1AEUT1",357,0)
 ; @20
"RTN","A1AEUT1",358,0)
 ; ENTERED IN ERROR DESCRIPTION
"RTN","A1AEUT1",359,0)
 ; S Y="@99"
"RTN","A1AEUT1",360,0)
 ; @30
"RTN","A1AEUT1",361,0)
 ; RETIRED AFTER VERSION
"RTN","A1AEUT1",362,0)
 ; RETIREMENT COMMENTS
"RTN","A1AEUT1",363,0)
 ; @99
"RTN","A1AEUT1",364,0)
 ;
"RTN","A1AEUT1",365,0)
PATCHCOM ; @TEST Complete a Patch
"RTN","A1AEUT1",366,0)
 ; ZEXCEPT: COM - Created by MKUSRTST
"RTN","A1AEUT1",367,0)
 ; ZEXCEPT: A1AEPD - Created by PKGADD
"RTN","A1AEUT1",368,0)
 ; ZEXCEPT: DA - leaked by NUM^A1AEUTL
"RTN","A1AEUT1",369,0)
 S DUZ=COM ; Now I am the completer
"RTN","A1AEUT1",370,0)
 N A1AEPDSAV S A1AEPDSAV=A1AEPD
"RTN","A1AEUT1",371,0)
 N FDA
"RTN","A1AEUT1",372,0)
 S FDA(11005,DA_",",8)="c" D FILE^DIE("E",$NA(FDA))
"RTN","A1AEUT1",373,0)
 D CHKEQ($P(^A1AE(11005,DA,0),U,8),"c")
"RTN","A1AEUT1",374,0)
 S A1AEPD=A1AEPDSAV
"RTN","A1AEUT1",375,0)
 QUIT
"RTN","A1AEUT1",376,0)
 ;
"RTN","A1AEUT1",377,0)
PATCHVER ; @TEST Verify a Patch
"RTN","A1AEUT1",378,0)
 ; ZEXCEPT: DA - leaked by NUM^A1AEUTL
"RTN","A1AEUT1",379,0)
 ; ZEXCEPT: VER - Created by MKUSRTST
"RTN","A1AEUT1",380,0)
 S DUZ=VER ; Now I am the verifier
"RTN","A1AEUT1",381,0)
 N FDA
"RTN","A1AEUT1",382,0)
 S FDA(11005,DA_",",8)="v" D FILE^DIE("E",$NA(FDA))
"RTN","A1AEUT1",383,0)
 D CHKEQ($P(^A1AE(11005,DA,0),U,8),"v")
"RTN","A1AEUT1",384,0)
 QUIT
"RTN","A1AEUT1",385,0)
 ;
"RTN","A1AEUT1",386,0)
PATCH2 ; @TEST Create a second patch - complete this one
"RTN","A1AEUT1",387,0)
 N DIC
"RTN","A1AEUT1",388,0)
 D PKGADD,VERSETUP
"RTN","A1AEUT1",389,0)
 N A1AEUT1PD S A1AEUT1PD="ZZZ*1.0*2" ; override patch in mail kids
"RTN","A1AEUT1",390,0)
 D MAILKIDS
"RTN","A1AEUT1",391,0)
 D QUE
"RTN","A1AEUT1",392,0)
 N A1AEUT1PN S A1AEUT1PN=$$PRIMSTRM^A1AEUTL()+1 ; override patch number
"RTN","A1AEUT1",393,0)
 D PATCHNO,PATCHSET,PATCHROU
"RTN","A1AEUT1",394,0)
 D LOC
"RTN","A1AEUT1",395,0)
 D PATCHCR
"RTN","A1AEUT1",396,0)
 D PATCHCOM
"RTN","A1AEUT1",397,0)
 QUIT
"RTN","A1AEUT1",398,0)
 ;
"RTN","A1AEUT1",399,0)
PATCH3 ; @TEST Create a third patch - don't complete or verify
"RTN","A1AEUT1",400,0)
 N DIC
"RTN","A1AEUT1",401,0)
 D PKGADD,VERSETUP
"RTN","A1AEUT1",402,0)
 N A1AEUT1PD S A1AEUT1PD="ZZZ*1.0*3" ; override patch in mail kids
"RTN","A1AEUT1",403,0)
 D MAILKIDS
"RTN","A1AEUT1",404,0)
 D QUE
"RTN","A1AEUT1",405,0)
 N A1AEUT1PN S A1AEUT1PN=$$PRIMSTRM^A1AEUTL()+2 ; override patch number
"RTN","A1AEUT1",406,0)
 D PATCHNO,PATCHSET,PATCHROU
"RTN","A1AEUT1",407,0)
 D LOC
"RTN","A1AEUT1",408,0)
 D PATCHCR
"RTN","A1AEUT1",409,0)
 QUIT
"RTN","A1AEUT1",410,0)
 ;
"RTN","A1AEUT1",411,0)
WRITEID ; @TEST Test write identifier on the Patch Module
"RTN","A1AEUT1",412,0)
 D FIND^DIC(11005,,"@;WID","PQ","ZZZ","B") ; Find ZZZ patches in B index
"RTN","A1AEUT1",413,0)
 D ASSERT(^TMP("DILIST",$J,1,0)["|")  ; This format is introduced with patch module 2.4 if DIQUIET is turned on.
"RTN","A1AEUT1",414,0)
 N P1IEN S P1IEN=+^TMP("DILIST",$J,1,0) ; 1st IEN
"RTN","A1AEUT1",415,0)
 N P2IEN S P2IEN=+^TMP("DILIST",$J,2,0) ; 2nd IEN
"RTN","A1AEUT1",416,0)
 N FDA S FDA(11005,P2IEN_",","DERIVED FROM PATCH")=P1IEN ; populate this
"RTN","A1AEUT1",417,0)
 D FILE^DIE("",$NA(FDA)) ; ditto
"RTN","A1AEUT1",418,0)
 D FIND^DIC(11005,,"@;WID","A",P2IEN) ; A = Use IEN for lookup
"RTN","A1AEUT1",419,0)
 D ASSERT(^TMP("DILIST",$J,"ID","WRITE",1,2)["erived from") ; Contains derived from...
"RTN","A1AEUT1",420,0)
 QUIT
"RTN","A1AEUT1",421,0)
 ;
"RTN","A1AEUT1",422,0)
A1AEPH25 ; @TEST Test Report 5^A1AEPH2
"RTN","A1AEUT1",423,0)
 ; ZEXCEPT: DEV - Created by MKUSRTST
"RTN","A1AEUT1",424,0)
 S DUZ=DEV
"RTN","A1AEUT1",425,0)
 N %ZIS
"RTN","A1AEUT1",426,0)
 N DIC
"RTN","A1AEUT1",427,0)
 D PKGADD,VERSETUP
"RTN","A1AEUT1",428,0)
 N A1AEREV S A1AEREV=1
"RTN","A1AEUT1",429,0)
 N A1AEDEV S A1AEDEV="HFS;80;99999"
"RTN","A1AEUT1",430,0)
 S %ZIS("HFSMODE")="W"
"RTN","A1AEUT1",431,0)
 S %ZIS("HFSNAME")="A1AEPH25.TXT"
"RTN","A1AEUT1",432,0)
 D DQ5^A1AEPH2
"RTN","A1AEUT1",433,0)
 ;
"RTN","A1AEUT1",434,0)
 ; Read it back now
"RTN","A1AEUT1",435,0)
 N POP
"RTN","A1AEUT1",436,0)
 D OPEN^%ZISH("FILE1",$$DEFDIR^%ZISH(),"A1AEPH25.TXT","R")
"RTN","A1AEUT1",437,0)
 I POP D FAIL^%ut("IO problems") QUIT
"RTN","A1AEUT1",438,0)
 U IO
"RTN","A1AEUT1",439,0)
 N ARR,CNT
"RTN","A1AEUT1",440,0)
 S CNT=1
"RTN","A1AEUT1",441,0)
 N X
"RTN","A1AEUT1",442,0)
 F  R X:1 Q:$$STATUS^%ZISH()  I $E(X,1,3)="ZZZ" S ARR(CNT)=X,CNT=CNT+1
"RTN","A1AEUT1",443,0)
 U $P D CLOSE^%ZISH("FILE1")
"RTN","A1AEUT1",444,0)
 D ASSERT($D(ARR))
"RTN","A1AEUT1",445,0)
 N % S %("A1AEPH25.TXT")=""
"RTN","A1AEUT1",446,0)
 S %=$$DEL^%ZISH($$DEFDIR^%ZISH(),$NA(%))
"RTN","A1AEUT1",447,0)
 QUIT
"RTN","A1AEUT1",448,0)
 ;
"RTN","A1AEUT1",449,0)
A1AEPH21 ; @TEST Test Report 1^A1AEPH2
"RTN","A1AEUT1",450,0)
 ; ZEXCEPT: DEV - Created by MKUSRTST
"RTN","A1AEUT1",451,0)
 ; Index: AB - By designation
"RTN","A1AEUT1",452,0)
 ; Index: AC - By category
"RTN","A1AEUT1",453,0)
 ; Index: AP - By priority
"RTN","A1AEUT1",454,0)
 ; Index: AS - By Status
"RTN","A1AEUT1",455,0)
 N A1AEHD ; Header - used below
"RTN","A1AEUT1",456,0)
 N A1AEIX F A1AEIX="AB","AC","AP","AS" D
"RTN","A1AEUT1",457,0)
 . S DUZ=DEV
"RTN","A1AEUT1",458,0)
 . N DIC,DIS
"RTN","A1AEUT1",459,0)
 . D PKGADD,VERSETUP
"RTN","A1AEUT1",460,0)
 . N A1AES ; Suppress asking for sorting by status
"RTN","A1AEUT1",461,0)
 . S DIS(0)="I $P(^A1AE(11005,D0,0),U,8)=""c""",A1AEHD="Completed/NotReleased DHCP Patches Report",A1AES=""
"RTN","A1AEUT1",462,0)
 . N A1AEHDSAV S A1AEHDSAV=A1AEHD ; HD is killed off
"RTN","A1AEUT1",463,0)
 . S DIC("S")="I $S($D(^A1AE(11007,+Y,""PH"",DUZ,0)):1,'$D(^A1AE(11007,+Y,""PB"",DUZ,0)):0,$P(^(0),U,2)=""V"":1,1:0)"
"RTN","A1AEUT1",464,0)
 . N FN S FN="A1AEPH21-"_A1AEIX_".TXT"
"RTN","A1AEUT1",465,0)
 . N POP
"RTN","A1AEUT1",466,0)
 . D OPEN^%ZISH("FILE1",$$DEFDIR^%ZISH(),FN,"W")
"RTN","A1AEUT1",467,0)
 . I POP D FAIL^%ut("IO problems") QUIT
"RTN","A1AEUT1",468,0)
 . D START^A1AEPH3
"RTN","A1AEUT1",469,0)
 . D CLOSE^%ZISH("FILE1")
"RTN","A1AEUT1",470,0)
 . D OPEN^%ZISH("FILE1",$$DEFDIR^%ZISH(),FN,"R")
"RTN","A1AEUT1",471,0)
 . I POP D FAIL^%ut("IO problems") QUIT
"RTN","A1AEUT1",472,0)
 . U IO
"RTN","A1AEUT1",473,0)
 . N X F  R X:0 Q:$$STATUS^%ZISH()  Q:X[A1AEHDSAV
"RTN","A1AEUT1",474,0)
 . U $P D CLOSE^%ZISH("FILE1")
"RTN","A1AEUT1",475,0)
 . D ASSERT(X[A1AEHDSAV)
"RTN","A1AEUT1",476,0)
 . N % S %(FN)="",%=$$DEL^%ZISH($$DEFDIR^%ZISH(),$NA(%))
"RTN","A1AEUT1",477,0)
 QUIT
"RTN","A1AEUT1",478,0)
 ;
"RTN","A1AEUT1",479,0)
 ; Convenience Methods for M-Unit
"RTN","A1AEUT1",480,0)
CHKEQ(X,Y,Z) S Z=$G(Z) D CHKEQ^%ut(X,Y,Z) QUIT
"RTN","A1AEUT1",481,0)
ASSERT(X,Y) S Y=$G(Y) D CHKTF^%ut(X,Y) QUIT
"RTN","A1AEUT1",482,0)
FAIL(X) S X=$G(X) D FAIL^%ut(X) QUIT
"RTN","A1AEUT1",483,0)
 ;
"RTN","A1AEUT2")
0^55^B105106164
"RTN","A1AEUT2",1,0)
A1AEUT2 ;ven/smh-kids test file;2015-07-06  6:04 AM
"RTN","A1AEUT2",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUT2",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUT2",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUT2",5,0)
 ;
"RTN","A1AEUT2",6,0)
 ;
"RTN","A1AEUT2",7,0)
 ;primary change history
"RTN","A1AEUT2",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUT2",9,0)
 ;
"RTN","A1AEUT2",10,0)
KIDS ;;
"RTN","A1AEUT2",11,0)
 ;;$TXT Created by TESTMASTER,USER at VEN.SMH101.COM  (KIDS) on Thursday, 01/07/14 at 15:55
"RTN","A1AEUT2",12,0)
 ;;
"RTN","A1AEUT2",13,0)
 ;; This patch is the result of the Unit Test routine.
"RTN","A1AEUT2",14,0)
 ;; Please ignore it.
"RTN","A1AEUT2",15,0)
 ;; 
"RTN","A1AEUT2",16,0)
 ;; Patch ID: ZZZ*1.0*1
"RTN","A1AEUT2",17,0)
 ;; 
"RTN","A1AEUT2",18,0)
 ;;$END TXT
"RTN","A1AEUT2",19,0)
 ;;$KID ZZZ*1.0*1
"RTN","A1AEUT2",20,0)
 ;;**INSTALL NAME**
"RTN","A1AEUT2",21,0)
 ;;ZZZ*1.0*1
"RTN","A1AEUT2",22,0)
 ;;"BLD",9277,0)
"RTN","A1AEUT2",23,0)
 ;;ZZZ*1.0*1^TEST PACKAGE^0^3140102^y
"RTN","A1AEUT2",24,0)
 ;;"BLD",9277,1,0)
"RTN","A1AEUT2",25,0)
 ;;^^1^1^3140102^
"RTN","A1AEUT2",26,0)
 ;;"BLD",9277,1,1,0)
"RTN","A1AEUT2",27,0)
 ;;TEST TEST
"RTN","A1AEUT2",28,0)
 ;;"BLD",9277,4,0)
"RTN","A1AEUT2",29,0)
 ;;^9.64PA^^
"RTN","A1AEUT2",30,0)
 ;;"BLD",9277,6.3)
"RTN","A1AEUT2",31,0)
 ;;2
"RTN","A1AEUT2",32,0)
 ;;"BLD",9277,"KRN",0)
"RTN","A1AEUT2",33,0)
 ;;^9.67PA^779.2^20
"RTN","A1AEUT2",34,0)
 ;;"BLD",9277,"KRN",.4,0)
"RTN","A1AEUT2",35,0)
 ;;.4
"RTN","A1AEUT2",36,0)
 ;;"BLD",9277,"KRN",.401,0)
"RTN","A1AEUT2",37,0)
 ;;.401
"RTN","A1AEUT2",38,0)
 ;;"BLD",9277,"KRN",.402,0)
"RTN","A1AEUT2",39,0)
 ;;.402
"RTN","A1AEUT2",40,0)
 ;;"BLD",9277,"KRN",.403,0)
"RTN","A1AEUT2",41,0)
 ;;.403
"RTN","A1AEUT2",42,0)
 ;;"BLD",9277,"KRN",.5,0)
"RTN","A1AEUT2",43,0)
 ;;.5
"RTN","A1AEUT2",44,0)
 ;;"BLD",9277,"KRN",.84,0)
"RTN","A1AEUT2",45,0)
 ;;.84
"RTN","A1AEUT2",46,0)
 ;;"BLD",9277,"KRN",3.6,0)
"RTN","A1AEUT2",47,0)
 ;;3.6
"RTN","A1AEUT2",48,0)
 ;;"BLD",9277,"KRN",3.8,0)
"RTN","A1AEUT2",49,0)
 ;;3.8
"RTN","A1AEUT2",50,0)
 ;;"BLD",9277,"KRN",9.2,0)
"RTN","A1AEUT2",51,0)
 ;;9.2
"RTN","A1AEUT2",52,0)
 ;;"BLD",9277,"KRN",9.8,0)
"RTN","A1AEUT2",53,0)
 ;;9.8
"RTN","A1AEUT2",54,0)
 ;;"BLD",9277,"KRN",9.8,"NM",0)
"RTN","A1AEUT2",55,0)
 ;;^9.68A^1^1
"RTN","A1AEUT2",56,0)
 ;;"BLD",9277,"KRN",9.8,"NM",1,0)
"RTN","A1AEUT2",57,0)
 ;;ZOSV2GTM^^0^B7008460
"RTN","A1AEUT2",58,0)
 ;;"BLD",9277,"KRN",9.8,"NM","B","ZOSV2GTM",1)
"RTN","A1AEUT2",59,0)
 ;;
"RTN","A1AEUT2",60,0)
 ;;"BLD",9277,"KRN",19,0)
"RTN","A1AEUT2",61,0)
 ;;19
"RTN","A1AEUT2",62,0)
 ;;"BLD",9277,"KRN",19.1,0)
"RTN","A1AEUT2",63,0)
 ;;19.1
"RTN","A1AEUT2",64,0)
 ;;"BLD",9277,"KRN",101,0)
"RTN","A1AEUT2",65,0)
 ;;101
"RTN","A1AEUT2",66,0)
 ;;"BLD",9277,"KRN",409.61,0)
"RTN","A1AEUT2",67,0)
 ;;409.61
"RTN","A1AEUT2",68,0)
 ;;"BLD",9277,"KRN",771,0)
"RTN","A1AEUT2",69,0)
 ;;771
"RTN","A1AEUT2",70,0)
 ;;"BLD",9277,"KRN",779.2,0)
"RTN","A1AEUT2",71,0)
 ;;779.2
"RTN","A1AEUT2",72,0)
 ;;"BLD",9277,"KRN",870,0)
"RTN","A1AEUT2",73,0)
 ;;870
"RTN","A1AEUT2",74,0)
 ;;"BLD",9277,"KRN",8989.51,0)
"RTN","A1AEUT2",75,0)
 ;;8989.51
"RTN","A1AEUT2",76,0)
 ;;"BLD",9277,"KRN",8989.52,0)
"RTN","A1AEUT2",77,0)
 ;;8989.52
"RTN","A1AEUT2",78,0)
 ;;"BLD",9277,"KRN",8994,0)
"RTN","A1AEUT2",79,0)
 ;;8994
"RTN","A1AEUT2",80,0)
 ;;"BLD",9277,"KRN","B",.4,.4)
"RTN","A1AEUT2",81,0)
 ;;
"RTN","A1AEUT2",82,0)
 ;;"BLD",9277,"KRN","B",.401,.401)
"RTN","A1AEUT2",83,0)
 ;;
"RTN","A1AEUT2",84,0)
 ;;"BLD",9277,"KRN","B",.402,.402)
"RTN","A1AEUT2",85,0)
 ;;
"RTN","A1AEUT2",86,0)
 ;;"BLD",9277,"KRN","B",.403,.403)
"RTN","A1AEUT2",87,0)
 ;;
"RTN","A1AEUT2",88,0)
 ;;"BLD",9277,"KRN","B",.5,.5)
"RTN","A1AEUT2",89,0)
 ;;
"RTN","A1AEUT2",90,0)
 ;;"BLD",9277,"KRN","B",.84,.84)
"RTN","A1AEUT2",91,0)
 ;;
"RTN","A1AEUT2",92,0)
 ;;"BLD",9277,"KRN","B",3.6,3.6)
"RTN","A1AEUT2",93,0)
 ;;
"RTN","A1AEUT2",94,0)
 ;;"BLD",9277,"KRN","B",3.8,3.8)
"RTN","A1AEUT2",95,0)
 ;;
"RTN","A1AEUT2",96,0)
 ;;"BLD",9277,"KRN","B",9.2,9.2)
"RTN","A1AEUT2",97,0)
 ;;
"RTN","A1AEUT2",98,0)
 ;;"BLD",9277,"KRN","B",9.8,9.8)
"RTN","A1AEUT2",99,0)
 ;;
"RTN","A1AEUT2",100,0)
 ;;"BLD",9277,"KRN","B",19,19)
"RTN","A1AEUT2",101,0)
 ;;
"RTN","A1AEUT2",102,0)
 ;;"BLD",9277,"KRN","B",19.1,19.1)
"RTN","A1AEUT2",103,0)
 ;;
"RTN","A1AEUT2",104,0)
 ;;"BLD",9277,"KRN","B",101,101)
"RTN","A1AEUT2",105,0)
 ;;
"RTN","A1AEUT2",106,0)
 ;;"BLD",9277,"KRN","B",409.61,409.61)
"RTN","A1AEUT2",107,0)
 ;;
"RTN","A1AEUT2",108,0)
 ;;"BLD",9277,"KRN","B",771,771)
"RTN","A1AEUT2",109,0)
 ;;
"RTN","A1AEUT2",110,0)
 ;;"BLD",9277,"KRN","B",779.2,779.2)
"RTN","A1AEUT2",111,0)
 ;;
"RTN","A1AEUT2",112,0)
 ;;"BLD",9277,"KRN","B",870,870)
"RTN","A1AEUT2",113,0)
 ;;
"RTN","A1AEUT2",114,0)
 ;;"BLD",9277,"KRN","B",8989.51,8989.51)
"RTN","A1AEUT2",115,0)
 ;;
"RTN","A1AEUT2",116,0)
 ;;"BLD",9277,"KRN","B",8989.52,8989.52)
"RTN","A1AEUT2",117,0)
 ;;
"RTN","A1AEUT2",118,0)
 ;;"BLD",9277,"KRN","B",8994,8994)
"RTN","A1AEUT2",119,0)
 ;;
"RTN","A1AEUT2",120,0)
 ;;"BLD",9277,"QUES",0)
"RTN","A1AEUT2",121,0)
 ;;^9.62^^
"RTN","A1AEUT2",122,0)
 ;;"MBREQ")
"RTN","A1AEUT2",123,0)
 ;;0
"RTN","A1AEUT2",124,0)
 ;;"PKG",223,-1)
"RTN","A1AEUT2",125,0)
 ;;1^1
"RTN","A1AEUT2",126,0)
 ;;"PKG",223,0)
"RTN","A1AEUT2",127,0)
 ;;TEST PACKAGE^ZZZ^FOR FORUM
"RTN","A1AEUT2",128,0)
 ;;"PKG",223,22,0)
"RTN","A1AEUT2",129,0)
 ;;^9.49I^1^1
"RTN","A1AEUT2",130,0)
 ;;"PKG",223,22,1,0)
"RTN","A1AEUT2",131,0)
 ;;1.0
"RTN","A1AEUT2",132,0)
 ;;"PKG",223,22,1,"PAH",1,0)
"RTN","A1AEUT2",133,0)
 ;;1^3140102
"RTN","A1AEUT2",134,0)
 ;;"PKG",223,22,1,"PAH",1,1,0)
"RTN","A1AEUT2",135,0)
 ;;^^1^1^3140102
"RTN","A1AEUT2",136,0)
 ;;"PKG",223,22,1,"PAH",1,1,1,0)
"RTN","A1AEUT2",137,0)
 ;;TEST TEST
"RTN","A1AEUT2",138,0)
 ;;"QUES","XPF1",0)
"RTN","A1AEUT2",139,0)
 ;;Y
"RTN","A1AEUT2",140,0)
 ;;"QUES","XPF1","??")
"RTN","A1AEUT2",141,0)
 ;;^D REP^XPDH
"RTN","A1AEUT2",142,0)
 ;;"QUES","XPF1","A")
"RTN","A1AEUT2",143,0)
 ;;Shall I write over your |FLAG| File
"RTN","A1AEUT2",144,0)
 ;;"QUES","XPF1","B")
"RTN","A1AEUT2",145,0)
 ;;YES
"RTN","A1AEUT2",146,0)
 ;;"QUES","XPF1","M")
"RTN","A1AEUT2",147,0)
 ;;D XPF1^XPDIQ
"RTN","A1AEUT2",148,0)
 ;;"QUES","XPF2",0)
"RTN","A1AEUT2",149,0)
 ;;Y
"RTN","A1AEUT2",150,0)
 ;;"QUES","XPF2","??")
"RTN","A1AEUT2",151,0)
 ;;^D DTA^XPDH
"RTN","A1AEUT2",152,0)
 ;;"QUES","XPF2","A")
"RTN","A1AEUT2",153,0)
 ;;Want my data |FLAG| yours
"RTN","A1AEUT2",154,0)
 ;;"QUES","XPF2","B")
"RTN","A1AEUT2",155,0)
 ;;YES
"RTN","A1AEUT2",156,0)
 ;;"QUES","XPF2","M")
"RTN","A1AEUT2",157,0)
 ;;D XPF2^XPDIQ
"RTN","A1AEUT2",158,0)
 ;;"QUES","XPI1",0)
"RTN","A1AEUT2",159,0)
 ;;YO
"RTN","A1AEUT2",160,0)
 ;;"QUES","XPI1","??")
"RTN","A1AEUT2",161,0)
 ;;^D INHIBIT^XPDH
"RTN","A1AEUT2",162,0)
 ;;"QUES","XPI1","A")
"RTN","A1AEUT2",163,0)
 ;;Want KIDS to INHIBIT LOGONs during the install
"RTN","A1AEUT2",164,0)
 ;;"QUES","XPI1","B")
"RTN","A1AEUT2",165,0)
 ;;NO
"RTN","A1AEUT2",166,0)
 ;;"QUES","XPI1","M")
"RTN","A1AEUT2",167,0)
 ;;D XPI1^XPDIQ
"RTN","A1AEUT2",168,0)
 ;;"QUES","XPM1",0)
"RTN","A1AEUT2",169,0)
 ;;PO^VA(200,:EM
"RTN","A1AEUT2",170,0)
 ;;"QUES","XPM1","??")
"RTN","A1AEUT2",171,0)
 ;;^D MG^XPDH
"RTN","A1AEUT2",172,0)
 ;;"QUES","XPM1","A")
"RTN","A1AEUT2",173,0)
 ;;Enter the Coordinator for Mail Group '|FLAG|'
"RTN","A1AEUT2",174,0)
 ;;"QUES","XPM1","B")
"RTN","A1AEUT2",175,0)
 ;;
"RTN","A1AEUT2",176,0)
 ;;"QUES","XPM1","M")
"RTN","A1AEUT2",177,0)
 ;;D XPM1^XPDIQ
"RTN","A1AEUT2",178,0)
 ;;"QUES","XPO1",0)
"RTN","A1AEUT2",179,0)
 ;;Y
"RTN","A1AEUT2",180,0)
 ;;"QUES","XPO1","??")
"RTN","A1AEUT2",181,0)
 ;;^D MENU^XPDH
"RTN","A1AEUT2",182,0)
 ;;"QUES","XPO1","A")
"RTN","A1AEUT2",183,0)
 ;;Want KIDS to Rebuild Menu Trees Upon Completion of Install
"RTN","A1AEUT2",184,0)
 ;;"QUES","XPO1","B")
"RTN","A1AEUT2",185,0)
 ;;NO
"RTN","A1AEUT2",186,0)
 ;;"QUES","XPO1","M")
"RTN","A1AEUT2",187,0)
 ;;D XPO1^XPDIQ
"RTN","A1AEUT2",188,0)
 ;;"QUES","XPZ1",0)
"RTN","A1AEUT2",189,0)
 ;;Y
"RTN","A1AEUT2",190,0)
 ;;"QUES","XPZ1","??")
"RTN","A1AEUT2",191,0)
 ;;^D OPT^XPDH
"RTN","A1AEUT2",192,0)
 ;;"QUES","XPZ1","A")
"RTN","A1AEUT2",193,0)
 ;;Want to DISABLE Scheduled Options, Menu Options, and Protocols
"RTN","A1AEUT2",194,0)
 ;;"QUES","XPZ1","B")
"RTN","A1AEUT2",195,0)
 ;;NO
"RTN","A1AEUT2",196,0)
 ;;"QUES","XPZ1","M")
"RTN","A1AEUT2",197,0)
 ;;D XPZ1^XPDIQ
"RTN","A1AEUT2",198,0)
 ;;"QUES","XPZ2",0)
"RTN","A1AEUT2",199,0)
 ;;Y
"RTN","A1AEUT2",200,0)
 ;;"QUES","XPZ2","??")
"RTN","A1AEUT2",201,0)
 ;;^D RTN^XPDH
"RTN","A1AEUT2",202,0)
 ;;"QUES","XPZ2","A")
"RTN","A1AEUT2",203,0)
 ;;Want to MOVE routines to other CPUs
"RTN","A1AEUT2",204,0)
 ;;"QUES","XPZ2","B")
"RTN","A1AEUT2",205,0)
 ;;NO
"RTN","A1AEUT2",206,0)
 ;;"QUES","XPZ2","M")
"RTN","A1AEUT2",207,0)
 ;;D XPZ2^XPDIQ
"RTN","A1AEUT2",208,0)
 ;;"RTN")
"RTN","A1AEUT2",209,0)
 ;;1
"RTN","A1AEUT2",210,0)
 ;;"RTN","ZOSV2GTM")
"RTN","A1AEUT2",211,0)
 ;;0^1^B7008460
"RTN","A1AEUT2",212,0)
 ;;"RTN","ZOSV2GTM",1,0)
"RTN","A1AEUT2",213,0)
 ;;%ZOSV2 ;ISF/RWF - More GT.M support routines ;10/18/06  14:29
"RTN","A1AEUT2",214,0)
 ;;"RTN","ZOSV2GTM",2,0)
"RTN","A1AEUT2",215,0)
 ;; ;;8.0;KERNEL;**275,425**;Jul 10, 1995;Build 2
"RTN","A1AEUT2",216,0)
 ;;"RTN","ZOSV2GTM",3,0)
"RTN","A1AEUT2",217,0)
 ;; Q
"RTN","A1AEUT2",218,0)
 ;;"RTN","ZOSV2GTM",4,0)
"RTN","A1AEUT2",219,0)
 ;; ;SAVE: DIE open array reference.
"RTN","A1AEUT2",220,0)
 ;;"RTN","ZOSV2GTM",5,0)
"RTN","A1AEUT2",221,0)
 ;; ;      XCN is the starting value to $O from.
"RTN","A1AEUT2",222,0)
 ;;"RTN","ZOSV2GTM",6,0)
"RTN","A1AEUT2",223,0)
 ;;SAVE(RN) ;Save a routine
"RTN","A1AEUT2",224,0)
 ;;"RTN","ZOSV2GTM",7,0)
"RTN","A1AEUT2",225,0)
 ;; N %,%F,%I,%N,SP,$ETRAP
"RTN","A1AEUT2",226,0)
 ;;"RTN","ZOSV2GTM",8,0)
"RTN","A1AEUT2",227,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEUT2",228,0)
 ;;"RTN","ZOSV2GTM",9,0)
"RTN","A1AEUT2",229,0)
 ;; S %I=$I,SP=" ",%F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","A1AEUT2",230,0)
 ;;"RTN","ZOSV2GTM",10,0)
"RTN","A1AEUT2",231,0)
 ;; O %F:(newversion:noreadonly:blocksize=2048:recordsize=2044) U %F
"RTN","A1AEUT2",232,0)
 ;;"RTN","ZOSV2GTM",11,0)
"RTN","A1AEUT2",233,0)
 ;; F  S XCN=$O(@(DIE_XCN_")")) Q:XCN'>0  S %=@(DIE_XCN_",0)") Q:$E(%,1)="$"  I $E(%)'=";" W $P(%,SP)_$C(9)_$P(%,SP,2,99999),!
"RTN","A1AEUT2",234,0)
 ;;"RTN","ZOSV2GTM",12,0)
"RTN","A1AEUT2",235,0)
 ;; C %F ;S %N=$$NULL
"RTN","A1AEUT2",236,0)
 ;;"RTN","ZOSV2GTM",13,0)
"RTN","A1AEUT2",237,0)
 ;; ZLINK RN
"RTN","A1AEUT2",238,0)
 ;;"RTN","ZOSV2GTM",14,0)
"RTN","A1AEUT2",239,0)
 ;; ;C %N
"RTN","A1AEUT2",240,0)
 ;;"RTN","ZOSV2GTM",15,0)
"RTN","A1AEUT2",241,0)
 ;; U %I
"RTN","A1AEUT2",242,0)
 ;;"RTN","ZOSV2GTM",16,0)
"RTN","A1AEUT2",243,0)
 ;; Q
"RTN","A1AEUT2",244,0)
 ;;"RTN","ZOSV2GTM",17,0)
"RTN","A1AEUT2",245,0)
 ;;NULL() ;Open and use null to hide talking.  Return open name
"RTN","A1AEUT2",246,0)
 ;;"RTN","ZOSV2GTM",18,0)
"RTN","A1AEUT2",247,0)
 ;; ;Doesn't work for compile errors
"RTN","A1AEUT2",248,0)
 ;;"RTN","ZOSV2GTM",19,0)
"RTN","A1AEUT2",249,0)
 ;; N %N S %N=$S($ZV["VMS":"NLA0:",1:"/dev/nul")
"RTN","A1AEUT2",250,0)
 ;;"RTN","ZOSV2GTM",20,0)
"RTN","A1AEUT2",251,0)
 ;; O %N U %N
"RTN","A1AEUT2",252,0)
 ;;"RTN","ZOSV2GTM",21,0)
"RTN","A1AEUT2",253,0)
 ;; Q %N
"RTN","A1AEUT2",254,0)
 ;;"RTN","ZOSV2GTM",22,0)
"RTN","A1AEUT2",255,0)
 ;; ;
"RTN","A1AEUT2",256,0)
 ;;"RTN","ZOSV2GTM",23,0)
"RTN","A1AEUT2",257,0)
 ;;DEL(RN) ;Delete a routine file, both source and object.
"RTN","A1AEUT2",258,0)
 ;;"RTN","ZOSV2GTM",24,0)
"RTN","A1AEUT2",259,0)
 ;; N %N,%DIR,%I,$ETRAP
"RTN","A1AEUT2",260,0)
 ;;"RTN","ZOSV2GTM",25,0)
"RTN","A1AEUT2",261,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEUT2",262,0)
 ;;"RTN","ZOSV2GTM",26,0)
"RTN","A1AEUT2",263,0)
 ;; S %I=$I,%DIR=$$RTNDIR^%ZOSV,RN=$TR(RN,"%","_")
"RTN","A1AEUT2",264,0)
 ;;"RTN","ZOSV2GTM",27,0)
"RTN","A1AEUT2",265,0)
 ;; I $L($ZSEARCH(%DIR_RN_".m",244)) ZSYSTEM "DEL "_%DIR_X_".m;*"
"RTN","A1AEUT2",266,0)
 ;;"RTN","ZOSV2GTM",28,0)
"RTN","A1AEUT2",267,0)
 ;; I $L($ZSEARCH(%DIR_RN_".obj",244)) ZSYSTEM "DEL "_%DIR_X_".obj;*"
"RTN","A1AEUT2",268,0)
 ;;"RTN","ZOSV2GTM",29,0)
"RTN","A1AEUT2",269,0)
 ;; I $L($ZSEARCH(%DIR_RN_".o",244)) ZSYSTEM "rm -f "_%DIR_X_".o"
"RTN","A1AEUT2",270,0)
 ;;"RTN","ZOSV2GTM",30,0)
"RTN","A1AEUT2",271,0)
 ;; Q
"RTN","A1AEUT2",272,0)
 ;;"RTN","ZOSV2GTM",31,0)
"RTN","A1AEUT2",273,0)
 ;; ;LOAD: DIF open array to receive the routine lines.
"RTN","A1AEUT2",274,0)
 ;;"RTN","ZOSV2GTM",32,0)
"RTN","A1AEUT2",275,0)
 ;; ;      XCNP The starting index -1.
"RTN","A1AEUT2",276,0)
 ;;"RTN","ZOSV2GTM",33,0)
"RTN","A1AEUT2",277,0)
 ;;LOAD(RN) ;Load a routine
"RTN","A1AEUT2",278,0)
 ;;"RTN","ZOSV2GTM",34,0)
"RTN","A1AEUT2",279,0)
 ;; N %
"RTN","A1AEUT2",280,0)
 ;;"RTN","ZOSV2GTM",35,0)
"RTN","A1AEUT2",281,0)
 ;; S %N=0 F XCNP=XCNP+1:1 S %N=%N+1,%=$T(+%N^@RN) Q:$L(%)=0  S @(DIF_XCNP_",0)")=%
"RTN","A1AEUT2",282,0)
 ;;"RTN","ZOSV2GTM",36,0)
"RTN","A1AEUT2",283,0)
 ;; Q
"RTN","A1AEUT2",284,0)
 ;;"RTN","ZOSV2GTM",37,0)
"RTN","A1AEUT2",285,0)
 ;; ;
"RTN","A1AEUT2",286,0)
 ;;"RTN","ZOSV2GTM",38,0)
"RTN","A1AEUT2",287,0)
 ;;LOAD2(RN) ;Load a routine
"RTN","A1AEUT2",288,0)
 ;;"RTN","ZOSV2GTM",39,0)
"RTN","A1AEUT2",289,0)
 ;; N %,%1,%F,%N,$ETRAP
"RTN","A1AEUT2",290,0)
 ;;"RTN","ZOSV2GTM",40,0)
"RTN","A1AEUT2",291,0)
 ;; S %I=$I,%F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","A1AEUT2",292,0)
 ;;"RTN","ZOSV2GTM",41,0)
"RTN","A1AEUT2",293,0)
 ;; O %F:(readonly):1 Q:'$T  U %F
"RTN","A1AEUT2",294,0)
 ;;"RTN","ZOSV2GTM",42,0)
"RTN","A1AEUT2",295,0)
 ;; F XCNP=XCNP+1:1 R %1:1 Q:'$T!$ZEOF  S @(DIF_XCNP_",0)")=$TR(%1,$C(9)," ")
"RTN","A1AEUT2",296,0)
 ;;"RTN","ZOSV2GTM",43,0)
"RTN","A1AEUT2",297,0)
 ;; C %F I $L(%I) U %I
"RTN","A1AEUT2",298,0)
 ;;"RTN","ZOSV2GTM",44,0)
"RTN","A1AEUT2",299,0)
 ;; Q
"RTN","A1AEUT2",300,0)
 ;;"RTN","ZOSV2GTM",45,0)
"RTN","A1AEUT2",301,0)
 ;; ;
"RTN","A1AEUT2",302,0)
 ;;"RTN","ZOSV2GTM",46,0)
"RTN","A1AEUT2",303,0)
 ;;RSUM(RN) ;Calculate a RSUM value
"RTN","A1AEUT2",304,0)
 ;;"RTN","ZOSV2GTM",47,0)
"RTN","A1AEUT2",305,0)
 ;; N %,DIF,XCNP,%N,Y,$ETRAP K ^TMP("RSUM",$J)
"RTN","A1AEUT2",306,0)
 ;;"RTN","ZOSV2GTM",48,0)
"RTN","A1AEUT2",307,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEUT2",308,0)
 ;;"RTN","ZOSV2GTM",49,0)
"RTN","A1AEUT2",309,0)
 ;; S Y=0,DIF="^TMP(""RSUM"",$J,",XCNP=0 D LOAD2(RN)
"RTN","A1AEUT2",310,0)
 ;;"RTN","ZOSV2GTM",50,0)
"RTN","A1AEUT2",311,0)
 ;; F %=1,3:1 S %1=$G(^TMP("RSUM",$J,%,0)),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=
"RTN","A1AEUT2",312,0)
 ;;";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*%2+Y
"RTN","A1AEUT2",313,0)
 ;;"RTN","ZOSV2GTM",51,0)
"RTN","A1AEUT2",314,0)
 ;; K ^TMP("RSUM",$J)
"RTN","A1AEUT2",315,0)
 ;;"RTN","ZOSV2GTM",52,0)
"RTN","A1AEUT2",316,0)
 ;; Q Y
"RTN","A1AEUT2",317,0)
 ;;"RTN","ZOSV2GTM",53,0)
"RTN","A1AEUT2",318,0)
 ;; ;
"RTN","A1AEUT2",319,0)
 ;;"RTN","ZOSV2GTM",54,0)
"RTN","A1AEUT2",320,0)
 ;;RSUM2(RN) ;Calculate a RSUM2 value
"RTN","A1AEUT2",321,0)
 ;;"RTN","ZOSV2GTM",55,0)
"RTN","A1AEUT2",322,0)
 ;; N %,DIF,XCNP,%N,Y,$ETRAP K ^TMP("RSUM",$J)
"RTN","A1AEUT2",323,0)
 ;;"RTN","ZOSV2GTM",56,0)
"RTN","A1AEUT2",324,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEUT2",325,0)
 ;;"RTN","ZOSV2GTM",57,0)
"RTN","A1AEUT2",326,0)
 ;; S Y=0,DIF="^TMP(""RSUM"",$J,",XCNP=0 D LOAD2(RN)
"RTN","A1AEUT2",327,0)
 ;;"RTN","ZOSV2GTM",58,0)
"RTN","A1AEUT2",328,0)
 ;; F %=1,3:1 S %1=$G(^TMP("RSUM",$J,%,0)),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=
"RTN","A1AEUT2",329,0)
 ;;";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*(%2+%)+Y
"RTN","A1AEUT2",330,0)
 ;;"RTN","ZOSV2GTM",59,0)
"RTN","A1AEUT2",331,0)
 ;; K ^TMP("RSUM",$J)
"RTN","A1AEUT2",332,0)
 ;;"RTN","ZOSV2GTM",60,0)
"RTN","A1AEUT2",333,0)
 ;; Q Y
"RTN","A1AEUT2",334,0)
 ;;"RTN","ZOSV2GTM",61,0)
"RTN","A1AEUT2",335,0)
 ;; ;
"RTN","A1AEUT2",336,0)
 ;;"RTN","ZOSV2GTM",62,0)
"RTN","A1AEUT2",337,0)
 ;;TEST(RN) ;Special GT.M Test to see if routine is here.
"RTN","A1AEUT2",338,0)
 ;;"RTN","ZOSV2GTM",63,0)
"RTN","A1AEUT2",339,0)
 ;; N %F,%X
"RTN","A1AEUT2",340,0)
 ;;"RTN","ZOSV2GTM",64,0)
"RTN","A1AEUT2",341,0)
 ;; S %F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","A1AEUT2",342,0)
 ;;"RTN","ZOSV2GTM",65,0)
"RTN","A1AEUT2",343,0)
 ;; S %X=$ZSEARCH("X.X",245),%X=$ZSEARCH(%F,245)
"RTN","A1AEUT2",344,0)
 ;;"RTN","ZOSV2GTM",66,0)
"RTN","A1AEUT2",345,0)
 ;; Q %X
"RTN","A1AEUT2",346,0)
 ;;"VER")
"RTN","A1AEUT2",347,0)
 ;;8.0^22.0
"RTN","A1AEUT2",348,0)
 ;;$END KID ZZZ*1.0*1
"RTN","A1AEUT3")
0^96^B15854129
"RTN","A1AEUT3",1,0)
A1AEUT3 ;ven/lgc,jli-unit tests for the patch module ;2014-09-15T21:09
"RTN","A1AEUT3",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUT3",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUT3",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUT3",5,0)
 ;
"RTN","A1AEUT3",6,0)
 ;
"RTN","A1AEUT3",7,0)
 ;primary change history
"RTN","A1AEUT3",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUT3",9,0)
 ;
"RTN","A1AEUT3",10,0)
 ; CHANGE: (VEN/LGC) Corrected calls to Post Install
"RTN","A1AEUT3",11,0)
 ;        The Post install was moved out of the A1AEUTL
"RTN","A1AEUT3",12,0)
 ;        routine and placed in the A1AE2POS routine
"RTN","A1AEUT3",13,0)
 ;        now designated as the post install repository
"RTN","A1AEUT3",14,0)
 ;
"RTN","A1AEUT3",15,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUT3",16,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUT3",17,0)
 Q
"RTN","A1AEUT3",18,0)
 ;
"RTN","A1AEUT3",19,0)
STARTUP L +^A1AE(11007.1):1 I '$T D  Q
"RTN","A1AEUT3",20,0)
 .  W !,"*** COULD NOT GET LOCK.  TRY LATER ***"
"RTN","A1AEUT3",21,0)
 ;
"RTN","A1AEUT3",22,0)
SHUTDOWN L -^A1AE(11007.1) Q
"RTN","A1AEUT3",23,0)
 ;
"RTN","A1AEUT3",24,0)
 ; Unit Test setting all PRIMARY to 0
"RTN","A1AEUT3",25,0)
 ;   1. Save the IEN of entry now set as PRIMARY
"RTN","A1AEUT3",26,0)
 ;   2. Run A1AEP0
"RTN","A1AEUT3",27,0)
 ;   3. Find IEN set to 1 (shouldn't be any)
"RTN","A1AEUT3",28,0)
 ;   4. Return original PRIMARY setting
"RTN","A1AEUT3",29,0)
 ;   5. Run Unit Test
"RTN","A1AEUT3",30,0)
 ;
"RTN","A1AEUT3",31,0)
UTP0 N A1AEI,UTOIEN,UTPOST
"RTN","A1AEUT3",32,0)
 ; Save IEN of entry now set as PRIMARY?
"RTN","A1AEUT3",33,0)
 S UTOIEN=$$UTPRIEN
"RTN","A1AEUT3",34,0)
 ; If no Stream was set to PRIMARY, we must set one 
"RTN","A1AEUT3",35,0)
 ;  or we are unable to check that clearing all PRIMARY works
"RTN","A1AEUT3",36,0)
 S:'UTOIEN $P(^A1AE(11007.1,1,0),U,2)=1
"RTN","A1AEUT3",37,0)
 ; Call should set all PRIMARY to 0
"RTN","A1AEUT3",38,0)
 D A1AEP1A^A1AE2POS
"RTN","A1AEUT3",39,0)
 ; See if all PRIMARY are 0
"RTN","A1AEUT3",40,0)
 S UTPOST=$$UTPRIEN
"RTN","A1AEUT3",41,0)
 ;
"RTN","A1AEUT3",42,0)
 ; Return PRIMARY to original value
"RTN","A1AEUT3",43,0)
 S:UTOIEN $P(^A1AE(11007.1,UTOIEN,0),U,2)=1
"RTN","A1AEUT3",44,0)
 D CHKEQ^%ut(0,UTPOST,"Set all PRIMARY to 0 FAILED")
"RTN","A1AEUT3",45,0)
 ;
"RTN","A1AEUT3",46,0)
 ; Now that we have returned PRIMARY to original setting
"RTN","A1AEUT3",47,0)
 ;   clean up everything by rebuilding all cross-references
"RTN","A1AEUT3",48,0)
 N DIK,DA
"RTN","A1AEUT3",49,0)
 S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AEUT3",50,0)
 D ENALL2^DIK
"RTN","A1AEUT3",51,0)
 D ENALL^DIK
"RTN","A1AEUT3",52,0)
 Q
"RTN","A1AEUT3",53,0)
 ;
"RTN","A1AEUT3",54,0)
 ;
"RTN","A1AEUT3",55,0)
 ; Note in Unit Testing of setting PRIMARY? to match that
"RTN","A1AEUT3",56,0)
 ;   assigned for specific FORUM Domains, that a non-FORUM
"RTN","A1AEUT3",57,0)
 ;   site will test only that an incorrect PRIMARY? will
"RTN","A1AEUT3",58,0)
 ;   not be set.
"RTN","A1AEUT3",59,0)
 ;   The test in a FORUM Domain site will test whether
"RTN","A1AEUT3",60,0)
 ;   the PRIMARY? is set, AND set correctly
"RTN","A1AEUT3",61,0)
 ; Logic for Post Install setting or PRIMARY worked correctly
"RTN","A1AEUT3",62,0)
 ;   UTDOM = MAIL PARAMETERS not have FORUM domain = NO PRIMARY
"RTN","A1AEUT3",63,0)
 ;   UTDOM = NOT A FORUM domain = NO PRIMARY
"RTN","A1AEUT3",64,0)
 ;   UTDOM = FORUM.XXX.YYY
"RTN","A1AEUT3",65,0)
 ;       A FORUM DOMAIN entry = MAIL PARAMETER DOMAIN = is PRIMARY
"RTN","A1AEUT3",66,0)
 ;       No FORUM DOMAIN entry = MAIL PARAMETER DOMAIN = NO PRIMARY
"RTN","A1AEUT3",67,0)
 ;
"RTN","A1AEUT3",68,0)
UTPR N A1AEI,UTDOM,UTOIEN,UTPOST,X
"RTN","A1AEUT3",69,0)
 S UTDOM=$$GET1^DIQ(4.3,"1,",.01)
"RTN","A1AEUT3",70,0)
 ; Save present PRIMARY patch stream IEN - if one set
"RTN","A1AEUT3",71,0)
 S UTOIEN=$$UTPRIEN
"RTN","A1AEUT3",72,0)
 ; If a Patch Stream PRIMARY? is set to YES, set to NO
"RTN","A1AEUT3",73,0)
 S:UTOIEN $P(^A1AE(11007.1,UTOIEN,0),U,2)=0
"RTN","A1AEUT3",74,0)
 ; Run code to set PRIMARY? according to FORUM DOMAIN entry
"RTN","A1AEUT3",75,0)
 D A1AEP1B^A1AE2POS
"RTN","A1AEUT3",76,0)
 ; Get the IEN of the entry having PRIMARY? set to yes now
"RTN","A1AEUT3",77,0)
 ; Note that if no FORUM DOMAIN entry is filled into
"RTN","A1AEUT3",78,0)
 ;   an entry in DHCP PATCH STREAM then all entries
"RTN","A1AEUT3",79,0)
 ;   remain CORRECTLY at PRIMARY=0
"RTN","A1AEUT3",80,0)
 S UTPOST=$$UTPRIEN
"RTN","A1AEUT3",81,0)
 S X=1
"RTN","A1AEUT3",82,0)
 ; If all PRIMARY are 0, and
"RTN","A1AEUT3",83,0)
 ;    a) and MAIL DOMAIN not contain "FORUM" --- correct 
"RTN","A1AEUT3",84,0)
 ;    b) and no FORUM DOMAIN fields set in 11007.1 --- correct
"RTN","A1AEUT3",85,0)
 ; If there is a PRIMARY set then correct if,
"RTN","A1AEUT3",86,0)
 ;    a) the mail domain (UTDOM) contains "FORUM"
"RTN","A1AEUT3",87,0)
 ;    b) and, the FORUM DOMAIN for this entry set to PRIMARY
"RTN","A1AEUT3",88,0)
 ;            matches the mail domain
"RTN","A1AEUT3",89,0)
 I 'UTPOST,$P($G(UTDOM),".")'["FORUM" S X=0
"RTN","A1AEUT3",90,0)
 I 'UTPOST,'$D(^A1AE(11007.1,"AFORUM")) S X=0
"RTN","A1AEUT3",91,0)
 I $P(UTDOM,".")["FORUM",UTDOM=$$GET1^DIQ(11007.1,UTPOST_",",.07) D
"RTN","A1AEUT3",92,0)
 . S X=0
"RTN","A1AEUT3",93,0)
 D CHKEQ^%ut(0,X,"Set FORUM SITE PRIMARY to 1 FAILED")
"RTN","A1AEUT3",94,0)
 ; Put settings back as they were, even if incorrect
"RTN","A1AEUT3",95,0)
 I UTOIEN'=UTPOST D
"RTN","A1AEUT3",96,0)
 .  S $P(^A1AE(11007.1,UTPOST,0),U,2)=0
"RTN","A1AEUT3",97,0)
 .  S $P(^A1AE(11007.1,UTOIEN,0),U,2)=1
"RTN","A1AEUT3",98,0)
 N DIK,DA
"RTN","A1AEUT3",99,0)
 S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AEUT3",100,0)
 D ENALL2^DIK
"RTN","A1AEUT3",101,0)
 D ENALL^DIK
"RTN","A1AEUT3",102,0)
 Q
"RTN","A1AEUT3",103,0)
 ;
"RTN","A1AEUT3",104,0)
 ;
"RTN","A1AEUT3",105,0)
 ; Unit Testing for subroutine that sets all SUBSCRIPTION [#.06]
"RTN","A1AEUT3",106,0)
 ;   to 0 [NO], then sets SUBSCRIPTION to YES for the FOIA VISTA
"RTN","A1AEUT3",107,0)
 ;   Stream.
"RTN","A1AEUT3",108,0)
 ; Rather than correct a site's entries if they are set wrong
"RTN","A1AEUT3",109,0)
 ;   we will first save off their present SUBSCRIPTION entry
"RTN","A1AEUT3",110,0)
 ;   in the DHCP PATCH STREAM [#11007.1] file so we might 
"RTN","A1AEUT3",111,0)
 ;   set it back after our test.
"RTN","A1AEUT3",112,0)
 ; Logic for test
"RTN","A1AEUT3",113,0)
 ;   1. Save off IEN for entry in DHCP PATCH STREAM [#11007.1]
"RTN","A1AEUT3",114,0)
 ;       SUBSCRIPTION presently set to 1 [YES]
"RTN","A1AEUT3",115,0)
 ;   2. Run A1AEP1C^A1AE2POS in the Post Install routine
"RTN","A1AEUT3",116,0)
 ;      which should set SUBSCRIPTION to 0, then set
"RTN","A1AEUT3",117,0)
 ;      the FOIA VISTA site to SUBSCRIPTION
"RTN","A1AEUT3",118,0)
 ;   3. Set the IEN for Stream SUBSCRIPTION back to original
"RTN","A1AEUT3",119,0)
 ;   4. Run Unit Test code 
"RTN","A1AEUT3",120,0)
 ;
"RTN","A1AEUT3",121,0)
UTS0 N A1AEI,UTOIEN,UTPOST
"RTN","A1AEUT3",122,0)
 ; Save off stream now set to SUBSCRIPTION
"RTN","A1AEUT3",123,0)
 S UTOIEN=$$UTSUBS
"RTN","A1AEUT3",124,0)
 ; If no Stream was set to SUBSCRIPTION, we must set one
"RTN","A1AEUT3",125,0)
 ;  or we are unable to check that clearing all SUBSCRIPTION works
"RTN","A1AEUT3",126,0)
 I 'UTOIEN S A1AEI=$O(^A1AE(11007.1,"A"),-1) D
"RTN","A1AEUT3",127,0)
 .  S $P(^A1AE(11007.1,A1AEI,0),U,6)=1
"RTN","A1AEUT3",128,0)
 ; Call subroutine in Post Install routine that sets
"RTN","A1AEUT3",129,0)
 ;   SUBSCRIPTION to the FOIA VISTA entry
"RTN","A1AEUT3",130,0)
 D A1AEP1C^A1AE2POS
"RTN","A1AEUT3",131,0)
 ; See what entry in 11007.1 file is now set to SUBSCRIPTION
"RTN","A1AEUT3",132,0)
 S UTPOST=$$UTSUBS
"RTN","A1AEUT3",133,0)
 ; Return SUBSCRIPTION to original value
"RTN","A1AEUT3",134,0)
 I UTOIEN,UTOIEN'=UTPOST D
"RTN","A1AEUT3",135,0)
 . S $P(^A1AE(11007.1,UTPOST,0),U,6)=0
"RTN","A1AEUT3",136,0)
 . S $P(^A1AE(11007.1,UTOIEN,0),U,6)=1
"RTN","A1AEUT3",137,0)
 S X=1
"RTN","A1AEUT3",138,0)
 I UTPOST,$P(^A1AE(11007.1,UTPOST,0),U)="FOIA VISTA" S X=0
"RTN","A1AEUT3",139,0)
 D CHKEQ^%ut(0,X,"Set SEQUENCE appropriate for FORUM DOMAIN FAILED")
"RTN","A1AEUT3",140,0)
 N DIK,DA
"RTN","A1AEUT3",141,0)
 S DIK(1)=".06",DIK="^A1AE(11007.1,"
"RTN","A1AEUT3",142,0)
 D ENALL2^DIK
"RTN","A1AEUT3",143,0)
 D ENALL^DIK
"RTN","A1AEUT3",144,0)
 Q
"RTN","A1AEUT3",145,0)
 ;
"RTN","A1AEUT3",146,0)
 ;
"RTN","A1AEUT3",147,0)
 ;
"RTN","A1AEUT3",148,0)
 ; Function to return IEN in DHCP PATCH STREAM [#11007.1]
"RTN","A1AEUT3",149,0)
 ;   entry having PRIMARY? [#.02] field set
"RTN","A1AEUT3",150,0)
UTPRIEN() N A1AEI,UTPRIM S (A1AEI,UTPRIM)=0
"RTN","A1AEUT3",151,0)
 F  S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AEUT3",152,0)
 .  I $P(^A1AE(11007.1,A1AEI,0),U,2) S UTPRIM=A1AEI
"RTN","A1AEUT3",153,0)
 Q UTPRIM
"RTN","A1AEUT3",154,0)
 ;
"RTN","A1AEUT3",155,0)
 ; Function to return IEN in DHCP PATCH STREAM [#11007.1]
"RTN","A1AEUT3",156,0)
 ;   entry having SUBSCRIPTION [#.03] field set
"RTN","A1AEUT3",157,0)
UTSUBS() N UTSUBS S (A1AEI,UTSUBS)=0
"RTN","A1AEUT3",158,0)
 F  S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AEUT3",159,0)
 .  I $P(^A1AE(11007.1,A1AEI,0),U,6) S UTSUBS=A1AEI
"RTN","A1AEUT3",160,0)
 Q UTSUBS
"RTN","A1AEUT3",161,0)
 ;
"RTN","A1AEUT3",162,0)
XTENT ;
"RTN","A1AEUT3",163,0)
 ;;UTP0;Testing setting of all PRIMARY? to NO in 11007.1
"RTN","A1AEUT3",164,0)
 ;;UTPR;Testing setting PRIMARY? to yes if FORUM site
"RTN","A1AEUT3",165,0)
 ;;UTS0;Testing setting of SUBSCRIPTION to FOIA VISTA
"RTN","A1AEUT3",166,0)
 Q
"RTN","A1AEUT3",167,0)
 ;
"RTN","A1AEUT3",168,0)
EOR ; end of routine A1AEUT3
"RTN","A1AEUT4")
0^97^B62809203
"RTN","A1AEUT4",1,0)
A1AEUT4 ;ven/lgc,jli-unit tests for the patch module ;2014-09-19T18:15
"RTN","A1AEUT4",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUT4",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUT4",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUT4",5,0)
 ;
"RTN","A1AEUT4",6,0)
 ;
"RTN","A1AEUT4",7,0)
 ;primary change history
"RTN","A1AEUT4",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUT4",9,0)
 ;
"RTN","A1AEUT4",10,0)
 ;
"RTN","A1AEUT4",11,0)
 ;
"RTN","A1AEUT4",12,0)
 ; Unit Test for Post Install which loads all BUILD [#9.6]
"RTN","A1AEUT4",13,0)
 ;   and INSTALL [#9.7] entries with pointers to 
"RTN","A1AEUT4",14,0)
 ;   DHCP PATCHES [#11005] file in the PAT multiple
"RTN","A1AEUT4",15,0)
 ;   
"RTN","A1AEUT4",16,0)
 ;   1. Lock DHCP PATCHES,BUILD,INSTALL files
"RTN","A1AEUT4",17,0)
 ;
"RTN","A1AEUT4",18,0)
 ;   2. Select 10 patches from DHCP PATCHES [#11005]
"RTN","A1AEUT4",19,0)
 ;       Save in A1AEP array A1AEP(1..10)
"RTN","A1AEUT4",20,0)
 ;       Replace A1AEP(3) with a patch with "1" in version
"RTN","A1AEUT4",21,0)
 ;       Replace A1AEP(10) with patch name  not in DHCP PATCHES
"RTN","A1AEUT4",22,0)
 ;          A1AE*999.1*12345
"RTN","A1AEUT4",23,0)
 ;
"RTN","A1AEUT4",24,0)
 ;       Save in A1AEP array A1AEP(10) *** should NOT build PAT
"RTN","A1AEUT4",25,0)
 ;       >>>>>>>>>>>>>>>>>>>>D SEL10(.A1AEP)
"RTN","A1AEUT4",26,0)
 ;
"RTN","A1AEUT4",27,0)
 ;   3. Install test entries
"RTN","A1AEUT4",28,0)
 ;      a.  Remove any BUILD / INSTALLs we will be testing
"RTN","A1AEUT4",29,0)
 ;       >>>>>>>>>>>>>>>>>> D ENTDEL
"RTN","A1AEUT4",30,0)
 ;
"RTN","A1AEUT4",31,0)
 ;      b.  one build (1) without multiple build [#10] field entries
"RTN","A1AEUT4",32,0)
 ;            BUILD=A1AE*1.0*9999980
"RTN","A1AEUT4",33,0)
 ;               BUILD MULTIPLE
"RTN","A1AEUT4",34,0)
 ;                  A1AEP(1)
"RTN","A1AEUT4",35,0)
 ;      >>>>>>>>>>>>>>>>>> D LOADBLDS
"RTN","A1AEUT4",36,0)
 ;
"RTN","A1AEUT4",37,0)
 ;      c.  one build (2) with multiple build [#10] entries
"RTN","A1AEUT4",38,0)
 ;            BUILD=A1AE MUNITPOO 1.0
"RTN","A1AEUT4",39,0)
 ;               BUILD MULTIPLE
"RTN","A1AEUT4",40,0)
 ;                  A1AEP(2)
"RTN","A1AEUT4",41,0)
 ;                  A1AEP(3)
"RTN","A1AEUT4",42,0)
 ;                  A1AEP(4)
"RTN","A1AEUT4",43,0)
 ;                  A1AEP(5)
"RTN","A1AEUT4",44,0)
 ;                  A1AEP(6)
"RTN","A1AEUT4",45,0)
 ;                  A1AEP(7)
"RTN","A1AEUT4",46,0)
 ;                  A1AEP(8)
"RTN","A1AEUT4",47,0)
 ;      >>>>>>>>>>>>>>>>>> D LOADBLDS
"RTN","A1AEUT4",48,0)
 ;
"RTN","A1AEUT4",49,0)
 ;      d.  One build (3) with multiple build entries - one
"RTN","A1AEUT4",50,0)
 ;          of which is build (2)
"RTN","A1AEUT4",51,0)
 ;            BUILD=A1AE*1.0*9999981
"RTN","A1AEUT4",52,0)
 ;               BUILD MULTIPLE
"RTN","A1AEUT4",53,0)
 ;                  A1AEP(9)
"RTN","A1AEUT4",54,0)
 ;                  A1AEP(10)
"RTN","A1AEUT4",55,0)
 ;                  A1AE MUNITPOO 1.0
"RTN","A1AEUT4",56,0)
 ;      >>>>>>>>>>>>>>>>>> D LOADBLDS
"RTN","A1AEUT4",57,0)
 ;
"RTN","A1AEUT4",58,0)
 ;      e.  two  install (2) which matches build (1)
"RTN","A1AEUT4",59,0)
 ;            INSTALL=A1AE*1.0*9999980
"RTN","A1AEUT4",60,0)
 ;      >>>>>>>>>>>>>>>>>> D LOADINST
"RTN","A1AEUT4",61,0)
 ;
"RTN","A1AEUT4",62,0)
 ;   3. Check new entries match expected
"RTN","A1AEUT4",63,0)
 ;      >>>>>>>>>>>>>>>>>> D CHKIBENT
"RTN","A1AEUT4",64,0)
 ;
"RTN","A1AEUT4",65,0)
 ;   4. Run section of Post Install to be tested
"RTN","A1AEUT4",66,0)
 ;      >>>>>>>>>>>>>>>>>> D RUNPOST
"RTN","A1AEUT4",67,0)
 ;
"RTN","A1AEUT4",68,0)
 ;   5. Run Unit Test to ensure PAT entries correct
"RTN","A1AEUT4",69,0)
 ;      >>>>>>>>>>>>>>>>>> D CHKIBPAT
"RTN","A1AEUT4",70,0)
 ;
"RTN","A1AEUT4",71,0)
 ;   6. Delete builds (1),(2) and (3)
"RTN","A1AEUT4",72,0)
 ;      >>>>>>>>>>>>>>>>>> D ENTDEL
"RTN","A1AEUT4",73,0)
 ;
"RTN","A1AEUT4",74,0)
 ;   7. Release Locks
"RTN","A1AEUT4",75,0)
 ;
"RTN","A1AEUT4",76,0)
 ;
"RTN","A1AEUT4",77,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUT4",78,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUT4",79,0)
 Q
"RTN","A1AEUT4",80,0)
 ;
"RTN","A1AEUT4",81,0)
STARTUP L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUT4",82,0)
 .  W !,"*** COULD NOT GET LOCK ON BUILD [#9.6]  TRY LATER ***"
"RTN","A1AEUT4",83,0)
 L +^XPD(9.7):1 I '$T D  Q
"RTN","A1AEUT4",84,0)
 .  W !,"*** COULD NOT GET LOCK ON INSTALL [#9.7]  TRY LATER ***"
"RTN","A1AEUT4",85,0)
 D ENTDEL I ERRMSG'["OK" D  Q
"RTN","A1AEUT4",86,0)
 . D FAIL^%ut("Unable to clear special 9.6,9.7 entries before test")
"RTN","A1AEUT4",87,0)
 ;
"RTN","A1AEUT4",88,0)
SHUTDOWN L -^XPD(9.6):1
"RTN","A1AEUT4",89,0)
 L -^XPD(9.7):1
"RTN","A1AEUT4",90,0)
 D ENTDEL I ERRMSG'["OK" D  Q
"RTN","A1AEUT4",91,0)
 . D FAIL^%ut("Unable to clear special 9.6,9.7 entries after test")
"RTN","A1AEUT4",92,0)
 Q
"RTN","A1AEUT4",93,0)
 ;
"RTN","A1AEUT4",94,0)
UTP0 N ERRMSG S ERRMSG="OK"
"RTN","A1AEUT4",95,0)
 D SEL10(.A1AEP)
"RTN","A1AEUT4",96,0)
 D LOADBLDS I ERRMSG'["OK" D  Q
"RTN","A1AEUT4",97,0)
 .  D FAIL^%ut(ERRMSG)
"RTN","A1AEUT4",98,0)
 D LOADINST I ERRMSG'["OK" D  Q
"RTN","A1AEUT4",99,0)
 .  D FAIL^%ut(ERRMSG)
"RTN","A1AEUT4",100,0)
 S OK=$$CHKIBENT I OK D  Q
"RTN","A1AEUT4",101,0)
 . D FAIL^%ut("Loading BUILDS and INSTALLS for testing FAILED!")
"RTN","A1AEUT4",102,0)
 ; Run post install to add PAT multiple to new 9.6 and 9.7 entries
"RTN","A1AEUT4",103,0)
 D RUNPOST
"RTN","A1AEUT4",104,0)
 ;  Test whether the post install worked correctly.
"RTN","A1AEUT4",105,0)
 S OK=$$CHKIBPAT
"RTN","A1AEUT4",106,0)
 D CHKEQ^%ut(0,OK,"Setting PAT multiple in 9.6 and 9.7 FAILED")
"RTN","A1AEUT4",107,0)
 Q
"RTN","A1AEUT4",108,0)
 ;
"RTN","A1AEUT4",109,0)
 ; Build an array of entries in DHCP PATCHES [#11005]
"RTN","A1AEUT4",110,0)
SEL10(A1AEP) K A1AEP
"RTN","A1AEUT4",111,0)
 N A1AEPM,ACNT S ACNT=0,A1AEPM="DG"
"RTN","A1AEUT4",112,0)
 F  S A1AEPM=$O(^A1AE(11005,"B",A1AEPM)) Q:'$L(A1AEPM)  D  Q:ACNT>9
"RTN","A1AEUT4",113,0)
 .  S A1AEPI=$O(^A1AE(11005,"B",A1AEPM,0))
"RTN","A1AEUT4",114,0)
 .  Q:'A1AEPI
"RTN","A1AEUT4",115,0)
 .  S ACNT=$G(ACNT)+1,A1AEP(ACNT)=A1AEPM_"^"_A1AEPI
"RTN","A1AEUT4",116,0)
 .  Q:ACNT>9
"RTN","A1AEUT4",117,0)
 S A1AEPI=0,A1AEPM=""
"RTN","A1AEUT4",118,0)
 F  S A1AEPM=$O(^A1AE(11005,"B",A1AEPM)) Q:A1AEPM=""  D  Q:A1AEPI
"RTN","A1AEUT4",119,0)
 . I $P(A1AEPM,"*",2)="1" S A1AEPI=$O(^A1AE(11005,"B",A1AEPM,0))
"RTN","A1AEUT4",120,0)
 I A1AEPI S $P(A1AEPM,"*",2)="1.0" D
"RTN","A1AEUT4",121,0)
 .  S A1AEP(3)=A1AEPM_"^"_A1AEPI
"RTN","A1AEUT4",122,0)
 S A1AEP(10)="A1AE*999.1*12345"
"RTN","A1AEUT4",123,0)
 Q
"RTN","A1AEUT4",124,0)
 ;
"RTN","A1AEUT4",125,0)
 ;
"RTN","A1AEUT4",126,0)
 ;
"RTN","A1AEUT4",127,0)
ENTDEL N PM
"RTN","A1AEUT4",128,0)
 D RMVENT(9.6,"A1AE*1.0*9999980",.ERRMSG) Q:$G(ERRMSG)'["OK"
"RTN","A1AEUT4",129,0)
 D RMVENT(9.6,"A1AE MUNITPOO 1.0",.ERRMSG) Q:$G(ERRMSG)'["OK"
"RTN","A1AEUT4",130,0)
 D RMVENT(9.6,"A1AE*1.0*9999981",.ERRMSG) Q:$G(ERRMSG)'["OK"
"RTN","A1AEUT4",131,0)
 D RMVENT(9.7,"A1AE*1.0*9999980",.ERRMSG) Q:$G(ERRMSG)'["OK"
"RTN","A1AEUT4",132,0)
 Q
"RTN","A1AEUT4",133,0)
 ;
"RTN","A1AEUT4",134,0)
 ; Remove all entries with this PATCH DESIGNATION
"RTN","A1AEUT4",135,0)
RMVENT(KFILE,PM,ERRMSG) ;
"RTN","A1AEUT4",136,0)
 N DA,DIERR,DIK K ERRMSG S ERRMSG="OK"
"RTN","A1AEUT4",137,0)
 F  S DA=$O(^XPD(KFILE,"B",PM,0)) Q:'DA  D  Q:ERRMSG["DIERR"
"RTN","A1AEUT4",138,0)
 .  S DIK="^XPD("_KFILE_","
"RTN","A1AEUT4",139,0)
 .  D ^DIK
"RTN","A1AEUT4",140,0)
 .  S:$D(DIERR) ERRMSG="DIERR"
"RTN","A1AEUT4",141,0)
 Q
"RTN","A1AEUT4",142,0)
 ;
"RTN","A1AEUT4",143,0)
 ; Load the necessary BUILDS
"RTN","A1AEUT4",144,0)
 ;
"RTN","A1AEUT4",145,0)
LOADBLDS N PTCHARR,PM
"RTN","A1AEUT4",146,0)
 S PM="A1AE*1.0*9999980"
"RTN","A1AEUT4",147,0)
 S PTCHARR(1)=$P(A1AEP(1),"^")
"RTN","A1AEUT4",148,0)
 S PTCHARR(2)="A1AE MUNITPOO 1.0"
"RTN","A1AEUT4",149,0)
 D LDBLDS(9.6,PM,.PTCHARR) Q:ERRMSG'["OK"
"RTN","A1AEUT4",150,0)
 ;
"RTN","A1AEUT4",151,0)
 K PTCHARR
"RTN","A1AEUT4",152,0)
 S PM="A1AE MUNITPOO 1.0"
"RTN","A1AEUT4",153,0)
 F I=2:1:8 S PTCHARR(I)=$P(A1AEP(I),"^")
"RTN","A1AEUT4",154,0)
 D LDBLDS(9.6,PM,.PTCHARR) Q:ERRMSG'["OK"
"RTN","A1AEUT4",155,0)
 ;
"RTN","A1AEUT4",156,0)
 K PTCHARR
"RTN","A1AEUT4",157,0)
 S PM="A1AE*1.0*9999981"
"RTN","A1AEUT4",158,0)
 F I=9:1:10 S PTCHARR(I)=$P(A1AEP(I),"^")
"RTN","A1AEUT4",159,0)
 D LDBLDS(9.6,PM,.PTCHARR) Q:ERRMSG'["OK"
"RTN","A1AEUT4",160,0)
 Q
"RTN","A1AEUT4",161,0)
 ;
"RTN","A1AEUT4",162,0)
 ;
"RTN","A1AEUT4",163,0)
LOADINST N PM
"RTN","A1AEUT4",164,0)
 S PM="A1AE*1.0*9999980"
"RTN","A1AEUT4",165,0)
 D LDINST(9.7,PM) Q:ERRMSG'["OK"
"RTN","A1AEUT4",166,0)
 D LDINST(9.7,PM) Q:ERRMSG'["OK"
"RTN","A1AEUT4",167,0)
 Q
"RTN","A1AEUT4",168,0)
 ;
"RTN","A1AEUT4",169,0)
 ;
"RTN","A1AEUT4",170,0)
 ;
"RTN","A1AEUT4",171,0)
LDBLDS(KFILE,PM,PTCHARR) ;
"RTN","A1AEUT4",172,0)
 N A1AEKI,A1AEPM,DIERR,FDA,FIEN
"RTN","A1AEUT4",173,0)
 ;W !,"PM=",PM
"RTN","A1AEUT4",174,0)
 S FDA(3,KFILE,"?+1,",.01)=PM
"RTN","A1AEUT4",175,0)
 S FDA(3,KFILE,"?+1,",2)=0
"RTN","A1AEUT4",176,0)
 S FDA(3,KFILE,"?+1,",.02)=$$HTFM^XLFDT($H,1)
"RTN","A1AEUT4",177,0)
 S FDA(3,KFILE,"?+1,",5)="n"
"RTN","A1AEUT4",178,0)
 D UPDATE^DIE("","FDA(3)","FIEN")
"RTN","A1AEUT4",179,0)
 I $D(DIERR) D  Q
"RTN","A1AEUT4",180,0)
 . S ERRMSG="*** DIERR encountered while attempting to enter BUILDS!"
"RTN","A1AEUT4",181,0)
 S A1AEKI=+FIEN(1)
"RTN","A1AEUT4",182,0)
 I A1AEKI D  Q:$G(ERRMSG)'["OK"
"RTN","A1AEUT4",183,0)
 . N PTCHS S PTCHS=0
"RTN","A1AEUT4",184,0)
 . F  S PTCHS=$O(PTCHARR(PTCHS)) Q:'PTCHS  D  Q:$G(ERRMSG)'["OK"
"RTN","A1AEUT4",185,0)
 .. S A1AEPM=PTCHARR(PTCHS)
"RTN","A1AEUT4",186,0)
 .. D LDBLDS1(A1AEKI,A1AEPM,9.63)
"RTN","A1AEUT4",187,0)
 Q
"RTN","A1AEUT4",188,0)
 ;
"RTN","A1AEUT4",189,0)
LDBLDS1(A1AEKI,A1AEPM,KSFILE) ;
"RTN","A1AEUT4",190,0)
 N FDA,DIERR
"RTN","A1AEUT4",191,0)
 S FDA(3,KSFILE,"?+1,"_A1AEKI_",",.01)=A1AEPM
"RTN","A1AEUT4",192,0)
 D UPDATE^DIE("","FDA(3)","")
"RTN","A1AEUT4",193,0)
 I $D(DIERR) D  Q
"RTN","A1AEUT4",194,0)
 . S ERRMSG="*** DIERR encountered while entering MULTIPLE BUILDS!"
"RTN","A1AEUT4",195,0)
 Q
"RTN","A1AEUT4",196,0)
 ;
"RTN","A1AEUT4",197,0)
 ;
"RTN","A1AEUT4",198,0)
 ;
"RTN","A1AEUT4",199,0)
LDINST(KFILE,PM) ;
"RTN","A1AEUT4",200,0)
 N FDA,DIERR
"RTN","A1AEUT4",201,0)
 S FDA(3,KFILE,"+1,",.01)=PM
"RTN","A1AEUT4",202,0)
 S FDA(3,KFILE,"+1,",.02)=3
"RTN","A1AEUT4",203,0)
 S FDA(3,KFILE,"+1,",2)=$$HTFM^XLFDT($H)
"RTN","A1AEUT4",204,0)
 D UPDATE^DIE("","FDA(3)","")
"RTN","A1AEUT4",205,0)
 I $D(DIERR) D  Q
"RTN","A1AEUT4",206,0)
 . S ERRMSG="*** DIERR encountered while entering MULTIPLE INSTALLS!"
"RTN","A1AEUT4",207,0)
 Q
"RTN","A1AEUT4",208,0)
 ;
"RTN","A1AEUT4",209,0)
 ; Run post install subroutine which builds
"RTN","A1AEUT4",210,0)
 ;  the BUILD [#9.6] and INSTALL [#9.7] PAT [#19] multiple
"RTN","A1AEUT4",211,0)
RUNPOST ;
"RTN","A1AEUT4",212,0)
 N KIEN S KIEN=$O(^XPD(9.6,"B","A1AE*1.0*9999980",0))
"RTN","A1AEUT4",213,0)
 S BN="A1AE*1.0*9999980"
"RTN","A1AEUT4",214,0)
 N BMARR D A1AEP2A^A1AE2POS(BN,.BMARR,KIEN)
"RTN","A1AEUT4",215,0)
 Q
"RTN","A1AEUT4",216,0)
 ;
"RTN","A1AEUT4",217,0)
 ; **************** CHK BLD/INS INIT ENTRIES START
"RTN","A1AEUT4",218,0)
 ; Check BUILD's and INSTALL's entries Multiple Builds
"RTN","A1AEUT4",219,0)
 ; BUILDS (1st piece of A1AEP(n)=PM)
"RTN","A1AEUT4",220,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUT4",221,0)
 ;     A1AEP(1)
"RTN","A1AEUT4",222,0)
 ;     A1AE MUNITPOO 1.0
"RTN","A1AEUT4",223,0)
CHKIBENT() N BLDNM,MB,OK
"RTN","A1AEUT4",224,0)
 S BLDNM="A1AE*1.0*9999980"
"RTN","A1AEUT4",225,0)
 S MB(1)=$P(A1AEP(1),"^")
"RTN","A1AEUT4",226,0)
 S MB(1)="A1AE MUNITPOO 1.0"
"RTN","A1AEUT4",227,0)
 S OK=$$CHKB0(BLDNM,.MB)
"RTN","A1AEUT4",228,0)
 ;W !,"A1AE*1.0*9999980"," OK=",OK
"RTN","A1AEUT4",229,0)
 Q:OK
"RTN","A1AEUT4",230,0)
 ;
"RTN","A1AEUT4",231,0)
 ;   A1AE MUNITPOO 1.0
"RTN","A1AEUT4",232,0)
 ;     A1AE(2)-A1AE(8)
"RTN","A1AEUT4",233,0)
 S BLDNM="A1AE MUNITPOO 1.0"
"RTN","A1AEUT4",234,0)
 K MB N I F I=2:1:8 S MB(I)=$P(A1AEP(I),"^")
"RTN","A1AEUT4",235,0)
 S OK=$$CHKB0(BLDNM,.MB)
"RTN","A1AEUT4",236,0)
 ;W !,"A1AE MUNITPOO 1.0"," OK=",OK
"RTN","A1AEUT4",237,0)
 Q:OK OK
"RTN","A1AEUT4",238,0)
 ;
"RTN","A1AEUT4",239,0)
 ;   A1AE*1.0*9999981
"RTN","A1AEUT4",240,0)
 ;     A1AE(9)-A1AE(10)
"RTN","A1AEUT4",241,0)
 S BLDNM="A1AE*1.0*9999981"
"RTN","A1AEUT4",242,0)
 K MB N I F I=9:1:10 S MB(I)=$P(A1AEP(I),"^")
"RTN","A1AEUT4",243,0)
 S OK=$$CHKB0(BLDNM,.MB)
"RTN","A1AEUT4",244,0)
 ;W !,"A1AE*1.0*9999981"," OK=",OK
"RTN","A1AEUT4",245,0)
 Q:OK OK
"RTN","A1AEUT4",246,0)
 ;
"RTN","A1AEUT4",247,0)
 ; INSTALLS (1st piece of A1AEP(n)=PM)
"RTN","A1AEUT4",248,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUT4",249,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUT4",250,0)
 S OK=$$CHKI0("A1AE*1.0*9999980")
"RTN","A1AEUT4",251,0)
 ;W !,"A1AE*1.0*9999980 INSTALLS"," OK=",OK
"RTN","A1AEUT4",252,0)
 Q:'OK OK
"RTN","A1AEUT4",253,0)
 Q 1
"RTN","A1AEUT4",254,0)
 ;
"RTN","A1AEUT4",255,0)
 ; Check BUILD entry and Multiple Build entries OK
"RTN","A1AEUT4",256,0)
 ; ENTER
"RTN","A1AEUT4",257,0)
 ;   BLDNM  = BUILD name
"RTN","A1AEUT4",258,0)
 ;   MB   = Array of Multiple Builds associated
"RTN","A1AEUT4",259,0)
 ; EXIT
"RTN","A1AEUT4",260,0)
 ;   0 = all OK
"RTN","A1AEUT4",261,0)
 ;   1 = fail
"RTN","A1AEUT4",262,0)
CHKB0(BLDNM,MB) N A1AEI,BIEN,OK S OK=0
"RTN","A1AEUT4",263,0)
 S A1AEI=$O(^XPD(9.6,"B",BLDNM,0)) Q:'A1AEI A1AEI
"RTN","A1AEUT4",264,0)
 S BIEN=0 F  S BIEN=$O(MB(BIEN)) Q:'BIEN  D  Q:'OK
"RTN","A1AEUT4",265,0)
 . S OK=$O(^XPD(9.6,A1AEI,10,"B",MB(BIEN),0))
"RTN","A1AEUT4",266,0)
 Q:'OK 1  Q:'BIEN 0
"RTN","A1AEUT4",267,0)
 ;
"RTN","A1AEUT4",268,0)
 ; Check INSTALL entry OK
"RTN","A1AEUT4",269,0)
 ; ENTER
"RTN","A1AEUT4",270,0)
 ;   INSTNM  = INSTALL name
"RTN","A1AEUT4",271,0)
 ; EXIT
"RTN","A1AEUT4",272,0)
 ;   0 = all OK
"RTN","A1AEUT4",273,0)
 ;   1 = fail
"RTN","A1AEUT4",274,0)
CHKI0(INSTNM) ;
"RTN","A1AEUT4",275,0)
 Q:$O(^XPD(9.7,"B",INSTNM,0)) 0
"RTN","A1AEUT4",276,0)
 Q 1
"RTN","A1AEUT4",277,0)
 ; **************** CHK BLD/INS INIT ENTRIES END
"RTN","A1AEUT4",278,0)
 ;
"RTN","A1AEUT4",279,0)
 ;
"RTN","A1AEUT4",280,0)
 ; **************** CHK BLD/INS FOR PAT START
"RTN","A1AEUT4",281,0)
CHKIBPAT() ;
"RTN","A1AEUT4",282,0)
 ; Check BUILD's and INSTALL's entries for PAT
"RTN","A1AEUT4",283,0)
 ; BUILDS (1st piece of A1AEP(n)=PM)
"RTN","A1AEUT4",284,0)
 ; INSTALLS (2nd piece of A1AEP(n)=A1AEPI (IEN 11005)
"RTN","A1AEUT4",285,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUT4",286,0)
 ;     A1AEP(1)
"RTN","A1AEUT4",287,0)
 ;     A1AE MUNITPOO 1.0
"RTN","A1AEUT4",288,0)
 N FILENBR,BINAME,PTCHS
"RTN","A1AEUT4",289,0)
 S FILENBR=9.6
"RTN","A1AEUT4",290,0)
 S BINAME="A1AE*1.0*9999980"
"RTN","A1AEUT4",291,0)
 N I F I=1:1:8 S PTCHS(I)=+$P(A1AEP(1),"^",2)
"RTN","A1AEUT4",292,0)
 S OK=$$CHKIBP(FILENBR,BINAME,.PTCHS)
"RTN","A1AEUT4",293,0)
 ;W !,"A1AE*1.0*9999980 PAT BLD","OK=",OK
"RTN","A1AEUT4",294,0)
 Q:ERRMSG'["OK" 1
"RTN","A1AEUT4",295,0)
 ;
"RTN","A1AEUT4",296,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUT4",297,0)
 ;     A1AEP(1)
"RTN","A1AEUT4",298,0)
 ;     A1AE MUNITPOO 1.0
"RTN","A1AEUT4",299,0)
 S FILENBR=9.7
"RTN","A1AEUT4",300,0)
 S BINAME="A1AE*1.0*9999980"
"RTN","A1AEUT4",301,0)
 K PTCHS F I=1:1:8 S PTCHS(I)=+$P(A1AEP(1),"^",2)
"RTN","A1AEUT4",302,0)
 S OK=$$CHKIBP(FILENBR,BINAME,.PTCHS)
"RTN","A1AEUT4",303,0)
 ;W !,"A1AE*1.0*9999980 PAT INSTS","OK=",OK
"RTN","A1AEUT4",304,0)
 Q:ERRMSG'["OK" 1
"RTN","A1AEUT4",305,0)
 ;
"RTN","A1AEUT4",306,0)
 ;   A1AE MUNITPOO 1.0
"RTN","A1AEUT4",307,0)
 ;     A1AE(2)-A1AE(8)
"RTN","A1AEUT4",308,0)
 S FILENBR=9.6
"RTN","A1AEUT4",309,0)
 S BINAME="A1AE MUNITPOO 1.0"
"RTN","A1AEUT4",310,0)
 K PTCHS F I=2:1:8 S PTCHS(I)=+$P(A1AEP(1),"^",2)
"RTN","A1AEUT4",311,0)
 S OK=$$CHKIBP(FILENBR,BINAME,.PTCHS)
"RTN","A1AEUT4",312,0)
 ;W !,"A1AE MUNITPOO 1.0 PAT BLD","OK=",OK
"RTN","A1AEUT4",313,0)
 Q:ERRMSG'["OK" 1
"RTN","A1AEUT4",314,0)
 ;
"RTN","A1AEUT4",315,0)
 ;   A1AE*1.0*9999981
"RTN","A1AEUT4",316,0)
 ;     A1AE(9)-A1AE(10)
"RTN","A1AEUT4",317,0)
 S FILENBR=9.6
"RTN","A1AEUT4",318,0)
 S BINAME="A1AE*1.0*9999981"
"RTN","A1AEUT4",319,0)
 S PTCHS(9)=$P(A1AEP(9),"^")
"RTN","A1AEUT4",320,0)
 S OK=$$CHKIBP(FILENBR,BINAME,.PTCHS)
"RTN","A1AEUT4",321,0)
 ;W !,"A1AE*1.0*9999981 PAT BLD","OK=",OK
"RTN","A1AEUT4",322,0)
 Q:ERRMSG'["OK" 1
"RTN","A1AEUT4",323,0)
 Q 0
"RTN","A1AEUT4",324,0)
 ;
"RTN","A1AEUT4",325,0)
 ; Check INSTALL/BUILD entry PAT multiples OK
"RTN","A1AEUT4",326,0)
 ; ENTER
"RTN","A1AEUT4",327,0)
 ;   BINAME = BUILD/INSTALL name
"RTN","A1AEUT4",328,0)
 ;   PTCHS  = Array of Patches IEN's associated
"RTN","A1AEUT4",329,0)
 ;   FILENB = 9.6 for BUILD, 9.7 for INSTALL
"RTN","A1AEUT4",330,0)
 ; EXIT
"RTN","A1AEUT4",331,0)
 ;   0 = all OK
"RTN","A1AEUT4",332,0)
 ;   1 = fail
"RTN","A1AEUT4",333,0)
CHKIBP(FILENBR,BINAME,PTCHS) N A1AEI,BIEN,OK S OK=0
"RTN","A1AEUT4",334,0)
 S A1AEI=$O(^XPD(FILENBR,"B",BINAME,0)) Q:'A1AEI A1AEI
"RTN","A1AEUT4",335,0)
 S BIEN=0 F  S BIEN=$O(PTCHS(BIEN)) Q:'BIEN  D  Q:'OK
"RTN","A1AEUT4",336,0)
 . S OK=$O(^XPD(FILENBR,A1AEI,"PAT","B",PTCHS(BIEN),0))
"RTN","A1AEUT4",337,0)
 Q:'OK 1  Q:'BIEN 0
"RTN","A1AEUT4",338,0)
 ; **************** CHK BLD/INS FOR PAT END
"RTN","A1AEUT4",339,0)
 ;
"RTN","A1AEUT4",340,0)
 ;
"RTN","A1AEUT4",341,0)
XTENT ;
"RTN","A1AEUT4",342,0)
 ;;UTP0;Testing post install setting 9.6, 9.7 PAT multiple
"RTN","A1AEUT4",343,0)
 Q
"RTN","A1AEUT4",344,0)
EOR ; end of routine A1AEUT4
"RTN","A1AEUTL")
0^40^B268932974
"RTN","A1AEUTL",1,0)
A1AEUTL ;ven/toad-patch tools ;2015-07-27  7:58 PM
"RTN","A1AEUTL",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUTL",3,0)
 ; (c) VISTA Expertise Network
"RTN","A1AEUTL",4,0)
 ;
"RTN","A1AEUTL",5,0)
 ; ***** COMMENTS IN A1AEUTLC ****
"RTN","A1AEUTL",6,0)
 ;
"RTN","A1AEUTL",7,0)
SEQ ; get & set sequence #
"RTN","A1AEUTL",8,0)
 ; called by:
"RTN","A1AEUTL",9,0)
 ;   C^A1AEPHS
"RTN","A1AEUTL",10,0)
 ;   S2R2^A1AEPHS
"RTN","A1AEUTL",11,0)
 ; input:
"RTN","A1AEUTL",12,0)
 ;   DA  =  IEN into DHCP PATCHES [#11005] file
"RTN","A1AEUTL",13,0)
 ;
"RTN","A1AEUTL",14,0)
 ; stream logic here, second trail
"RTN","A1AEUTL",15,0)
 ; sequence number is sensitive to patch stream
"RTN","A1AEUTL",16,0)
 ;
"RTN","A1AEUTL",17,0)
 N A1AESTRM S A1AESTRM=$$GSTRMP(DA)
"RTN","A1AEUTL",18,0)
 ; If the lookup fails fall back on looking at field primary? field in
"RTN","A1AEUTL",19,0)
 ; file dhcp patch stream (11007.1)
"RTN","A1AEUTL",20,0)
 S:'$G(A1AESTRM) A1AESTRM=$$PRIMSTRM()
"RTN","A1AEUTL",21,0)
 L +^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR"):60
"RTN","A1AEUTL",22,0)
 ; 1st seq # is stream number - 1, under stream
"RTN","A1AEUTL",23,0)
 ; use old stream sequence number if no previous
"RTN","A1AEUTL",24,0)
 S SEQ=$G(^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR"))
"RTN","A1AEUTL",25,0)
 I +SEQ=0 D
"RTN","A1AEUTL",26,0)
 . N ISEQ
"RTN","A1AEUTL",27,0)
 . ; get old value for VA FOIA:
"RTN","A1AEUTL",28,0)
 . S ISEQ=$G(^A1AE(11007,A1AEPKIF,"V",A1AEVR,"PR"))
"RTN","A1AEUTL",29,0)
 . ; and if greater than new style set new style to it:
"RTN","A1AEUTL",30,0)
 . I ISEQ>$G(^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,1,"PR")) D
"RTN","A1AEUTL",31,0)
 . . S ^("PR")=ISEQ
"RTN","A1AEUTL",32,0)
 . . Q
"RTN","A1AEUTL",33,0)
 . ; set for va foia as original stream:
"RTN","A1AEUTL",34,0)
 . S ISEQ=$G(^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,1,"PR"))
"RTN","A1AEUTL",35,0)
 . ; set sequence number 1 above the current sequence number
"RTN","A1AEUTL",36,0)
 . ; and finish splitting the stream for the package:
"RTN","A1AEUTL",37,0)
 . I A1AESTRM'=1 D
"RTN","A1AEUTL",38,0)
 . . S PATCHID=$P(^A1AE(11005,DA,0),U)
"RTN","A1AEUTL",39,0)
 . . S PATCHID=$P(PATCHID,"*",1,2)_"*"_A1AESTRM
"RTN","A1AEUTL",40,0)
 . . S DAIEN=$O(^A1AE(11005,"B",PATCHID,"")) I DAIEN'>0 D
"RTN","A1AEUTL",41,0)
 . . . ; create info-only patch for stream:
"RTN","A1AEUTL",42,0)
 . . . D SETPACKG^A1AESPLT(A1AEPKIF,A1AEVR,A1AESTRM)
"RTN","A1AEUTL",43,0)
 . . . S DAIEN=$O(^A1AE(11005,"B",PATCHID,""))
"RTN","A1AEUTL",44,0)
 . . . Q
"RTN","A1AEUTL",45,0)
 . . S SEQ=ISEQ+1 D RELSSTRM^A1AESPLT(DAIEN,A1AEPKIF,A1AEVR,SEQ)
"RTN","A1AEUTL",46,0)
 . . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR")=SEQ
"RTN","A1AEUTL",47,0)
 . . Q
"RTN","A1AEUTL",48,0)
 . Q
"RTN","A1AEUTL",49,0)
 S SEQ=SEQ+1,^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR")=SEQ
"RTN","A1AEUTL",50,0)
 ;
"RTN","A1AEUTL",51,0)
 I A1AENEW="v" D
"RTN","A1AEUTL",52,0)
 . S $P(^A1AE(11005,DA,0),"^",6)=SEQ
"RTN","A1AEUTL",53,0)
 ;
"RTN","A1AEUTL",54,0)
 L -^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR")
"RTN","A1AEUTL",55,0)
 ;
"RTN","A1AEUTL",56,0)
 QUIT  ; end of SEQ
"RTN","A1AEUTL",57,0)
 ;
"RTN","A1AEUTL",58,0)
 ;
"RTN","A1AEUTL",59,0)
DELSEQ ; delete sequence #
"RTN","A1AEUTL",60,0)
 ; called by:
"RTN","A1AEUTL",61,0)
 ;   C^A1AEPHS
"RTN","A1AEUTL",62,0)
 ;   S2R2^A1AEPHS
"RTN","A1AEUTL",63,0)
 ;   RELSSTRM^A1AESPLT
"RTN","A1AEUTL",64,0)
 ;   (if mail message generate fails)
"RTN","A1AEUTL",65,0)
 ; input:
"RTN","A1AEUTL",66,0)
 ;   DA  =  IEN into DHCP PATCHES [#11005] file
"RTN","A1AEUTL",67,0)
 ; output:
"RTN","A1AEUTL",68,0)
 ;   rolls back SEQUENCE NUMBER field in 11007
"RTN","A1AEUTL",69,0)
 ;
"RTN","A1AEUTL",70,0)
 ; sequence # uses correct patch stream
"RTN","A1AEUTL",71,0)
 ;
"RTN","A1AEUTL",72,0)
 ; DA into 11005 should be available
"RTN","A1AEUTL",73,0)
 N A1AESTRM S A1AESTRM=$$GSTRMP($G(DA))
"RTN","A1AEUTL",74,0)
 I 'A1AESTRM D
"RTN","A1AEUTL",75,0)
 . S A1AESTRM=$$PRIMSTRM()
"RTN","A1AEUTL",76,0)
 . Q
"RTN","A1AEUTL",77,0)
 L +^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR"):60
"RTN","A1AEUTL",78,0)
 I $D(^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR")),^("PR") D
"RTN","A1AEUTL",79,0)
 . S ^("PR")=^("PR")-1
"RTN","A1AEUTL",80,0)
 . Q
"RTN","A1AEUTL",81,0)
 L -^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR")
"RTN","A1AEUTL",82,0)
 ;
"RTN","A1AEUTL",83,0)
 QUIT  ; end of DELSEQ
"RTN","A1AEUTL",84,0)
 ;
"RTN","A1AEUTL",85,0)
 ;
"RTN","A1AEUTL",86,0)
IN ; input transform for field .01 in file 11005
"RTN","A1AEUTL",87,0)
 ; called from the input transform file 11005, field .01
"RTN","A1AEUTL",88,0)
 N X1,X2
"RTN","A1AEUTL",89,0)
 S X1=$P(X,"*",1)
"RTN","A1AEUTL",90,0)
 I X1']""!'($P(X,"*",2)=+$P(X,"*",2)) D  Q
"RTN","A1AEUTL",91,0)
 . K X
"RTN","A1AEUTL",92,0)
 . Q
"RTN","A1AEUTL",93,0)
 S X2=$O(^DIC(9.4,"C",X1,0))
"RTN","A1AEUTL",94,0)
 I 'X2 D  Q
"RTN","A1AEUTL",95,0)
 . W !?3,"'",X1,"' is not a valid namespace"
"RTN","A1AEUTL",96,0)
 . K X
"RTN","A1AEUTL",97,0)
 . Q
"RTN","A1AEUTL",98,0)
 ;
"RTN","A1AEUTL",99,0)
 ; if this is not a forum site we do not need the rest of
"RTN","A1AEUTL",100,0)
 ; this input transform
"RTN","A1AEUTL",101,0)
 ;
"RTN","A1AEUTL",102,0)
 N PRIM S PRIM=+$O(^A1AE(11007.1,"APRIM",1,0))
"RTN","A1AEUTL",103,0)
 N FMAIL S FMAIL=$$GET1^DIQ(4.3,"1,",.01)
"RTN","A1AEUTL",104,0)
 Q:FMAIL=""
"RTN","A1AEUTL",105,0)
 Q:'$D(^A1AE(11007.1,"AFORUM",FMAIL,PRIM))
"RTN","A1AEUTL",106,0)
 ;
"RTN","A1AEUTL",107,0)
 I '$D(^A1AE(11007,"B",X2)) D  Q
"RTN","A1AEUTL",108,0)
 . W !?3,"'",X1
"RTN","A1AEUTL",109,0)
 . W "' is not a package in the 'DHCP Patch/Problem' file"
"RTN","A1AEUTL",110,0)
 . K X
"RTN","A1AEUTL",111,0)
 . Q
"RTN","A1AEUTL",112,0)
 I '$D(A1AETY) D  Q
"RTN","A1AEUTL",113,0)
 . W !?3,"Please use the Edit Template."
"RTN","A1AEUTL",114,0)
 . K X
"RTN","A1AEUTL",115,0)
 . Q
"RTN","A1AEUTL",116,0)
 I A1AETY="PH",'$D(^A1AE(11007,X2,"V",+$P(X,"*",2),0)) D  Q
"RTN","A1AEUTL",117,0)
 . W !?3,"'",$P(X,"*",2)
"RTN","A1AEUTL",118,0)
 . W "' is not a valid version number for this package"
"RTN","A1AEUTL",119,0)
 . K X
"RTN","A1AEUTL",120,0)
 . Q
"RTN","A1AEUTL",121,0)
 I A1AETY="PK",$D(^A1AE(11007,X2,"V",+$P(X,"*",2))) D  Q
"RTN","A1AEUTL",122,0)
 . W !,?3,"'",$P(X,"*",2)
"RTN","A1AEUTL",123,0)
 . W "' is not a new package version."
"RTN","A1AEUTL",124,0)
 . K X
"RTN","A1AEUTL",125,0)
 . Q
"RTN","A1AEUTL",126,0)
 ; check for A1AE IMPORT besides the user
"RTN","A1AEUTL",127,0)
 N A1AEIMP S A1AEIMP=$D(^XUSEC("A1AE IMPORT",DUZ))
"RTN","A1AEUTL",128,0)
 I '$D(^A1AE(11007,X2,$S(A1AEX=11005:"PH",1:"PB"),DUZ,0)),'A1AEIMP D  Q
"RTN","A1AEUTL",129,0)
 . W !?3,"You are not an authorized user"
"RTN","A1AEUTL",130,0)
 . K X
"RTN","A1AEUTL",131,0)
 . Q
"RTN","A1AEUTL",132,0)
 I $D(^A1AE(A1AEX,"B",X)) D  Q
"RTN","A1AEUTL",133,0)
 . W !?3,"Another error designation with the '"
"RTN","A1AEUTL",134,0)
 . W X,"' specification already exists"
"RTN","A1AEUTL",135,0)
 . K X
"RTN","A1AEUTL",136,0)
 . Q
"RTN","A1AEUTL",137,0)
 ;
"RTN","A1AEUTL",138,0)
 QUIT  ;  end of IN-FORUM
"RTN","A1AEUTL",139,0)
 ;
"RTN","A1AEUTL",140,0)
 ;
"RTN","A1AEUTL",141,0)
PKG ; select a patch/problem package
"RTN","A1AEUTL",142,0)
 ; called throughout patch module
"RTN","A1AEUTL",143,0)
 ;
"RTN","A1AEUTL",144,0)
 K A1AEPKIF,A1AEPK
"RTN","A1AEUTL",145,0)
 S DIC("A")="Select PACKAGE: "
"RTN","A1AEUTL",146,0)
 S DIC="^A1AE(11007,"
"RTN","A1AEUTL",147,0)
 S DIC(0)=$S($D(A1AE(0)):A1AE(0),1:"AEMQZ")
"RTN","A1AEUTL",148,0)
 W !
"RTN","A1AEUTL",149,0)
 D ^DIC
"RTN","A1AEUTL",150,0)
 K DIC,A1AE(0)
"RTN","A1AEUTL",151,0)
 Q:Y<0
"RTN","A1AEUTL",152,0)
 S A1AEPKIF=+Y
"RTN","A1AEUTL",153,0)
 I $D(^DIC(9.4,A1AEPKIF,0)) D
"RTN","A1AEUTL",154,0)
 . S A1AEPKNM=$P(^(0),"^",1)
"RTN","A1AEUTL",155,0)
 . S A1AEPK=$P(^(0),"^",2)
"RTN","A1AEUTL",156,0)
 . Q
"RTN","A1AEUTL",157,0)
 ;
"RTN","A1AEUTL",158,0)
 QUIT  ; end of PKG
"RTN","A1AEUTL",159,0)
 ;
"RTN","A1AEUTL",160,0)
 ;
"RTN","A1AEUTL",161,0)
VER ; select an application version
"RTN","A1AEUTL",162,0)
 ; called throughout patch module
"RTN","A1AEUTL",163,0)
 ;
"RTN","A1AEUTL",164,0)
 F A1AEVR=0:0 D  Q:'A1AEVR
"RTN","A1AEUTL",165,0)
 . S A1AEVR=$O(^A1AE(11007,A1AEPKIF,"V",A1AEVR))
"RTN","A1AEUTL",166,0)
 . Q:'A1AEVR
"RTN","A1AEUTL",167,0)
 . Q:A1AEVR=999
"RTN","A1AEUTL",168,0)
 . S DIC("B")=A1AEVR
"RTN","A1AEUTL",169,0)
 I '$D(^A1AE(11007,A1AEPKIF,"V",0)) D
"RTN","A1AEUTL",170,0)
 . S ^(0)="^11007.01I^^"
"RTN","A1AEUTL",171,0)
 . Q
"RTN","A1AEUTL",172,0)
 K A1AEVR
"RTN","A1AEUTL",173,0)
 S DA=A1AEPKIF
"RTN","A1AEUTL",174,0)
 S DIC="^A1AE(11007,A1AEPKIF,""V"","
"RTN","A1AEUTL",175,0)
 S DIC(0)=$S($D(A1AE(0)):A1AE(0),1:"AEQ")
"RTN","A1AEUTL",176,0)
 D ^DIC
"RTN","A1AEUTL",177,0)
 S:Y>0 A1AEVR=+Y
"RTN","A1AEUTL",178,0)
 K DIC,A1AE(0)
"RTN","A1AEUTL",179,0)
 ;
"RTN","A1AEUTL",180,0)
 QUIT  ; end of VER
"RTN","A1AEUTL",181,0)
 ;
"RTN","A1AEUTL",182,0)
 ;
"RTN","A1AEUTL",183,0)
NUM ; SEE Comments
"RTN","A1AEUTL",184,0)
 ; get primary stream & lock:
"RTN","A1AEUTL",185,0)
 N A1AESTRM S A1AESTRM=$$PRIMSTRM ; get primary stream
"RTN","A1AEUTL",186,0)
 L +^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY):3 E  D  Q  ; lock
"RTN","A1AEUTL",187,0)
 . W $C(7),!!,"Someone else is adding a patch at the moment."
"RTN","A1AEUTL",188,0)
 . W !,"Please try again later."
"RTN","A1AEUTL",189,0)
 . Q
"RTN","A1AEUTL",190,0)
 ;
"RTN","A1AEUTL",191,0)
 D NUMINIT(A1AEPKIF,A1AEVR,A1AESTRM,"PB","A1AEPB") ; init next problem #
"RTN","A1AEUTL",192,0)
 D NUMINIT(A1AEPKIF,A1AEVR,A1AESTRM,"PH","A1AEPH") ; init next patch #
"RTN","A1AEUTL",193,0)
 ;
"RTN","A1AEUTL",194,0)
 ; get number & unlock:
"RTN","A1AEUTL",195,0)
 S $P(^A1AE(11007,A1AEPKIF,"V",0),U,3)=A1AEVR
"RTN","A1AEUTL",196,0)
 S A1AENB=^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,A1AETY)
"RTN","A1AEUTL",197,0)
 L -^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY) ; unlock
"RTN","A1AEUTL",198,0)
 ;
"RTN","A1AEUTL",199,0)
 D SETNUM ; get & set last # and create stub record
"RTN","A1AEUTL",200,0)
 ;
"RTN","A1AEUTL",201,0)
 QUIT  ; end of NUM
"RTN","A1AEUTL",202,0)
 ;
"RTN","A1AEUTL",203,0)
 ;
"RTN","A1AEUTL",204,0)
NUMINIT(A1AEPKIF,A1AEVR,A1AESTRM,A1AETY,A1AEVAR) ; See comments
"RTN","A1AEUTL",205,0)
 ; 1. ensure next # defined for application version
"RTN","A1AEUTL",206,0)
 ;
"RTN","A1AEUTL",207,0)
 ; if next patch/problem # is not yet defined for this app version
"RTN","A1AEUTL",208,0)
 I '$D(^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY)) D
"RTN","A1AEUTL",209,0)
 . ; then initialize next patch/problem number by primary stream
"RTN","A1AEUTL",210,0)
 . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY)=A1AESTRM
"RTN","A1AEUTL",211,0)
 . Q
"RTN","A1AEUTL",212,0)
 ;
"RTN","A1AEUTL",213,0)
 ; 2. ensure next # defined for foia vista patch stream
"RTN","A1AEUTL",214,0)
 ;
"RTN","A1AEUTL",215,0)
 ; if next # for this app version for foia vista is not defined
"RTN","A1AEUTL",216,0)
 I '$D(^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,1,A1AETY)) D
"RTN","A1AEUTL",217,0)
 . ; we initialize next # for foia vista (next # = 1)
"RTN","A1AEUTL",218,0)
 . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,1,A1AETY)=1
"RTN","A1AEUTL",219,0)
 . Q
"RTN","A1AEUTL",220,0)
 ;
"RTN","A1AEUTL",221,0)
 ; 3. ensure next # defined for current patch stream
"RTN","A1AEUTL",222,0)
 ;
"RTN","A1AEUTL",223,0)
 ; if next # for this app version for current stream isn't defined
"RTN","A1AEUTL",224,0)
 I '$D(^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,A1AETY)) D
"RTN","A1AEUTL",225,0)
 . ; if this is a patch, then we must be splitting the app-version's
"RTN","A1AEUTL",226,0)
 . ; stream for the first time, so we need to:
"RTN","A1AEUTL",227,0)
 . I A1AETY="PH" D  ; create the info-only patch for split stream:
"RTN","A1AEUTL",228,0)
 . . D SETPACKG^A1AESPLT(A1AEPKIF,A1AEVR,A1AESTRM)
"RTN","A1AEUTL",229,0)
 . . Q
"RTN","A1AEUTL",230,0)
 . ; we initialize next # based for the current stream (e.g., 10001)
"RTN","A1AEUTL",231,0)
 . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,A1AETY)=A1AESTRM
"RTN","A1AEUTL",232,0)
 . Q
"RTN","A1AEUTL",233,0)
 ;
"RTN","A1AEUTL",234,0)
 ; 4. get next # based on current patch stream
"RTN","A1AEUTL",235,0)
 ;
"RTN","A1AEUTL",236,0)
 ; e.g., set A1AEPH based on PH node for current stream
"RTN","A1AEUTL",237,0)
 S @A1AEVAR=^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,A1AETY)
"RTN","A1AEUTL",238,0)
 ;
"RTN","A1AEUTL",239,0)
 ; 5. ensure next # is within range for current stream
"RTN","A1AEUTL",240,0)
 ;
"RTN","A1AEUTL",241,0)
 ; if next # is outside the range for current stream
"RTN","A1AEUTL",242,0)
 ; I (A1AEPH<A1AESTRM)!(A1AEPH>(A1AESTRM+999)) D  ; JLI 150607 commented out A1AEPH undefined
"RTN","A1AEUTL",243,0)
 I (@A1AEVAR<A1AESTRM)!(@A1AEVAR>(A1AESTRM+999)) D  ; JLI 150607 replaces previous line
"RTN","A1AEUTL",244,0)
 . ; reset current stream's next # to start of range
"RTN","A1AEUTL",245,0)
 . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,A1AETY)=A1AESTRM
"RTN","A1AEUTL",246,0)
 . ; and get next # based on that
"RTN","A1AEUTL",247,0)
 . S @A1AEVAR=A1AESTRM
"RTN","A1AEUTL",248,0)
 . Q
"RTN","A1AEUTL",249,0)
 ;
"RTN","A1AEUTL",250,0)
 QUIT  ; end of NUMINIT
"RTN","A1AEUTL",251,0)
 ;
"RTN","A1AEUTL",252,0)
 ;
"RTN","A1AEUTL",253,0)
 ; The logic under NUM always assigns the original form of PH and PB
"RTN","A1AEUTL",254,0)
 ; values to the stream number, with the ones that now are broken out
"RTN","A1AEUTL",255,0)
 ; under the streams, the code checked for whether the ones under VA
"RTN","A1AEUTL",256,0)
 ; FOIA existed or not, and if not set them to that value.  Well for a
"RTN","A1AEUTL",257,0)
 ; new version, which doesn't have a VA FOIA equivalent, this ended up
"RTN","A1AEUTL",258,0)
 ; setting the VA FOIA to the stream value for the other stream...
"RTN","A1AEUTL",259,0)
 ; So, yes, it needs to be changed.
"RTN","A1AEUTL",260,0)
 ;
"RTN","A1AEUTL",261,0)
 ;
"RTN","A1AEUTL",262,0)
SETNUM ; get & set last number & create stub record
"RTN","A1AEUTL",263,0)
 ;private;procedure
"RTN","A1AEUTL",264,0)
 ; called by:
"RTN","A1AEUTL",265,0)
 ;   SETNUM
"RTN","A1AEUTL",266,0)
 ;   ADDPATCH^A1AEK2M0: importing patches
"RTN","A1AEUTL",267,0)
 ; input:
"RTN","A1AEUTL",268,0)
 ;   A1AEPK = application prefix
"RTN","A1AEUTL",269,0)
 ;   A1AEVR = version #
"RTN","A1AEUTL",270,0)
 ;   A1AENB = patch/problem #
"RTN","A1AEUTL",271,0)
 ;   A1AEFL = file to update (11005)
"RTN","A1AEUTL",272,0)
 ; output:
"RTN","A1AEUTL",273,0)
 ;   DA = new patch/problem record #
"RTN","A1AEUTL",274,0)
 ;   A1AEPD = new patch's ID
"RTN","A1AEUTL",275,0)
 ; sets last # using new ab index
"RTN","A1AEUTL",276,0)
 ;
"RTN","A1AEUTL",277,0)
 ; a. retrieve primary patch stream, if missing
"RTN","A1AEUTL",278,0)
 ;
"RTN","A1AEUTL",279,0)
 ; if called from ADDPATCH^A1AEK2M0, init primary stream
"RTN","A1AEUTL",280,0)
 I '$D(A1AESTRM) N A1AESTRM D
"RTN","A1AEUTL",281,0)
 . S A1AESTRM=$$PRIMSTRM
"RTN","A1AEUTL",282,0)
 . Q
"RTN","A1AEUTL",283,0)
 ;
"RTN","A1AEUTL",284,0)
 ; b. set patch/problem id for new patch/problem
"RTN","A1AEUTL",285,0)
 ;
"RTN","A1AEUTL",286,0)
 ; patch laygo lookup value, e.g., ZZZ*2*next #
"RTN","A1AEUTL",287,0)
 N X S X=A1AEPK_"*"_A1AEVR_"*"_A1AENB ; set draft patch/problem id
"RTN","A1AEUTL",288,0)
 ; for passing into SETNUM1, as input to its ^DIC call
"RTN","A1AEUTL",289,0)
 ;
"RTN","A1AEUTL",290,0)
 ; if version has patches/problems
"RTN","A1AEUTL",291,0)
 I $D(^A1AE(A1AEFL,"AB",A1AEPK,A1AEVR)) D
"RTN","A1AEUTL",292,0)
 . ; get last patch/problem in stream (greatest number)
"RTN","A1AEUTL",293,0)
 . N XEND S XEND=$O(^A1AE(A1AEFL,"AB",A1AEPK,A1AEVR,A1AESTRM+990),-1)
"RTN","A1AEUTL",294,0)
 . ; nb use above of 990 instead of 999; that's to leave room for
"RTN","A1AEUTL",295,0)
 . ; utility patches, like XU*8*991, which are not actually part of the
"RTN","A1AEUTL",296,0)
 . ; main VA FOIA patch stream and should not be involved in the
"RTN","A1AEUTL",297,0)
 . ; last-patch calculation.
"RTN","A1AEUTL",298,0)
 . I XEND<A1AENB ; if our number is >= greatest, ok
"RTN","A1AEUTL",299,0)
 . E  D  ; else our patch is one greater than greatest
"RTN","A1AEUTL",300,0)
 . . S A1AENB=XEND+1 ; move next #
"RTN","A1AEUTL",301,0)
 . . S $P(X,"*",3)=A1AENB ; and update laygo lookup value
"RTN","A1AEUTL",302,0)
 . . Q
"RTN","A1AEUTL",303,0)
 ;
"RTN","A1AEUTL",304,0)
 ; c. create stub record
"RTN","A1AEUTL",305,0)
 ;
"RTN","A1AEUTL",306,0)
 N Y ; unneeded output from SETNUM1's ^DIC call
"RTN","A1AEUTL",307,0)
 D SETNUM1 ; create patch/problem stub record with new #
"RTN","A1AEUTL",308,0)
 ;
"RTN","A1AEUTL",309,0)
 ; d. update version & stream's next #
"RTN","A1AEUTL",310,0)
 ;
"RTN","A1AEUTL",311,0)
 I Y>0 D  ; if laygo lookup worked, update the last used
"RTN","A1AEUTL",312,0)
 . ; try lock for 1 sec, otherwise, quit. acuracy not that important
"RTN","A1AEUTL",313,0)
 . L +^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY):1 E  Q
"RTN","A1AEUTL",314,0)
 . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY)=A1AENB+1 ; set next #
"RTN","A1AEUTL",315,0)
 . ; and set it at the stream level as well:
"RTN","A1AEUTL",316,0)
 . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,$$PRIMSTRM,A1AETY)=A1AENB+1
"RTN","A1AEUTL",317,0)
 . L -^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY) ; unlock
"RTN","A1AEUTL",318,0)
 ;
"RTN","A1AEUTL",319,0)
 QUIT  ; end of SETNUM
"RTN","A1AEUTL",320,0)
 ;
"RTN","A1AEUTL",321,0)
 ;
"RTN","A1AEUTL",322,0)
SETNUM1 ; create patch/problem stub record
"RTN","A1AEUTL",323,0)
 ;private;procedure;not especially clean;silent;sac-compliant
"RTN","A1AEUTL",324,0)
 ; called by:
"RTN","A1AEUTL",325,0)
 ;   SETNUM
"RTN","A1AEUTL",326,0)
 ;   ADDPATCH^A1AEK2M0: importing patches
"RTN","A1AEUTL",327,0)
 ; input:
"RTN","A1AEUTL",328,0)
 ;   A1AEFL = file to update (11005)
"RTN","A1AEUTL",329,0)
 ;   A1AENB = new patch # to assign
"RTN","A1AEUTL",330,0)
 ;   A1AEPKIF = new patch's package namespace
"RTN","A1AEUTL",331,0)
 ;   A1AEVR = new patch's version #
"RTN","A1AEUTL",332,0)
 ;   X = new patch's ID
"RTN","A1AEUTL",333,0)
 ; output:
"RTN","A1AEUTL",334,0)
 ;   DA = new patch's record #
"RTN","A1AEUTL",335,0)
 ;   A1AEPD = new patch's ID
"RTN","A1AEUTL",336,0)
 ;   Y = new patch's record #
"RTN","A1AEUTL",337,0)
 ;
"RTN","A1AEUTL",338,0)
 S DIC="^A1AE(A1AEFL," ; either patch (11005) or problem (11006) file
"RTN","A1AEUTL",339,0)
 S DIC(0)=$G(DIC(0),"LE") ; laygo, echo, unless already defined
"RTN","A1AEUTL",340,0)
 D ^DIC ; do laygo lookup
"RTN","A1AEUTL",341,0)
 Q:Y<0
"RTN","A1AEUTL",342,0)
 S DA=+Y
"RTN","A1AEUTL",343,0)
 S A1AEPD=$P(Y,U,2) ; patch/problem id
"RTN","A1AEUTL",344,0)
 S $P(^A1AE(A1AEFL,DA,0),U,2,4)=A1AEPKIF_U_A1AEVR_U_A1AENB ; stub record
"RTN","A1AEUTL",345,0)
 S ^A1AE(A1AEFL,"D",A1AEPKIF,DA)="" ; ensure D index entry is made
"RTN","A1AEUTL",346,0)
 ;
"RTN","A1AEUTL",347,0)
 QUIT  ; end of SETNUM1
"RTN","A1AEUTL",348,0)
 ;
"RTN","A1AEUTL",349,0)
 ;
"RTN","A1AEUTL",350,0)
PRT ; print field record printed by
"RTN","A1AEUTL",351,0)
 ; Called by last line of print template A1AE STANDARD PRINT
"RTN","A1AEUTL",352,0)
 ;
"RTN","A1AEUTL",353,0)
 L +^A1AE(11005,D0,2):60
"RTN","A1AEUTL",354,0)
 ;
"RTN","A1AEUTL",355,0)
 I '$D(^A1AE(11005,D0,2,0)) D
"RTN","A1AEUTL",356,0)
 . S ^(0)="^11005.02P^^"
"RTN","A1AEUTL",357,0)
 . Q
"RTN","A1AEUTL",358,0)
 I '$D(^A1AE(11005,D0,2,DUZ,0)) D
"RTN","A1AEUTL",359,0)
 . S $P(^(0),U,1,2)=DUZ_"^"_DT
"RTN","A1AEUTL",360,0)
 . S $P(^(0),U,4)=$P(^A1AE(11005,D0,2,0),U,4)+1
"RTN","A1AEUTL",361,0)
 . Q
"RTN","A1AEUTL",362,0)
 S $P(^A1AE(11005,D0,2,DUZ,0),U,3)=DT
"RTN","A1AEUTL",363,0)
 S $P(^A1AE(11005,D0,2,0),U,3)=DUZ
"RTN","A1AEUTL",364,0)
 S ^A1AE(11005,"AU",DUZ,+$P(^A1AE(11005,D0,0),U,2),(9999999-DT))=""
"RTN","A1AEUTL",365,0)
 ;
"RTN","A1AEUTL",366,0)
 L -^A1AE(11005,D0,2)
"RTN","A1AEUTL",367,0)
 ;
"RTN","A1AEUTL",368,0)
 QUIT  ; end of PRT
"RTN","A1AEUTL",369,0)
 ;
"RTN","A1AEUTL",370,0)
EASCREEN(PATHDR) ; screen patch selection for option A1AE POST VERIFY
"RTN","A1AEUTL",371,0)
 ; called by DIC("S") by ^DIC from ENVER
"RTN","A1AEUTL",372,0)
 ; input:
"RTN","A1AEUTL",373,0)
 ;   PATHDR = header (0) node of patch record in file 11005
"RTN","A1AEUTL",374,0)
 ; output = true (1) if patch may be selected, else false (0)
"RTN","A1AEUTL",375,0)
 ;
"RTN","A1AEUTL",376,0)
 N ALLOW S ALLOW=0 ; default to not allowing selection
"RTN","A1AEUTL",377,0)
 D
"RTN","A1AEUTL",378,0)
 . Q:$P(PATHDR,U,8)'="v"  ; field patch status (8) must be verified
"RTN","A1AEUTL",379,0)
 . Q:$P(PATHDR,U,14)'=.5  ; field user verify (14) must be postmaster
"RTN","A1AEUTL",380,0)
 . Q:$P(PATHDR,U,9)=DUZ  ; field user entering (9) can't be current user
"RTN","A1AEUTL",381,0)
 . Q:$P(PATHDR,U,13)=DUZ  ; field user completion (13) can't be current
"RTN","A1AEUTL",382,0)
 . ; get hdr node of record for current user in subfile support
"RTN","A1AEUTL",383,0)
 . ; personnel (100/11007.02) in file dhcp patch/problem package (11007)
"RTN","A1AEUTL",384,0)
 . N USER S USER=$G(^A1AE(11007,+$P(PATHDR,U,2),"PB",DUZ,0))
"RTN","A1AEUTL",385,0)
 . Q:USER=""  ; current user must be listed as support personnel
"RTN","A1AEUTL",386,0)
 . ; current user's field verify personnel (2) must indicate current
"RTN","A1AEUTL",387,0)
 . Q:$P(USER,U,2)'="V"  ; user is a verifier for this application
"RTN","A1AEUTL",388,0)
 . S ALLOW=1 ; if patch passes all those tests, we can select it
"RTN","A1AEUTL",389,0)
 ;
"RTN","A1AEUTL",390,0)
 QUIT ALLOW
"RTN","A1AEUTL",391,0)
 ;
"RTN","A1AEUTL",392,0)
NEWVER(PKIEN,PCHIEN) ; set up a new version for application
"RTN","A1AEUTL",393,0)
 ; called when a new version of an application is released
"RTN","A1AEUTL",394,0)
 ; called by:
"RTN","A1AEUTL",395,0)
 ;   C^A1AEPHS
"RTN","A1AEUTL",396,0)
 ;   S2R2^A1AEPHS
"RTN","A1AEUTL",397,0)
 ;
"RTN","A1AEUTL",398,0)
 ;^A1AE(11007,A1AEPKIF,"V",A1AEVR)
"RTN","A1AEUTL",399,0)
 N X S X=$G(^A1AE(11005,PCHIEN,0))
"RTN","A1AEUTL",400,0)
 N NAME S NAME=$P($G(^A1AE(11005,PCHIEN,4)),U)
"RTN","A1AEUTL",401,0)
 Q:'$L(NAME)  ; not an application-version release
"RTN","A1AEUTL",402,0)
 N PV S PV=+$P(NAME," ",$L(NAME," "))
"RTN","A1AEUTL",403,0)
 N IEN S IEN="+1,"_PKIEN_","
"RTN","A1AEUTL",404,0)
 S IEN(1)=PV
"RTN","A1AEUTL",405,0)
 N FDA S FDA(11007.01,IEN,.01)=PV
"RTN","A1AEUTL",406,0)
 S FDA(11007.01,IEN,2)=$$DT^XLFDT
"RTN","A1AEUTL",407,0)
 K IEN
"RTN","A1AEUTL",408,0)
 N Y
"RTN","A1AEUTL",409,0)
 D UPDATE^DIE("","FDA","IEN")
"RTN","A1AEUTL",410,0)
 ;
"RTN","A1AEUTL",411,0)
 QUIT
"RTN","A1AEUTL",412,0)
 ;
"RTN","A1AEUTL",413,0)
 ;
"RTN","A1AEUTL",414,0)
PRIMSTRM() ; See comments
"RTN","A1AEUTL",415,0)
 ; if no records, add FOIA VISTA
"RTN","A1AEUTL",416,0)
 I '$D(^A1AE(11007.1,1,0)) D
"RTN","A1AEUTL",417,0)
 . S ^(0)="FOIA VISTA^0^^^FV^1^FORUM.VA.GOV" ; set Name, Primary?, & Abbreviation
"RTN","A1AEUTL",418,0)
 . N DA S DA=1
"RTN","A1AEUTL",419,0)
 . N DIK S DIK="^A1AE(11007.1,"
"RTN","A1AEUTL",420,0)
 . D IX1^DIK ; cross-reference
"RTN","A1AEUTL",421,0)
 . Q
"RTN","A1AEUTL",422,0)
 ;
"RTN","A1AEUTL",423,0)
 ; get primary stream number using APRIM index
"RTN","A1AEUTL",424,0)
 N PSN S PSN=$O(^A1AE(11007.1,"APRIM",1,"")) ; primary stream #
"RTN","A1AEUTL",425,0)
 ; if not found, site is unconfigured
"RTN","A1AEUTL",426,0)
 I 'PSN S PSN=10**6+1 ; default to 1,000,001
"RTN","A1AEUTL",427,0)
 ;
"RTN","A1AEUTL",428,0)
 QUIT PSN
"RTN","A1AEUTL",429,0)
 ;
"RTN","A1AEUTL",430,0)
 ;
"RTN","A1AEUTL",431,0)
ID11005 ; See comments
"RTN","A1AEUTL",432,0)
 N ID S ID="" ; initialize identifier
"RTN","A1AEUTL",433,0)
 I '$G(DIQUIET),$X<33 W ?32 ; align subject column
"RTN","A1AEUTL",434,0)
 N X S X=$X ; current X position
"RTN","A1AEUTL",435,0)
 N IDLEN S IDLEN=80-X ; maximum room for identifier
"RTN","A1AEUTL",436,0)
 N DELIM S DELIM=" " ; write ID component delimiter, default to space
"RTN","A1AEUTL",437,0)
 I $G(DIQUIET) S DELIM="|" ; | delim in silent mode
"RTN","A1AEUTL",438,0)
 ;
"RTN","A1AEUTL",439,0)
 ; naked refs 0 node of record in 11005
"RTN","A1AEUTL",440,0)
 N PATCH S PATCH=^(0) ; DHCP Patches record's header
"RTN","A1AEUTL",441,0)
 N NODE5 S NODE5=$G(^(5)) ; DHCP Patches record's node 5
"RTN","A1AEUTL",442,0)
 ;
"RTN","A1AEUTL",443,0)
 ; [Stream]Subject
"RTN","A1AEUTL",444,0)
 S ID=$$STRMSUBJ(.IDLEN,PATCH,DELIM)
"RTN","A1AEUTL",445,0)
 ;
"RTN","A1AEUTL",446,0)
 ; padding:
"RTN","A1AEUTL",447,0)
 N PAD S $P(PAD," ",IDLEN-8)="" ; create pad
"RTN","A1AEUTL",448,0)
 I '$G(DIQUIET) S ID=ID_PAD ; add pad to ID
"RTN","A1AEUTL",449,0)
 ;
"RTN","A1AEUTL",450,0)
 ; Status:
"RTN","A1AEUTL",451,0)
 N STATUS S STATUS=$P(PATCH,U,8) ; field Status of Patch (8)
"RTN","A1AEUTL",452,0)
 N DDSTATUS S DDSTATUS=^DD(11005,8,0) ; definition of field 8, header
"RTN","A1AEUTL",453,0)
 N DDSET S DDSET=$P(DDSTATUS,U,3) ; definition of set of codes
"RTN","A1AEUTL",454,0)
 N STATCODE S STATCODE=$P($P(DDSET,STATUS_":",2),";") ; external val
"RTN","A1AEUTL",455,0)
 I $E(STATUS)=2 D  ; special abbreviations for sec statuses
"RTN","A1AEUTL",456,0)
 . I STATUS="i2" S STATCODE="2IR" Q  ; in review
"RTN","A1AEUTL",457,0)
 . I STATUS="d2" S STATCODE="2UN" Q  ; sec development
"RTN","A1AEUTL",458,0)
 . I STATUS="s2" S STATCODE="2CO" Q  ; sec completion
"RTN","A1AEUTL",459,0)
 . I STATUS="r2" S STATCODE="2VE" Q  ; sec release
"RTN","A1AEUTL",460,0)
 . I STATUS="n2" S STATCODE="2NO" Q  ; not for sec release
"RTN","A1AEUTL",461,0)
 S ID=ID_$E(STATCODE,1,3)_DELIM ; add Status to ID
"RTN","A1AEUTL",462,0)
 ;
"RTN","A1AEUTL",463,0)
 ; User:
"RTN","A1AEUTL",464,0)
 N USERENTR S USERENTR=+$P(PATCH,U,9) ; field User Entering (9)
"RTN","A1AEUTL",465,0)
 N USER S USER=$G(^VA(200,USERENTR,0)) ; New Person record's header
"RTN","A1AEUTL",466,0)
 N INITIAL S INITIAL=$P(USER,U,2) ; field Initial (1) of file 200
"RTN","A1AEUTL",467,0)
 I INITIAL="" S INITIAL="unknown" ; if no user or no initials
"RTN","A1AEUTL",468,0)
 S ID=ID_$E(INITIAL,1,3) ; add User to ID
"RTN","A1AEUTL",469,0)
 ;
"RTN","A1AEUTL",470,0)
 ; output write ID:
"RTN","A1AEUTL",471,0)
 N TAB S TAB=$S(X<33:32,1:X-1) ; tab for terminal
"RTN","A1AEUTL",472,0)
 I $G(DIQUIET) S TAB=0 ; don't tab for GUI
"RTN","A1AEUTL",473,0)
 D EN^DDIOL(ID,"","?"_TAB) ; output the write ID
"RTN","A1AEUTL",474,0)
 ;
"RTN","A1AEUTL",475,0)
 N DERIVED S DERIVED=$P(NODE5,U,2) ; field Derived from Patch
"RTN","A1AEUTL",476,0)
 Q:'DERIVED  ; line 2 of identifier is only for derived patches
"RTN","A1AEUTL",477,0)
 N ORIG S ORIG=$G(^A1AE(11005,DERIVED,0)) ; derived patch's header
"RTN","A1AEUTL",478,0)
 Q:ORIG=""  ; if no real patch, then no line 2
"RTN","A1AEUTL",479,0)
 ;
"RTN","A1AEUTL",480,0)
 ; derived from [Stream]Subject
"RTN","A1AEUTL",481,0)
 S IDLEN=45 ; plenty of room
"RTN","A1AEUTL",482,0)
 N IDLINE2 S IDLINE2="derived from "_$$STRMSUBJ(.IDLEN,ORIG,DELIM)
"RTN","A1AEUTL",483,0)
 S IDLINE2=$P(IDLINE2,"]")_"]"_$P(ORIG,U) ; **FIX THIS LATER**
"RTN","A1AEUTL",484,0)
 ;
"RTN","A1AEUTL",485,0)
 ; output write ID:
"RTN","A1AEUTL",486,0)
 S TAB=32 ; tab for terminal
"RTN","A1AEUTL",487,0)
 I $G(DIQUIET) S TAB=0 ; don't tab for GUI
"RTN","A1AEUTL",488,0)
 D EN^DDIOL(IDLINE2,"","!?"_TAB) ; output the write ID
"RTN","A1AEUTL",489,0)
 ;
"RTN","A1AEUTL",490,0)
 QUIT  ; end of ID11005
"RTN","A1AEUTL",491,0)
 ;
"RTN","A1AEUTL",492,0)
 ;
"RTN","A1AEUTL",493,0)
STRMSUBJ(IDLEN,PATCH,DELIM) ; [Stream]Subject; See comments
"RTN","A1AEUTL",494,0)
 N ID S ID="" ; return value
"RTN","A1AEUTL",495,0)
 ;
"RTN","A1AEUTL",496,0)
 ; Stream:
"RTN","A1AEUTL",497,0)
 N STREAMDA S STREAMDA=$P(PATCH,U,20) ; field Patch Stream (.2)
"RTN","A1AEUTL",498,0)
 N STREAM S STREAM=$G(^A1AE(11007.1,+STREAMDA,0)) ; record hdr
"RTN","A1AEUTL",499,0)
 S STRABB=$P(STREAM,U,5) ; field Abbreviation (.05)
"RTN","A1AEUTL",500,0)
 I STRABB'="" D  ; skip stream if empty
"RTN","A1AEUTL",501,0)
 . S ID="["_STRABB_"]" ; add Stream to ID
"RTN","A1AEUTL",502,0)
 . S IDLEN=IDLEN-$L(ID) ; decrease room
"RTN","A1AEUTL",503,0)
 ;
"RTN","A1AEUTL",504,0)
 ; Subject:
"RTN","A1AEUTL",505,0)
 N SUBJECT S SUBJECT=$P(PATCH,U,5) ; field Patch Subject (5)
"RTN","A1AEUTL",506,0)
 N SUBJABB S SUBJABB=$E(SUBJECT,1,IDLEN-10) ; make it fit
"RTN","A1AEUTL",507,0)
 S ID=ID_SUBJABB_DELIM ; add Subject to ID
"RTN","A1AEUTL",508,0)
 S IDLEN=IDLEN-$L(SUBJABB) ; decrease room
"RTN","A1AEUTL",509,0)
 ;
"RTN","A1AEUTL",510,0)
 QUIT ID ; end of $$STRMSUBJ(): return [Stream]Subject
"RTN","A1AEUTL",511,0)
 ;
"RTN","A1AEUTL",512,0)
 ;
"RTN","A1AEUTL",513,0)
ASUBCNG(D0) ; See comments
"RTN","A1AEUTL",514,0)
 N DIERR,A1AEFDA,A1AEFDAI
"RTN","A1AEUTL",515,0)
 S A1AEFDA(3,11007.12,"+1,"_D0_",",.01)=$$HTFM^XLFDT($H)
"RTN","A1AEUTL",516,0)
 S A1AEFDA(3,11007.12,"+1,"_D0_",",1)=$G(DUZ)
"RTN","A1AEUTL",517,0)
 D UPDATE^DIE("","A1AEFDA(3)","A1AEFDAI")
"RTN","A1AEUTL",518,0)
 QUIT
"RTN","A1AEUTL",519,0)
 ;
"RTN","A1AEUTL",520,0)
STRMBPN ; get PATCH STREAM by evaluating the PATCH NUMBER
"RTN","A1AEUTL",521,0)
 ; input:
"RTN","A1AEUTL",522,0)
 ;   DA = entry under construction in file DHCP PATCHES (11005)
"RTN","A1AEUTL",523,0)
 ; output:
"RTN","A1AEUTL",524,0)
 ;   sets field patch stream (.2) based on patch number
"RTN","A1AEUTL",525,0)
 ;
"RTN","A1AEUTL",526,0)
 ; 1. id patch's proper stream
"RTN","A1AEUTL",527,0)
 ;
"RTN","A1AEUTL",528,0)
 Q:'DA
"RTN","A1AEUTL",529,0)
 N STRM S STRM=$$GSTRMP(DA) ; get patch's stream
"RTN","A1AEUTL",530,0)
 Q:'STRM
"RTN","A1AEUTL",531,0)
 ;
"RTN","A1AEUTL",532,0)
 ; 2. assign stream and repair index
"RTN","A1AEUTL",533,0)
 ;
"RTN","A1AEUTL",534,0)
 S $P(^A1AE(11005,DA,0),U,20)=STRM ; save in field .2
"RTN","A1AEUTL",535,0)
 ;
"RTN","A1AEUTL",536,0)
 N DIK S DIK="^A1AE(11005,"
"RTN","A1AEUTL",537,0)
 S DIK(1)=.2
"RTN","A1AEUTL",538,0)
 D EN1^DIK ; reindex
"RTN","A1AEUTL",539,0)
 ;
"RTN","A1AEUTL",540,0)
 QUIT  ; end of STRMBPN
"RTN","A1AEUTL",541,0)
 ;
"RTN","A1AEUTL",542,0)
 ;
"RTN","A1AEUTL",543,0)
GSTRMP(DA) ; get PATCH STREAM by evaluating the PATCH NUMBER
"RTN","A1AEUTL",544,0)
 ; input:
"RTN","A1AEUTL",545,0)
 ;  DA into DHCP PATCHES [#11005] file
"RTN","A1AEUTL",546,0)
 ; output:
"RTN","A1AEUTL",547,0)
 ;  PATCH STREAM or 0
"RTN","A1AEUTL",548,0)
 ;
"RTN","A1AEUTL",549,0)
 ; 1. id patch
"RTN","A1AEUTL",550,0)
 ;
"RTN","A1AEUTL",551,0)
 Q:'$G(DA) 0
"RTN","A1AEUTL",552,0)
 Q:'$D(^A1AE(11005,DA,0)) 0
"RTN","A1AEUTL",553,0)
 N PNM S PNM=$P($P($G(^A1AE(11005,DA,0)),U),"*",3)
"RTN","A1AEUTL",554,0)
 Q:'PNM 0
"RTN","A1AEUTL",555,0)
 ;
"RTN","A1AEUTL",556,0)
 ; 2. id its stream
"RTN","A1AEUTL",557,0)
 ;
"RTN","A1AEUTL",558,0)
 ; Find STRM by checking patch number against 11007.1
"RTN","A1AEUTL",559,0)
 N STRM S STRM=$O(^A1AE(11007.1,PNM),-1)
"RTN","A1AEUTL",560,0)
 S:'STRM STRM=$O(^A1AE(11007.1,PNM+1),-1)
"RTN","A1AEUTL",561,0)
 ;
"RTN","A1AEUTL",562,0)
 QUIT STRM ; end of $$GSTRMP ; return patch stream
"RTN","A1AEUTL1")
0^41^B12588327
"RTN","A1AEUTL1",1,0)
A1AEUTL1 ;isa/rmo,mjk ;2014-03-27T13:54
"RTN","A1AEUTL1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUTL1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUTL1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUTL1",5,0)
 ;
"RTN","A1AEUTL1",6,0)
 ;
"RTN","A1AEUTL1",7,0)
 ;primary change history
"RTN","A1AEUTL1",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUTL1",9,0)
 ;
"RTN","A1AEUTL1",10,0)
PCHK ;call if $d(^(d0,"q","b")), return az(), k az,print
"RTN","A1AEUTL1",11,0)
 S AZ=0 F  S AZ=$O(^A1AE(11005,D0,"Q",AZ)) Q:'AZ  I $D(^(AZ,0)) S AZ0=^(0),AZ(+AZ0)=$S($D(^A1AE(11005,+AZ0,0)):"("_$P(^(0),"^",8)_")"_$P(^(0),"^"),1:"patch not available") DO
"RTN","A1AEUTL1",12,0)
 .F  Q:AZ(+AZ0)'["*999*"  DO
"RTN","A1AEUTL1",13,0)
 . .S AZ(+AZ0)=$P(AZ(+AZ0),"*999*",1)_"*DBA*"_$P(AZ(+AZ0),"*999*",2,99) Q
"RTN","A1AEUTL1",14,0)
 .I $P(AZ0,"^",2)="y" S AZ("STOP",+AZ0)=AZ(+AZ0),AZ(+AZ0)=$E(AZ(+AZ0)_"     ",1,15)_"<<= must be installed BEFORE"_$S($D(A1AEPD):" `"_A1AEPD_"'",1:"") Q
"RTN","A1AEUTL1",15,0)
 .E  S AZ(+AZ0)=$E(AZ(+AZ0)_"          ",1,19)_"install with patch"_$S($D(A1AEPD):"       `"_A1AEPD_"'",1:"") Q
"RTN","A1AEUTL1",16,0)
 K AZ0
"RTN","A1AEUTL1",17,0)
 I $D(AZ)=11 S AZ("TX",1)="Associated patches: "
"RTN","A1AEUTL1",18,0)
 I $D(CHECK) DO
"RTN","A1AEUTL1",19,0)
 .S AZ=0 F  S AZ=$O(AZ("STOP",AZ)) Q:'AZ  I $D(^A1AE(11005,AZ,0)),$P(^(0),"^",8)="v" K AZ("STOP",AZ)
"RTN","A1AEUTL1",20,0)
 .K STP Q
"RTN","A1AEUTL1",21,0)
 Q:'$D(PRINT)  Q:'$O(AZ(0))
"RTN","A1AEUTL1",22,0)
 ;
"RTN","A1AEUTL1",23,0)
 W !,AZ("TX",1)
"RTN","A1AEUTL1",24,0)
 S AZ=0 F  S AZ=$O(AZ(AZ)) Q:'AZ  W:$X>25 !?20 I AZ(AZ)'["<<" W AZ(AZ),!?20
"RTN","A1AEUTL1",25,0)
 S AZ=0 F  S AZ=$O(AZ(AZ)) Q:'AZ  W:$X>25 !?20 I AZ(AZ)["<<" W AZ(AZ),!?20
"RTN","A1AEUTL1",26,0)
 Q
"RTN","A1AEUTL1",27,0)
 ;
"RTN","A1AEUTL1",28,0)
Q K IO("Q") R !,"REQUESTED TIME TO RUN JOB: NOW// ",X:DTIME Q:X["^"  S Y=$H I $P("NOW",X,1)]"" S:X'["@" X="T@"_X S %DT(0)=0,%DT="TXE" D ^%DT K %DT G Q:Y<1 S X=+Y D H^%DTC S Y=Y_"000",Y=%H_","_($E(Y,9,10)*60+$E(Y,11,12)*60)
"RTN","A1AEUTL1",29,0)
Q1 ;Entry point for background jobs
"RTN","A1AEUTL1",30,0)
 ;S X=Y L ^%ZTSK S (^%ZTSK(0),ZTSK)=^%ZTSK(0)+1 L  X ^%ZOSF("UCI")
"RTN","A1AEUTL1",31,0)
 S X=Y X ^%ZOSF("UCI") S ZTUCI=Y
"RTN","A1AEUTL1",32,0)
 ;S ^%ZTSK(ZTSK,0)="DQ^A1AEUTL1^"_$S($D(DUZ)#2:DUZ,1:"")_"^"_Y_"^"_$H,^("ZTSK")=ZTSK,^("VAR")=VAR,^("VAL")=VAL,^("PGM")=PGM S:$D(DIS(0)) ^("DIS(0)")=DIS(0)
"RTN","A1AEUTL1",33,0)
 F J="VAR","VAL","PGM","DIS(0)" S:$D(@J) ZTSAVE(J)=""
"RTN","A1AEUTL1",34,0)
 S ZTRTN="DQ^A1AEUTL1",ZTIO=ION,ZTDTH=X,ZTDESC="Patch Module Task"
"RTN","A1AEUTL1",35,0)
 ;S ^%ZTSCH(X,ZTSK)=ION_$S(ION]"":";"_IOST_";"_IOSL,1:"") K PGM,VAR,VAL,ZTSK W:ION]"" !,"REQUEST QUEUED!",! Q
"RTN","A1AEUTL1",36,0)
 D ^%ZTLOAD W:ION]"" !,"Request queued!",! K PGM,VAR,VAL,ZTSK Q
"RTN","A1AEUTL1",37,0)
 Q
"RTN","A1AEUTL1",38,0)
DQ ;S PGM=^%ZTSK(ZTSK,"PGM"),VAR=^("VAR"),VAL=^("VAL") S:$D(^("DIS(0)")) DIS(0)=^("DIS(0)") S IOP=IO D:IO]"" ^%ZIS K ^%ZTSK(ZTSK)
"RTN","A1AEUTL1",39,0)
 F A1AEI=1:1 Q:$P(VAR,"^",A1AEI)']""  S @($P(VAR,"^",A1AEI))=$P(VAL,"^",A1AEI)
"RTN","A1AEUTL1",40,0)
 S X="T",%DT="" D ^%DT S DT=Y G @PGM
"RTN","A1AEUTL1",41,0)
 ;
"RTN","A1AEUTL1",42,0)
ZIS S %ZIS="QFM" D ^%ZIS K %ZIS K:POP IO("Q") Q:POP  I $D(IO("Q")) X "S VAL="""" F A1AEI=1:1 Q:$P(VAR,""^"",A1AEI)']""""  S VAL=VAL_@($P(VAR,""^"",A1AEI))_""^""" D Q S POP=1 Q
"RTN","A1AEUTL1",43,0)
 ;I $D(IO("C")) W !!,"EXIT",! C IO(0) Q
"RTN","A1AEUTL1",44,0)
 Q
"RTN","A1AEUTL1",45,0)
 ;
"RTN","A1AEUTL1",46,0)
CLOSE ;G H^XUS:$D(IO("C"))
"RTN","A1AEUTL1",47,0)
 D ^%ZISC U IO(0) S IOP="HOME" D ^%ZIS K IOP Q
"RTN","A1AEUTL1",48,0)
 ;
"RTN","A1AEUTL1",49,0)
 ;S PGM="MDQ^A1AEUTL1",VAR="A1AEPKIF^XMB^DUZ" F I=1:1 Q:'$D(XMB(I))  S VAR=VAR_"^XMB("_I_")",ION=""
"RTN","A1AEUTL1",50,0)
 ;X "S VAL="""" F A1AEI=1:1 Q:$P(VAR,""^"",A1AEI)']""""  S VAL=VAL_@($P(VAR,""^"",A1AEI))_""^"""
"RTN","A1AEUTL1",51,0)
 ;S X="NOW",%DT(0)=0,%DT="TXE" D ^%DT K %DT G Q:Y<1 S X=+Y D H^%DTC S Y=Y_"000",Y=%H_","_($E(Y,9,10)*60+$E(Y,11,12)*60) D Q1 K A1AEI Q
"RTN","A1AEUTL1",52,0)
 ;
"RTN","A1AEUTL1",53,0)
M ;Send Bulletins to appropriate users stored in XMY
"RTN","A1AEUTL1",54,0)
 K:$P(^A1AE(11007,A1AEPKIF,0),"^",2)'="Y"&($P(^(0),"^",4)'="y") ^TMP("XMY",$J),XMY
"RTN","A1AEUTL1",55,0)
 Q:'$D(^TMP("XMY",$J))&('$D(XMY))!('$D(DUZ))
"RTN","A1AEUTL1",56,0)
 S XMDUZ=DUZ D EN^XMB K ^TMP("XMY",$J),XMY
"RTN","A1AEUTL1",57,0)
 Q
"RTN","A1AEUTL1",58,0)
 ;
"RTN","A1AEUTL1",59,0)
DATE ;Ask Date Range of Verified patches
"RTN","A1AEUTL1",60,0)
 S POP=0 K BEGDATE,ENDDATE W !!,"**** Date Range of Released Patches ****"
"RTN","A1AEUTL1",61,0)
 W ! S %DT="APEX",%DT("A")="   Beginning DATE : " D ^%DT S:Y<0 POP=1 Q:Y<0  S (%DT(0),BEGDATE)=Y
"RTN","A1AEUTL1",62,0)
 W ! S %DT="APEX",%DT("A")="   Ending    DATE : " D ^%DT K %DT S:Y<0 POP=1 Q:Y<0  W ! S ENDDATE=Y
"RTN","A1AEUTL1",63,0)
 Q
"RTN","A1AEUTL1",64,0)
XTM S Y=$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_$E(Y,2,3)_$P("@"_$E(Y_0,9,10)_":"_$E(Y_"000",11,12),"^",Y[".") S:Y="//" Y="" Q
"RTN","A1AEUTL1",65,0)
TM X ^DD("DD") Q  ; Expect Y and output Y.
"RTN","A1AEUTL1",66,0)
 Q
"RTN","A1AEUTL2")
0^42^B16114599
"RTN","A1AEUTL2",1,0)
A1AEUTL2 ;isf/rwf-utility: routine info ;2014-03-07T19:51
"RTN","A1AEUTL2",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUTL2",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUTL2",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUTL2",5,0)
 ;
"RTN","A1AEUTL2",6,0)
 ;
"RTN","A1AEUTL2",7,0)
 ;primary change history
"RTN","A1AEUTL2",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUTL2",9,0)
 ;
"RTN","A1AEUTL2",10,0)
 Q
"RTN","A1AEUTL2",11,0)
 ;Called from the FM Print template [A1AE STANDARD PRINT]
"RTN","A1AEUTL2",12,0)
 ; and A1AEMAL to show the routine info
"RTN","A1AEUTL2",13,0)
RTNINFO(MAL) ;
"RTN","A1AEUTL2",14,0)
 N A1,A2,A3,AX,OLD,NEW,RN,PL,X,AEQ,DIR,DIRUT,DUOUT,PATCH,NC,L2
"RTN","A1AEUTL2",15,0)
 S MAL=$G(MAL)
"RTN","A1AEUTL2",16,0)
 I '$O(^A1AE(11005,D0,"P",0)) D OUT("No routines included.") Q
"RTN","A1AEUTL2",17,0)
 ;See if New Checksums
"RTN","A1AEUTL2",18,0)
 S D1=0,NC=0
"RTN","A1AEUTL2",19,0)
 F  S D1=$O(^A1AE(11005,D0,"P",D1)) Q:'D1  S AX=^(D1,0) I $L($P(AX,U,2)) S NC=1 Q
"RTN","A1AEUTL2",20,0)
 ;
"RTN","A1AEUTL2",21,0)
 S L2=$G(^A1AE(11005,D0,"P2"))
"RTN","A1AEUTL2",22,0)
 I $L(L2) D OUT("The second line of each of these routines now looks like:"),OUT(L2),OUT("")
"RTN","A1AEUTL2",23,0)
 I NC D OUT("The checksums below are new checksums, and"),OUT(" can be checked with CHECK1^XTSUMBLD."),OUT("")
"RTN","A1AEUTL2",24,0)
 K ^TMP("A1AEPL",$J)
"RTN","A1AEUTL2",25,0)
 S D1=0,$P(AEQ,"=",78)="",PATCH=+$P(^A1AE(11005,D0,0),U,4),RN=""
"RTN","A1AEUTL2",26,0)
 F  S RN=$O(^A1AE(11005,D0,"P","B",RN)) Q:RN=""  D
"RTN","A1AEUTL2",27,0)
 . S D1=$O(^A1AE(11005,D0,"P","B",RN,0)) Q:'D1  S AX=^A1AE(11005,D0,"P",D1,0) D
"RTN","A1AEUTL2",28,0)
 . I 'MAL,$E(IOST,1,2)="C-",$Y+3>IOSL S DIR(0)="E" D ^DIR W:Y @IOF I 'Y S RN="{"  Q
"RTN","A1AEUTL2",29,0)
 . ;See if we have a KIDS checksum
"RTN","A1AEUTL2",30,0)
 . S NEW="",NEW=$P(AX,U,2),PL=$P(AX,U,3),OLD=$P(AX,U,4)
"RTN","A1AEUTL2",31,0)
 . I PATCH D PTLBLD(PL,PATCH)
"RTN","A1AEUTL2",32,0)
 . I '$L(OLD) S OLD=$$BCS(D0,RN) I $G(A1AENEW)="v" S $P(^A1AE(11005,D0,"P",D1,0),U,4)=OLD ;Save the old at the time of release
"RTN","A1AEUTL2",33,0)
 . D OUT("Routine Name: "_RN)
"RTN","A1AEUTL2",34,0)
 . ;S:OLD=""!(OLD=NEW) OLD="n/a"
"RTN","A1AEUTL2",35,0)
 . S:OLD="" OLD="n/a"
"RTN","A1AEUTL2",36,0)
 . I $L(NEW) D
"RTN","A1AEUTL2",37,0)
 . . D WRAP("    Before:"_$J(OLD,10)_"   After:"_$J(NEW,10)_"  ",PL)
"RTN","A1AEUTL2",38,0)
 . S D2=0
"RTN","A1AEUTL2",39,0)
 . ;Display entered checksums if can't find KIDS checksum.
"RTN","A1AEUTL2",40,0)
 . I '$L(NEW),$O(^A1AE(11005,D0,"P",D1,"X",0))>0 D
"RTN","A1AEUTL2",41,0)
 . . D OUT("    Checksum:")
"RTN","A1AEUTL2",42,0)
 . . F  S D2=$O(^A1AE(11005,D0,"P",D1,"X",D2)) Q:'D2  S X=$G(^(D2,0)) D OUT("  "_X)
"RTN","A1AEUTL2",43,0)
 . . Q
"RTN","A1AEUTL2",44,0)
 . ;Show Description if entered.
"RTN","A1AEUTL2",45,0)
 . I $O(^A1AE(11005,D0,"P",D1,"D",0))>0 D
"RTN","A1AEUTL2",46,0)
 . . D OUT(" Description of Changes:")
"RTN","A1AEUTL2",47,0)
 . . S D2=0
"RTN","A1AEUTL2",48,0)
 . . F  S D2=$O(^A1AE(11005,D0,"P",D1,"D",D2)) Q:'D2  S X=$G(^(D2,0)) D OUT("  "_X)
"RTN","A1AEUTL2",49,0)
 . . D OUT("")
"RTN","A1AEUTL2",50,0)
 . Q
"RTN","A1AEUTL2",51,0)
 D DSP(PATCH)
"RTN","A1AEUTL2",52,0)
 K TMP("A1AEPL",$J)
"RTN","A1AEUTL2",53,0)
 Q
"RTN","A1AEUTL2",54,0)
 ;
"RTN","A1AEUTL2",55,0)
BCS(DA,RN) ;Get the Before CheckSum
"RTN","A1AEUTL2",56,0)
 N C,X
"RTN","A1AEUTL2",57,0)
 S C="",RN=$TR(RN,$C(34)) ;Remove any Quotes
"RTN","A1AEUTL2",58,0)
        N PD S PD=$$GET1^DIQ(11005,DA,.01)
"RTN","A1AEUTL2",59,0)
        N STREAM S STREAM=$$GETSTRM^A1AEK2M0(PD)
"RTN","A1AEUTL2",60,0)
        S X=$O(^A1AE(11007.1,STREAM,"RTN","B",RN,0))
"RTN","A1AEUTL2",61,0)
        I X>0 S C=$P(^A1AE(11007.1,10001,"RTN",X,0),U,2) QUIT C
"RTN","A1AEUTL2",62,0)
        ; Otherwise, try the routine file.
"RTN","A1AEUTL2",63,0)
 S X=$O(^DIC(9.8,"B",RN,0)) I X>0 S C=$P($G(^DIC(9.8,X,4)),U,2)
"RTN","A1AEUTL2",64,0)
 S:'$L(C) C="n/a"
"RTN","A1AEUTL2",65,0)
 Q C
"RTN","A1AEUTL2",66,0)
 ;
"RTN","A1AEUTL2",67,0)
OUT(S) ;Write or put in MSG
"RTN","A1AEUTL2",68,0)
 I MAL D ADD^A1AEMAL(S) Q
"RTN","A1AEUTL2",69,0)
 D N^DIO2 W S
"RTN","A1AEUTL2",70,0)
 Q
"RTN","A1AEUTL2",71,0)
 ;
"RTN","A1AEUTL2",72,0)
WRAP(P,S) ;Wrap S starting at length of P.
"RTN","A1AEUTL2",73,0)
 I $L(S)+$L(P)<80 D OUT(P_S) Q
"RTN","A1AEUTL2",74,0)
 N I,T,C,L S C=$L(P),$P(L," ",C+2)=""
"RTN","A1AEUTL2",75,0)
 S I=$F(S,",",70-C) D OUT(P_$E(S,1,I-1)) S S=$E(S,I,999)
"RTN","A1AEUTL2",76,0)
 F  S I=$F(S,",",70-C),I=$S(I>0:I,1:$L(S)+2) D OUT(L_$E(S,1,I-1)) S S=$E(S,I,999) Q:'$L(S)
"RTN","A1AEUTL2",77,0)
 Q
"RTN","A1AEUTL2",78,0)
 ;
"RTN","A1AEUTL2",79,0)
 ;
"RTN","A1AEUTL2",80,0)
DSP(PATCH) ;Display Patch List
"RTN","A1AEUTL2",81,0)
 N PL,I
"RTN","A1AEUTL2",82,0)
 D PTLDSP(.PL,PATCH)
"RTN","A1AEUTL2",83,0)
 F I=1:1 Q:'$D(PL(I))  D OUT(PL(I))
"RTN","A1AEUTL2",84,0)
 Q
"RTN","A1AEUTL2",85,0)
 ;
"RTN","A1AEUTL2",86,0)
 ;Build patch list
"RTN","A1AEUTL2",87,0)
PTLBLD(Z,PATCH) ;Build in ^TMP the patches used
"RTN","A1AEUTL2",88,0)
 ;Z is routine second line, PATCH is patch number
"RTN","A1AEUTL2",89,0)
 N I,J,K,P S Z=$P(Z,"**",2),K=""
"RTN","A1AEUTL2",90,0)
 F I=1:1 S J=+$P(Z,",",I) Q:(J=0)  I (J'=PATCH) S P=$G(^TMP("A1AEPL",$J,J)),^TMP("A1AEPL",$J,J)=P_K S K=K_J_","
"RTN","A1AEUTL2",91,0)
 Q
"RTN","A1AEUTL2",92,0)
PTLSRT ;Sort the list
"RTN","A1AEUTL2",93,0)
 N I,J,K,L S I=0
"RTN","A1AEUTL2",94,0)
 M PTL=^TMP("A1AEPL",$J)
"RTN","A1AEUTL2",95,0)
 F I=0:0 S I=$O(^TMP("A1AEPL",$J,I)) Q:I'>0  S K=^(I) D
"RTN","A1AEUTL2",96,0)
 . F J=1:1 S L=$P(K,",",J) Q:L=""  K PTL(L)
"RTN","A1AEUTL2",97,0)
 . Q
"RTN","A1AEUTL2",98,0)
 Q
"RTN","A1AEUTL2",99,0)
 ;
"RTN","A1AEUTL2",100,0)
PTLDSP(RET,PATCH) ;Display list of patches.
"RTN","A1AEUTL2",101,0)
 ;RET passed by Reference, PATCH is patch number.
"RTN","A1AEUTL2",102,0)
 I '$G(^A1AE(11005,D0,5)) Q  ;See if want to show list.
"RTN","A1AEUTL2",103,0)
 N PTL
"RTN","A1AEUTL2",104,0)
 D PTLSRT
"RTN","A1AEUTL2",105,0)
 N I,J,IX K PTL(PATCH)
"RTN","A1AEUTL2",106,0)
 Q:$O(PTL(0))=""
"RTN","A1AEUTL2",107,0)
 S RET(1)=" ",RET(2)="Routine list of preceding patches: "
"RTN","A1AEUTL2",108,0)
 S (I,J)="",IX=2
"RTN","A1AEUTL2",109,0)
 F  S I=$O(PTL(I)) Q:I=""  D
"RTN","A1AEUTL2",110,0)
 . I $L(RET(IX))>70 S IX=IX+1,J="",RET(IX)="                           "
"RTN","A1AEUTL2",111,0)
 . S RET(IX)=RET(IX)_J_I,J=", "
"RTN","A1AEUTL2",112,0)
 Q
"RTN","A1AEUTLC")
0^102^B35483202
"RTN","A1AEUTLC",1,0)
A1AEUTLC ;ven/toad-patch tools ;2015-06-13  9:15 PM
"RTN","A1AEUTLC",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEUTLC",3,0)
 ;
"RTN","A1AEUTLC",4,0)
 ; Change History:
"RTN","A1AEUTLC",5,0)
 ;
"RTN","A1AEUTLC",6,0)
 ; original changes, isa/rmo/mjk: Robin M. Ostrander and Mike J. Kilmade
"RTN","A1AEUTLC",7,0)
 ; of VA's Albany Field Office created the original A1AEUTL routine in
"RTN","A1AEUTLC",8,0)
 ; an early version of Patch Module and updated it regularly.
"RTN","A1AEUTLC",9,0)
 ;
"RTN","A1AEUTLC",10,0)
 ; 2007-01-11, isf/rwf: previous change; by Wally Fort of the Oakland VA
"RTN","A1AEUTLC",11,0)
 ; Field Office.
"RTN","A1AEUTLC",12,0)
 ;
"RTN","A1AEUTLC",13,0)
 ; 2014-01-06, ven/smh: Sam Habiel of the VISTA Expertise Network,
"RTN","A1AEUTLC",14,0)
 ; in SETNUM, DIC(0) will be taken from the symbol table if it is
"RTN","A1AEUTLC",15,0)
 ; defined to make the output silent for Unit Testing. Otherwise, it
"RTN","A1AEUTLC",16,0)
 ; will default to LE. First change of OSEHRA Forum Phase One.
"RTN","A1AEUTLC",17,0)
 ;
"RTN","A1AEUTLC",18,0)
 ; 2014-01-10, ven/smh: replace awkward logic in SETNUM based on
"RTN","A1AEUTLC",19,0)
 ; traditional simple index AB on file DHCP Patches (11005) to be
"RTN","A1AEUTLC",20,0)
 ; based on replacement new-style compound index AB. Old algorithm
"RTN","A1AEUTLC",21,0)
 ; was hard-coded to a limit of 999 as the highest patch number.
"RTN","A1AEUTLC",22,0)
 ; New algorithm uses reverse $order to get last patch number, with
"RTN","A1AEUTLC",23,0)
 ; no hard-coded limit.
"RTN","A1AEUTLC",24,0)
 ;
"RTN","A1AEUTLC",25,0)
 ; 2014-01-22, ven/smh: introduce new variable A1AESTRM and logic
"RTN","A1AEUTLC",26,0)
 ; to set initial sequence number and patch number based on new file
"RTN","A1AEUTLC",27,0)
 ; DHCP Patch Stream (11007.1)'s field Patch Number Start (.001).
"RTN","A1AEUTLC",28,0)
 ; Changes in SEQ, NUM, SETNUM, & $$PRIMSTRM.
"RTN","A1AEUTLC",29,0)
 ;
"RTN","A1AEUTLC",30,0)
 ; 2014-02-10/11,25, ven/toad: Rick Marshall of the VISTA Expertise
"RTN","A1AEUTLC",31,0)
 ; Network added change history, new subroutine ID11005 to
"RTN","A1AEUTLC",32,0)
 ; replace file DHCP Patches (11005)'s WRITE identifier logic,
"RTN","A1AEUTLC",33,0)
 ; changed $$PRIMSTRM to use new APRIM index instead of old PRIM
"RTN","A1AEUTLC",34,0)
 ; index to avoid letting users select DHCP Patch Stream records
"RTN","A1AEUTLC",35,0)
 ; by typing YES or NO. Changed name of default record from
"RTN","A1AEUTLC",36,0)
 ; "VA PATCH STREAM" to "FOIA VISTA" and set its field Abbreviation
"RTN","A1AEUTLC",37,0)
 ; (.05) to "FV". Fixed an intermediate-calculation bug in the WRITE
"RTN","A1AEUTLC",38,0)
 ; ID logic - if patch had status of cancel, it calculated as
"RTN","A1AEUTLC",39,0)
 ; "cancel^0" instead of "cancel" before extracting just the first
"RTN","A1AEUTLC",40,0)
 ; three characters; the results were correct, but the intermediate
"RTN","A1AEUTLC",41,0)
 ; value was wrong. Convert ID11005^A1AEUTL from write commands to
"RTN","A1AEUTLC",42,0)
 ; use of EN^DDIOL; delimit components in silent mode.
"RTN","A1AEUTLC",43,0)
 ;
"RTN","A1AEUTLC",44,0)
 ; 2014-03-04, ven/smh: Now there is an Entry point SETNUM1 to set the
"RTN","A1AEUTLC",45,0)
 ; patch directly. SETNUM can now be invoked independently from NUM as
"RTN","A1AEUTLC",46,0)
 ; it does its own locks.
"RTN","A1AEUTLC",47,0)
 ;
"RTN","A1AEUTLC",48,0)
 ; 2014-03-06, ven/smh: Add check for security key A1AE IMPORT besides
"RTN","A1AEUTLC",49,0)
 ; the user when importing, in IN.
"RTN","A1AEUTLC",50,0)
 ;
"RTN","A1AEUTLC",51,0)
 ; 2014-03-06, ven/toad: added new status abbreviations for
"RTN","A1AEUTLC",52,0)
 ; secondary patches to ID11005. Add conditional line 2 of write ID
"RTN","A1AEUTLC",53,0)
 ; for derived patches, to show "derived from [Stream]Subject".
"RTN","A1AEUTLC",54,0)
 ; in ID11005 and split out new function $$STRMSUBJ. Last change of
"RTN","A1AEUTLC",55,0)
 ; OSEHRA Forum Phase One.
"RTN","A1AEUTLC",56,0)
 ;
"RTN","A1AEUTLC",57,0)
 ; 2014-08-05, ven/lgc: Larry G. Carlson of the VISTA Expertise Network
"RTN","A1AEUTLC",58,0)
 ; added code for a new M cross-reference (ASUBCNG) at linetag below by
"RTN","A1AEUTLC",59,0)
 ; same name. This cross automates add a new SUBSCRIPTION DATE and
"RTN","A1AEUTLC",60,0)
 ; RESPONSIBLE OFFICIAL to the active PATCH STREAM entry when the
"RTN","A1AEUTLC",61,0)
 ; SUBSCRIPTION field is toggled to YES. Added Post Install at A1AEPST
"RTN","A1AEUTLC",62,0)
 ; to run after KIDS install. sets PRIMARY? and SUBSCRIPTION with some
"RTN","A1AEUTLC",63,0)
 ; input post install. First changes of OSEHRA Forum Phase Two.
"RTN","A1AEUTLC",64,0)
 ;
"RTN","A1AEUTLC",65,0)
 ; 2014-08-19, ven/lgc: added Unit Testing Code for post install
"RTN","A1AEUTLC",66,0)
 ;
"RTN","A1AEUTLC",67,0)
 ; 2014-08-20, ven/lgc: moved Unit Testing to routine A1AEUT3
"RTN","A1AEUTLC",68,0)
 ;
"RTN","A1AEUTLC",69,0)
 ; 2014-08-27, ven/lgc: moved Post install to A1AE2POS
"RTN","A1AEUTLC",70,0)
 ;
"RTN","A1AEUTLC",71,0)
 ; 2014-10-22, ven/lgc: added code at FORUM linetag to drop out of input
"RTN","A1AEUTLC",72,0)
 ; transform early if this is not a forum site
"RTN","A1AEUTLC",73,0)
 ;
"RTN","A1AEUTLC",74,0)
 ; 2015-03-05, ven/lgc: move code for input transform for field
"RTN","A1AEUTLC",75,0)
 ; Subscription (.06) in file DHCP Patch Stream (11007.1) out to
"RTN","A1AEUTLC",76,0)
 ; STRM^A1AEK2.
"RTN","A1AEUTLC",77,0)
 ;
"RTN","A1AEUTLC",78,0)
 ; 2015-05-25/6, ven/lgc,toad: modify patch # and seq # handling to use
"RTN","A1AEUTLC",79,0)
 ; correct patch stream. SEQ, DELSEQ, NUM, SETNUM, SETNUM1.
"RTN","A1AEUTLC",80,0)
 ;
"RTN","A1AEUTLC",81,0)
 ; 2015-05-28, ven/jli: Joel L. Ivey of the VISTA Expertise Network
"RTN","A1AEUTLC",82,0)
 ; added a new api to split the application's patch stream. the first
"RTN","A1AEUTLC",83,0)
 ; patch in the active stream being released creates an info-only patch,
"RTN","A1AEUTLC",84,0)
 ; sets it to verified, sends it out with sequence number. in SPLITPKG.
"RTN","A1AEUTLC",85,0)
 ;
"RTN","A1AEUTLC",86,0)
 ; 2015-05-29, ven/jli: changed to use old stream sequence number if no
"RTN","A1AEUTLC",87,0)
 ; previous. ensure next problem number and next patch number are set
"RTN","A1AEUTLC",88,0)
 ; for stream. ensure assigned patch number is stream-specific. ensure
"RTN","A1AEUTLC",89,0)
 ; stream-specific next patch number is updated in subfile. in SEQ, NUM.
"RTN","A1AEUTLC",90,0)
 ;
"RTN","A1AEUTLC",91,0)
 ; 2015-06-03, ven/jli: moved SPLITPKG out to routine A1AESPLT.
"RTN","A1AEUTLC",92,0)
 ;
"RTN","A1AEUTLC",93,0)
 ; 2015-06-04, ven/toad: fix change history, fix bug in STRMBPN where it
"RTN","A1AEUTLC",94,0)
 ; calls $$GSTRMP without properly passing the DA parameter, fix bug in
"RTN","A1AEUTLC",95,0)
 ; NUM in which non-foia-vista streams for new versions always got
"RTN","A1AEUTLC",96,0)
 ; assigned the foia vista values for the next numbers (oops), strip out
"RTN","A1AEUTLC",97,0)
 ; old code and embedded change-history comments, unwrap long lines,
"RTN","A1AEUTLC",98,0)
 ; add contents, much refactoring. Change next # algorithm so that the
"RTN","A1AEUTLC",99,0)
 ; fields really do store the *next* #, not the most recently assigned
"RTN","A1AEUTLC",100,0)
 ; #. passim.
"RTN","A1AEUTLC",101,0)
 ;
"RTN","A1AEUTLC",102,0)
 ;
"RTN","A1AEUTLC",103,0)
 ; contents:
"RTN","A1AEUTLC",104,0)
 ;
"RTN","A1AEUTLC",105,0)
 ; SEQ: get & set sequence #
"RTN","A1AEUTLC",106,0)
 ; DELSEQ: delete sequence #
"RTN","A1AEUTLC",107,0)
 ; IN: input transform for field .01 in file 11005
"RTN","A1AEUTLC",108,0)
 ; PKG: select a patch/problem package
"RTN","A1AEUTLC",109,0)
 ; VER: select an application version
"RTN","A1AEUTLC",110,0)
 ; NUM: get next patch/problem number
"RTN","A1AEUTLC",111,0)
 ; NUMINIT: init next #
"RTN","A1AEUTLC",112,0)
 ; SETNUM: get & set last number & create stub record
"RTN","A1AEUTLC",113,0)
 ; SETNUM1: create patch/problem stub record
"RTN","A1AEUTLC",114,0)
 ; PRT: print field record printed by
"RTN","A1AEUTLC",115,0)
 ; ENVER: option A1AE POST VERIFY
"RTN","A1AEUTLC",116,0)
 ; $$EASCREEN: screen patch selection for option A1AE POST VERIFY
"RTN","A1AEUTLC",117,0)
 ; NEWVER: set up a new version for application
"RTN","A1AEUTLC",118,0)
 ; $$PRIMSTRM: return primary stream for this forum system
"RTN","A1AEUTLC",119,0)
 ; ID11005: WRITE Identifier on DHCP Patches file (11005)
"RTN","A1AEUTLC",120,0)
 ; $$STRMSUBJ: return [Stream]Subject
"RTN","A1AEUTLC",121,0)
 ; ASUBCNG: xref ASUBCNG on file 11007.1
"RTN","A1AEUTLC",122,0)
 ; STRMBPN: get PATCH STREAM by evaluating the PATCH NUMBER
"RTN","A1AEUTLC",123,0)
 ; $$GSTRMP: get PATCH STREAM by evaluating the PATCH NUMBER
"RTN","A1AEUTLC",124,0)
 ;
"RTN","A1AEUTLC",125,0)
NUM ; get next patch/problem number
"RTN","A1AEUTLC",126,0)
 ; called by:
"RTN","A1AEUTLC",127,0)
 ;   1^A1AEPB1: option add a problem [A1AE PBADD]
"RTN","A1AEUTLC",128,0)
 ;   1^A1AEPH1: option add a patch [A1AE PHADD]
"RTN","A1AEUTLC",129,0)
 ;   OPTION^A1AEPH8: option copy a patch [A1AE COPY PATCH]
"RTN","A1AEUTLC",130,0)
 ; calls:
"RTN","A1AEUTLC",131,0)
 ;   $$PRIMSTRM = get primary patch stream
"RTN","A1AEUTLC",132,0)
 ;   NUMINIT = initialize next #
"RTN","A1AEUTLC",133,0)
 ;   SETNUM = get & set last # and create stub record
"RTN","A1AEUTLC",134,0)
 ; input:
"RTN","A1AEUTLC",135,0)
 ;   A1AEPKIF = new patch's package namespace
"RTN","A1AEUTLC",136,0)
 ;   A1AEVR = new patch's version #
"RTN","A1AEUTLC",137,0)
 ;   A1AETY = subfile subscript: PH for patch or PB for problem
"RTN","A1AEUTLC",138,0)
 ;   A1AEFL = file to update (11005)
"RTN","A1AEUTLC",139,0)
 ; output:
"RTN","A1AEUTLC",140,0)
 ;   DA = new patch ien
"RTN","A1AEUTLC",141,0)
 ;   A1AEPD = new patch id
"RTN","A1AEUTLC",142,0)
 ;
"RTN","A1AEUTLC",143,0)
 ; This entry point, and SETNUM below are only called by developers so
"RTN","A1AEUTLC",144,0)
 ; selecting the patch stream using 11007.1 is fine.
"RTN","A1AEUTLC",145,0)
 ;
"RTN","A1AEUTLC",146,0)
NUMINIT(A1AEPKIF,A1AEVR,A1AESTRM,A1AETY,A1AEVAR) ; init next #
"RTN","A1AEUTLC",147,0)
 ;;private;procedure;silent;clean;sac-compliant
"RTN","A1AEUTLC",148,0)
 ; called by:
"RTN","A1AEUTLC",149,0)
 ;   NUM
"RTN","A1AEUTLC",150,0)
 ; calls:
"RTN","A1AEUTLC",151,0)
 ;   SETPACKG^A1AESPLT when initializing next patch #
"RTN","A1AEUTLC",152,0)
 ; input:
"RTN","A1AEUTLC",153,0)
 ;   A1AEPKIF = new patch's package namespace
"RTN","A1AEUTLC",154,0)
 ;   A1AEVR = new patch's version #
"RTN","A1AEUTLC",155,0)
 ;   A1AESTRM = new patch's stream
"RTN","A1AEUTLC",156,0)
 ;   A1AETY = subfile subscript: PH for patch or PB for problem
"RTN","A1AEUTLC",157,0)
 ;   A1AEVAR = name of output variable
"RTN","A1AEUTLC",158,0)
 ;   lock must be held on ^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY)
"RTN","A1AEUTLC",159,0)
 ; output:
"RTN","A1AEUTLC",160,0)
 ;   @A1AEVAR [A1AEPH or A1AEPB] = next patch/problem number
"RTN","A1AEUTLC",161,0)
 ;   proper subfields are initialized with next number
"RTN","A1AEUTLC",162,0)
 ;   if patch, info-only stream-split patch generated & sent
"RTN","A1AEUTLC",163,0)
 ;
"RTN","A1AEUTLC",164,0)
ID11005 ; WRITE Identifier on DHCP Patches file (11005)
"RTN","A1AEUTLC",165,0)
 ; called by: ^DD(11005,0,"ID","WRITE")
"RTN","A1AEUTLC",166,0)
 ; calls: $$STREAM()
"RTN","A1AEUTLC",167,0)
 ; input:
"RTN","A1AEUTLC",168,0)
 ;   $X
"RTN","A1AEUTLC",169,0)
 ;   file DHCP Patches (11005), current record:
"RTN","A1AEUTLC",170,0)
 ;     field Patch Stream (.2)
"RTN","A1AEUTLC",171,0)
 ;       :file DHCP Patch Stream (11007.1)
"RTN","A1AEUTLC",172,0)
 ;       :field Abbreviation (.05)
"RTN","A1AEUTLC",173,0)
 ;     field Patch Subject (5)
"RTN","A1AEUTLC",174,0)
 ;     field Status of Patch (8)
"RTN","A1AEUTLC",175,0)
 ;       :DD definition of set of codes
"RTN","A1AEUTLC",176,0)
 ;     field User Entering (9)
"RTN","A1AEUTLC",177,0)
 ;       :file New Person (200)
"RTN","A1AEUTLC",178,0)
 ;       :field Initial (1)
"RTN","A1AEUTLC",179,0)
 ; output to current device (definition):
"RTN","A1AEUTLC",180,0)
 ;   IEN  Designation  Stream  Subject  Status  User
"RTN","A1AEUTLC",181,0)
 ; output in silent mode:
"RTN","A1AEUTLC",182,0)
 ;   [Stream]Subject|Status|User
"RTN","A1AEUTLC",183,0)
 ;
"RTN","A1AEUTLC",184,0)
 ; Fields IEN (.001) and Patch Designation (.01) are provided by File
"RTN","A1AEUTLC",185,0)
 ; Manager and are not part of this identifier. Everything after that
"RTN","A1AEUTLC",186,0)
 ; - the spaces, field Abbreviation (.05) of file DHCP Patch Stream
"RTN","A1AEUTLC",187,0)
 ; (11007.1) record pointed to by field Patch Stream (.2), truncated
"RTN","A1AEUTLC",188,0)
 ; field Patch Subject (5), abbreviated field Status of Patch (8), and
"RTN","A1AEUTLC",189,0)
 ; abbreviated field Initial (1) of file New Person (200) record of
"RTN","A1AEUTLC",190,0)
 ; field User Entering (9) - are output as part of this write
"RTN","A1AEUTLC",191,0)
 ; identifier. If this Patch Module supports only a single patch stream
"RTN","A1AEUTLC",192,0)
 ; then field .2 will be empty, so it will be omitted from this ID.
"RTN","A1AEUTLC",193,0)
 ;
"RTN","A1AEUTLC",194,0)
 ; output to current device (sample):
"RTN","A1AEUTLC",195,0)
 ;
"RTN","A1AEUTLC",196,0)
 ; Select DHCP PATCHES PATCH DESIGNATION: ??
"RTN","A1AEUTLC",197,0)
 ;
"RTN","A1AEUTLC",198,0)
 ;   Choose from:
"RTN","A1AEUTLC",199,0)
 ;   12           TIU*1*246    [FV]TESTING TESTING               UND TOA
"RTN","A1AEUTLC",200,0)
 ;   13           TIU*1*10002  [OV]TEST                          UND TOA
"RTN","A1AEUTLC",201,0)
 ;   14           ZZZ*2*10001  [OV]TEST                          VER USP
"RTN","A1AEUTLC",202,0)
 ;
"RTN","A1AEUTLC",203,0)
ASUBCNG(D0) ; xref ASUBCNG on file 11007.1
"RTN","A1AEUTLC",204,0)
 ; called by xref ASUBCNG on file 11007.1
"RTN","A1AEUTLC",205,0)
 ; input:
"RTN","A1AEUTLC",206,0)
 ;   D0  = IEN of the PATCH STREAM entry being edited
"RTN","A1AEUTLC",207,0)
 ;   DUZ = User changing the site's SUBSCRIPTION
"RTN","A1AEUTLC",208,0)
 ;
"RTN","A1AEUTLC",209,0)
 ; This code forces new entries in the SUBSCRIPTION DATE and RESPONSIBLE
"RTN","A1AEUTLC",210,0)
 ; OFFICIAL fields when a new Patch Stream is toggled as the
"RTN","A1AEUTLC",211,0)
 ; SUBSCRIPTION stream. We may wish to add code to force an entry into
"RTN","A1AEUTLC",212,0)
 ; COMMENTS field associated with this change to fully document the
"RTN","A1AEUTLC",213,0)
 ; rationale for changing a site's SUBSCRIPTION.
"RTN","A1AEUTLC",214,0)
 ;
"RTN","A1AEUTLC",215,0)
STRMSUBJ(IDLEN,PATCH,DELIM) ; [Stream]Subject
"RTN","A1AEUTLC",216,0)
 ;;private;function;clean;silent;SAC-compliant
"RTN","A1AEUTLC",217,0)
 ; called by: ID11005
"RTN","A1AEUTLC",218,0)
 ; calls: none
"RTN","A1AEUTLC",219,0)
 ; throughput:
"RTN","A1AEUTLC",220,0)
 ;   IDLEN: length available left for identifier, updated
"RTN","A1AEUTLC",221,0)
 ; input:
"RTN","A1AEUTLC",222,0)
 ;   PATCH = patch's header node value
"RTN","A1AEUTLC",223,0)
 ;   DELIM = ID-field delimiter
"RTN","A1AEUTLC",224,0)
 ;   file DHCP Patches (11005), current record:
"RTN","A1AEUTLC",225,0)
 ;     field Patch Stream (.2)
"RTN","A1AEUTLC",226,0)
 ;       :file DHCP Patch Stream (11007.1)
"RTN","A1AEUTLC",227,0)
 ;       :field Abbreviation (.05)
"RTN","A1AEUTLC",228,0)
 ;     field Patch Subject (5)
"RTN","A1AEUTLC",229,0)
 ;     field Status of Patch (8)
"RTN","A1AEUTLC",230,0)
 ;       :DD definition of set of codes
"RTN","A1AEUTLC",231,0)
 ; output = [Stream]Subject
"RTN","A1AEUTLC",232,0)
 ;
"RTN","A1AEUTLC",233,0)
PRIMSTRM() ; return primary stream for this forum system
"RTN","A1AEUTLC",234,0)
 ;;private;function;clean;silent;SAC-compliant
"RTN","A1AEUTLC",235,0)
 ; called by: SEQ, NUM
"RTN","A1AEUTLC",236,0)
 ; calls: IX1^DIK
"RTN","A1AEUTLC",237,0)
 ; input: index PRIM of file DHCP Patch Stream (11007.1)
"RTN","A1AEUTLC",238,0)
 ; output = field Patch Number Start (.001/IEN) of primary stream
"RTN","A1AEUTLC",239,0)
 ;   if file contains no records, initialize FOIA VISTA record
"RTN","A1AEUTLC",240,0)
 ;
"RTN","A1AEUTLC",241,0)
ENVER ; option A1AE POST VERIFY
"RTN","A1AEUTLC",242,0)
 ; [Actually Verify Patches Verified by Postmaster]
"RTN","A1AEUTLC",243,0)
 ; for permitting verifiers to clean up patches that had to be verified
"RTN","A1AEUTLC",244,0)
 ; by the Postmaster for version 2.0 of the patch module.
"RTN","A1AEUTLC",245,0)
 ; Now obsolete, but keep for now for history.
"RTN","A1AEUTLC",246,0)
 ;
"RTN","A1AEUTLC",247,0)
 ; 1. instructions
"RTN","A1AEUTLC",248,0)
 ;
"RTN","A1AEUTLC",249,0)
 W !!?27,"*** NOTE ***"
"RTN","A1AEUTLC",250,0)
 W !!?3,*7
"RTN","A1AEUTLC",251,0)
 W "This option will update the Verified information section of a patch"
"RTN","A1AEUTLC",252,0)
 W !?3,"to a valid verifier, yourself, rather than the Postmaster."
"RTN","A1AEUTLC",253,0)
 W !!?3
"RTN","A1AEUTLC",254,0)
 W "It will put your name in as the Verifier and assign the current date"
"RTN","A1AEUTLC",255,0)
 W !?3,"as the date the patch was verified."
"RTN","A1AEUTLC",256,0)
 W !!?3
"RTN","A1AEUTLC",257,0)
 W "Once you have verified the patch it will not appear as new again"
"RTN","A1AEUTLC",258,0)
 W !?3
"RTN","A1AEUTLC",259,0)
 W "to the user; the 'New Patch Bulletin' will not be sent since these"
"RTN","A1AEUTLC",260,0)
 W !?3,"occurred when the patch was originally completed."
"RTN","A1AEUTLC",261,0)
 ;
"RTN","A1AEUTLC",262,0)
 N A1AEQUIT S A1AEUIT=0
"RTN","A1AEUTLC",263,0)
 F  D  Q:A1AEQUIT
"RTN","A1AEUTLC",264,0)
 . ;
"RTN","A1AEUTLC",265,0)
 . ; 2. select patch
"RTN","A1AEUTLC",266,0)
 . ;
"RTN","A1AEUTLC",267,0)
 . N Y
"RTN","A1AEUTLC",268,0)
 . D
"RTN","A1AEUTLC",269,0)
 . . N DIC S DIC("A")="Select PATCH: "
"RTN","A1AEUTLC",270,0)
 . . S DIC("S")="I $$EASCREEN^A1AEUTL(^(0))"
"RTN","A1AEUTLC",271,0)
 . . S DIC="^A1AE(11005,"
"RTN","A1AEUTLC",272,0)
 . . S DIC(0)="AEMQ"
"RTN","A1AEUTLC",273,0)
 . . W !
"RTN","A1AEUTLC",274,0)
 . . D ^DIC
"RTN","A1AEUTLC",275,0)
 . S A1AEQUIT=Y<0
"RTN","A1AEUTLC",276,0)
 . Q:A1AEQUIT
"RTN","A1AEUTLC",277,0)
 . N DA S DA=+Y
"RTN","A1AEUTLC",278,0)
 . N A1AEPD S A1AEPD=$P(Y,U,2)
"RTN","A1AEUTLC",279,0)
 . K Y
"RTN","A1AEUTLC",280,0)
 . ;
"RTN","A1AEUTLC",281,0)
 . ; 3. confirm verification
"RTN","A1AEUTLC",282,0)
 . ;
"RTN","A1AEUTLC",283,0)
 . N %DT S %DT=""
"RTN","A1AEUTLC",284,0)
 . N X S X="T"
"RTN","A1AEUTLC",285,0)
 . D ^%DT
"RTN","A1AEUTLC",286,0)
 . S DT=Y
"RTN","A1AEUTLC",287,0)
 . ;
"RTN","A1AEUTLC",288,0)
 . D
"RTN","A1AEUTLC",289,0)
 . . N A1AERD,Y
"RTN","A1AEUTLC",290,0)
 . . S A1AERD("A")="Are you sure you want to verify patch "_A1AEPD_"? "
"RTN","A1AEUTLC",291,0)
 . . S A1AERD(0)="S"
"RTN","A1AEUTLC",292,0)
 . . S A1AERD(1)="Yes^assign yourself as the Verifier"
"RTN","A1AEUTLC",293,0)
 . . S A1AERD(2)="No^leave the verifier as the Postmaster"
"RTN","A1AEUTLC",294,0)
 . . S A1AERD("B")=2
"RTN","A1AEUTLC",295,0)
 . . D SET^A1AERD
"RTN","A1AEUTLC",296,0)
 . S A1AEQUIT=X["^"
"RTN","A1AEUTLC",297,0)
 . Q:A1AEQUIT
"RTN","A1AEUTLC",298,0)
 . ;
"RTN","A1AEUTLC",299,0)
 . ; 4. verify patch
"RTN","A1AEUTLC",300,0)
 . ;
"RTN","A1AEUTLC",301,0)
 . I $E(X,1)["Y" D
"RTN","A1AEUTLC",302,0)
 . . W !!?3,"...please wait ",A1AEPD," is being verified..."
"RTN","A1AEUTLC",303,0)
 . . N DIE S DIE="^A1AE(11005,"
"RTN","A1AEUTLC",304,0)
 . . N DR S DR="8////v;11////"_DT_";14////"_DUZ
"RTN","A1AEUTLC",305,0)
 . . N DE,DQ
"RTN","A1AEUTLC",306,0)
 . . D ^DIE
"RTN","A1AEUTLC",307,0)
 . . W "done"
"RTN","A1AEUTLC",308,0)
 . . Q
"RTN","A1AEUTLC",309,0)
 . Q
"RTN","A1AEUTLC",310,0)
 ;
"RTN","A1AEUTLC",311,0)
 D Q^A1AEPH1 ; cleanup
"RTN","A1AEUTLC",312,0)
 ;
"RTN","A1AEUTLC",313,0)
 QUIT  ; end of ENVER
"RTN","A1AEUTLC",314,0)
 ;
"RTN","A1AEVP")
0^44^B32575622
"RTN","A1AEVP",1,0)
A1AEVP ;isa/rmo,mjk-screen display and print of new verified patches ;1987-11-24T11:00
"RTN","A1AEVP",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEVP",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEVP",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEVP",5,0)
 ;
"RTN","A1AEVP",6,0)
 ;
"RTN","A1AEVP",7,0)
 ;primary change history
"RTN","A1AEVP",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEVP",9,0)
 ;
"RTN","A1AEVP",10,0)
 ;
"RTN","A1AEVP",11,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;12/02/92
"RTN","A1AEVP",12,0)
DSPNEW D CHKNEW G Q:'Y
"RTN","A1AEVP",13,0)
 W !!,"..please wait checking number of new patches for your selected package(s).." S IOP="HOME" D ^%ZIS K IOP,^TMP("A1AE",$J,"SCN"),A1AEPKIF D GETPKG G Q:'$D(^TMP("A1AE",$J,"SCN")) S A1AEHD="Number of New DHCP Patches" D HD S A1AEPKNM=""
"RTN","A1AEVP",14,0)
 F A1AEI1=0:0 S A1AEPKNM=$O(^TMP("A1AE",$J,"SCN",A1AEPKNM)) Q:A1AEPKNM=""  I $P(^TMP("A1AE",$J,"SCN",A1AEPKNM),"^",1) S A1AENEW="" D SCNPRT
"RTN","A1AEVP",15,0)
 W:'$D(A1AENEW) !!?3,"...no new patches for your selected package(s)..." D CRCHK:($Y+8)>IOSL G Q
"RTN","A1AEVP",16,0)
 ;
"RTN","A1AEVP",17,0)
SCNPRT D HD:($Y+4)>IOSL W !,$P(A1AEPKNM,"-",1),?$X+(4-$L($P(A1AEPKNM,"-",1))),"-",$E($P(A1AEPKNM,"-",2),1,14),?25,$P(^TMP("A1AE",$J,"SCN",A1AEPKNM),"^",1) S Y=$P(^TMP("A1AE",$J,"SCN",A1AEPKNM),"^",2) W ?35 D DT^DIQ
"RTN","A1AEVP",18,0)
 Q
"RTN","A1AEVP",19,0)
 ;
"RTN","A1AEVP",20,0)
PRTNEW D CHKNEW
"RTN","A1AEVP",21,0)
 S A1AEVPR="" K ^TMP("A1AE",$J,"SCN"),A1AEPKIF D @($S($D(^A1AE(11007,"AU",DUZ)):"PKGPMT",1:"PKGSEL")) G Q:X="^"!($D(A1AENOSL)) S PGM="START^A1AEVP",VAR=$S($D(A1AEPKIF):"A1AEPKIF^DUZ^A1AEVPR",1:"DUZ^A1AEVPR") W ! D ZIS^A1AEUTL1 G Q:POP
"RTN","A1AEVP",22,0)
 ;
"RTN","A1AEVP",23,0)
START U IO D GETPKG G ENDPRT:'$D(^TMP("A1AE",$J,"SCN")) S A1AEHD="New DHCP Patches",(A1AEPKNM,A1AEOUT)="",^UTILITY($J,1)="D HD^A1AEPH2" F A1AEI=0:0 S A1AEPKNM=$O(^TMP("A1AE",$J,"SCN",A1AEPKNM)) Q:A1AEPKNM=""!(A1AEOUT["^")  D PRT
"RTN","A1AEVP",24,0)
ENDPRT W:'$D(^TMP("A1AE",$J,"SCN")) !?3,"...no new patches for your selected package(s)" G Q
"RTN","A1AEVP",25,0)
 ;
"RTN","A1AEVP",26,0)
PKGPMT R !!,"Do you want to Print Patches for a Specific Package? No// ",X:DTIME G Q:'$T!(X="^") S:X="" X="N" G PKGSEL:"Yy"[$E(X,1) Q:"Nn"[$E(X,1)  W:X'["?" *7 D PKGHLP G PKGPMT
"RTN","A1AEVP",27,0)
 ;
"RTN","A1AEVP",28,0)
PKGHLP W !!,"Enter Yes to print patches for any package in the Patch File.",!,"Enter No to print patches for all your selected packages."
"RTN","A1AEVP",29,0)
 Q
"RTN","A1AEVP",30,0)
 ;
"RTN","A1AEVP",31,0)
PKGSEL S DIC("S")="I $P(^(0),U,2)=""Y""!($P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+Y))))" D PKG^A1AEUTL S:'$D(A1AEPK) A1AENOSL="" Q:$D(A1AENOSL)  D PKGADD:'$D(^A1AE(11007,"AU",DUZ,A1AEPKIF))
"RTN","A1AEVP",32,0)
 Q
"RTN","A1AEVP",33,0)
 ;
"RTN","A1AEVP",34,0)
PKGADD W !!,"Do you want to receive automatic notification and printing",!,"of ",A1AEPKNM,"? No// " R X:DTIME Q:'$T!(X="^")  S:X="" X="N" I "NYny"'[$E(X,1) W:X'["?" *7 W !!,"Enter Y to Add ",A1AEPKNM,", or N continue." G PKGADD
"RTN","A1AEVP",35,0)
 I "Yy"[$E(X,1) D SETNOD^A1AEAU
"RTN","A1AEVP",36,0)
 Q
"RTN","A1AEVP",37,0)
 ;
"RTN","A1AEVP",38,0)
PRT S A1AEPD="" F A1AEI1=0:0 S A1AEPD=$O(^TMP("A1AE",$J,"SCN",A1AEPKNM,A1AEPD)) Q:A1AEPD=""!(A1AEOUT["^")  D PRT1
"RTN","A1AEVP",39,0)
 Q
"RTN","A1AEVP",40,0)
 ;
"RTN","A1AEVP",41,0)
PRT1 F A1AEIFN=0:0 S A1AEIFN=+$O(^TMP("A1AE",$J,"SCN",A1AEPKNM,A1AEPD,A1AEIFN)) Q:'A1AEIFN!(A1AEOUT["^")  S DIWF="B4|",D0=A1AEIFN K ^UTILITY($J,"W"),DXS D HD^A1AEPH2,^A1AEP K DN,DXS,^UTILITY($J,"W")
"RTN","A1AEVP",42,0)
 Q
"RTN","A1AEVP",43,0)
 ;
"RTN","A1AEVP",44,0)
Q W ! K ^UTILITY($J),DN,DXS,A1AEPD,A1AEPK,A1AEOUT,A1AEIFN,^TMP("A1AE",$J,"SCN"),A1AELTP,A1AEDTV,A1AEPKIF,A1AEPKNM,A1AEPGE,A1AEVPR,A1AEHD,A1AEI,A1AEI1,A1AETOT,A1AENOSL,A1AENEW,A1AEPGE,POP,PGM,VAR D CLOSE^A1AEUTL1
"RTN","A1AEVP",45,0)
 Q
"RTN","A1AEVP",46,0)
 ;
"RTN","A1AEVP",47,0)
GETPKG I $D(A1AEPKIF) D GETDTV Q
"RTN","A1AEVP",48,0)
 F A1AEPKIF=0:0 S A1AEPKIF=+$O(^A1AE(11007,"AU",DUZ,A1AEPKIF)) Q:'A1AEPKIF  I $P(^A1AE(11007,A1AEPKIF,0),"^",2)="Y"!($P(^(0),"^",4)="y") W "." D GETDTV
"RTN","A1AEVP",49,0)
 Q
"RTN","A1AEVP",50,0)
 ;
"RTN","A1AEVP",51,0)
GETDTV Q:'$D(^DIC(9.4,A1AEPKIF,0))  S A1AELTP=+$O(^A1AE(11005,"AU",DUZ,A1AEPKIF,0)) S:'A1AELTP A1AELTP=9999999 S A1AEPKNM=$P(^DIC(9.4,A1AEPKIF,0),"^",2)_"-"_$P(^DIC(9.4,A1AEPKIF,0),"^",1) I '$D(A1AEVPR) S A1AETOT=0
"RTN","A1AEVP",52,0)
 F A1AEDTV=0:0 S A1AEDTV=+$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV)) Q:'A1AEDTV  D GETIFN
"RTN","A1AEVP",53,0)
 I '$D(A1AEVPR) S $P(^TMP("A1AE",$J,"SCN",A1AEPKNM),"^",1)=A1AETOT,$P(^TMP("A1AE",$J,"SCN",A1AEPKNM),"^",2)=$S(A1AELTP=9999999:"Never Printed",1:9999999-A1AELTP)
"RTN","A1AEVP",54,0)
 Q
"RTN","A1AEVP",55,0)
 ;
"RTN","A1AEVP",56,0)
GETIFN F A1AEIFN=0:0 S A1AEIFN=+$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV,A1AEIFN)) Q:'A1AEIFN  I '$D(^A1AE(11005,A1AEIFN,2,DUZ)) S:'$D(A1AEVPR) A1AETOT=A1AETOT+1 D SETLOC:$D(A1AEVPR)
"RTN","A1AEVP",57,0)
 Q
"RTN","A1AEVP",58,0)
 ;
"RTN","A1AEVP",59,0)
SETLOC S ^TMP("A1AE",$J,"SCN",A1AEPKNM,$S($D(^A1AE(11005,A1AEIFN,0)):$P(^(0),"^",1),1:"UNKNOWN"),A1AEIFN)=""
"RTN","A1AEVP",60,0)
 Q
"RTN","A1AEVP",61,0)
 ;
"RTN","A1AEVP",62,0)
HD S:'$D(A1AEPGE) A1AEPGE=0 D CRCHK W @IOF,!,A1AEHD S A1AEPGE=A1AEPGE+1,Y=DT W ?55 D DT^DIQ W ?70,"Page: ",A1AEPGE W ! F I=1:1:78 W "="
"RTN","A1AEVP",63,0)
 W !!,"Package",?25,"Number",?35,"Date Last Printed",!,"-------------------",?25,"------",?35,"-----------------"
"RTN","A1AEVP",64,0)
 Q
"RTN","A1AEVP",65,0)
 ;
"RTN","A1AEVP",66,0)
CRCHK I A1AEPGE,$E(IOST,1)="C" W !!,"Press RETURN to continue " R X:DTIME
"RTN","A1AEVP",67,0)
 Q
"RTN","A1AEVP",68,0)
 ;
"RTN","A1AEVP",69,0)
CHKNEW S %DT="",X="T" D ^%DT S DT=Y,Y=1 I '$D(^A1AE(11007,"AU",DUZ)) W !!?3,*7,"You have not selected any packages for automatic notification and",!?3,"printing of patches." S Y=0
"RTN","A1AEVP",70,0)
 Q
"RTN","A1AEVP1")
0^45^B8230298
"RTN","A1AEVP1",1,0)
A1AEVP1 ;isa/rmo,pke-update as printed ;2014-03-28T17:39
"RTN","A1AEVP1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEVP1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEVP1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEVP1",5,0)
 ;
"RTN","A1AEVP1",6,0)
 ;
"RTN","A1AEVP1",7,0)
 ;primary change history
"RTN","A1AEVP1",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEVP1",9,0)
 ;1992-12-02: version 2.2 released
"RTN","A1AEVP1",10,0)
 ;
"RTN","A1AEVP1",11,0)
 S A1AEUSR=DUZ,A1AEUSNM=$P(^VA(200,DUZ,0),U)
"RTN","A1AEVP1",12,0)
 W !?2,"Are you sure you want to update the print status"
"RTN","A1AEVP1",13,0)
 S A1AERD("A")="     for ALL your selected packages ? "
"RTN","A1AEVP1",14,0)
 ;S A1AERD("A")="Are you sure you want to update the print status for ALL your selected packages ? "
"RTN","A1AEVP1",15,0)
 S A1AERD(1)="Yes^update your print status of released patches"
"RTN","A1AEVP1",16,0)
 S A1AERD(2)="No^do not update your print status"
"RTN","A1AEVP1",17,0)
 S A1AERD(0)="S",A1AERD("B")=2 D SET^A1AERD K A1AERD D UPDATE:"Y"[$E(X,1)
"RTN","A1AEVP1",18,0)
 ;
"RTN","A1AEVP1",19,0)
Q K A1AEUSNM,A1AEDTV,A1AEIFN,A1AEPKIF,A1AEUSR
"RTN","A1AEVP1",20,0)
 Q
"RTN","A1AEVP1",21,0)
 ;
"RTN","A1AEVP1",22,0)
UPDATE W !!,"Overriding patch print status for ",A1AEUSNM,"'s selected packages.",! S %DT="",X="T" D ^%DT S DT=Y
"RTN","A1AEVP1",23,0)
 F A1AEPKIF=0:0 S A1AEPKIF=$O(^A1AE(11007,"AU",A1AEUSR,A1AEPKIF)) Q:'A1AEPKIF  I $D(^A1AE(11007,A1AEPKIF,0)),$P(^(0),"^",2)="Y",$D(^DIC(9.4,A1AEPKIF,0)) W !?3,"Updating print status for ",$P(^(0),"^",2)," patches..." D CHKDTV
"RTN","A1AEVP1",24,0)
 Q
"RTN","A1AEVP1",25,0)
 ;
"RTN","A1AEVP1",26,0)
CHKDTV F A1AEDTV=0:0 S A1AEDTV=+$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV)) Q:'A1AEDTV  F A1AEIFN=0:0 S A1AEIFN=+$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV,A1AEIFN)) Q:'A1AEIFN  I '$D(^A1AE(11005,A1AEIFN,2,A1AEUSR)) D SETPRT
"RTN","A1AEVP1",27,0)
 Q
"RTN","A1AEVP1",28,0)
 ;
"RTN","A1AEVP1",29,0)
SETPRT W !?6,$P(^A1AE(11005,A1AEIFN,0),"^")
"RTN","A1AEVP1",30,0)
 L +^A1AE(11005,A1AEIFN,2):0 E  W $C(7),"Couldn't obtain lock at SETPRT. Try again later." QUIT
"RTN","A1AEVP1",31,0)
 S:'$D(^A1AE(11005,A1AEIFN,2,0)) ^(0)="^11005.02P^^"
"RTN","A1AEVP1",32,0)
 S:'$D(^A1AE(11005,A1AEIFN,2,A1AEUSR,0)) $P(^(0),"^",1,2)=A1AEUSR_"^"_DT,$P(^(0),"^",4)=$P(^A1AE(11005,A1AEIFN,2,0),"^",4)+1
"RTN","A1AEVP1",33,0)
 S $P(^A1AE(11005,A1AEIFN,2,A1AEUSR,0),"^",3)=DT
"RTN","A1AEVP1",34,0)
 S $P(^A1AE(11005,A1AEIFN,2,0),"^",3)=A1AEUSR
"RTN","A1AEVP1",35,0)
 S ^A1AE(11005,"AU",A1AEUSR,+$P(^A1AE(11005,A1AEIFN,0),"^",2),(9999999-DT))=""
"RTN","A1AEVP1",36,0)
 L -^A1AE(11005,A1AEIFN,2)
"RTN","A1AEVP1",37,0)
 Q
"RTN","A1AEZCON")
0^46^B11798962
"RTN","A1AEZCON",1,0)
A1AEZCON ;isa/rmo ;2014-03-28T17:00
"RTN","A1AEZCON",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEZCON",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEZCON",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEZCON",5,0)
 ;
"RTN","A1AEZCON",6,0)
 ;
"RTN","A1AEZCON",7,0)
 ;primary change history
"RTN","A1AEZCON",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEZCON",9,0)
 ;Version 2.0 ; *** NOT FOR GENERAL DISTRIBUTION ***
"RTN","A1AEZCON",10,0)
 ;
"RTN","A1AEZCON",11,0)
 ;
"RTN","A1AEZCON",12,0)
CONPAT ;Package prefix conversion entry point.
"RTN","A1AEZCON",13,0)
 I '$D(^XUSEC("A1AE MGR",DUZ)) W !,*7,"You must hold the 'A1AE MGR' key to proceed with this option." G Q
"RTN","A1AEZCON",14,0)
 W !!,*7,"WARNING: This routine ASSUMES you are dealing with a prefix change within",!?9,"the same package in the patch module."
"RTN","A1AEZCON",15,0)
 W !!?9,"The routine also ASSUMES you have updated the prefix in the",!?9,"package file to the 'NEW' one for future patches."
"RTN","A1AEZCON",16,0)
 W !!?9,"Do NOT use this routine to transfer patches from one package",!?9,"name to another."
"RTN","A1AEZCON",17,0)
 S DIC("A")="Select PACKAGE: ",DIC="^A1AE(11007,",DIC(0)="AEMQ" W ! D ^DIC K DIC G Q:Y<0 S A1AEPKIF=+Y
"RTN","A1AEZCON",18,0)
 R !!,"'CURRENT' PACKAGE PREFIX IN PATCH FILE: ",X:DTIME G Q:'$T!(X="")!(X["^") S A1AECPRE=X,A1AEIFN=$O(^A1AE(11005,"D",A1AEPKIF,0))
"RTN","A1AEZCON",19,0)
 G Q:'$D(^A1AE(11005,+A1AEIFN,0)) I $P($P(^(0),"^"),"*",1)'=A1AECPRE W !?3,*7,"Invalid Namespace for selected package!" G Q
"RTN","A1AEZCON",20,0)
 R !,"'NEW'     PACKAGE PREFIX IN PACKAGE FILE: ",X:DTIME G Q:'$T!(X="")!(X["^") S A1AENPRE=X I '$D(^DIC(9.4,"C",X,A1AEPKIF)) W !?3,*7,"The 'NEW' prefix must be in the package file to continue!" G Q
"RTN","A1AEZCON",21,0)
 S A1AERD("A")="Are you sure you want to convert all '"_A1AECPRE_"' patches to '"_A1AENPRE_"'? ",A1AERD(0)="S",A1AERD(1)="Yes^convert.",A1AERD(2)="No^not convert.",A1AERD("B")=2 D SET^A1AERD K A1AERD G Q:X'["Yes"
"RTN","A1AEZCON",22,0)
 W !!,"...searching for patches prefixed by ",A1AECPRE,!
"RTN","A1AEZCON",23,0)
 S A1AEPD="" F A1AELP=0:0 S A1AEPD=$O(^A1AE(11005,"B",A1AEPD)) Q:A1AEPD=""  I $P(A1AEPD,"*")=A1AECPRE S A1AEIFN=$O(^(A1AEPD,0)) I A1AEIFN,$D(^A1AE(11005,A1AEIFN,0)) D CHGPAT
"RTN","A1AEZCON",24,0)
Q K A1AEIFN,A1AELP,A1AEPD,A1AEPKIF,A1AECPRE,A1AENPRE,A1AEPAT,X,Y
"RTN","A1AEZCON",25,0)
 Q
"RTN","A1AEZCON",26,0)
 ;
"RTN","A1AEZCON",27,0)
CHGPAT S A1AEPAT=A1AENPRE_"*"_$P(A1AEPD,"*",2)_"*"_$P(A1AEPD,"*",3) I $D(^A1AE(11005,"B",A1AEPAT)) W !,"...",A1AEPD," not changed ",A1AEPAT," already exists" Q
"RTN","A1AEZCON",28,0)
 S DA=A1AEIFN,DIE="^A1AE(11005,",DR=".01////"_A1AEPAT D ^DIE K DA,DE,DQ,DIE W !,"...",A1AEPD," changed to ",A1AEPAT
"RTN","A1AEZCON",29,0)
 Q
"RTN","A1AEZTST")
0^47^B2731603
"RTN","A1AEZTST",1,0)
A1AEZTST ;isa/pke-check messages ;2014-04-16T19:54
"RTN","A1AEZTST",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 48
"RTN","A1AEZTST",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEZTST",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEZTST",5,0)
 ;
"RTN","A1AEZTST",6,0)
 ;
"RTN","A1AEZTST",7,0)
 ;primary change history
"RTN","A1AEZTST",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEZTST",9,0)
 ;
"RTN","A1AEZTST",10,0)
 ;
"RTN","A1AEZTST",11,0)
ENC S (Z,Z1)="Completed/Unverified",Z3="",TOT=0 D SIZE Q
"RTN","A1AEZTST",12,0)
ENV S (Z,Z1)="Verified ",Z3="SEQ #",TOT=0 D SIZE Q
"RTN","A1AEZTST",13,0)
 ;
"RTN","A1AEZTST",14,0)
ENIN W !!?10,"Q-PATCH input routines",!!
"RTN","A1AEZTST",15,0)
 S TOT=0
"RTN","A1AEZTST",16,0)
        S %1=$O(^XMB(3.7,.5,2,"B","Q-PATCH")),QUE=$O(^XMB(3.7,.5,2,"B",%1,0)) I 'QUE Q
"RTN","A1AEZTST",17,0)
 S XMZ=0 F  S XMZ=$O(^XMB(3.7,.5,2,QUE,1,XMZ)) Q:'XMZ  DO
"RTN","A1AEZTST",18,0)
 .I '$D(^XMB(3.9,XMZ,0)) Q
"RTN","A1AEZTST",19,0)
 .W !,$P(^(0),"^")
"RTN","A1AEZTST",20,0)
 .S (I,X,Y)=0
"RTN","A1AEZTST",21,0)
 .F  S X=$O(^XMB(3.9,XMZ,2,X)) Q:X=""  S I=I+1,Y=Y+$L(^(X,0)) I I#100=0 W "." I $X>70 W !
"RTN","A1AEZTST",22,0)
 .S TOT=TOT+Y
"RTN","A1AEZTST",23,0)
 .W !?40,Y,?60,"Total KB = ",$P(TOT/1024,"."),!!
"RTN","A1AEZTST",24,0)
 .R ZZZ:0 I  Q
"RTN","A1AEZTST",25,0)
 Q
"RTN","A1AEZTST",26,0)
 ;
"RTN","A1AEZTST",27,0)
SIZE F Z2=0:1 S Z=$O(^XMB(3.9,"B",Z)) Q:Z'[Z1  S XMZ=$O(^(Z,0)) I XMZ DO
"RTN","A1AEZTST",28,0)
 .I Z'[Z3 Q
"RTN","A1AEZTST",29,0)
 .S (I,X,Y)=0
"RTN","A1AEZTST",30,0)
 .F  S X=$O(^XMB(3.9,XMZ,2,X)) Q:X=""  S I=I+1,Y=Y+$L(^(X,0)) I I#100=0 W "." I $X>70 W !
"RTN","A1AEZTST",31,0)
 .S TOT=TOT+Y
"RTN","A1AEZTST",32,0)
 .W !?3,Y,?20,Z,?60,"Total KB = ",$P(TOT/1024,"."),!
"RTN","A1AEZTST",33,0)
 .R ZZZ:0 I  Q
"RTN","A1AEZTST",34,0)
 Q
"RTN","A1AEZTST",35,0)
 ;
"SEC","^DIC",11004,11004,0,"AUDIT")

"SEC","^DIC",11004,11004,0,"DD")
#
"SEC","^DIC",11004,11004,0,"DEL")
#
"SEC","^DIC",11004,11004,0,"LAYGO")

"SEC","^DIC",11004,11004,0,"RD")

"SEC","^DIC",11004,11004,0,"WR")

"SEC","^DIC",11005,11005,0,"DD")
#
"SEC","^DIC",11005,11005,0,"DEL")
#
"SEC","^DIC",11005.2,11005.2,0,"AUDIT")
@
"SEC","^DIC",11005.2,11005.2,0,"DD")
@
"SEC","^DIC",11005.2,11005.2,0,"DEL")
@
"SEC","^DIC",11005.2,11005.2,0,"LAYGO")
@
"SEC","^DIC",11005.2,11005.2,0,"RD")

"SEC","^DIC",11005.2,11005.2,0,"WR")
@
"SEC","^DIC",11005.5,11005.5,0,"AUDIT")
@
"SEC","^DIC",11005.5,11005.5,0,"DD")
@
"SEC","^DIC",11005.5,11005.5,0,"DEL")
@
"SEC","^DIC",11006,11006,0,"DD")
#
"SEC","^DIC",11006,11006,0,"DEL")
#
"SEC","^DIC",11007,11007,0,"DD")
#
"SEC","^DIC",11007,11007,0,"DEL")
#
"SEC","^DIC",11007.1,11007.1,0,"AUDIT")

"SEC","^DIC",11007.1,11007.1,0,"DD")
#
"SEC","^DIC",11007.1,11007.1,0,"DEL")
#
"SEC","^DIC",11007.1,11007.1,0,"LAYGO")

"SEC","^DIC",11007.1,11007.1,0,"RD")

"SEC","^DIC",11007.1,11007.1,0,"WR")

"SEC","^DIC",11007.2,11007.2,0,"AUDIT")
@
"SEC","^DIC",11007.2,11007.2,0,"DD")
@
"SEC","^DIC",11007.2,11007.2,0,"DEL")
@
"SEC","^DIC",11007.2,11007.2,0,"LAYGO")
@
"SEC","^DIC",11007.2,11007.2,0,"RD")
@
"SEC","^DIC",11007.2,11007.2,0,"WR")
@
"UP",9.4,9.4901,-2)
9.4^22
"UP",9.4,9.4901,-1)
9.49^PAH
"UP",9.4,9.4901,0)
9.4901
"UP",9.4,9.49011,-3)
9.4^22
"UP",9.4,9.49011,-2)
9.49^PAH
"UP",9.4,9.49011,-1)
9.4901^1
"UP",9.4,9.49011,0)
9.49011
"UP",9.6,9.619,-1)
9.6^PAT
"UP",9.6,9.619,0)
9.619
"UP",9.6,9.63,-1)
9.6^10
"UP",9.6,9.63,0)
9.63
"UP",9.7,9.719,-1)
9.7^PAT
"UP",9.7,9.719,0)
9.719
"VER")
8.0^22.2
"^DD",9.4,9.49,1105,0)
PATCH APPLICATION HISTORY^9.4901^^PAH;0
"^DD",9.4,9.4901,0)
PATCH APPLICATION HISTORY SUB-FIELD^^1^4
"^DD",9.4,9.4901,0,"DT")
2940603
"^DD",9.4,9.4901,0,"IX","B",9.4901,.01)

"^DD",9.4,9.4901,0,"NM","PATCH APPLICATION HISTORY")

"^DD",9.4,9.4901,0,"UP")
9.49
"^DD",9.4,9.4901,.01,0)
PATCH APPLICATION HISTORY^MF^^0;1^K:$L(X)>15!($L(X)<8) X
"^DD",9.4,9.4901,.01,1,0)
^.1
"^DD",9.4,9.4901,.01,1,1,0)
9.4901^B
"^DD",9.4,9.4901,.01,1,1,1)
S ^DIC(9.4,DA(2),22,DA(1),"PAH","B",$E(X,1,30),DA)=""
"^DD",9.4,9.4901,.01,1,1,2)
K ^DIC(9.4,DA(2),22,DA(1),"PAH","B",$E(X,1,30),DA)
"^DD",9.4,9.4901,.01,1,2,0)
9.4^A1AESEQ^MUMPS
"^DD",9.4,9.4901,.01,1,2,1)
D A1AESEQ^A1AEDD1
"^DD",9.4,9.4901,.01,1,2,2)
D KA1AESEQ^A1AEDD1
"^DD",9.4,9.4901,.01,1,2,"%D",0)
^^2^2^3150105^
"^DD",9.4,9.4901,.01,1,2,"%D",1,0)
This cross reference permits the user to rapidly find patches related to 
"^DD",9.4,9.4901,.01,1,2,"%D",2,0)
a package, version, and stream by release sequence number.
"^DD",9.4,9.4901,.01,1,2,"DT")
3150105
"^DD",9.4,9.4901,.01,3)
Answer must be 8-15 characters in length.
"^DD",9.4,9.4901,.01,"DT")
3140821
"^DD",9.4,9.4901,.02,0)
DATE APPLIED^D^^0;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",9.4,9.4901,.02,3)
(No range limit on date)
"^DD",9.4,9.4901,.02,"DT")
3140821
"^DD",9.4,9.4901,.03,0)
APPLIED BY^P200'^VA(200,^0;3^Q
"^DD",9.4,9.4901,.03,"DT")
3140821
"^DD",9.4,9.4901,1,0)
DESCRIPTION^9.49011^^1;0
"^DD",9.4,9.4901,1,21,0)
^^1^1^2940603^
"^DD",9.4,9.4901,1,21,1,0)
This is a description of the patch being distributed with this release.
"^DD",9.4,9.49011,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",9.4,9.49011,0,"DT")
2940603
"^DD",9.4,9.49011,0,"NM","DESCRIPTION")

"^DD",9.4,9.49011,0,"UP")
9.4901
"^DD",9.4,9.49011,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",9.4,9.49011,.01,"DT")
2940603
"^DD",9.6,9.6,.01,0)
NAME^FXJ30^^0;1^D INPUTB^XPDET(.X)
"^DD",9.6,9.6,.01,1,0)
^.1^^-1
"^DD",9.6,9.6,.01,1,1,0)
9.6^B
"^DD",9.6,9.6,.01,1,1,1)
S ^XPD(9.6,"B",$E(X,1,50),DA)=""
"^DD",9.6,9.6,.01,1,1,2)
K ^XPD(9.6,"B",$E(X,1,50),DA)
"^DD",9.6,9.6,.01,3)
Enter Package or Patch Name and version in the format 'PACKAGE nn.n[V|T]n' or 'PATCH*nn.n*nn'.
"^DD",9.6,9.6,.01,7.5)
D PLU96^A1AEDD1
"^DD",9.6,9.6,.01,21,0)
^^2^2^2950105^^^^
"^DD",9.6,9.6,.01,21,1,0)
The name and version number of this Package or Patch.
"^DD",9.6,9.6,.01,21,2,0)
 i.e. KERNEL 8.0T1  or XU*8.0*1
"^DD",9.6,9.6,.01,23,0)
^^5^5^3150617^
"^DD",9.6,9.6,.01,23,1,0)
The pre-lookup transform D PLU96^A1AEDD1 converts the Patch Module format 
"^DD",9.6,9.6,.01,23,2,0)
(e.g. 1*1 or 2) to the KIDS format (e.g. 1.0*1 or 2.0).
"^DD",9.6,9.6,.01,23,3,0)
 
"^DD",9.6,9.6,.01,23,4,0)
This field was added to enable interoperability between the patch module 
"^DD",9.6,9.6,.01,23,5,0)
and KIDS for the Patch Module Client.
"^DD",9.6,9.6,.01,"DT")
3150617
"^DD",9.6,9.6,10,0)
MULTIPLE BUILD^9.63^^10;0
"^DD",9.6,9.6,10,21,0)
^^4^4^2960904^^
"^DD",9.6,9.6,10,21,1,0)
This multiple contains other Builds that will be sent with this package
"^DD",9.6,9.6,10,21,2,0)
for a multi-package distribution. It can also contain a list of patches
"^DD",9.6,9.6,10,21,3,0)
that was rolled up into this Build.  The Type field is used to distinguish
"^DD",9.6,9.6,10,21,4,0)
the difference in its use.
"^DD",9.6,9.6,10,"DT")
2960904
"^DD",9.6,9.6,19,0)
PATCH^9.619PA^^PAT;0
"^DD",9.6,9.619,0)
PATCH SUB-FIELD^^.02^2
"^DD",9.6,9.619,0,"DT")
3140818
"^DD",9.6,9.619,0,"IX","B",9.619,.01)

"^DD",9.6,9.619,0,"NM","PATCH")

"^DD",9.6,9.619,0,"UP")
9.6
"^DD",9.6,9.619,.01,0)
PATCH^P11005'X^A1AE(11005,^0;1^Q
"^DD",9.6,9.619,.01,1,0)
^.1
"^DD",9.6,9.619,.01,1,1,0)
9.619^B
"^DD",9.6,9.619,.01,1,1,1)
S ^XPD(9.6,DA(1),"PAT","B",$E(X,1,30),DA)=""
"^DD",9.6,9.619,.01,1,1,2)
K ^XPD(9.6,DA(1),"PAT","B",$E(X,1,30),DA)
"^DD",9.6,9.619,.01,1,2,0)
^^TRIGGER^9.619^.02
"^DD",9.6,9.619,.01,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^XPD(9.6,D0,"PAT",D1,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$P($G(^A1AE(11005,+DIV,0)),U) X ^DD(9.619,.01,1,2,1.4)
"^DD",9.6,9.619,.01,1,2,1.4)
S DIH=$G(^XPD(9.6,DIV(0),"PAT",DIV(1),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=9.619,DIG=.02 D ^DICR
"^DD",9.6,9.619,.01,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^XPD(9.6,D0,"PAT",D1,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(9.619,.01,1,2,2.4)
"^DD",9.6,9.619,.01,1,2,2.4)
S DIH=$G(^XPD(9.6,DIV(0),"PAT",DIV(1),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=9.619,DIG=.02 D ^DICR
"^DD",9.6,9.619,.01,1,2,"CREATE VALUE")
PATCH
"^DD",9.6,9.619,.01,1,2,"DELETE VALUE")
@
"^DD",9.6,9.619,.01,1,2,"DT")
3140818
"^DD",9.6,9.619,.01,1,2,"FIELD")
PATCH DESIGNATION
"^DD",9.6,9.619,.01,21,0)
^^3^3^3140814^
"^DD",9.6,9.619,.01,21,1,0)
Pointer to DHCP PATCHES [#11005] entry (entries) related to this Build.  
"^DD",9.6,9.619,.01,21,2,0)
As a Build may consist of multiple Builds, thus related to multiple
"^DD",9.6,9.619,.01,21,3,0)
entries in file 11005.
"^DD",9.6,9.619,.01,"DT")
3140818
"^DD",9.6,9.619,.02,0)
PATCH DESIGNATION^FJ30^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",9.6,9.619,.02,3)
Answer must be 1-30 characters in length.
"^DD",9.6,9.619,.02,5,1,0)
9.619^.01^2
"^DD",9.6,9.619,.02,"DT")
3140816
"^DD",9.6,9.63,0)
MULTIPLE BUILD SUB-FIELD^^.02^3
"^DD",9.6,9.63,0,"NM","MULTIPLE BUILD")

"^DD",9.6,9.63,.01,0)
MULTIPLE BUILD^MFX^^0;1^K:$L(X)>50!($L(X)<3) X I $D(X) D INPUTMB^XPDET(.X)
"^DD",9.6,9.63,.01,1,0)
^.1
"^DD",9.6,9.63,.01,1,1,0)
9.63^B
"^DD",9.6,9.63,.01,1,1,1)
S ^XPD(9.6,DA(1),10,"B",X,DA)=""
"^DD",9.6,9.63,.01,1,1,2)
K ^XPD(9.6,DA(1),10,"B",X,DA)
"^DD",9.6,9.63,.01,3)
Enter a Build name
"^DD",9.6,9.63,.01,4)
D HELPMB^XPDET
"^DD",9.6,9.63,.01,21,0)
^^2^2^2960904^^
"^DD",9.6,9.63,.01,21,1,0)
Name of Build that will be part of this multi-package distribution or a
"^DD",9.6,9.63,.01,21,2,0)
patch that is part of this Build definition.
"^DD",9.6,9.63,.01,"DT")
3140917
"^DD",9.7,9.7,.01,0)
NAME^RF^^0;1^K:$L(X)>50!($L(X)<3) X
"^DD",9.7,9.7,.01,1,0)
^.1^^-1
"^DD",9.7,9.7,.01,1,1,0)
9.7^B
"^DD",9.7,9.7,.01,1,1,1)
S ^XPD(9.7,"B",X,DA)=""
"^DD",9.7,9.7,.01,1,1,2)
K ^XPD(9.7,"B",X,DA)
"^DD",9.7,9.7,.01,3)
Answer must be 3-50 characters in length.
"^DD",9.7,9.7,.01,7.5)
D PLU97^A1AEDD1
"^DD",9.7,9.7,.01,21,0)
^^1^1^2950109^^
"^DD",9.7,9.7,.01,21,1,0)
The name and version number of this Package (i.e. Kernel 8.0T1)
"^DD",9.7,9.7,.01,23,0)
^^5^5^3150617^
"^DD",9.7,9.7,.01,23,1,0)
The pre-lookup transform D PLU96^A1AEDD1 converts the Patch Module format
"^DD",9.7,9.7,.01,23,2,0)
(e.g. 1*1 or 2) to the KIDS format (e.g. 1.0*1 or 2.0).
"^DD",9.7,9.7,.01,23,3,0)
 
"^DD",9.7,9.7,.01,23,4,0)
This field was added to enable interoperability between the patch module
"^DD",9.7,9.7,.01,23,5,0)
and KIDS for the Patch Module Client.
"^DD",9.7,9.7,.01,"DEL",1,0)
I $P(^XPD(9.7,DA,0),U,9)<3 D EN^DDIOL($C(7)_$S($P(^(0),U,9)=2:"Cannot delete if Install has started.",1:"You must use the Unload a Distribution option."))
"^DD",9.7,9.7,.01,"DT")
3140814
"^DD",9.7,9.7,19,0)
PATCH^9.719PA^^PAT;0
"^DD",9.7,9.719,0)
PATCH SUB-FIELD^^.02^2
"^DD",9.7,9.719,0,"DT")
3140818
"^DD",9.7,9.719,0,"IX","B",9.719,.01)

"^DD",9.7,9.719,0,"NM","PATCH")

"^DD",9.7,9.719,0,"UP")
9.7
"^DD",9.7,9.719,.01,0)
PATCH^P11005'^A1AE(11005,^0;1^Q
"^DD",9.7,9.719,.01,1,0)
^.1
"^DD",9.7,9.719,.01,1,1,0)
9.719^B
"^DD",9.7,9.719,.01,1,1,1)
S ^XPD(9.7,DA(1),"PAT","B",$E(X,1,30),DA)=""
"^DD",9.7,9.719,.01,1,1,2)
K ^XPD(9.7,DA(1),"PAT","B",$E(X,1,30),DA)
"^DD",9.7,9.719,.01,1,2,0)
^^TRIGGER^9.719^.02
"^DD",9.7,9.719,.01,1,2,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^XPD(9.7,D0,"PAT",D1,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$P($G(^A1AE(11005,+DIV,0)),U) X ^DD(9.719,.01,1,2,1.4)
"^DD",9.7,9.719,.01,1,2,1.4)
S DIH=$G(^XPD(9.7,DIV(0),"PAT",DIV(1),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=9.719,DIG=.02 D ^DICR
"^DD",9.7,9.719,.01,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^XPD(9.7,D0,"PAT",D1,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(9.719,.01,1,2,2.4)
"^DD",9.7,9.719,.01,1,2,2.4)
S DIH=$G(^XPD(9.7,DIV(0),"PAT",DIV(1),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=9.719,DIG=.02 D ^DICR
"^DD",9.7,9.719,.01,1,2,"CREATE VALUE")
PATCH
"^DD",9.7,9.719,.01,1,2,"DELETE VALUE")
@
"^DD",9.7,9.719,.01,1,2,"DT")
3140818
"^DD",9.7,9.719,.01,1,2,"FIELD")
PATCH DESIGNATION
"^DD",9.7,9.719,.01,21,0)
^^3^3^3140814^
"^DD",9.7,9.719,.01,21,1,0)
Pointer to DHCP PATCHES [#11005] entry (entries) related to this Install.
"^DD",9.7,9.719,.01,21,2,0)
As an Install may document a multiple Build, which may, in turn, 
"^DD",9.7,9.719,.01,21,3,0)
represent multiple entries in the DHCP PATCHES [#11005] file.
"^DD",9.7,9.719,.01,"DT")
3140818
"^DD",9.7,9.719,.02,0)
PATCH DESIGNATION^FJ30^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",9.7,9.719,.02,3)
Answer must be 1-30 characters in length.
"^DD",9.7,9.719,.02,5,1,0)
9.719^.01^2
"^DD",9.7,9.719,.02,"DT")
3140816
"^DD",11004,11004,0)
FIELD^^5.6^17
"^DD",11004,11004,0,"DT")
3140812
"^DD",11004,11004,0,"IX","AC",11004.05,.01)

"^DD",11004,11004,0,"IX","AP",11004,7)

"^DD",11004,11004,0,"IX","BA",11004,.01)

"^DD",11004,11004,0,"IX","C",11004,5)

"^DD",11004,11004,0,"IX","CD",11004,18)

"^DD",11004,11004,0,"IX","D",11004,2)

"^DD",11004,11004,0,"IX","PK",11004,40)

"^DD",11004,11004,0,"IX","PS",11004,5)

"^DD",11004,11004,0,"IX","R",11004.03,.01)

"^DD",11004,11004,0,"NM","PATCH")

"^DD",11004,11004,0,"PT",11004,5.2)

"^DD",11004,11004,0,"PT",11004,5.7)

"^DD",11004,11004,0,"VRPK")
A1AE
"^DD",11004,11004,.01,0)
PATCH DESIGNATION^RFJ20X^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<6)!'(X?1U.UN1"*".2N.1P.2N1"*"1N.N) X S A1AEX=11004 D IN^A1AEUTL:$D(X) K A1AEX
"^DD",11004,11004,.01,1,0)
^.1^^-1
"^DD",11004,11004,.01,1,3,0)
11004^BA^MUMPS
"^DD",11004,11004,.01,1,3,1)
S:$P(X,"*",2)=999 ^A1AE(11004,"B",$P(X,"*")_"*DBA*"_$P(X,"*",3),DA)=""
"^DD",11004,11004,.01,1,3,2)
K:$P(X,"*",2)=999 ^A1AE(11004,"B",$P(X,"*")_"*DBA*"_$P(X,"*",3),DA)
"^DD",11004,11004,.01,2)
S Y(0)=Y S:$P(Y,"*",2)=999 $P(Y,"*",2)="DBA"
"^DD",11004,11004,.01,2.1)
S:$P(Y,"*",2)=999 $P(Y,"*",2)="DBA"
"^DD",11004,11004,.01,3)
ANSWER MUST BE 6-20 CHARACTERS IN LENGTH
"^DD",11004,11004,.01,7.5)
D PLU11004^A1AEDD1
"^DD",11004,11004,.01,21,0)
^^1^1^3140110^^^^
"^DD",11004,11004,.01,21,1,0)
Patch Designation has the following format: Package Namespace*Version Number*System Assigned Patch Number.
"^DD",11004,11004,.01,"DT")
3140813
"^DD",11004,11004,.2,0)
PATCH STREAM^RP11007.1'^A1AE(11007.1,^0;20^Q
"^DD",11004,11004,.2,3)
Select a patch stream.
"^DD",11004,11004,.2,9)
^
"^DD",11004,11004,.2,21,0)
^^3^3^3140225^
"^DD",11004,11004,.2,21,1,0)
If this Patch Module supports more than one stream of patches (VA does 
"^DD",11004,11004,.2,21,2,0)
not, OSEHRA does), select the patch stream this patch is part of. 
"^DD",11004,11004,.2,21,3,0)
Otherwise, leave this field empty.
"^DD",11004,11004,.2,23,0)
^^24^24^3140225^
"^DD",11004,11004,.2,23,1,0)
This field is used by ID11004^A1AEUTL, which is called by 
"^DD",11004,11004,.2,23,2,0)
S ^DD(11004,0,"ID","WRITE"), the file's write identifier. The write 
"^DD",11004,11004,.2,23,3,0)
identifier will now include field Abbreviation (.05) of file DHCP Patch 
"^DD",11004,11004,.2,23,4,0)
Stream (11007.1) for the record pointed to by this field, if this field 
"^DD",11004,11004,.2,23,5,0)
is filled in. That is, if this Patch Module supports more than one patch 
"^DD",11004,11004,.2,23,6,0)
stream, an abbreviation of that stream will be included in the write 
"^DD",11004,11004,.2,23,7,0)
identifier to help keep developers and other VISTA hardhats from getting 
"^DD",11004,11004,.2,23,8,0)
confused when they hop from stream to stream. If this Patch Module only 
"^DD",11004,11004,.2,23,9,0)
supports one stream, then no such assistance is needed, so this field is 
"^DD",11004,11004,.2,23,10,0)
left blank to save space and excluded from the write identifier.
"^DD",11004,11004,.2,23,11,0)
 
"^DD",11004,11004,.2,23,12,0)
The field is not set by users. It is set automatically by the Patch 
"^DD",11004,11004,.2,23,13,0)
Module itself when importing patches for redistribution or secondary 
"^DD",11004,11004,.2,23,14,0)
development. During the import process, the patch stream is calculated 
"^DD",11004,11004,.2,23,15,0)
and this field is set.
"^DD",11004,11004,.2,23,16,0)
 
"^DD",11004,11004,.2,23,17,0)
Change History:
"^DD",11004,11004,.2,23,18,0)
 
"^DD",11004,11004,.2,23,19,0)
Monday, 10 February 2014: Frederick D. S. Marshall of the VISTA Expertise 
"^DD",11004,11004,.2,23,20,0)
Network (VEN/TOAD) created this field.
"^DD",11004,11004,.2,23,21,0)
 
"^DD",11004,11004,.2,23,22,0)
Tuesday, 25 February 2014: (VEN/TOAD) Revised Description, wrote 
"^DD",11004,11004,.2,23,23,0)
Technical Description, added Change History, and write-protected the 
"^DD",11004,11004,.2,23,24,0)
field to prevent user editing.
"^DD",11004,11004,.2,"DT")
3140813
"^DD",11004,11004,2,0)
PACKAGE^RP9.4'I^DIC(9.4,^0;2^Q
"^DD",11004,11004,2,1,0)
^.1
"^DD",11004,11004,2,1,1,0)
11004^D
"^DD",11004,11004,2,1,1,1)
S ^A1AE(11004,"D",$E(X,1,30),DA)=""
"^DD",11004,11004,2,1,1,2)
K ^A1AE(11004,"D",$E(X,1,30),DA)
"^DD",11004,11004,2,9)
^
"^DD",11004,11004,2,21,0)
^^2^2^2871110^^^^
"^DD",11004,11004,2,21,1,0)
The Package must reside in the Package File(#9.4) and in the
"^DD",11004,11004,2,21,2,0)
DHCP Patch/Problem File(#11007) to be used in the Patch Module.
"^DD",11004,11004,2,"DT")
3140324
"^DD",11004,11004,3,0)
VERSION^RFXOI^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>10!($L(X)<1) X
"^DD",11004,11004,3,1,0)
^.1^^0
"^DD",11004,11004,3,2)
S Y(0)=Y S Y=$S(Y=999:"DBA",1:Y)
"^DD",11004,11004,3,2.1)
S Y=$S(Y=999:"DBA",1:Y)
"^DD",11004,11004,3,3)
ANSWER MUST BE 1-10 CHARACTERS IN LENGTH
"^DD",11004,11004,3,9)
^
"^DD",11004,11004,3,21,0)
^^3^3^2891206^^^^
"^DD",11004,11004,3,21,1,0)
The most recent Version is used as the default, but other valid
"^DD",11004,11004,3,21,2,0)
Version Numbers may be entered. Version '999' is reserved for DBA
"^DD",11004,11004,3,21,3,0)
type patches.
"^DD",11004,11004,3,"DT")
3140812
"^DD",11004,11004,4,0)
PATCH NUMBER^RNJ5,0I^^0;4^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",11004,11004,4,1,0)
^.1^^0
"^DD",11004,11004,4,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 99999
"^DD",11004,11004,4,9)
^
"^DD",11004,11004,4,21,0)
^^2^2^2861020^^^
"^DD",11004,11004,4,21,1,0)
The patch number is assigned by the system, a number may be
"^DD",11004,11004,4,21,2,0)
re-assigned if an Unverified Patch is Deleted.
"^DD",11004,11004,4,"DT")
3140324
"^DD",11004,11004,5,0)
PATCH SUBJECT^RF^^0;5^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>80!($L(X)<3) X
"^DD",11004,11004,5,1,0)
^.1
"^DD",11004,11004,5,1,1,0)
11004^PS
"^DD",11004,11004,5,1,1,1)
S ^A1AE(11004,"PS",$E(X,1,30),DA)=""
"^DD",11004,11004,5,1,1,2)
K ^A1AE(11004,"PS",$E(X,1,30),DA)
"^DD",11004,11004,5,1,2,0)
11004^C^KWIC
"^DD",11004,11004,5,1,2,1)
F %=1:1 Q:$P(X," ",%,99)=""  S I=$P(X," ",%) I $L(I)>2,$L(I)<31,^DD("KWIC")'[I S ^A1AE(11004,"C",I,DA)=""
"^DD",11004,11004,5,1,2,2)
F %=1:1 Q:$P(X," ",%,99)=""  S I=$P(X," ",%) I $L(I)>2,$L(I)<31 K ^A1AE(11004,"C",I,DA)
"^DD",11004,11004,5,3)
Answer must be 3-80 characters in length.
"^DD",11004,11004,5,21,0)
^^1^1^2981007^^^^
"^DD",11004,11004,5,21,1,0)
Enter a brief description which will be used to identify the Patch Designation.
"^DD",11004,11004,5,"DT")
2981007
"^DD",11004,11004,5.2,0)
DERIVED FROM PATCH^P11004'^A1AE(11004,^5;2^Q
"^DD",11004,11004,5.2,1,0)
^.1^^0
"^DD",11004,11004,5.2,3)
Select an entry
"^DD",11004,11004,5.2,21,0)
^^4^4^3140303^
"^DD",11004,11004,5.2,21,1,0)
If this patch is a copy of another patch, this field will be filled in by 
"^DD",11004,11004,5.2,21,2,0)
the A1AEK2M importer routine. The purpose of this field is to identify 
"^DD",11004,11004,5.2,21,3,0)
the original patch that a derived patch came from. Such will help us to 
"^DD",11004,11004,5.2,21,4,0)
track the patch and correctly resolve dependencies.
"^DD",11004,11004,5.2,"DT")
3140306
"^DD",11004,11004,5.5,0)
PATCH DESCRIPTION^11004.01^^D;0
"^DD",11004,11004,5.5,21,0)
^^16^16^2971112^^^^
"^DD",11004,11004,5.5,21,1,0)
This field should contain a detailed description of the purpose of
"^DD",11004,11004,5.5,21,2,0)
the patch. If the category of the patch is for a data dictionary,
"^DD",11004,11004,5.5,21,3,0)
input template, print template, sort template or other it should
"^DD",11004,11004,5.5,21,4,0)
be described in this section. Routine type patches have their own
"^DD",11004,11004,5.5,21,5,0)
section under the Routine Name field for coding changes, however,
"^DD",11004,11004,5.5,21,6,0)
a description of the purpose and impacts of the patch should be
"^DD",11004,11004,5.5,21,7,0)
entered in this section for this type of patch as well.
"^DD",11004,11004,5.5,21,8,0)
 
"^DD",11004,11004,5.5,21,9,0)
The patch description should also contain a detailed description of
"^DD",11004,11004,5.5,21,10,0)
procedures or steps required as a result of entering this patch, ie.
"^DD",11004,11004,5.5,21,11,0)
recompiling templates or re-running reports etc...
"^DD",11004,11004,5.5,21,12,0)
 
"^DD",11004,11004,5.5,21,13,0)
If a patch is the result of an 'entered in error' patch it should
"^DD",11004,11004,5.5,21,14,0)
refer to the previous patch which was incorrect, just as the
"^DD",11004,11004,5.5,21,15,0)
incorrect patch should refer to the correct patch in the Entered in
"^DD",11004,11004,5.5,21,16,0)
Error Description field.
"^DD",11004,11004,5.7,0)
UPDATE TO PATCH^P11004'^A1AE(11004,^5;7^Q
"^DD",11004,11004,5.7,"DT")
3140324
"^DD",11004,11004,6,0)
SEQUENTIAL RELEASE NUMBER^NJ5,0^^0;6^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11004,11004,6,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",11004,11004,6,"DT")
2920917
"^DD",11004,11004,6.5,0)
CATEGORY OF PATCH^11004.05SA^^C;0
"^DD",11004,11004,6.5,21,0)
^^7^7^2920606^^^^
"^DD",11004,11004,6.5,21,1,0)
Since a Patch may fall under more then one Category this
"^DD",11004,11004,6.5,21,2,0)
field has been made a multiple. Enter one or more Category
"^DD",11004,11004,6.5,21,3,0)
code to describe the type of Patch.
"^DD",11004,11004,6.5,21,4,0)
 
"^DD",11004,11004,6.5,21,5,0)
DBA type patches fall under only one type of Category, the
"^DD",11004,11004,6.5,21,6,0)
'database' category. This information is put in by the system
"^DD",11004,11004,6.5,21,7,0)
when a DBA type patch is entered.
"^DD",11004,11004,7,0)
PRIORITY^R*SX^p:PATCH FOR A PATCH;n:NOT URGENT;m:MANDATORY;i:INFORMATIONAL;e:EMERGENCY;^0;7^I "EeMm"'[$E(X_0) K X
"^DD",11004,11004,7,1,0)
^.1
"^DD",11004,11004,7,1,1,0)
11004^AP^MUMPS
"^DD",11004,11004,7,1,1,1)
S ^A1AE(11004,"AP",+$P(^A1AE(11004,DA,0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA)=""
"^DD",11004,11004,7,1,1,2)
K ^A1AE(11004,"AP",+$P(^A1AE(11004,DA,0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA)
"^DD",11004,11004,7,3)
Enter E for Emergency, M for Mandatory
"^DD",11004,11004,7,12)
Only Emergency or Mandatory Patches are allowed
"^DD",11004,11004,7,12.1)
I "eEmM"[X
"^DD",11004,11004,7,21,0)
^^8^8^2921201^^^^
"^DD",11004,11004,7,21,1,0)
This field indicates the seriousness of the bug that this patch corrects.
"^DD",11004,11004,7,21,2,0)
There are two priorities allowed:
"^DD",11004,11004,7,21,3,0)
 
"^DD",11004,11004,7,21,4,0)
    EMERGENCY         -- patch must be installed within 1 working day
"^DD",11004,11004,7,21,5,0)
                         of receipt.
"^DD",11004,11004,7,21,6,0)
 
"^DD",11004,11004,7,21,7,0)
    MANDATORY         -- patch must be installed within 5 days of receipt
"^DD",11004,11004,7,21,8,0)
                         because it solves what could be a major problem.
"^DD",11004,11004,7,21,9,0)
 
"^DD",11004,11004,7,21,10,0)
    NOT URGENT        -- patch includes cosmetic type changes that can
"^DD",11004,11004,7,21,11,0)
                         wait for the next release but are offered to
"^DD",11004,11004,7,21,12,0)
                         the site now if they desire it.
"^DD",11004,11004,7,21,13,0)
 
"^DD",11004,11004,7,21,14,0)
    INFORMATIONAL     -- patch provides general or pertinent information
"^DD",11004,11004,7,21,15,0)
                         about the package.
"^DD",11004,11004,7,"DT")
2920606
"^DD",11004,11004,18,0)
COMPLIANCE DATE^DaX^^0;18^S %DT="EF" D ^%DT S X=Y K:Y<1 X
"^DD",11004,11004,18,1,0)
^.1
"^DD",11004,11004,18,1,1,0)
11004^CD^MUMPS
"^DD",11004,11004,18,1,1,1)
S ^A1AE(11004,"CD",+$P(^A1AE(11004,DA,0),U,2),9999999-X,DA)=""
"^DD",11004,11004,18,1,1,2)
K ^A1AE(11004,"CD",+$P(^A1AE(11004,DA,0),U,2),9999999-X,DA)
"^DD",11004,11004,18,1,1,"%D",0)
^^1^1^3030122^
"^DD",11004,11004,18,1,1,"%D",1,0)
This is the compliance date cross-reference sorted by package.
"^DD",11004,11004,18,1,1,"DT")
3030122
"^DD",11004,11004,18,21,0)
^.001^10^10^3040603^^^^
"^DD",11004,11004,18,21,1,0)
Each patch will now have a compliance date. The compliance date is  the 
"^DD",11004,11004,18,21,2,0)
deadline date for installation. The compliance date will entered at time 
"^DD",11004,11004,18,21,3,0)
of the patch release by the NVS staff releasing the patch. The software 
"^DD",11004,11004,18,21,4,0)
will present a default to the releaser based on the rules defined in 
"^DD",11004,11004,18,21,5,0)
directive 2001-023: 1 day for emergency patches and 30 days for mandatory 
"^DD",11004,11004,18,21,6,0)
(all other) patches. The default may be changed to a date agreed to by 
"^DD",11004,11004,18,21,7,0)
SD&D, NVS, and the stakeholders for the project. For example, a patch 
"^DD",11004,11004,18,21,8,0)
might have a directive that allows for 45 day window of installation or 
"^DD",11004,11004,18,21,9,0)
an emergency patch might be a 2 day install instead of 1 day installation 
"^DD",11004,11004,18,21,10,0)
deadline. 
"^DD",11004,11004,18,"AUDIT")
y
"^DD",11004,11004,18,"DT")
3030122
"^DD",11004,11004,19,0)
COMPLIANCE DATE COMMENT^11004.019^^3;0
"^DD",11004,11004,40,0)
NEW PACKAGE^F^^4;1^K:$L(X)>30!($L(X)<4)!'(X?1.AN1" "1.NP) X
"^DD",11004,11004,40,1,0)
^.1
"^DD",11004,11004,40,1,1,0)
11004^PK
"^DD",11004,11004,40,1,1,1)
S ^A1AE(11004,"PK",$E(X,1,30),DA)=""
"^DD",11004,11004,40,1,1,2)
K ^A1AE(11004,"PK",$E(X,1,30),DA)
"^DD",11004,11004,40,1,1,"DT")
3060524
"^DD",11004,11004,40,3)
Answer must be 4-30 characters in length.
"^DD",11004,11004,40,21,0)
^^2^2^3060524^
"^DD",11004,11004,40,21,1,0)
This field holds the new Package name when a patch entry is used to
"^DD",11004,11004,40,21,2,0)
control a new package version.
"^DD",11004,11004,40,"DT")
3060524
"^DD",11004,11004,100,0)
ROUTINE NAME^11004.03A^^P;0
"^DD",11004,11004,100,21,0)
^^2^2^2921213^^^^
"^DD",11004,11004,100,21,1,0)
If a programming change has been made to a Routine, enter
"^DD",11004,11004,100,21,2,0)
the name of the Routine.
"^DD",11004,11004,102,0)
SECOND LINE^F^^P2;1^K:$L(X)>200!($L(X)<2) X
"^DD",11004,11004,102,3)
Answer must be 2-200 characters in length.
"^DD",11004,11004,102,21,0)
^^2^2^3070614^
"^DD",11004,11004,102,21,1,0)
This holds a sample of what the second line of each routine should look 
"^DD",11004,11004,102,21,2,0)
like.
"^DD",11004,11004,102,"DT")
3070614
"^DD",11004,11004.01,0)
PATCH DESCRIPTION SUB-FIELD^NL^.01^1
"^DD",11004,11004.01,0,"DT")
2971112
"^DD",11004,11004.01,0,"NM","PATCH DESCRIPTION")

"^DD",11004,11004.01,0,"UP")
11004
"^DD",11004,11004.01,.01,0)
PATCH DESCRIPTION^WL^^0;1^Q
"^DD",11004,11004.01,.01,"DT")
3140317
"^DD",11004,11004.019,0)
COMPLIANCE DATE COMMENT SUB-FIELD^^.01^1
"^DD",11004,11004.019,0,"DT")
3030116
"^DD",11004,11004.019,0,"NM","COMPLIANCE DATE COMMENT")

"^DD",11004,11004.019,0,"UP")
11004
"^DD",11004,11004.019,.01,0)
COMPLIANCE DATE COMMENT^W^^0;1^Q
"^DD",11004,11004.019,.01,3)
Enter the reason for editing the Compliance Date
"^DD",11004,11004.019,.01,21,0)
^^1^1^3030116^
"^DD",11004,11004.019,.01,21,1,0)
This is the reason for editing the compliance date
"^DD",11004,11004.019,.01,"DT")
3030116
"^DD",11004,11004.03,0)
ROUTINE NAME SUB-FIELD^NL^5^6
"^DD",11004,11004.03,0,"IX","B",11004.03,.01)

"^DD",11004,11004.03,0,"NM","ROUTINE NAME")

"^DD",11004,11004.03,0,"UP")
11004
"^DD",11004,11004.03,.01,0)
ROUTINE NAME^MFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>8!($L(X)<2)!'((X?.UN)!(X?1"%".UN)) X I $D(X) S SAVX=X,X="A1AEM2" X ^%ZOSF("TEST") S X=SAVX I $T D RCHK^A1AEM2
"^DD",11004,11004.03,.01,1,0)
^.1
"^DD",11004,11004.03,.01,1,1,0)
11004^R
"^DD",11004,11004.03,.01,1,1,1)
S ^A1AE(11004,"R",$E(X,1,30),DA(1),DA)=""
"^DD",11004,11004.03,.01,1,1,2)
K ^A1AE(11004,"R",$E(X,1,30),DA(1),DA)
"^DD",11004,11004.03,.01,1,1,"DT")
3050927
"^DD",11004,11004.03,.01,1,2,0)
11004.03^B
"^DD",11004,11004.03,.01,1,2,1)
S ^A1AE(11004,DA(1),"P","B",$E(X,1,30),DA)=""
"^DD",11004,11004.03,.01,1,2,2)
K ^A1AE(11004,DA(1),"P","B",$E(X,1,30),DA)
"^DD",11004,11004.03,.01,1,2,"%D",0)
^^1^1^3050927^
"^DD",11004,11004.03,.01,1,2,"%D",1,0)
This is the normal "B" lookup index.
"^DD",11004,11004.03,.01,1,2,"DT")
3050927
"^DD",11004,11004.03,.01,3)
ANSWER MUST BE 2-8 CHARACTERS IN LENGTH
"^DD",11004,11004.03,.01,21,0)
^^10^10^2921213^^^^
"^DD",11004,11004.03,.01,21,1,0)
If a programming change has been made to a Routine, enter
"^DD",11004,11004.03,.01,21,2,0)
the name of the Routine.  Each patched routine should have 
"^DD",11004,11004.03,.01,21,3,0)
a separate entry.
"^DD",11004,11004.03,.01,21,4,0)
If the routine can be found in the routine directory you
"^DD",11004,11004.03,.01,21,5,0)
will have the option of extracting lines from the routine
"^DD",11004,11004.03,.01,21,6,0)
and stuffing them into the Description of Routine Changes
"^DD",11004,11004.03,.01,21,7,0)
field.
"^DD",11004,11004.03,.01,21,8,0)
If the routine is in an input PackMan message you will have
"^DD",11004,11004.03,.01,21,9,0)
the option of extracting lines from the routine and adding
"^DD",11004,11004.03,.01,21,10,0)
them to the Description of Routine Changes field.
"^DD",11004,11004.03,.01,22)

"^DD",11004,11004.03,.01,"DT")
3141006
"^DD",11004,11004.03,2,0)
ROUTINE CHECKSUM^11004.32^^X;0
"^DD",11004,11004.03,2.5,0)
DESCRIPTION OF ROUTINE CHANGES^11004.04^^D;0
"^DD",11004,11004.03,2.5,21,0)
^^21^21^2871110^^^^
"^DD",11004,11004.03,2.5,21,1,0)
When changes are made to routines the description should include
"^DD",11004,11004.03,2.5,21,2,0)
1)  the LINE  2)  the previous code  3)  the new code  and any
"^DD",11004,11004.03,2.5,21,3,0)
other information which would help to clearly explain the fix
"^DD",11004,11004.03,2.5,21,4,0)
that was done. Finally, show the lines of code that were changed
"^DD",11004,11004.03,2.5,21,5,0)
in their entirety.
"^DD",11004,11004.03,2.5,21,6,0)
 
"^DD",11004,11004.03,2.5,21,7,0)
 note: r  means 'replace' and
"^DD",11004,11004.03,2.5,21,8,0)
       w  means 'with'
"^DD",11004,11004.03,2.5,21,9,0)
 
"^DD",11004,11004.03,2.5,21,10,0)
The convention for entering code changes are as follows:
"^DD",11004,11004.03,2.5,21,11,0)
 
"^DD",11004,11004.03,2.5,21,12,0)
LINE: EN
"^DD",11004,11004.03,2.5,21,13,0)
    r  DPT
"^DD",11004,11004.03,2.5,21,14,0)
    w  ^DPT
"^DD",11004,11004.03,2.5,21,15,0)
 
"^DD",11004,11004.03,2.5,21,16,0)
THE LINE SHOULD LOOK LIKE THE FOLLOWING:
"^DD",11004,11004.03,2.5,21,17,0)
---------------------------------------
"^DD",11004,11004.03,2.5,21,18,0)
EN       S DA=DFN,DIE="^DPT(",DR=".01" D ^DIE
"^DD",11004,11004.03,2.5,21,19,0)
 
"^DD",11004,11004.03,2.5,21,20,0)
 
"^DD",11004,11004.03,2.5,21,21,0)
A1AEINTEG= -94
"^DD",11004,11004.03,3,0)
KIDS CHECKSUM^F^^0;2^K:$L(X)>15!($L(X)<3) X
"^DD",11004,11004.03,3,3)
Answer must be 3-15 characters in length.
"^DD",11004,11004.03,3,"DT")
3050912
"^DD",11004,11004.03,4,0)
PATCH LIST^F^^0;3^K:$L(X)>200!($L(X)<5)!'(X?2"*"1.NP2"*") X
"^DD",11004,11004.03,4,3)
Answer must be 5-200 characters in length.
"^DD",11004,11004.03,4,21,0)
^^2^2^3050926^
"^DD",11004,11004.03,4,21,1,0)
This field holds the routine patch list at the time the patch was loaded 
"^DD",11004,11004.03,4,21,2,0)
into FORUM.
"^DD",11004,11004.03,4,"DT")
3050926
"^DD",11004,11004.03,5,0)
OLD CHECKSUM^F^^0;4^K:$L(X)>15!($L(X)<3) X
"^DD",11004,11004.03,5,3)
Answer must be 3-15 characters in length.
"^DD",11004,11004.03,5,21,0)
^^3^3^3051012^
"^DD",11004,11004.03,5,21,1,0)
This field holds the before checksum at the time the patch is loaded into 
"^DD",11004,11004.03,5,21,2,0)
the patch module.  This old checksum value is pulled from the ROUTINE 
"^DD",11004,11004.03,5,21,3,0)
file.
"^DD",11004,11004.03,5,"DT")
3051012
"^DD",11004,11004.04,0)
DESCRIPTION OF ROUTINE CHANGES SUB-FIELD^NL^.01^1
"^DD",11004,11004.04,0,"NM","DESCRIPTION OF ROUTINE CHANGES")

"^DD",11004,11004.04,0,"UP")
11004.03
"^DD",11004,11004.04,.01,0)
DESCRIPTION OF ROUTINE CHANGES^WL^^0;1^Q
"^DD",11004,11004.04,.01,21,0)
^^4^4^2871009^^^^
"^DD",11004,11004.04,.01,21,1,0)
When Changes are made to Routines the Description should include
"^DD",11004,11004.04,.01,21,2,0)
1)  the TAG  2) the previous code  3)  the new code  and any
"^DD",11004,11004.04,.01,21,3,0)
other information which would help to clearly explain the fix
"^DD",11004,11004.04,.01,21,4,0)
that was done.
"^DD",11004,11004.04,.01,"DT")
2860717
"^DD",11004,11004.05,0)
CATEGORY OF PATCH SUB-FIELD^NL^.01^1
"^DD",11004,11004.05,0,"NM","CATEGORY OF PATCH")

"^DD",11004,11004.05,0,"UP")
11004
"^DD",11004,11004.05,.01,0)
CATEGORY OF PATCH^MRSX^d:DATA DICTIONARY;i:INPUT TEMPLATE;p:PRINT TEMPLATE;r:ROUTINE;s:SORT TEMPLATE;o:OTHER;db:DATABASE;e:ENHANCEMENT;pp:PATCH FOR A PATCH;inf:INFORMATIONAL;^0;1^I $T(^A1AEM)'="" D DD^A1AEM
"^DD",11004,11004.05,.01,1,0)
^.1
"^DD",11004,11004.05,.01,1,1,0)
11004^AC^MUMPS
"^DD",11004,11004.05,.01,1,1,1)
S ^A1AE(11004,"AC",+$P(^A1AE(11004,DA(1),0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA(1),DA)=""
"^DD",11004,11004.05,.01,1,1,2)
K ^A1AE(11004,"AC",+$P(^A1AE(11004,DA(1),0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA(1),DA)
"^DD",11004,11004.05,.01,21,0)
^^6^6^2921123^^^^
"^DD",11004,11004.05,.01,21,1,0)
Since a Patch may fall under more than one Category this
"^DD",11004,11004.05,.01,21,2,0)
field has been made a multiple. Enter one or more Category
"^DD",11004,11004.05,.01,21,3,0)
code to describe the type of Patch.
"^DD",11004,11004.05,.01,21,4,0)
 
"^DD",11004,11004.05,.01,21,5,0)
The new category Enhancement indicates that the patch contains less than
"^DD",11004,11004.05,.01,21,6,0)
5% of the full package's routines, docuementation, install time, etc.
"^DD",11004,11004.05,.01,23,0)
^^3^3^2920928^
"^DD",11004,11004.05,.01,23,1,0)
 
"^DD",11004,11004.05,.01,23,2,0)
 
"^DD",11004,11004.05,.01,23,3,0)
 
"^DD",11004,11004.05,.01,"DT")
2921123
"^DD",11004,11004.32,0)
ROUTINE CHECKSUM SUB-FIELD^^.01^1
"^DD",11004,11004.32,0,"NM","ROUTINE CHECKSUM")

"^DD",11004,11004.32,0,"UP")
11004.03
"^DD",11004,11004.32,.01,0)
ROUTINE CHECKSUM^W^^0;1^Q
"^DD",11004,11004.32,.01,"DT")
2910319
"^DD",11005,11005,0)
FIELD^^5.6^52
"^DD",11005,11005,0,"DT")
3150529
"^DD",11005,11005,0,"ID",5)
W ""
"^DD",11005,11005,0,"ID","WRITE")
D ID11005^A1AEUTL
"^DD",11005,11005,0,"IX","AC",11005.05,.01)

"^DD",11005,11005,0,"IX","AD",11005,11)

"^DD",11005,11005,0,"IX","AE",11005,8)

"^DD",11005,11005,0,"IX","AP",11005,7)

"^DD",11005,11005,0,"IX","AS",11005,8)

"^DD",11005,11005,0,"IX","AU",11005.02,3)

"^DD",11005,11005,0,"IX","AV",11005,11)

"^DD",11005,11005,0,"IX","AVERCONT",11005,8)

"^DD",11005,11005,0,"IX","BA",11005,.01)

"^DD",11005,11005,0,"IX","C",11005,5)

"^DD",11005,11005,0,"IX","CD",11005,18)

"^DD",11005,11005,0,"IX","D",11005,2)

"^DD",11005,11005,0,"IX","PK",11005,40)

"^DD",11005,11005,0,"IX","PS",11005,5)

"^DD",11005,11005,0,"IX","R",11005.03,.01)

"^DD",11005,11005,0,"NM","DHCP PATCHES")

"^DD",11005,11005,0,"PT",9.619,.01)

"^DD",11005,11005,0,"PT",9.719,.01)

"^DD",11005,11005,0,"PT",11005,5.2)

"^DD",11005,11005,0,"PT",11005,5.7)

"^DD",11005,11005,0,"PT",11005.09,.01)

"^DD",11005,11005,0,"PT",11005.1,.01)

"^DD",11005,11005,0,"PT",11005.5,.01)

"^DD",11005,11005,0,"PT",11006,13)

"^DD",11005,11005,0,"PT",11007.11,1.1)

"^DD",11005,11005,0,"VRPK")
A1AE
"^DD",11005,11005,.001,0)
NUMBER^NJ8,0^^ ^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005,11005,.001,3)
Type a Number between 1 and 99999999, 0 Decimal Digits
"^DD",11005,11005,.001,"DT")
2990928
"^DD",11005,11005,.01,0)
PATCH DESIGNATION^RFJ20X^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<6)!'(X?1U.UN1"*".2N.1P.2N1"*"1N.N) X S A1AEX=11005 D IN^A1AEUTL:$D(X) K A1AEX
"^DD",11005,11005,.01,1,0)
^.1^^-1
"^DD",11005,11005,.01,1,3,0)
11005^BA^MUMPS
"^DD",11005,11005,.01,1,3,1)
S:$P(X,"*",2)=999 ^A1AE(11005,"B",$P(X,"*")_"*DBA*"_$P(X,"*",3),DA)=""
"^DD",11005,11005,.01,1,3,2)
K:$P(X,"*",2)=999 ^A1AE(11005,"B",$P(X,"*")_"*DBA*"_$P(X,"*",3),DA)
"^DD",11005,11005,.01,2)
S Y(0)=Y S:$P(Y,"*",2)=999 $P(Y,"*",2)="DBA"
"^DD",11005,11005,.01,2.1)
S:$P(Y,"*",2)=999 $P(Y,"*",2)="DBA"
"^DD",11005,11005,.01,3)
ANSWER MUST BE 6-20 CHARACTERS IN LENGTH
"^DD",11005,11005,.01,7.5)
D PLU11005^A1AEDD1
"^DD",11005,11005,.01,21,0)
^^1^1^3140110^^^^
"^DD",11005,11005,.01,21,1,0)
Patch Designation has the following format: Package Namespace*Version Number*System Assigned Patch Number.
"^DD",11005,11005,.01,"DT")
3150528
"^DD",11005,11005,.2,0)
PATCH STREAM^RP11007.1'^A1AE(11007.1,^0;20^Q
"^DD",11005,11005,.2,3)
Select a patch stream.
"^DD",11005,11005,.2,9)
^
"^DD",11005,11005,.2,21,0)
^^3^3^3140225^
"^DD",11005,11005,.2,21,1,0)
If this Patch Module supports more than one stream of patches (VA does 
"^DD",11005,11005,.2,21,2,0)
not, OSEHRA does), select the patch stream this patch is part of. 
"^DD",11005,11005,.2,21,3,0)
Otherwise, leave this field empty.
"^DD",11005,11005,.2,23,0)
^^24^24^3140225^
"^DD",11005,11005,.2,23,1,0)
This field is used by ID11005^A1AEUTL, which is called by 
"^DD",11005,11005,.2,23,2,0)
^DD(11005,0,"ID","WRITE"), the file's write identifier. The write 
"^DD",11005,11005,.2,23,3,0)
identifier will now include field Abbreviation (.05) of file DHCP Patch 
"^DD",11005,11005,.2,23,4,0)
Stream (11007.1) for the record pointed to by this field, if this field 
"^DD",11005,11005,.2,23,5,0)
is filled in. That is, if this Patch Module supports more than one patch 
"^DD",11005,11005,.2,23,6,0)
stream, an abbreviation of that stream will be included in the write 
"^DD",11005,11005,.2,23,7,0)
identifier to help keep developers and other VISTA hardhats from getting 
"^DD",11005,11005,.2,23,8,0)
confused when they hop from stream to stream. If this Patch Module only 
"^DD",11005,11005,.2,23,9,0)
supports one stream, then no such assistance is needed, so this field is 
"^DD",11005,11005,.2,23,10,0)
left blank to save space and excluded from the write identifier.
"^DD",11005,11005,.2,23,11,0)
 
"^DD",11005,11005,.2,23,12,0)
The field is not set by users. It is set automatically by the Patch 
"^DD",11005,11005,.2,23,13,0)
Module itself when importing patches for redistribution or secondary 
"^DD",11005,11005,.2,23,14,0)
development. During the import process, the patch stream is calculated 
"^DD",11005,11005,.2,23,15,0)
and this field is set.
"^DD",11005,11005,.2,23,16,0)
 
"^DD",11005,11005,.2,23,17,0)
Change History:
"^DD",11005,11005,.2,23,18,0)
 
"^DD",11005,11005,.2,23,19,0)
Monday, 10 February 2014: Frederick D. S. Marshall of the VISTA Expertise 
"^DD",11005,11005,.2,23,20,0)
Network (VEN/TOAD) created this field.
"^DD",11005,11005,.2,23,21,0)
 
"^DD",11005,11005,.2,23,22,0)
Tuesday, 25 February 2014: (VEN/TOAD) Revised Description, wrote 
"^DD",11005,11005,.2,23,23,0)
Technical Description, added Change History, and write-protected the 
"^DD",11005,11005,.2,23,24,0)
field to prevent user editing.
"^DD",11005,11005,.2,"DT")
3140813
"^DD",11005,11005,.21,0)
CURRENTLY IMPORTING^S^1:Yes;0:No;^0;21^Q
"^DD",11005,11005,.21,3)
Not user editable.
"^DD",11005,11005,.21,21,0)
^^2^2^3140307^
"^DD",11005,11005,.21,21,1,0)
This field is used by PATCH^A1AECL1 to decide whether to file checksums or not. If we are currently importing, don't update the current system's checksums to be the new "Old" checksums for next time we release a patch. We only want these
"^DD",11005,11005,.21,21,2,0)
populated when we actually release a patch out of the door. This is necessary, because the import process does a verify, which triggers PATCH^A1AECL1.
"^DD",11005,11005,.21,"DT")
3140307
"^DD",11005,11005,2,0)
PACKAGE^RP9.4'I^DIC(9.4,^0;2^Q
"^DD",11005,11005,2,1,0)
^.1
"^DD",11005,11005,2,1,1,0)
11005^D
"^DD",11005,11005,2,1,1,1)
S ^A1AE(11005,"D",$E(X,1,30),DA)=""
"^DD",11005,11005,2,1,1,2)
K ^A1AE(11005,"D",$E(X,1,30),DA)
"^DD",11005,11005,2,9)
^
"^DD",11005,11005,2,21,0)
^^2^2^2871110^^^^
"^DD",11005,11005,2,21,1,0)
The Package must reside in the Package File(#9.4) and in the
"^DD",11005,11005,2,21,2,0)
DHCP Patch/Problem File(#11007) to be used in the Patch Module.
"^DD",11005,11005,2,"DT")
3140324
"^DD",11005,11005,3,0)
VERSION^RFXOI^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>10!($L(X)<1) X
"^DD",11005,11005,3,1,0)
^.1^^0
"^DD",11005,11005,3,2)
S Y(0)=Y S Y=$S(Y=999:"DBA",1:Y)
"^DD",11005,11005,3,2.1)
S Y=$S(Y=999:"DBA",1:Y)
"^DD",11005,11005,3,3)
ANSWER MUST BE 1-10 CHARACTERS IN LENGTH
"^DD",11005,11005,3,9)
^
"^DD",11005,11005,3,21,0)
^^3^3^2891206^^^^
"^DD",11005,11005,3,21,1,0)
The most recent Version is used as the default, but other valid
"^DD",11005,11005,3,21,2,0)
Version Numbers may be entered. Version '999' is reserved for DBA
"^DD",11005,11005,3,21,3,0)
type patches.
"^DD",11005,11005,3,"DT")
3140812
"^DD",11005,11005,4,0)
PATCH NUMBER^RNJ5,0I^^0;4^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",11005,11005,4,1,0)
^.1^^0
"^DD",11005,11005,4,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 99999
"^DD",11005,11005,4,9)
^
"^DD",11005,11005,4,21,0)
^^2^2^2861020^^^
"^DD",11005,11005,4,21,1,0)
The patch number is assigned by the system, a number may be
"^DD",11005,11005,4,21,2,0)
re-assigned if an Unverified Patch is Deleted.
"^DD",11005,11005,4,"DT")
3140324
"^DD",11005,11005,5,0)
PATCH SUBJECT^RF^^0;5^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>80!($L(X)<3) X
"^DD",11005,11005,5,1,0)
^.1
"^DD",11005,11005,5,1,1,0)
11005^PS
"^DD",11005,11005,5,1,1,1)
S ^A1AE(11005,"PS",$E(X,1,30),DA)=""
"^DD",11005,11005,5,1,1,2)
K ^A1AE(11005,"PS",$E(X,1,30),DA)
"^DD",11005,11005,5,1,2,0)
11005^C^KWIC
"^DD",11005,11005,5,1,2,1)
F %=1:1 Q:$P(X," ",%,99)=""  S I=$P(X," ",%) I $L(I)>2,$L(I)<31,^DD("KWIC")'[I S ^A1AE(11005,"C",I,DA)=""
"^DD",11005,11005,5,1,2,2)
F %=1:1 Q:$P(X," ",%,99)=""  S I=$P(X," ",%) I $L(I)>2,$L(I)<31 K ^A1AE(11005,"C",I,DA)
"^DD",11005,11005,5,3)
Answer must be 3-80 characters in length.
"^DD",11005,11005,5,21,0)
^^1^1^2981007^^^^
"^DD",11005,11005,5,21,1,0)
Enter a brief description which will be used to identify the Patch Designation.
"^DD",11005,11005,5,"DT")
2981007
"^DD",11005,11005,5.2,0)
DERIVED FROM PATCH^P11005'^A1AE(11005,^5;2^Q
"^DD",11005,11005,5.2,1,0)
^.1^^0
"^DD",11005,11005,5.2,3)
Select an entry
"^DD",11005,11005,5.2,21,0)
^^4^4^3140303^
"^DD",11005,11005,5.2,21,1,0)
If this patch is a copy of another patch, this field will be filled in by 
"^DD",11005,11005,5.2,21,2,0)
the A1AEK2M importer routine. The purpose of this field is to identify 
"^DD",11005,11005,5.2,21,3,0)
the original patch that a derived patch came from. Such will help us to 
"^DD",11005,11005,5.2,21,4,0)
track the patch and correctly resolve dependencies.
"^DD",11005,11005,5.2,"DT")
3140306
"^DD",11005,11005,5.3,0)
TXT FILE NAME^FJ100^^5;3^K:$L(X)>100!($L(X)<1) X
"^DD",11005,11005,5.3,3)
Answer must be 1-100 characters in length.
"^DD",11005,11005,5.3,21,0)
^^1^1^3140317^
"^DD",11005,11005,5.3,21,1,0)
Imported patch's .TXT full file name.
"^DD",11005,11005,5.3,"DT")
3140317
"^DD",11005,11005,5.4,0)
KID FILE NAME^FJ100^^5;4^K:$L(X)>100!($L(X)<1) X
"^DD",11005,11005,5.4,3)
Answer must be 1-100 characters in length.
"^DD",11005,11005,5.4,21,0)
^^1^1^3140317^
"^DD",11005,11005,5.4,21,1,0)
Patch's KID file name, if there is a KID present.
"^DD",11005,11005,5.4,"DT")
3140317
"^DD",11005,11005,5.5,0)
PATCH DESCRIPTION^11005.01^^D;0
"^DD",11005,11005,5.5,21,0)
^^16^16^2971112^^^^
"^DD",11005,11005,5.5,21,1,0)
This field should contain a detailed description of the purpose of
"^DD",11005,11005,5.5,21,2,0)
the patch. If the category of the patch is for a data dictionary,
"^DD",11005,11005,5.5,21,3,0)
input template, print template, sort template or other it should
"^DD",11005,11005,5.5,21,4,0)
be described in this section. Routine type patches have their own
"^DD",11005,11005,5.5,21,5,0)
section under the Routine Name field for coding changes, however,
"^DD",11005,11005,5.5,21,6,0)
a description of the purpose and impacts of the patch should be
"^DD",11005,11005,5.5,21,7,0)
entered in this section for this type of patch as well.
"^DD",11005,11005,5.5,21,8,0)
 
"^DD",11005,11005,5.5,21,9,0)
The patch description should also contain a detailed description of
"^DD",11005,11005,5.5,21,10,0)
procedures or steps required as a result of entering this patch, ie.
"^DD",11005,11005,5.5,21,11,0)
recompiling templates or re-running reports etc...
"^DD",11005,11005,5.5,21,12,0)
 
"^DD",11005,11005,5.5,21,13,0)
If a patch is the result of an 'entered in error' patch it should
"^DD",11005,11005,5.5,21,14,0)
refer to the previous patch which was incorrect, just as the
"^DD",11005,11005,5.5,21,15,0)
incorrect patch should refer to the correct patch in the Entered in
"^DD",11005,11005,5.5,21,16,0)
Error Description field.
"^DD",11005,11005,5.6,0)
MISSING KID?^S^1:Yes;0:No;^5;6^Q
"^DD",11005,11005,5.6,3)
Don't edit this field by hand!
"^DD",11005,11005,5.6,9)
^
"^DD",11005,11005,5.6,21,0)
^^6^6^3140324^
"^DD",11005,11005,5.6,21,1,0)
This field is filled in by the Patch Import software as well as during 
"^DD",11005,11005,5.6,21,2,0)
Add/Edit Patch to signal if we are missing the KID patch that goes with 
"^DD",11005,11005,5.6,21,3,0)
the TXT part of the patch that was already imported or added to the 
"^DD",11005,11005,5.6,21,4,0)
software. We take provisions to make sure that any 'Informational' 
"^DD",11005,11005,5.6,21,5,0)
patches won't fill this field out, as these patches are not supposed to 
"^DD",11005,11005,5.6,21,6,0)
have a KID build inside of them.
"^DD",11005,11005,5.6,"DT")
3140324
"^DD",11005,11005,5.7,0)
UPDATE TO PATCH^P11005'^A1AE(11005,^5;7^Q
"^DD",11005,11005,5.7,"DT")
3140324
"^DD",11005,11005,6,0)
SEQUENTIAL RELEASE NUMBER^NJ5,0^^0;6^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005,11005,6,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",11005,11005,6,"DT")
2920917
"^DD",11005,11005,6.1,0)
IMPORTED PATCH PATH^FJ250^^6;1^K:$L(X)>250!($L(X)<1) X
"^DD",11005,11005,6.1,3)
Answer must be 1-250 characters in length.
"^DD",11005,11005,6.1,21,0)
^^1^1^3140317^^
"^DD",11005,11005,6.1,21,1,0)
Holds the system patch to the host file .TXT for the patch.
"^DD",11005,11005,6.1,"DT")
3140317
"^DD",11005,11005,6.5,0)
CATEGORY OF PATCH^11005.05SA^^C;0
"^DD",11005,11005,6.5,21,0)
^^7^7^2920606^^^^
"^DD",11005,11005,6.5,21,1,0)
Since a Patch may fall under more then one Category this
"^DD",11005,11005,6.5,21,2,0)
field has been made a multiple. Enter one or more Category
"^DD",11005,11005,6.5,21,3,0)
code to describe the type of Patch.
"^DD",11005,11005,6.5,21,4,0)
 
"^DD",11005,11005,6.5,21,5,0)
DBA type patches fall under only one type of Category, the
"^DD",11005,11005,6.5,21,6,0)
'database' category. This information is put in by the system
"^DD",11005,11005,6.5,21,7,0)
when a DBA type patch is entered.
"^DD",11005,11005,7,0)
PRIORITY^R*SX^p:PATCH FOR A PATCH;n:NOT URGENT;m:MANDATORY;i:INFORMATIONAL;e:EMERGENCY;^0;7^I "EeMm"'[$E(X_0) K X
"^DD",11005,11005,7,1,0)
^.1
"^DD",11005,11005,7,1,1,0)
11005^AP^MUMPS
"^DD",11005,11005,7,1,1,1)
S ^A1AE(11005,"AP",+$P(^A1AE(11005,DA,0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA)=""
"^DD",11005,11005,7,1,1,2)
K ^A1AE(11005,"AP",+$P(^A1AE(11005,DA,0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA)
"^DD",11005,11005,7,3)
Enter E for Emergency, M for Mandatory
"^DD",11005,11005,7,12)
Only Emergency or Mandatory Patches are allowed
"^DD",11005,11005,7,12.1)
I "eEmM"[X
"^DD",11005,11005,7,21,0)
^^8^8^2921201^^^^
"^DD",11005,11005,7,21,1,0)
This field indicates the seriousness of the bug that this patch corrects.
"^DD",11005,11005,7,21,2,0)
There are two priorities allowed:
"^DD",11005,11005,7,21,3,0)
 
"^DD",11005,11005,7,21,4,0)
    EMERGENCY         -- patch must be installed within 1 working day
"^DD",11005,11005,7,21,5,0)
                         of receipt.
"^DD",11005,11005,7,21,6,0)
 
"^DD",11005,11005,7,21,7,0)
    MANDATORY         -- patch must be installed within 5 days of receipt
"^DD",11005,11005,7,21,8,0)
                         because it solves what could be a major problem.
"^DD",11005,11005,7,21,9,0)
 
"^DD",11005,11005,7,21,10,0)
    NOT URGENT        -- patch includes cosmetic type changes that can
"^DD",11005,11005,7,21,11,0)
                         wait for the next release but are offered to
"^DD",11005,11005,7,21,12,0)
                         the site now if they desire it.
"^DD",11005,11005,7,21,13,0)
 
"^DD",11005,11005,7,21,14,0)
    INFORMATIONAL     -- patch provides general or pertinent information
"^DD",11005,11005,7,21,15,0)
                         about the package.
"^DD",11005,11005,7,"DT")
2920606
"^DD",11005,11005,8,0)
STATUS OF PATCH^RSXa^c:COMPLETED/UNVERIFIED;e:ENTERED IN ERROR;u:UNDER DEVELOPMENT;v:VERIFIED;r:RETIRED;x:cancel;i2:IN REVIEW;d2:SEC DEVELOPMENT;s2:SEC COMPLETION;r2:SEC RELEASE;n2:NOT FOR SEC RELEASE;^0;8^D ^A1AEPHS
"^DD",11005,11005,8,1,0)
^.1
"^DD",11005,11005,8,1,1,0)
^^TRIGGER^11005^11
"^DD",11005,11005,8,1,1,1)
Q
"^DD",11005,11005,8,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S(X="c"&($P(^A1AE(11005,DA,0),U,8)="v"):1,1:0) I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,1,2.4)
"^DD",11005,11005,8,1,1,2.4)
S DIH=$G(^A1AE(11005,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=11005,DIG=11 D ^DICR
"^DD",11005,11005,8,1,1,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,1,"DELETE CONDITION")
S X=$S(X="c"&($P(^A1AE(11005,DA,0),U,8)="v"):1,1:0)
"^DD",11005,11005,8,1,1,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,1,"DT")
3140328
"^DD",11005,11005,8,1,1,"FIELD")
DATE PATCH VERIFIED
"^DD",11005,11005,8,1,2,0)
^^TRIGGER^11005^10
"^DD",11005,11005,8,1,2,1)
Q
"^DD",11005,11005,8,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S(X="u"&($P(^A1AE(11005,DA,0),U,8)="c"):1,1:0) I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,2,2.4)
"^DD",11005,11005,8,1,2,2.4)
S DIH=$G(^A1AE(11005,DIV(0),0)),DIV=X S $P(^(0),U,10)=DIV,DIH=11005,DIG=10 D ^DICR
"^DD",11005,11005,8,1,2,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,2,"DELETE CONDITION")
S X=$S(X="u"&($P(^A1AE(11005,DA,0),U,8)="c"):1,1:0)
"^DD",11005,11005,8,1,2,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,2,"DT")
3140328
"^DD",11005,11005,8,1,2,"FIELD")
DATE PATCH COMPLETED
"^DD",11005,11005,8,1,3,0)
11005^AE^MUMPS
"^DD",11005,11005,8,1,3,1)
I X="e",$D(^A1AE(11005,"AV",+$P(^A1AE(11005,DA,0),U,2),9999999-$P(^(0),U,11),DA)) K ^(DA) Q
"^DD",11005,11005,8,1,3,2)
Q
"^DD",11005,11005,8,1,4,0)
11005^AS^MUMPS
"^DD",11005,11005,8,1,4,1)
S ^A1AE(11005,"AS",+$P(^A1AE(11005,DA,0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA)=""
"^DD",11005,11005,8,1,4,2)
K ^A1AE(11005,"AS",+$P(^A1AE(11005,DA,0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA)
"^DD",11005,11005,8,1,5,0)
11005^AVERCONT^MUMPS
"^DD",11005,11005,8,1,5,1)
D IX^A1AEK2VC(X,DA)
"^DD",11005,11005,8,1,5,2)
Q
"^DD",11005,11005,8,1,5,3)
Used for Version Control of KIDS builds
"^DD",11005,11005,8,1,5,"%D",0)
^^3^3^3140323^
"^DD",11005,11005,8,1,5,"%D",1,0)
This cross reference breaks out a KIDS build and write out the components 
"^DD",11005,11005,8,1,5,"%D",2,0)
to the file system. The location is dictated by the field 'IMPORTED PATCH 
"^DD",11005,11005,8,1,5,"%D",3,0)
PATH'. If it's empty, we don't write anything out to the host file system.
"^DD",11005,11005,8,1,5,"DT")
3140323
"^DD",11005,11005,8,1,6,0)
^^TRIGGER^11005^8.09
"^DD",11005,11005,8,1,6,1)
Q
"^DD",11005,11005,8,1,6,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="v"&($P(^A1AE(11005,DA,0),U,8)="i2") I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,6,2.4)
"^DD",11005,11005,8,1,6,2.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,9)=DIV,DIH=11005,DIG=8.09 D ^DICR
"^DD",11005,11005,8,1,6,3)
Triggers Date Imported = TODAY when Status of Patch = i2
"^DD",11005,11005,8,1,6,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,6,"DELETE CONDITION")
S X=X="v"&($P(^A1AE(11005,DA,0),U,8)="i2")
"^DD",11005,11005,8,1,6,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,6,"DT")
3140328
"^DD",11005,11005,8,1,6,"FIELD")
DATE IMPORTED
"^DD",11005,11005,8,1,7,0)
^^TRIGGER^11005^8.11
"^DD",11005,11005,8,1,7,1)
Q
"^DD",11005,11005,8,1,7,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="i2"&($P(^A1AE(11005,DA,0),U,8)="d2") I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,7,2.4)
"^DD",11005,11005,8,1,7,2.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,11)=DIV,DIH=11005,DIG=8.11 D ^DICR
"^DD",11005,11005,8,1,7,3)
Triggers Date of Sec Development = TODAY
"^DD",11005,11005,8,1,7,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,7,"DELETE CONDITION")
S X=X="i2"&($P(^A1AE(11005,DA,0),U,8)="d2")
"^DD",11005,11005,8,1,7,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,7,"DT")
3140328
"^DD",11005,11005,8,1,7,"FIELD")
DATE OF SEC DEV
"^DD",11005,11005,8,1,8,0)
^^TRIGGER^11005^8.13
"^DD",11005,11005,8,1,8,1)
Q
"^DD",11005,11005,8,1,8,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="i2"!(X="d2")&($P(^A1AE(11005,DA,0),U,8)="s2") I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,8,2.4)
"^DD",11005,11005,8,1,8,2.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,13)=DIV,DIH=11005,DIG=8.13 D ^DICR
"^DD",11005,11005,8,1,8,3)
Trigger Date of Sec Completion = TODAY
"^DD",11005,11005,8,1,8,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,8,"DELETE CONDITION")
S X=X="i2"!(X="d2")&($P(^A1AE(11005,DA,0),U,8)="s2")
"^DD",11005,11005,8,1,8,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,8,"DT")
3140328
"^DD",11005,11005,8,1,8,"FIELD")
DATE OF SEC COMPLETION
"^DD",11005,11005,8,1,9,0)
^^TRIGGER^11005^8.15
"^DD",11005,11005,8,1,9,1)
Q
"^DD",11005,11005,8,1,9,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="s2"&($P(^A1AE(11005,DA,0),U,8)="r2") I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,9,2.4)
"^DD",11005,11005,8,1,9,2.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,15)=DIV,DIH=11005,DIG=8.15 D ^DICR
"^DD",11005,11005,8,1,9,3)
Triggers Date of Sec Release = TODAY
"^DD",11005,11005,8,1,9,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,9,"DELETE CONDITION")
S X=X="s2"&($P(^A1AE(11005,DA,0),U,8)="r2")
"^DD",11005,11005,8,1,9,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,9,"DT")
3140328
"^DD",11005,11005,8,1,9,"FIELD")
DATE OF SEC RELEASE
"^DD",11005,11005,8,1,10,0)
^^TRIGGER^11005^8.17
"^DD",11005,11005,8,1,10,1)
Q
"^DD",11005,11005,8,1,10,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="i2"!(X="d2")!(X="s2")&($P(^A1AE(11005,DA,0),U,8)="n2") I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,10,2.4)
"^DD",11005,11005,8,1,10,2.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,17)=DIV,DIH=11005,DIG=8.17 D ^DICR
"^DD",11005,11005,8,1,10,3)
Trigger Date Denied Sec Release = TODAY
"^DD",11005,11005,8,1,10,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,10,"DELETE CONDITION")
S X=X="i2"!(X="d2")!(X="s2")&($P(^A1AE(11005,DA,0),U,8)="n2")
"^DD",11005,11005,8,1,10,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,10,"DT")
3140328
"^DD",11005,11005,8,1,10,"FIELD")
DATE DENIED SEC RELEASE
"^DD",11005,11005,8,21,0)
^^153^153^3150529^
"^DD",11005,11005,8,21,1,0)
I. PRIMARY DEVELOPMENT
"^DD",11005,11005,8,21,2,0)
 
"^DD",11005,11005,8,21,3,0)
The following describes how this field is used in primary development:
"^DD",11005,11005,8,21,4,0)
 
"^DD",11005,11005,8,21,5,0)
A status of 'under development' is assigned to the patch via the option 
"^DD",11005,11005,8,21,6,0)
to 'Add a Patch'. It is assigned by the system when the patch is first 
"^DD",11005,11005,8,21,7,0)
added.
"^DD",11005,11005,8,21,8,0)
 
"^DD",11005,11005,8,21,9,0)
Once the developer is ready to have the patch verified, s/he can change 
"^DD",11005,11005,8,21,10,0)
the status of the patch to 'completed/unverified'. When this status is 
"^DD",11005,11005,8,21,11,0)
assigned to the patch, a bulletin is sent to the verifiers of the package 
"^DD",11005,11005,8,21,12,0)
notifying them this patch is ready for verification. A patch message is 
"^DD",11005,11005,8,21,13,0)
also sent to the verifiers at this time.
"^DD",11005,11005,8,21,14,0)
 
"^DD",11005,11005,8,21,15,0)
NOTE: Developers are permitted to edit patches after they are submitted 
"^DD",11005,11005,8,21,16,0)
for Verification but the status will change back to 'U'nder developement.
"^DD",11005,11005,8,21,17,0)
 
"^DD",11005,11005,8,21,18,0)
Once the verifiers receive this bulletin they can begin the verification 
"^DD",11005,11005,8,21,19,0)
process of this patch. When the verifiers are ready to release the patch 
"^DD",11005,11005,8,21,20,0)
to the field, they can change the status of the patch to 'verified'. When 
"^DD",11005,11005,8,21,21,0)
this status is assigned to the patch, a bulletin is sent to those users 
"^DD",11005,11005,8,21,22,0)
who have elected to be notified of patches for the corresponding package. 
"^DD",11005,11005,8,21,23,0)
A patch message containing Packman routines is sent to support groups at 
"^DD",11005,11005,8,21,24,0)
the ISCs also.
"^DD",11005,11005,8,21,25,0)
 
"^DD",11005,11005,8,21,26,0)
The status of a patch determines what information in the patch may be 
"^DD",11005,11005,8,21,27,0)
edited, these are outlined as follows:
"^DD",11005,11005,8,21,28,0)
 
"^DD",11005,11005,8,21,29,0)
Value of Status field  Fields which can be edited  Can set Status to
"^DD",11005,11005,8,21,30,0)
---------------------  --------------------------  -----------------
"^DD",11005,11005,8,21,31,0)
under development      PATCH SUBJECT               completed/unverified
"^DD",11005,11005,8,21,32,0)
                       PRIORITY
"^DD",11005,11005,8,21,33,0)
                       CATEGORY OF PATCH
"^DD",11005,11005,8,21,34,0)
                       PATCH DESCRIPTION
"^DD",11005,11005,8,21,35,0)
                       ROUTINE NAME
"^DD",11005,11005,8,21,36,0)
                       DESCRIPTION OF ROUTINE CHANGES
"^DD",11005,11005,8,21,37,0)
                       STATUS OF PATCH
"^DD",11005,11005,8,21,38,0)
 
"^DD",11005,11005,8,21,39,0)
completed/unverified   PATCH SUBJECT               verified
"^DD",11005,11005,8,21,40,0)
                       PRIORITY
"^DD",11005,11005,8,21,41,0)
                       CATEGORY OF PATCH
"^DD",11005,11005,8,21,42,0)
                       PATCH DESCRIPTION
"^DD",11005,11005,8,21,43,0)
                       ROUTINE NAME
"^DD",11005,11005,8,21,44,0)
                       DESCRIPTION OF ROUTINE CHANGES
"^DD",11005,11005,8,21,45,0)
                       STATUS OF PATCH
"^DD",11005,11005,8,21,46,0)
 
"^DD",11005,11005,8,21,47,0)
verified               STATUS OF PATCH             entered in error
"^DD",11005,11005,8,21,48,0)
 
"^DD",11005,11005,8,21,49,0)
entered in error       ENTERED IN ERROR            Status can NOT be
"^DD",11005,11005,8,21,50,0)
                       DESCRIPTION                 changed
"^DD",11005,11005,8,21,51,0)
 
"^DD",11005,11005,8,21,52,0)
retired                RETIRED AFTER VERSION       Status can NOT be
"^DD",11005,11005,8,21,53,0)
                       RETIREMENT DESCRIPTION      changed
"^DD",11005,11005,8,21,54,0)
 
"^DD",11005,11005,8,21,55,0)
If an error is made, or a developer decides not to release an 'under 
"^DD",11005,11005,8,21,56,0)
development' or 'completed/unverified' patch, it may be deleted; since 
"^DD",11005,11005,8,21,57,0)
only the developer and verifier have viewed them. However, if an error is 
"^DD",11005,11005,8,21,58,0)
made in a 'verified' patch the status should be changed to 'entered in 
"^DD",11005,11005,8,21,59,0)
error', and an error description should be entered to indicate why the 
"^DD",11005,11005,8,21,60,0)
patch is in error, and where the correct patch can be found.
"^DD",11005,11005,8,21,61,0)
 
"^DD",11005,11005,8,21,62,0)
Certain patches may also be 'retired'; specifically the database or DBA 
"^DD",11005,11005,8,21,63,0)
type patches may be retired after a specific version. Additional comments 
"^DD",11005,11005,8,21,64,0)
about the retired patch can be put in the retirement comment field.
"^DD",11005,11005,8,21,65,0)
 
"^DD",11005,11005,8,21,66,0)
II. SECONDARY DEVELOPMENT
"^DD",11005,11005,8,21,67,0)
 
"^DD",11005,11005,8,21,68,0)
The following describes how this field is used in secondary development:
"^DD",11005,11005,8,21,69,0)
 
"^DD",11005,11005,8,21,70,0)
Only verified patches can be put under secondary development, and even 
"^DD",11005,11005,8,21,71,0)
then the verified entry in the Patch Module cannot be changed. Instead, 
"^DD",11005,11005,8,21,72,0)
an e-mail or host-file distribution of the verified patch is imported 
"^DD",11005,11005,8,21,73,0)
into the Patch Module, which results in the creation of one or more new 
"^DD",11005,11005,8,21,74,0)
entries in the Patch Module that are copies of the distributed patch. It 
"^DD",11005,11005,8,21,75,0)
is these new derived patches - copies of the original verified patch - 
"^DD",11005,11005,8,21,76,0)
that are subject to secondary development.
"^DD",11005,11005,8,21,77,0)
 
"^DD",11005,11005,8,21,78,0)
A status of 'in review' is assigned to each imported patch when it is 
"^DD",11005,11005,8,21,79,0)
imported. When this status is assigned to the patch, a bulletin is sent 
"^DD",11005,11005,8,21,80,0)
to the developers of the package notifying them this patch is ready for 
"^DD",11005,11005,8,21,81,0)
review.
"^DD",11005,11005,8,21,82,0)
 
"^DD",11005,11005,8,21,83,0)
If the reviewer decides the patch under review should not be released in 
"^DD",11005,11005,8,21,84,0)
the secondary patch stream, a status of 'not for secondary release' may 
"^DD",11005,11005,8,21,85,0)
be assigned to the patch. When this status is assigned to the patch, a 
"^DD",11005,11005,8,21,86,0)
bulletin is sent to the developers and verifiers of the package notifying 
"^DD",11005,11005,8,21,87,0)
them this patch will not be released. In the unlikely event that a 
"^DD",11005,11005,8,21,88,0)
rejected patch should be reevaluated for possible secondary release, its 
"^DD",11005,11005,8,21,89,0)
status may be changed back to 'in review.'
"^DD",11005,11005,8,21,90,0)
 
"^DD",11005,11005,8,21,91,0)
If the reviewer decides the patch under review may be released unchanged 
"^DD",11005,11005,8,21,92,0)
into the secondary patch stream, a status of 'secondary completion' may 
"^DD",11005,11005,8,21,93,0)
be assigned to it. When this status is assigned to the patch, a bulletin 
"^DD",11005,11005,8,21,94,0)
is sent to the verifiers of the package notifying them this patch is 
"^DD",11005,11005,8,21,95,0)
ready for secondary verification. A patch message is also sent to the 
"^DD",11005,11005,8,21,96,0)
verifiers at this time.
"^DD",11005,11005,8,21,97,0)
 
"^DD",11005,11005,8,21,98,0)
If the reviewer decides the patch under review needs secondary 
"^DD",11005,11005,8,21,99,0)
development prior to its release, a status of 'secondary development' may 
"^DD",11005,11005,8,21,100,0)
be assigned to it. When this status is assigned to the patch, a bulletin 
"^DD",11005,11005,8,21,101,0)
is sent to the developers of the package notifying them this patch is 
"^DD",11005,11005,8,21,102,0)
ready for secondary development. A patch message is also sent to the 
"^DD",11005,11005,8,21,103,0)
developers at this time.
"^DD",11005,11005,8,21,104,0)
 
"^DD",11005,11005,8,21,105,0)
Once the secondary completer is ready to have the patch verified, s/he 
"^DD",11005,11005,8,21,106,0)
can change the status of the patch to 'secondary completion.'
"^DD",11005,11005,8,21,107,0)
 
"^DD",11005,11005,8,21,108,0)
NOTE: Developers are permitted to edit patches after they are submitted 
"^DD",11005,11005,8,21,109,0)
for Secondary Verification but the status will change back to 'd2' 
"^DD",11005,11005,8,21,110,0)
Secondary Developement.
"^DD",11005,11005,8,21,111,0)
 
"^DD",11005,11005,8,21,112,0)
Once the verifiers receive the bulletin they can begin the secondary 
"^DD",11005,11005,8,21,113,0)
verification process of this patch. When the verifiers are ready to 
"^DD",11005,11005,8,21,114,0)
secondarily release the patch to the field, they can change the status of 
"^DD",11005,11005,8,21,115,0)
the patch to 'secondary release.' When this status is assigned to the 
"^DD",11005,11005,8,21,116,0)
patch, a bulletin is sent to those users who have elected to be notified 
"^DD",11005,11005,8,21,117,0)
of patches for the corresponding package. A patch message containing 
"^DD",11005,11005,8,21,118,0)
Packman routines is sent to subscribing support groups.
"^DD",11005,11005,8,21,119,0)
 
"^DD",11005,11005,8,21,120,0)
As with primary patches, the status of a secondary patch determines what 
"^DD",11005,11005,8,21,121,0)
information in the patch may be edited, these are outlined as follows:
"^DD",11005,11005,8,21,122,0)
 
"^DD",11005,11005,8,21,123,0)
Value of Status field  Fields which can be edited  Can set Status to
"^DD",11005,11005,8,21,124,0)
---------------------  --------------------------  -------------------------
"^DD",11005,11005,8,21,125,0)
in review              REVIEW DESCRIPTION          not for secondary 
"^DD",11005,11005,8,21,126,0)
release
"^DD",11005,11005,8,21,127,0)
                       STATUS OF PATCH             secondary completion
"^DD",11005,11005,8,21,128,0)
                                                   secondary development
"^DD",11005,11005,8,21,129,0)
 
"^DD",11005,11005,8,21,130,0)
secondary development  PATCH SUBJECT               secondary completion
"^DD",11005,11005,8,21,131,0)
                       PRIORITY                    in review
"^DD",11005,11005,8,21,132,0)
                       CATEGORY OF PATCH
"^DD",11005,11005,8,21,133,0)
                       PATCH DESCRIPTION
"^DD",11005,11005,8,21,134,0)
                       ROUTINE NAME
"^DD",11005,11005,8,21,135,0)
                       DESCRIPTION OF ROUTINE CHANGES
"^DD",11005,11005,8,21,136,0)
                       STATUS OF PATCH
"^DD",11005,11005,8,21,137,0)
 
"^DD",11005,11005,8,21,138,0)
secondary completion   PATCH SUBJECT               secondary release
"^DD",11005,11005,8,21,139,0)
                       PRIORITY                    secondary development
"^DD",11005,11005,8,21,140,0)
                       CATEGORY OF PATCH           in review
"^DD",11005,11005,8,21,141,0)
                       PATCH DESCRIPTION
"^DD",11005,11005,8,21,142,0)
                       ROUTINE NAME
"^DD",11005,11005,8,21,143,0)
                       DESCRIPTION OF ROUTINE CHANGES
"^DD",11005,11005,8,21,144,0)
                       STATUS OF PATCH
"^DD",11005,11005,8,21,145,0)
 
"^DD",11005,11005,8,21,146,0)
secondary release                                  Status can NOT be
"^DD",11005,11005,8,21,147,0)
                                                   changed
"^DD",11005,11005,8,21,148,0)
 
"^DD",11005,11005,8,21,149,0)
not for secondary release  STATUS OF PATCH         in review
"^DD",11005,11005,8,21,150,0)
 
"^DD",11005,11005,8,21,151,0)
Until a secondary patch is released, its status can always be changed 
"^DD",11005,11005,8,21,152,0)
back to 'in review' to give the team a chance to reconsider the right 
"^DD",11005,11005,8,21,153,0)
disposition of this patch within the secondary patch stream.
"^DD",11005,11005,8,23,0)
^^21^21^3150529^
"^DD",11005,11005,8,23,1,0)
This is the single most important field in file DHCP Patches (11005). Its 
"^DD",11005,11005,8,23,2,0)
input transform drives VISTA's entire software lifecycle. It is used 
"^DD",11005,11005,8,23,3,0)
throughout the Patch Module.
"^DD",11005,11005,8,23,4,0)
 
"^DD",11005,11005,8,23,5,0)
Change History:
"^DD",11005,11005,8,23,6,0)
 
"^DD",11005,11005,8,23,7,0)
31 October 1995: last change (details unknown) to field before OSEHRA 
"^DD",11005,11005,8,23,8,0)
Forum project began
"^DD",11005,11005,8,23,9,0)
 
"^DD",11005,11005,8,23,10,0)
Friday, 28 February 2014: (VEN/TOAD) added codes 2r:IN REVIEW, 
"^DD",11005,11005,8,23,11,0)
2u:SECONDARY DEVELOPMENT, 2c:SECONDARY COMPLETION, 2v:SECONDARY RELEASE, 
"^DD",11005,11005,8,23,12,0)
and 2n: NOT FOR SECONDARY RELEASE
"^DD",11005,11005,8,23,13,0)
 
"^DD",11005,11005,8,23,14,0)
Thursday, 6 March 2014, ven/toad: added secondary development to 
"^DD",11005,11005,8,23,15,0)
Description, added Technical Description & Change History. Renamed 
"^DD",11005,11005,8,23,16,0)
secondary-status codes as part of creation of ID11005^A1AEUTL: 'i2' FOR 
"^DD",11005,11005,8,23,17,0)
IN REVIEW, 'd2' FOR SEC DEVELOPMENT, 's2' FOR SEC COMPLETION, 'r2' FOR 
"^DD",11005,11005,8,23,18,0)
SEC RELEASE, 'n2' FOR NOT FOR SEC RELEASE.
"^DD",11005,11005,8,23,19,0)
 
"^DD",11005,11005,8,23,20,0)
Friday, 29 May 2015, ven/toad: updated change history and description to 
"^DD",11005,11005,8,23,21,0)
capture new secondary-status codes from previous change.
"^DD",11005,11005,8,"AUDIT")
y
"^DD",11005,11005,8,"DT")
3150529
"^DD",11005,11005,8.09,0)
DATE IMPORTED^D^^8;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,8.09,1,0)
^.1
"^DD",11005,11005,8.09,1,1,0)
^^TRIGGER^11005^8.1
"^DD",11005,11005,8.09,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$P(^A1AE(11005,DA,8),U,10)="" I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,8.09,1,1,1.4)
"^DD",11005,11005,8.09,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,10)=DIV,DIH=11005,DIG=8.1 D ^DICR
"^DD",11005,11005,8.09,1,1,2)
Q
"^DD",11005,11005,8.09,1,1,3)
Trigger current user into User Imported
"^DD",11005,11005,8.09,1,1,"CREATE CONDITION")
S X=$P(^A1AE(11005,DA,8),U,10)=""
"^DD",11005,11005,8.09,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,8.09,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,8.09,1,1,"DT")
3140328
"^DD",11005,11005,8.09,1,1,"FIELD")
USER IMPORTED
"^DD",11005,11005,8.09,5,1,0)
11005^8^6
"^DD",11005,11005,8.09,9)
^
"^DD",11005,11005,8.09,"DT")
3140328
"^DD",11005,11005,8.1,0)
USER IMPORTED^P200'^VA(200,^8;10^Q
"^DD",11005,11005,8.1,5,1,0)
11005^8.09^1
"^DD",11005,11005,8.1,9)
^
"^DD",11005,11005,8.1,"DT")
3140328
"^DD",11005,11005,8.11,0)
DATE OF SEC DEVELOPMENT^D^^8;11^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,8.11,1,0)
^.1
"^DD",11005,11005,8.11,1,1,0)
^^TRIGGER^11005^8.12
"^DD",11005,11005,8.11,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$P(^A1AE(11005,DA,8),U,12)="" I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,8.11,1,1,1.4)
"^DD",11005,11005,8.11,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,12)=DIV,DIH=11005,DIG=8.12 D ^DICR
"^DD",11005,11005,8.11,1,1,2)
Q
"^DD",11005,11005,8.11,1,1,"CREATE CONDITION")
S X=$P(^A1AE(11005,DA,8),U,12)=""
"^DD",11005,11005,8.11,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,8.11,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,8.11,1,1,"FIELD")
USER SEC DEVELOPMENT
"^DD",11005,11005,8.11,5,1,0)
11005^8^7
"^DD",11005,11005,8.11,9)
^
"^DD",11005,11005,8.11,"DT")
3140328
"^DD",11005,11005,8.12,0)
USER SEC DEVELOPMENT^P200'^VA(200,^8;12^Q
"^DD",11005,11005,8.12,5,1,0)
11005^8.11^1
"^DD",11005,11005,8.12,9)
^
"^DD",11005,11005,8.12,"DT")
3140324
"^DD",11005,11005,8.13,0)
DATE OF SEC COMPLETION^D^^8;13^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,8.13,1,0)
^.1
"^DD",11005,11005,8.13,1,1,0)
^^TRIGGER^11005^8.14
"^DD",11005,11005,8.13,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$P(^A1AE(11005,DA,8),U,14)="" I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,8.13,1,1,1.4)
"^DD",11005,11005,8.13,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,14)=DIV,DIH=11005,DIG=8.14 D ^DICR
"^DD",11005,11005,8.13,1,1,2)
Q
"^DD",11005,11005,8.13,1,1,"CREATE CONDITION")
S X=$P(^A1AE(11005,DA,8),U,14)=""
"^DD",11005,11005,8.13,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,8.13,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,8.13,1,1,"FIELD")
USER SEC COMPLETION
"^DD",11005,11005,8.13,5,1,0)
11005^8^8
"^DD",11005,11005,8.13,9)
^
"^DD",11005,11005,8.13,"DT")
3140328
"^DD",11005,11005,8.14,0)
USER SEC COMPLETION^P200'^VA(200,^8;14^Q
"^DD",11005,11005,8.14,5,1,0)
11005^8.13^1
"^DD",11005,11005,8.14,9)
^
"^DD",11005,11005,8.14,"DT")
3140324
"^DD",11005,11005,8.15,0)
DATE OF SEC RELEASE^D^^8;15^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,8.15,1,0)
^.1
"^DD",11005,11005,8.15,1,1,0)
^^TRIGGER^11005^8.16
"^DD",11005,11005,8.15,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$P(^A1AE(11005,DA,8),U,16)="" I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,16),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,8.15,1,1,1.4)
"^DD",11005,11005,8.15,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,16)=DIV,DIH=11005,DIG=8.16 D ^DICR
"^DD",11005,11005,8.15,1,1,2)
Q
"^DD",11005,11005,8.15,1,1,"CREATE CONDITION")
S X=$P(^A1AE(11005,DA,8),U,16)=""
"^DD",11005,11005,8.15,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,8.15,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,8.15,1,1,"FIELD")
USER SEC RELEASE
"^DD",11005,11005,8.15,5,1,0)
11005^8^9
"^DD",11005,11005,8.15,9)
^
"^DD",11005,11005,8.15,"DT")
3140328
"^DD",11005,11005,8.16,0)
USER SEC RELEASE^P200'^VA(200,^8;16^Q
"^DD",11005,11005,8.16,5,1,0)
11005^8.15^1
"^DD",11005,11005,8.16,9)
^
"^DD",11005,11005,8.16,"DT")
3140324
"^DD",11005,11005,8.17,0)
DATE DENIED SEC RELEASE^D^^8;17^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,8.17,1,0)
^.1
"^DD",11005,11005,8.17,1,1,0)
^^TRIGGER^11005^8.18
"^DD",11005,11005,8.17,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$P(^A1AE(11005,DA,8),U,18)="" I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,18),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,8.17,1,1,1.4)
"^DD",11005,11005,8.17,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,18)=DIV,DIH=11005,DIG=8.18 D ^DICR
"^DD",11005,11005,8.17,1,1,2)
Q
"^DD",11005,11005,8.17,1,1,"CREATE CONDITION")
S X=$P(^A1AE(11005,DA,8),U,18)=""
"^DD",11005,11005,8.17,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,8.17,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,8.17,1,1,"FIELD")
USER DENIED SEC RELEASE
"^DD",11005,11005,8.17,5,1,0)
11005^8^10
"^DD",11005,11005,8.17,9)
^
"^DD",11005,11005,8.17,"DT")
3140328
"^DD",11005,11005,8.18,0)
USER DENIED SEC RELEASE^P200'^VA(200,^8;18^Q
"^DD",11005,11005,8.18,5,1,0)
11005^8.17^1
"^DD",11005,11005,8.18,9)
^
"^DD",11005,11005,8.18,"DT")
3140324
"^DD",11005,11005,8.5,0)
ENTERED IN ERROR DESCRIPTION^11005.07^^E;0
"^DD",11005,11005,8.5,21,0)
^^12^12^2871110^^^^
"^DD",11005,11005,8.5,21,1,0)
When the status of a patch is changed to 'entered in error' a bulletin
"^DD",11005,11005,8.5,21,2,0)
is sent to users who have viewed the patch. The bulletin then refers
"^DD",11005,11005,8.5,21,3,0)
them to the 'Display a Patch' option which prints out the entered in error
"^DD",11005,11005,8.5,21,4,0)
description field.
"^DD",11005,11005,8.5,21,5,0)
 
"^DD",11005,11005,8.5,21,6,0)
This description field should tell the user why the patch is in error,
"^DD",11005,11005,8.5,21,7,0)
and where the correct patch can be found.
"^DD",11005,11005,8.5,21,8,0)
 
"^DD",11005,11005,8.5,21,9,0)
If a patch is INCORRECT you should create a new one with the correct
"^DD",11005,11005,8.5,21,10,0)
information. The user can ONLY view the 'Entered in Error Description'
"^DD",11005,11005,8.5,21,11,0)
field via the 'Display a Patch' option for any patch which has a status of
"^DD",11005,11005,8.5,21,12,0)
'entered in error'.
"^DD",11005,11005,9,0)
USER ENTERING^P200'^VA(200,^0;9^Q
"^DD",11005,11005,9,21,0)
^^2^2^2871110^^^^
"^DD",11005,11005,9,21,1,0)
This field is set via the option to 'Add a Patch'. It is set by
"^DD",11005,11005,9,21,2,0)
the system when the patch is first added.
"^DD",11005,11005,9,"DT")
2921202
"^DD",11005,11005,10,0)
DATE PATCH COMPLETED^D^^0;10^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,10,1,0)
^.1
"^DD",11005,11005,10,1,1,0)
^^TRIGGER^11005^13
"^DD",11005,11005,10,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S('$P(^A1AE(11005,DA,0),U,13):1,1:1) I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,10,1,1,1.4)
"^DD",11005,11005,10,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=11005,DIG=13 D ^DICR
"^DD",11005,11005,10,1,1,2)
Q
"^DD",11005,11005,10,1,1,"CREATE CONDITION")
S X=$S('$P(^A1AE(11005,DA,0),U,13):1,1:1)
"^DD",11005,11005,10,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,10,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,10,1,1,"DT")
3140328
"^DD",11005,11005,10,1,1,"FIELD")
USER COMPLETION
"^DD",11005,11005,10,5,1,0)
11005^8^2
"^DD",11005,11005,10,9)
^
"^DD",11005,11005,10,21,0)
3^^3^3^2880406^^^^
"^DD",11005,11005,10,21,1,0)
This field is triggered by the STATUS field, when the status
"^DD",11005,11005,10,21,2,0)
of the patch is set to 'complete/unverified' the DATE PATCH
"^DD",11005,11005,10,21,3,0)
COMPLETED is set. The patch is now available for Verification.
"^DD",11005,11005,10,"DT")
3140328
"^DD",11005,11005,11,0)
DATE PATCH VERIFIED^D^^0;11^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,11,1,0)
^.1
"^DD",11005,11005,11,1,1,0)
^^TRIGGER^11005^14
"^DD",11005,11005,11,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S('$P(^A1AE(11005,DA,0),U,14):1,1:0) I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,11,1,1,1.4)
"^DD",11005,11005,11,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),0)),DIV=X S $P(^(0),U,14)=DIV,DIH=11005,DIG=14 D ^DICR
"^DD",11005,11005,11,1,1,2)
Q
"^DD",11005,11005,11,1,1,"CREATE CONDITION")
S X=$S('$P(^A1AE(11005,DA,0),U,14):1,1:0)
"^DD",11005,11005,11,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,11,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,11,1,1,"DT")
3140328
"^DD",11005,11005,11,1,1,"FIELD")
USER VERIFY
"^DD",11005,11005,11,1,2,0)
11005^AV^MUMPS
"^DD",11005,11005,11,1,2,1)
S:$P(^A1AE(11005,DA,0),U,8)="v" ^A1AE(11005,"AV",+$P(^A1AE(11005,DA,0),U,2),9999999-X,DA)=""
"^DD",11005,11005,11,1,2,2)
K ^A1AE(11005,"AV",+$P(^A1AE(11005,DA,0),U,2),9999999-X,DA)
"^DD",11005,11005,11,1,3,0)
11005^AD^MUMPS
"^DD",11005,11005,11,1,3,1)
S %="D PATCH^A1AECL1(DA)" X %
"^DD",11005,11005,11,1,3,2)
Q
"^DD",11005,11005,11,1,3,"%D",0)
^^1^1^3041028^
"^DD",11005,11005,11,1,3,"%D",1,0)
Updates the checksums in the ROUTINE file 9.8.
"^DD",11005,11005,11,1,3,"DT")
3041028
"^DD",11005,11005,11,5,1,0)
11005^8^1
"^DD",11005,11005,11,9)
^
"^DD",11005,11005,11,21,0)
^^3^3^2970619^^^^
"^DD",11005,11005,11,21,1,0)
This field is triggered by the STATUS field, when the status is
"^DD",11005,11005,11,21,2,0)
of the patch is set to 'verified' the DATE PATCH VERIFIED is
"^DD",11005,11005,11,21,3,0)
set. The patch is now available to the field.
"^DD",11005,11005,11,"DT")
3140328
"^DD",11005,11005,11.5,0)
DATE PATCH RELEASED^D^^0;16^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,11.5,"DT")
3020430
"^DD",11005,11005,12,0)
DATE PATCH FIRST ENTERED^D^^0;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,12,9)
^
"^DD",11005,11005,12,21,0)
^^2^2^2871110^^^^
"^DD",11005,11005,12,21,1,0)
This field is set via the option to 'Add a Patch'. It is set by
"^DD",11005,11005,12,21,2,0)
the system when the patch is first entered.
"^DD",11005,11005,12,"DT")
2860108
"^DD",11005,11005,13,0)
USER COMPLETION^P200'^VA(200,^0;13^Q
"^DD",11005,11005,13,5,1,0)
11005^10^1
"^DD",11005,11005,13,9)
^
"^DD",11005,11005,13,21,0)
^^3^3^2860421^^^
"^DD",11005,11005,13,21,1,0)
This field is triggered by the Date Patch Completed, when the
"^DD",11005,11005,13,21,2,0)
Date is set the User Completing the Patch is entered. The User
"^DD",11005,11005,13,21,3,0)
Entering the Patch may or may not be the same User Completing the Patch.
"^DD",11005,11005,13,"DT")
2921202
"^DD",11005,11005,14,0)
USER VERIFY^P200'^VA(200,^0;14^Q
"^DD",11005,11005,14,1,0)
^.1^^0
"^DD",11005,11005,14,5,1,0)
11005^11^1
"^DD",11005,11005,14,9)
^
"^DD",11005,11005,14,21,0)
^^2^2^2860303^
"^DD",11005,11005,14,21,1,0)
This field is triggered by the Date Patch Verified, When the
"^DD",11005,11005,14,21,2,0)
Date is set the User Verifying the Patch is entered.
"^DD",11005,11005,14,"DT")
2921202
"^DD",11005,11005,15,0)
RETIRED AFTER VERSION^F^^0;15^K:$L(X)>10!($L(X)<1) X
"^DD",11005,11005,15,3)
Answer must be 1-10 characters in length.
"^DD",11005,11005,15,21,0)
^.001^6^6^3040614^^^
"^DD",11005,11005,15,21,1,0)
When a DBA patch is no longer applicable to a specific version
"^DD",11005,11005,15,21,2,0)
the status of the patch is changed to 'retired', and the
"^DD",11005,11005,15,21,3,0)
last version the patch does apply to should be put in this
"^DD",11005,11005,15,21,4,0)
field. Once a patch is retired it nolonger prints with the other
"^DD",11005,11005,15,21,5,0)
patches. Also when it is displayed it will show this field and
"^DD",11005,11005,15,21,6,0)
the retirement comments field.
"^DD",11005,11005,15,"DT")
2891106
"^DD",11005,11005,15.5,0)
RETIREMENT COMMENTS^11005.08^^R;0
"^DD",11005,11005,15.5,21,0)
^^2^2^2891206^^
"^DD",11005,11005,15.5,21,1,0)
When a DBA patch is 'retired' any additional information
"^DD",11005,11005,15.5,21,2,0)
about the retirement should be described in this field.
"^DD",11005,11005,16,0)
INTERNAL COMMENTS^11005.016^^X;0
"^DD",11005,11005,16,21,0)
^^3^3^2910212^^^
"^DD",11005,11005,16,21,1,0)
This field is for internal communication between developers 
"^DD",11005,11005,16,21,2,0)
and verifiers.  This field is never printed or displayed with
"^DD",11005,11005,16,21,3,0)
the patch.
"^DD",11005,11005,17,0)
HOLDING DATE^DX^^0;17^S %DT="EXF" D ^%DT S X=Y K:Y<1 X K:Y<DT X
"^DD",11005,11005,17,3)
This patch can not be 'V'erified before this date.
"^DD",11005,11005,17,21,0)
^^2^2^2920928^^
"^DD",11005,11005,17,21,1,0)
If this patch should not be verified/released before a specific
"^DD",11005,11005,17,21,2,0)
date, enter that date here.  Only dates in the future are allowed.
"^DD",11005,11005,17,"DT")
2920928
"^DD",11005,11005,18,0)
COMPLIANCE DATE^DaX^^0;18^S %DT="EF" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,18,1,0)
^.1
"^DD",11005,11005,18,1,1,0)
11005^CD^MUMPS
"^DD",11005,11005,18,1,1,1)
S ^A1AE(11005,"CD",+$P(^A1AE(11005,DA,0),U,2),9999999-X,DA)=""
"^DD",11005,11005,18,1,1,2)
K ^A1AE(11005,"CD",+$P(^A1AE(11005,DA,0),U,2),9999999-X,DA)
"^DD",11005,11005,18,1,1,"%D",0)
^^1^1^3030122^
"^DD",11005,11005,18,1,1,"%D",1,0)
This is the compliance date cross-reference sorted by package.
"^DD",11005,11005,18,1,1,"DT")
3030122
"^DD",11005,11005,18,21,0)
^.001^10^10^3040603^^^^
"^DD",11005,11005,18,21,1,0)
Each patch will now have a compliance date. The compliance date is  the 
"^DD",11005,11005,18,21,2,0)
deadline date for installation. The compliance date will entered at time 
"^DD",11005,11005,18,21,3,0)
of the patch release by the NVS staff releasing the patch. The software 
"^DD",11005,11005,18,21,4,0)
will present a default to the releaser based on the rules defined in 
"^DD",11005,11005,18,21,5,0)
directive 2001-023: 1 day for emergency patches and 30 days for mandatory 
"^DD",11005,11005,18,21,6,0)
(all other) patches. The default may be changed to a date agreed to by 
"^DD",11005,11005,18,21,7,0)
SD&D, NVS, and the stakeholders for the project. For example, a patch 
"^DD",11005,11005,18,21,8,0)
might have a directive that allows for 45 day window of installation or 
"^DD",11005,11005,18,21,9,0)
an emergency patch might be a 2 day install instead of 1 day installation 
"^DD",11005,11005,18,21,10,0)
deadline. 
"^DD",11005,11005,18,"AUDIT")
y
"^DD",11005,11005,18,"DT")
3030122
"^DD",11005,11005,19,0)
COMPLIANCE DATE COMMENT^11005.019^^3;0
"^DD",11005,11005,20,0)
LAST EDITED^D^^0;19^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,20,21,0)
^^3^3^3081022^
"^DD",11005,11005,20,21,1,0)
This field will get set everytime someone uses the A1AE ADD/EDIT
"^DD",11005,11005,20,21,2,0)
template to edit the patch, it will record the date of the edit.
"^DD",11005,11005,20,21,3,0)

"^DD",11005,11005,20,"DT")
3081022
"^DD",11005,11005,26,0)
IN REVIEW DESCRIPTION^11005.026^^26;0
"^DD",11005,11005,27,0)
SEC DEVELOPMENT DESCRIPTION^11005.027^^27;0
"^DD",11005,11005,28,0)
NOT FOR SEC RELEASE DESC^11005.028^^28;0
"^DD",11005,11005,40,0)
NEW PACKAGE^F^^4;1^K:$L(X)>30!($L(X)<4)!'(X?1.AN1" "1.NP) X
"^DD",11005,11005,40,1,0)
^.1
"^DD",11005,11005,40,1,1,0)
11005^PK
"^DD",11005,11005,40,1,1,1)
S ^A1AE(11005,"PK",$E(X,1,30),DA)=""
"^DD",11005,11005,40,1,1,2)
K ^A1AE(11005,"PK",$E(X,1,30),DA)
"^DD",11005,11005,40,1,1,"DT")
3060524
"^DD",11005,11005,40,3)
Answer must be 4-30 characters in length.
"^DD",11005,11005,40,21,0)
^^2^2^3060524^
"^DD",11005,11005,40,21,1,0)
This field holds the new Package name when a patch entry is used to
"^DD",11005,11005,40,21,2,0)
control a new package version.
"^DD",11005,11005,40,"DT")
3060524
"^DD",11005,11005,50,0)
PROBLEMS SOLVED^11005.06PA^^1;0
"^DD",11005,11005,50,21,0)
^^2^2^2860224^^^^
"^DD",11005,11005,50,21,1,0)
This sub-file keeps track of what problems in the Problem File are
"^DD",11005,11005,50,21,2,0)
resolved by this patch.
"^DD",11005,11005,100,0)
ROUTINE NAME^11005.03A^^P;0
"^DD",11005,11005,100,21,0)
^^2^2^2921213^^^^
"^DD",11005,11005,100,21,1,0)
If a programming change has been made to a Routine, enter
"^DD",11005,11005,100,21,2,0)
the name of the Routine.
"^DD",11005,11005,102,0)
SECOND LINE^F^^P2;1^K:$L(X)>200!($L(X)<2) X
"^DD",11005,11005,102,3)
Answer must be 2-200 characters in length.
"^DD",11005,11005,102,21,0)
^^2^2^3070614^
"^DD",11005,11005,102,21,1,0)
This holds a sample of what the second line of each routine should look 
"^DD",11005,11005,102,21,2,0)
like.
"^DD",11005,11005,102,"DT")
3070614
"^DD",11005,11005,103,0)
DISPLAY ROUTINE PATCH LIST^S^0:No;1:Yes;^5;1^Q
"^DD",11005,11005,103,21,0)
^^2^2^3071105^
"^DD",11005,11005,103,21,1,0)
This field is used to control if the routine list of patches is 
"^DD",11005,11005,103,21,2,0)
displayed.
"^DD",11005,11005,103,"DT")
3071106
"^DD",11005,11005,150,0)
PATCH RELEASE CHECK^11005.09IP^^Q;0
"^DD",11005,11005,150,21,0)
^^4^4^2920918^^^
"^DD",11005,11005,150,21,1,0)
Enter a patch which must be verified and installed allong with this patch.
"^DD",11005,11005,150,21,2,0)
 
"^DD",11005,11005,150,21,3,0)
If you use the 'routine name' for lookup make sure the correct patch is
"^DD",11005,11005,150,21,4,0)
selected as routines may appear in more than one patch.
"^DD",11005,11005,200,0)
PRINTED BY^11005.02P^^2;0
"^DD",11005,11005,200,21,0)
^^3^3^2871110^^^^
"^DD",11005,11005,200,21,1,0)
To keep track of when a 'verified' patch is new for a specific  
"^DD",11005,11005,200,21,2,0)
user, the system keeps track of the first and last time  
"^DD",11005,11005,200,21,3,0)
a user printed the patch.
"^DD",11005,11005,200,21,4,0)
Verified Patches.
"^DD",11005,11005.01,0)
PATCH DESCRIPTION SUB-FIELD^NL^.01^1
"^DD",11005,11005.01,0,"DT")
2971112
"^DD",11005,11005.01,0,"NM","PATCH DESCRIPTION")

"^DD",11005,11005.01,0,"UP")
11005
"^DD",11005,11005.01,.01,0)
PATCH DESCRIPTION^WL^^0;1^Q
"^DD",11005,11005.01,.01,"DT")
3140317
"^DD",11005,11005.016,0)
INTERNAL COMMENTS SUB-FIELD^^.01^1
"^DD",11005,11005.016,0,"NM","INTERNAL COMMENTS")

"^DD",11005,11005.016,0,"UP")
11005
"^DD",11005,11005.016,.01,0)
INTERNAL COMMENTS^W^^0;1^Q
"^DD",11005,11005.016,.01,"DT")
2910212
"^DD",11005,11005.019,0)
COMPLIANCE DATE COMMENT SUB-FIELD^^.01^1
"^DD",11005,11005.019,0,"DT")
3030116
"^DD",11005,11005.019,0,"NM","COMPLIANCE DATE COMMENT")

"^DD",11005,11005.019,0,"UP")
11005
"^DD",11005,11005.019,.01,0)
COMPLIANCE DATE COMMENT^W^^0;1^Q
"^DD",11005,11005.019,.01,3)
Enter the reason for editing the Compliance Date
"^DD",11005,11005.019,.01,21,0)
^^1^1^3030116^
"^DD",11005,11005.019,.01,21,1,0)
This is the reason for editing the compliance date
"^DD",11005,11005.019,.01,"DT")
3030116
"^DD",11005,11005.02,0)
PRINTED BY SUB-FIELD^NL^3^3
"^DD",11005,11005.02,0,"DT")
2921202
"^DD",11005,11005.02,0,"NM","PRINTED BY")

"^DD",11005,11005.02,0,"UP")
11005
"^DD",11005,11005.02,.01,0)
USER^P200'X^VA(200,^0;1^S DINUM=X
"^DD",11005,11005.02,.01,1,0)
^.1^^0
"^DD",11005,11005.02,.01,21,0)
^^2^2^2860421^^^
"^DD",11005,11005.02,.01,21,1,0)
This field keeps track of each user who printed the Completed/
"^DD",11005,11005.02,.01,21,2,0)
unverified patch.
"^DD",11005,11005.02,.01,"DT")
2921202
"^DD",11005,11005.02,2,0)
INITIALLY PRINTED^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005.02,2,21,0)
^^1^1^2860303^^^
"^DD",11005,11005.02,2,21,1,0)
This field keeps track of the First Time a User Printed the Patch.
"^DD",11005,11005.02,2,"DT")
2860108
"^DD",11005,11005.02,3,0)
LAST TIME PRINTED^D^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005.02,3,1,0)
^.1
"^DD",11005,11005.02,3,1,1,0)
11005^AU^MUMPS
"^DD",11005,11005.02,3,1,1,1)
S ^A1AE(11005,"AU",+$P(^A1AE(11005,DA(1),2,DA,0),U,1),+$P(^A1AE(11005,DA(1),0),U,2),9999999-X)=""
"^DD",11005,11005.02,3,1,1,2)
K ^A1AE(11005,"AU",+$P(^A1AE(11005,DA(1),2,DA,0),U,1),+$P(^A1AE(11005,DA(1),0),U,2),9999999-X)
"^DD",11005,11005.02,3,21,0)
^^1^1^2860303^^^
"^DD",11005,11005.02,3,21,1,0)
This field keeps track of the Last Time a User Printed the Patch.
"^DD",11005,11005.02,3,"DT")
2860203
"^DD",11005,11005.026,0)
IN REVIEW DESCRIPTION SUB-FIELD^^.01^1
"^DD",11005,11005.026,0,"DT")
3140324
"^DD",11005,11005.026,0,"NM","IN REVIEW DESCRIPTION")

"^DD",11005,11005.026,0,"UP")
11005
"^DD",11005,11005.026,.01,0)
IN REVIEW DESCRIPTION^Wx^^0;1^Q
"^DD",11005,11005.026,.01,"DT")
3140324
"^DD",11005,11005.027,0)
SEC DEVELOPMENT DESCRIPTION SUB-FIELD^^.01^1
"^DD",11005,11005.027,0,"DT")
3140324
"^DD",11005,11005.027,0,"NM","SEC DEVELOPMENT DESCRIPTION")

"^DD",11005,11005.027,0,"UP")
11005
"^DD",11005,11005.027,.01,0)
SEC DEVELOPMENT DESCRIPTION^Wx^^0;1^Q
"^DD",11005,11005.027,.01,"DT")
3140324
"^DD",11005,11005.028,0)
NOT FOR SEC RELEASE DESC SUB-FIELD^^.01^1
"^DD",11005,11005.028,0,"DT")
3140324
"^DD",11005,11005.028,0,"NM","NOT FOR SEC RELEASE DESC")

"^DD",11005,11005.028,0,"UP")
11005
"^DD",11005,11005.028,.01,0)
NOT FOR SEC RELEASE DESC^Wx^^0;1^Q
"^DD",11005,11005.028,.01,"DT")
3140324
"^DD",11005,11005.03,0)
ROUTINE NAME SUB-FIELD^NL^5^6
"^DD",11005,11005.03,0,"DT")
3051012
"^DD",11005,11005.03,0,"IX","B",11005.03,.01)

"^DD",11005,11005.03,0,"NM","ROUTINE NAME")

"^DD",11005,11005.03,0,"UP")
11005
"^DD",11005,11005.03,.01,0)
ROUTINE NAME^MFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>8!($L(X)<2)!'((X?.UN)!(X?1"%".UN)) X I $D(X) S SAVX=X,X="A1AEM2" X ^%ZOSF("TEST") S X=SAVX I $T D RCHK^A1AEM2
"^DD",11005,11005.03,.01,1,0)
^.1
"^DD",11005,11005.03,.01,1,1,0)
11005^R
"^DD",11005,11005.03,.01,1,1,1)
S ^A1AE(11005,"R",$E(X,1,30),DA(1),DA)=""
"^DD",11005,11005.03,.01,1,1,2)
K ^A1AE(11005,"R",$E(X,1,30),DA(1),DA)
"^DD",11005,11005.03,.01,1,1,"DT")
3050927
"^DD",11005,11005.03,.01,1,2,0)
11005.03^B
"^DD",11005,11005.03,.01,1,2,1)
S ^A1AE(11005,DA(1),"P","B",$E(X,1,30),DA)=""
"^DD",11005,11005.03,.01,1,2,2)
K ^A1AE(11005,DA(1),"P","B",$E(X,1,30),DA)
"^DD",11005,11005.03,.01,1,2,"%D",0)
^^1^1^3050927^
"^DD",11005,11005.03,.01,1,2,"%D",1,0)
This is the normal "B" lookup index.
"^DD",11005,11005.03,.01,1,2,"DT")
3050927
"^DD",11005,11005.03,.01,3)
ANSWER MUST BE 2-8 CHARACTERS IN LENGTH
"^DD",11005,11005.03,.01,21,0)
^^10^10^2921213^^^^
"^DD",11005,11005.03,.01,21,1,0)
If a programming change has been made to a Routine, enter
"^DD",11005,11005.03,.01,21,2,0)
the name of the Routine.  Each patched routine should have 
"^DD",11005,11005.03,.01,21,3,0)
a separate entry.
"^DD",11005,11005.03,.01,21,4,0)
If the routine can be found in the routine directory you
"^DD",11005,11005.03,.01,21,5,0)
will have the option of extracting lines from the routine
"^DD",11005,11005.03,.01,21,6,0)
and stuffing them into the Description of Routine Changes
"^DD",11005,11005.03,.01,21,7,0)
field.
"^DD",11005,11005.03,.01,21,8,0)
If the routine is in an input PackMan message you will have
"^DD",11005,11005.03,.01,21,9,0)
the option of extracting lines from the routine and adding
"^DD",11005,11005.03,.01,21,10,0)
them to the Description of Routine Changes field.
"^DD",11005,11005.03,.01,22)

"^DD",11005,11005.03,.01,"DT")
3141006
"^DD",11005,11005.03,2,0)
ROUTINE CHECKSUM^11005.32^^X;0
"^DD",11005,11005.03,2.5,0)
DESCRIPTION OF ROUTINE CHANGES^11005.04^^D;0
"^DD",11005,11005.03,2.5,21,0)
^^21^21^2871110^^^^
"^DD",11005,11005.03,2.5,21,1,0)
When changes are made to routines the description should include
"^DD",11005,11005.03,2.5,21,2,0)
1)  the LINE  2)  the previous code  3)  the new code  and any
"^DD",11005,11005.03,2.5,21,3,0)
other information which would help to clearly explain the fix
"^DD",11005,11005.03,2.5,21,4,0)
that was done. Finally, show the lines of code that were changed
"^DD",11005,11005.03,2.5,21,5,0)
in their entirety.
"^DD",11005,11005.03,2.5,21,6,0)
 
"^DD",11005,11005.03,2.5,21,7,0)
 note: r  means 'replace' and
"^DD",11005,11005.03,2.5,21,8,0)
       w  means 'with'
"^DD",11005,11005.03,2.5,21,9,0)
 
"^DD",11005,11005.03,2.5,21,10,0)
The convention for entering code changes are as follows:
"^DD",11005,11005.03,2.5,21,11,0)
 
"^DD",11005,11005.03,2.5,21,12,0)
LINE: EN
"^DD",11005,11005.03,2.5,21,13,0)
    r  DPT
"^DD",11005,11005.03,2.5,21,14,0)
    w  ^DPT
"^DD",11005,11005.03,2.5,21,15,0)
 
"^DD",11005,11005.03,2.5,21,16,0)
THE LINE SHOULD LOOK LIKE THE FOLLOWING:
"^DD",11005,11005.03,2.5,21,17,0)
---------------------------------------
"^DD",11005,11005.03,2.5,21,18,0)
EN       S DA=DFN,DIE="^DPT(",DR=".01" D ^DIE
"^DD",11005,11005.03,2.5,21,19,0)
 
"^DD",11005,11005.03,2.5,21,20,0)
 
"^DD",11005,11005.03,2.5,21,21,0)
A1AEINTEG= -94
"^DD",11005,11005.03,3,0)
KIDS CHECKSUM^F^^0;2^K:$L(X)>15!($L(X)<3) X
"^DD",11005,11005.03,3,3)
Answer must be 3-15 characters in length.
"^DD",11005,11005.03,3,"DT")
3050912
"^DD",11005,11005.03,4,0)
PATCH LIST^F^^0;3^K:$L(X)>200!($L(X)<5)!'(X?2"*"1.NP2"*") X
"^DD",11005,11005.03,4,3)
Answer must be 5-200 characters in length.
"^DD",11005,11005.03,4,21,0)
^^2^2^3050926^
"^DD",11005,11005.03,4,21,1,0)
This field holds the routine patch list at the time the patch was loaded 
"^DD",11005,11005.03,4,21,2,0)
into FORUM.
"^DD",11005,11005.03,4,"DT")
3050926
"^DD",11005,11005.03,5,0)
OLD CHECKSUM^F^^0;4^K:$L(X)>15!($L(X)<3) X
"^DD",11005,11005.03,5,3)
Answer must be 3-15 characters in length.
"^DD",11005,11005.03,5,21,0)
^^3^3^3051012^
"^DD",11005,11005.03,5,21,1,0)
This field holds the before checksum at the time the patch is loaded into 
"^DD",11005,11005.03,5,21,2,0)
the patch module.  This old checksum value is pulled from the ROUTINE 
"^DD",11005,11005.03,5,21,3,0)
file.
"^DD",11005,11005.03,5,"DT")
3051012
"^DD",11005,11005.04,0)
DESCRIPTION OF ROUTINE CHANGES SUB-FIELD^NL^.01^1
"^DD",11005,11005.04,0,"NM","DESCRIPTION OF ROUTINE CHANGES")

"^DD",11005,11005.04,0,"UP")
11005.03
"^DD",11005,11005.04,.01,0)
DESCRIPTION OF ROUTINE CHANGES^WL^^0;1^Q
"^DD",11005,11005.04,.01,21,0)
^^4^4^2871009^^^^
"^DD",11005,11005.04,.01,21,1,0)
When Changes are made to Routines the Description should include
"^DD",11005,11005.04,.01,21,2,0)
1)  the TAG  2) the previous code  3)  the new code  and any
"^DD",11005,11005.04,.01,21,3,0)
other information which would help to clearly explain the fix
"^DD",11005,11005.04,.01,21,4,0)
that was done.
"^DD",11005,11005.04,.01,"DT")
2860717
"^DD",11005,11005.05,0)
CATEGORY OF PATCH SUB-FIELD^NL^.01^1
"^DD",11005,11005.05,0,"DT")
2921123
"^DD",11005,11005.05,0,"NM","CATEGORY OF PATCH")

"^DD",11005,11005.05,0,"UP")
11005
"^DD",11005,11005.05,.01,0)
CATEGORY OF PATCH^MRSX^d:DATA DICTIONARY;i:INPUT TEMPLATE;p:PRINT TEMPLATE;r:ROUTINE;s:SORT TEMPLATE;o:OTHER;db:DATABASE;e:ENHANCEMENT;pp:PATCH FOR A PATCH;inf:INFORMATIONAL;^0;1^I $T(^A1AEM)'="" D DD^A1AEM
"^DD",11005,11005.05,.01,1,0)
^.1
"^DD",11005,11005.05,.01,1,1,0)
11005^AC^MUMPS
"^DD",11005,11005.05,.01,1,1,1)
S ^A1AE(11005,"AC",+$P(^A1AE(11005,DA(1),0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA(1),DA)=""
"^DD",11005,11005.05,.01,1,1,2)
K ^A1AE(11005,"AC",+$P(^A1AE(11005,DA(1),0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA(1),DA)
"^DD",11005,11005.05,.01,21,0)
^^6^6^2921123^^^^
"^DD",11005,11005.05,.01,21,1,0)
Since a Patch may fall under more than one Category this
"^DD",11005,11005.05,.01,21,2,0)
field has been made a multiple. Enter one or more Category
"^DD",11005,11005.05,.01,21,3,0)
code to describe the type of Patch.
"^DD",11005,11005.05,.01,21,4,0)
 
"^DD",11005,11005.05,.01,21,5,0)
The new category Enhancement indicates that the patch contains less than
"^DD",11005,11005.05,.01,21,6,0)
5% of the full package's routines, docuementation, install time, etc.
"^DD",11005,11005.05,.01,23,0)
^^3^3^2920928^
"^DD",11005,11005.05,.01,23,1,0)
 
"^DD",11005,11005.05,.01,23,2,0)
 
"^DD",11005,11005.05,.01,23,3,0)
 
"^DD",11005,11005.05,.01,"DT")
2921123
"^DD",11005,11005.06,0)
PROBLEMS SOLVED SUB-FIELD^NL^.01^1
"^DD",11005,11005.06,0,"NM","PROBLEMS SOLVED")

"^DD",11005,11005.06,0,"UP")
11005
"^DD",11005,11005.06,.01,0)
PROBLEM^M*P11006'^A1AE(11006,^0;1^S DIC("S")="I $P(^(0),U,10)=""c""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",11005,11005.06,.01,1,0)
^.1^^0
"^DD",11005,11005.06,.01,12)
Patches are only assigned to Completed problems.
"^DD",11005,11005.06,.01,12.1)
S DIC("S")="I $P(^(0),U,10)=""c"""
"^DD",11005,11005.06,.01,21,0)
^^2^2^2860224^^^^
"^DD",11005,11005.06,.01,21,1,0)
This field points to the Region 1 Problems File(#11006) to indicate
"^DD",11005,11005.06,.01,21,2,0)
the problems which are resolved, or associated, with this patch.
"^DD",11005,11005.06,.01,"DT")
2860224
"^DD",11005,11005.07,0)
ENTERED IN ERROR DESCRIPTION SUB-FIELD^^.01^1
"^DD",11005,11005.07,0,"NM","ENTERED IN ERROR DESCRIPTION")

"^DD",11005,11005.07,0,"UP")
11005
"^DD",11005,11005.07,.01,0)
ENTERED IN ERROR DESCRIPTION^W^^0;1^Q
"^DD",11005,11005.07,.01,21,0)
^^2^2^2860421^^^
"^DD",11005,11005.07,.01,21,1,0)
Enter a description of why this patch is in error, and where to
"^DD",11005,11005.07,.01,21,2,0)
go for the corrected patch.
"^DD",11005,11005.07,.01,"DT")
2860417
"^DD",11005,11005.08,0)
RETIREMENT COMMENTS SUB-FIELD^^.01^1
"^DD",11005,11005.08,0,"NM","RETIREMENT COMMENTS")

"^DD",11005,11005.08,0,"UP")
11005
"^DD",11005,11005.08,.01,0)
RETIREMENT COMMENTS^W^^0;1^Q
"^DD",11005,11005.08,.01,"DT")
2891106
"^DD",11005,11005.09,0)
PATCH RELEASE CHECK SUB-FIELD^^2^2
"^DD",11005,11005.09,0,"DT")
2920929
"^DD",11005,11005.09,0,"ID",2)
W "   ",@("$P($P($C(59)_$S($D(^DD(11005.09,2,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,2)_"":"",2),$C(59),1)")
"^DD",11005,11005.09,0,"IX","B",11005.09,.01)

"^DD",11005,11005.09,0,"NM","PATCH RELEASE CHECK")

"^DD",11005,11005.09,0,"UP")
11005
"^DD",11005,11005.09,.01,0)
PATCH RELEASE CHECK^M*P11005'^A1AE(11005,^0;1^S DIC("S")="I ""er""'[$E($P(^(0),""^"",8)_1)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",11005,11005.09,.01,1,0)
^.1
"^DD",11005,11005.09,.01,1,1,0)
11005.09^B
"^DD",11005,11005.09,.01,1,1,1)
S ^A1AE(11005,DA(1),"Q","B",$E(X,1,30),DA)=""
"^DD",11005,11005.09,.01,1,1,2)
K ^A1AE(11005,DA(1),"Q","B",$E(X,1,30),DA)
"^DD",11005,11005.09,.01,3)
Enter a patch which should be verified and installed with this patch.
"^DD",11005,11005.09,.01,12)
Entered in Error or Retired patches can not be selected
"^DD",11005,11005.09,.01,12.1)
S DIC("S")="I ""er""'[$E($P(^(0),""^"",8)_1)"
"^DD",11005,11005.09,.01,21,0)
^^4^4^2920929^^^^
"^DD",11005,11005.09,.01,21,1,0)
Enter a patch which must be verified and installed with this patch.
"^DD",11005,11005.09,.01,21,2,0)
 
"^DD",11005,11005.09,.01,21,3,0)
If you use the 'routine name' for lookup make sure the correct patch is
"^DD",11005,11005.09,.01,21,4,0)
selected as routines may appear in more than one patch.
"^DD",11005,11005.09,.01,"DT")
2920929
"^DD",11005,11005.09,2,0)
REQUIRED FOR VERIFICATION^S^y:YES;n:NO;^0;2^Q
"^DD",11005,11005.09,2,21,0)
^^7^7^2920929^^
"^DD",11005,11005.09,2,21,1,0)
Enter Yes if the Patch in the 'PATCH RELEASE CHECK' must be verified 
"^DD",11005,11005.09,2,21,2,0)
and installed prior to verification and installation of this Patch.
"^DD",11005,11005.09,2,21,3,0)
 
"^DD",11005,11005.09,2,21,4,0)
Enter No to allow concurrent verification and installation of this
"^DD",11005,11005.09,2,21,5,0)
patch and the patch in the 'PATCH RELEAE CHECK'.
"^DD",11005,11005.09,2,21,6,0)
 
"^DD",11005,11005.09,2,21,7,0)
In both cases the patches will be listed in the patch.
"^DD",11005,11005.09,2,"DT")
2920918
"^DD",11005,11005.32,0)
ROUTINE CHECKSUM SUB-FIELD^^.01^1
"^DD",11005,11005.32,0,"NM","ROUTINE CHECKSUM")

"^DD",11005,11005.32,0,"UP")
11005.03
"^DD",11005,11005.32,.01,0)
ROUTINE CHECKSUM^W^^0;1^Q
"^DD",11005,11005.32,.01,"DT")
2910319
"^DD",11005.1,11005.1,0)
FIELD^^12^10
"^DD",11005.1,11005.1,0,"DT")
3050609
"^DD",11005.1,11005.1,0,"IX","AC",11005.1,7)

"^DD",11005.1,11005.1,0,"IX","B",11005.1,.01)

"^DD",11005.1,11005.1,0,"NM","DHCP PATCH MESSAGE")

"^DD",11005.1,11005.1,0,"VRPK")
A1AE
"^DD",11005.1,11005.1,.01,0)
NAME^RP11005'X^A1AE(11005,^0;1^S DINUM=X
"^DD",11005.1,11005.1,.01,1,0)
^.1
"^DD",11005.1,11005.1,.01,1,1,0)
11005.1^B
"^DD",11005.1,11005.1,.01,1,1,1)
S ^A1AE(11005.1,"B",$E(X,1,30),DA)=""
"^DD",11005.1,11005.1,.01,1,1,2)
K ^A1AE(11005.1,"B",$E(X,1,30),DA)
"^DD",11005.1,11005.1,.01,3)

"^DD",11005.1,11005.1,.01,"DT")
2900429
"^DD",11005.1,11005.1,2,0)
INPUT MESSAGE NUMBER^NJ9,0^^0;2^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005.1,11005.1,2,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",11005.1,11005.1,3,0)
INPUT DATE/TIME^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11005.1,11005.1,4,0)
VERIFIER MESSAGE NUMBER^NJ9,0^^0;4^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005.1,11005.1,4,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",11005.1,11005.1,5,0)
VERIFIER DATE/TIME^Da^^0;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11005.1,11005.1,5,"AUDIT")
e
"^DD",11005.1,11005.1,5,"DT")
3020821
"^DD",11005.1,11005.1,6,0)
RELEASED MESSAGE NUMBER^NJ9,0^^0;6^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005.1,11005.1,6,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",11005.1,11005.1,7,0)
RELEASED DATE/TIME^D^^0;7^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11005.1,11005.1,7,1,0)
^.1^^-1
"^DD",11005.1,11005.1,7,1,1,0)
11005.1^AC^MUMPS
"^DD",11005.1,11005.1,7,1,1,1)
S $P(^A1AE(11005,DA,0),U,16)=X
"^DD",11005.1,11005.1,7,1,1,2)
Q
"^DD",11005.1,11005.1,7,1,1,"DT")
3020430
"^DD",11005.1,11005.1,7,"DT")
3041028
"^DD",11005.1,11005.1,11,0)
MESSAGE TYPE^S^K:KIDS;P:PACKMAN;X:DIFROM;^0;11^Q
"^DD",11005.1,11005.1,11,"DT")
2960222
"^DD",11005.1,11005.1,12,0)
TEST#^NJ3,0^^0;12^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005.1,11005.1,12,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",11005.1,11005.1,12,21,0)
^^1^1^3050609^
"^DD",11005.1,11005.1,12,21,1,0)
This field holds the test version number.
"^DD",11005.1,11005.1,12,"DT")
3050609
"^DD",11005.1,11005.1,20,0)
MESSAGE TEXT^11005.11^^2;0
"^DD",11005.1,11005.11,0)
MESSAGE TEXT SUB-FIELD^^.01^1
"^DD",11005.1,11005.11,0,"NM","MESSAGE TEXT")

"^DD",11005.1,11005.11,0,"UP")
11005.1
"^DD",11005.1,11005.11,.01,0)
MESSAGE TEXT^WL^^0;1^Q
"^DD",11005.1,11005.11,.01,.1)
PATCH MESSAGE DESCRIPTION
"^DD",11005.1,11005.11,.01,21,0)
^^2^2^2900821^^^^
"^DD",11005.1,11005.11,.01,21,1,0)
This field contains text (generally Packman routines) which is copied
"^DD",11005.1,11005.11,.01,21,2,0)
exactly into a message for creation of a Patch mail message.
"^DD",11005.2,11005.2,0)
FIELD^^.08^8
"^DD",11005.2,11005.2,0,"DT")
3140326
"^DD",11005.2,11005.2,0,"NM","DHCP PATCH STATUS")

"^DD",11005.2,11005.2,.01,0)
CODE^RFJ2^^0;1^K:$L(X)>2!($L(X)<1)!'(X?1L.1LN!(X?1.2N)) X
"^DD",11005.2,11005.2,.01,1,0)
^.1^^0
"^DD",11005.2,11005.2,.01,3)
Answer must be 1-2 characters in length.
"^DD",11005.2,11005.2,.01,"DT")
3140326
"^DD",11005.2,11005.2,.02,0)
MEANING^RFJ30^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",11005.2,11005.2,.02,3)
Answer must be 3-30 characters in length.
"^DD",11005.2,11005.2,.02,"DT")
3140326
"^DD",11005.2,11005.2,.03,0)
DISPLAY^FJ30^^0;3^K:$L(X)>30!($L(X)<3) X
"^DD",11005.2,11005.2,.03,3)
Answer must be 3-30 characters in length.
"^DD",11005.2,11005.2,.03,"DT")
3140326
"^DD",11005.2,11005.2,.04,0)
BULLETIN NAME^FJ30^^0;4^K:$L(X)>30!($L(X)<12) X
"^DD",11005.2,11005.2,.04,3)
Answer must be 12-30 characters in length.
"^DD",11005.2,11005.2,.04,"DT")
3140326
"^DD",11005.2,11005.2,.05,0)
SENT TO^FJ32^^0;5^K:$L(X)>32!($L(X)<3) X
"^DD",11005.2,11005.2,.05,3)
Answer must be 3-32 characters in length.
"^DD",11005.2,11005.2,.05,"DT")
3140326
"^DD",11005.2,11005.2,.06,0)
ALTERNATE MEANING^FJ40^^0;6^K:$L(X)>40!($L(X)<3) X
"^DD",11005.2,11005.2,.06,3)
Answer must be 3-40 characters in length.
"^DD",11005.2,11005.2,.06,"DT")
3140326
"^DD",11005.2,11005.2,.07,0)
OPTION MENU TEXT^RFJ50^^0;7^K:$L(X)>50!($L(X)<3) X
"^DD",11005.2,11005.2,.07,3)
Answer must be 3-50 characters in length.
"^DD",11005.2,11005.2,.07,"DT")
3140326
"^DD",11005.2,11005.2,.08,0)
SAME STATUS GENERATES TEST MSG^S^1:YES;0:NO;^0;8^Q
"^DD",11005.2,11005.2,.08,"DT")
3140326
"^DD",11005.5,11005.5,0)
FIELD^^21^7
"^DD",11005.5,11005.5,0,"DDA")
N
"^DD",11005.5,11005.5,0,"DT")
3050926
"^DD",11005.5,11005.5,0,"IX","B",11005.5,.01)

"^DD",11005.5,11005.5,0,"NM","DHCP HFS MESSAGE")

"^DD",11005.5,11005.5,0,"VRPK")
A1AE
"^DD",11005.5,11005.5,.01,0)
NAME^RP11005'X^A1AE(11005,^0;1^S DINUM=X
"^DD",11005.5,11005.5,.01,1,0)
^.1
"^DD",11005.5,11005.5,.01,1,1,0)
11005.5^B
"^DD",11005.5,11005.5,.01,1,1,1)
S ^A1AE(11005.5,"B",$E(X,1,30),DA)=""
"^DD",11005.5,11005.5,.01,1,1,2)
K ^A1AE(11005.5,"B",$E(X,1,30),DA)
"^DD",11005.5,11005.5,.01,3)

"^DD",11005.5,11005.5,.01,"DT")
3050801
"^DD",11005.5,11005.5,2,0)
Input Message Number^NJ10,0^^0;2^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005.5,11005.5,2,3)
Type a Number between 1 and 9999999999, 0 Decimal Digits
"^DD",11005.5,11005.5,2,"DT")
3050816
"^DD",11005.5,11005.5,3,0)
Input Date/Time^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11005.5,11005.5,3,"DT")
3050816
"^DD",11005.5,11005.5,4,0)
Release Date/Time^D^^0;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11005.5,11005.5,4,"DT")
3050816
"^DD",11005.5,11005.5,5,0)
From Domain^F^^0;5^K:$L(X)>200!($L(X)<2) X
"^DD",11005.5,11005.5,5,3)
Answer must be 2-200 characters in length.
"^DD",11005.5,11005.5,5,21,0)
^^2^2^3050816^
"^DD",11005.5,11005.5,5,21,1,0)
This field hold the name of the master patch when more that one patch is 
"^DD",11005.5,11005.5,5,21,2,0)
sent out in a HFS file.
"^DD",11005.5,11005.5,5,"DT")
3050822
"^DD",11005.5,11005.5,11,0)
ROUTINE^11005.511A^^1;0
"^DD",11005.5,11005.5,21,0)
Linked Patches^11005.521A^^2;0
"^DD",11005.5,11005.511,0)
ROUTINE SUB-FIELD^^5^5
"^DD",11005.5,11005.511,0,"DT")
3050926
"^DD",11005.5,11005.511,0,"IX","B",11005.511,.01)

"^DD",11005.5,11005.511,0,"NM","ROUTINE")

"^DD",11005.5,11005.511,0,"UP")
11005.5
"^DD",11005.5,11005.511,.01,0)
ROUTINE^MF^^0;1^K:$L(X)>16!($L(X)<2) X
"^DD",11005.5,11005.511,.01,1,0)
^.1
"^DD",11005.5,11005.511,.01,1,1,0)
11005.511^B
"^DD",11005.5,11005.511,.01,1,1,1)
S ^A1AE(11005.5,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",11005.5,11005.511,.01,1,1,2)
K ^A1AE(11005.5,DA(1),1,"B",$E(X,1,30),DA)
"^DD",11005.5,11005.511,.01,3)
Answer must be 2-16 characters in length.
"^DD",11005.5,11005.511,.01,21,0)
^^1^1^3050921^
"^DD",11005.5,11005.511,.01,21,1,0)
This is the routine name.
"^DD",11005.5,11005.511,.01,"DT")
3050801
"^DD",11005.5,11005.511,2,0)
ADD/DELETE^F^^0;2^K:$L(X)>3!($L(X)<1) X
"^DD",11005.5,11005.511,2,3)
Answer must be 1-3 characters in length.
"^DD",11005.5,11005.511,2,21,0)
^^2^2^3050921^
"^DD",11005.5,11005.511,2,21,1,0)
This is from the Build file and tell's if we are adding the routine (0)
"^DD",11005.5,11005.511,2,21,2,0)
or deleteing the routine (1).
"^DD",11005.5,11005.511,2,"DT")
3050921
"^DD",11005.5,11005.511,2.5,0)
NOP^NJ3,0^^0;3^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",11005.5,11005.511,2.5,3)
Type a Number between 0 and 999, 0 Decimal Digits
"^DD",11005.5,11005.511,2.5,21,0)
^^1^1^3050926^
"^DD",11005.5,11005.511,2.5,21,1,0)
Place holder.
"^DD",11005.5,11005.511,2.5,"DT")
3050926
"^DD",11005.5,11005.511,3,0)
CHECKSUM^F^^0;4^K:$L(X)>15!($L(X)<3) X
"^DD",11005.5,11005.511,3,3)
Answer must be 3-15 characters in length.
"^DD",11005.5,11005.511,3,21,0)
^^1^1^3050921^
"^DD",11005.5,11005.511,3,21,1,0)
This is the routine Checksum from the transport global.
"^DD",11005.5,11005.511,3,"DT")
3050921
"^DD",11005.5,11005.511,5,0)
PATCH LIST^F^^0;5^K:$L(X)>200!($L(X)<5) X
"^DD",11005.5,11005.511,5,3)
Answer must be 5-200 characters in length.
"^DD",11005.5,11005.511,5,21,0)
^^1^1^3050926^
"^DD",11005.5,11005.511,5,21,1,0)
Hold the patch list from the second line of the routine.
"^DD",11005.5,11005.511,5,"DT")
3050926
"^DD",11005.5,11005.521,0)
Linked Patches SUB-FIELD^^.01^1
"^DD",11005.5,11005.521,0,"DT")
3050816
"^DD",11005.5,11005.521,0,"IX","B",11005.521,.01)

"^DD",11005.5,11005.521,0,"NM","Linked Patches")

"^DD",11005.5,11005.521,0,"UP")
11005.5
"^DD",11005.5,11005.521,.01,0)
Linked Patches^MF^^0;1^K:$L(X)>30!($L(X)<2) X
"^DD",11005.5,11005.521,.01,1,0)
^.1
"^DD",11005.5,11005.521,.01,1,1,0)
11005.521^B
"^DD",11005.5,11005.521,.01,1,1,1)
S ^A1AE(11005.5,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",11005.5,11005.521,.01,1,1,2)
K ^A1AE(11005.5,DA(1),2,"B",$E(X,1,30),DA)
"^DD",11005.5,11005.521,.01,3)
Answer must be 2-30 characters in length.
"^DD",11005.5,11005.521,.01,21,0)
^^2^2^3050816^
"^DD",11005.5,11005.521,.01,21,1,0)
This field holds the linked patches when this patch is the master patch 
"^DD",11005.5,11005.521,.01,21,2,0)
of a set of patches in a HFS release.
"^DD",11005.5,11005.521,.01,"DT")
3050816
"^DD",11006,11006,0)
FIELD^^16^19
"^DD",11006,11006,0,"DT")
3140328
"^DD",11006,11006,0,"ID",5)
W ""
"^DD",11006,11006,0,"ID","WRITE")
S A1AEX1=^(0) W ?20,$E($P(A1AEX1,"^",5),1,30),?55,$E($P($P(^DD(11006,10,0),$P(A1AEX1,"^",10)_":",2),";",1),1,15),?75,$S($D(^DIC(3,+$P(A1AEX1,"^",8),0)):$E($P(^(0),"^",1),1,15),1:"NONE")
"^DD",11006,11006,0,"IX","B",11006,.01)

"^DD",11006,11006,0,"IX","PN",11006,4)

"^DD",11006,11006,0,"IX","PS",11006,5)

"^DD",11006,11006,0,"IX","S",11006,5)

"^DD",11006,11006,0,"NM","DHCP PROBLEMS")

"^DD",11006,11006,0,"PT",11005.06,.01)

"^DD",11006,11006,0,"VRPK")
A1AE
"^DD",11006,11006,.01,0)
PROBLEM NUMBER^RFX^^0;1^K:$L(X)>15!($L(X)<3)!'(X?1U.UN1"*"1N.PN1"*"1N.N) X S A1AEX=11006 D IN^A1AEUTL:$D(X) K A1AEX
"^DD",11006,11006,.01,1,0)
^.1^^-1
"^DD",11006,11006,.01,1,1,0)
11006^B
"^DD",11006,11006,.01,1,1,1)
S ^A1AE(11006,"B",$E(X,1,30),DA)=""
"^DD",11006,11006,.01,1,1,2)
K ^A1AE(11006,"B",$E(X,1,30),DA)
"^DD",11006,11006,.01,3)
ANSWER MUST BE 6-15 CHARACTERS IN LENGTH
"^DD",11006,11006,.01,21,0)
^^1^1^2860424^^^
"^DD",11006,11006,.01,21,1,0)
System assigned Problem Number
"^DD",11006,11006,.01,"DT")
2860311
"^DD",11006,11006,2,0)
PACKAGE^RP9.4'I^DIC(9.4,^0;2^Q
"^DD",11006,11006,2,9)
^
"^DD",11006,11006,2,21,0)
^^1^1^2860108^
"^DD",11006,11006,2,21,1,0)
Only the following packages are permitted: RA, DG, SD, A1AG, and A1AE.
"^DD",11006,11006,2,"DT")
2860205
"^DD",11006,11006,3,0)
VERSION^RFI^^0;3^K:$L(X)>10!($L(X)<1) X
"^DD",11006,11006,3,3)
ANSWER MUST BE 1-10 CHARACTERS IN LENGTH
"^DD",11006,11006,3,9)
^
"^DD",11006,11006,3,21,0)
^^2^2^2860108^
"^DD",11006,11006,3,21,1,0)
Enter the version number this problem applies to. The specified version number
"^DD",11006,11006,3,21,2,0)
must exist.
"^DD",11006,11006,3,"DT")
2860205
"^DD",11006,11006,4,0)
PROBLEM NUMBER^RNJ5,0I^^0;4^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",11006,11006,4,1,0)
^.1
"^DD",11006,11006,4,1,1,0)
11006^PN
"^DD",11006,11006,4,1,1,1)
S ^A1AE(11006,"PN",$E(X,1,30),DA)=""
"^DD",11006,11006,4,1,1,2)
K ^A1AE(11006,"PN",$E(X,1,30),DA)
"^DD",11006,11006,4,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 99999
"^DD",11006,11006,4,9)
^
"^DD",11006,11006,4,21,0)
^^1^1^2860108^
"^DD",11006,11006,4,21,1,0)
The problem number is assigned by the system.
"^DD",11006,11006,4,"DT")
2860205
"^DD",11006,11006,5,0)
PROBLEM SUBJECT^RF^^0;5^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>40!($L(X)<3) X
"^DD",11006,11006,5,1,0)
^.1
"^DD",11006,11006,5,1,1,0)
11006^PS
"^DD",11006,11006,5,1,1,1)
S ^A1AE(11006,"PS",$E(X,1,30),DA)=""
"^DD",11006,11006,5,1,1,2)
K ^A1AE(11006,"PS",$E(X,1,30),DA)
"^DD",11006,11006,5,1,2,0)
11006^S
"^DD",11006,11006,5,1,2,1)
S ^A1AE(11006,"S",$E(X,1,30),DA)=""
"^DD",11006,11006,5,1,2,2)
K ^A1AE(11006,"S",$E(X,1,30),DA)
"^DD",11006,11006,5,3)
ANSWER MUST BE 3-40 CHARACTERS IN LENGTH
"^DD",11006,11006,5,21,0)
^^2^2^2860108^
"^DD",11006,11006,5,21,1,0)
Enter a brief description which will be used to identify the Problem
"^DD",11006,11006,5,21,2,0)
Designation.
"^DD",11006,11006,5,"DT")
2860116
"^DD",11006,11006,5.5,0)
PROBLEM DESCRIPTION^11006.01^^D;0
"^DD",11006,11006,5.5,21,0)
^^1^1^2860108^^
"^DD",11006,11006,5.5,21,1,0)
Enter a detailed description of the problem encountered.
"^DD",11006,11006,6,0)
REPORTING STATION/ISC^RP4'^DIC(4,^0;6^Q
"^DD",11006,11006,6,3)

"^DD",11006,11006,6,21,0)
^^1^1^2860108^^
"^DD",11006,11006,6,21,1,0)
Enter the station number or name of your facility.
"^DD",11006,11006,7,0)
REPORTED BY/PHONE^RF^^0;7^K:$L(X)>60!($L(X)<3) X
"^DD",11006,11006,7,3)
ANSWER MUST BE 3-60 CHARACTERS IN LENGTH
"^DD",11006,11006,7,21,0)
^^2^2^2860108^
"^DD",11006,11006,7,21,1,0)
Enter your Name/Phone Number in case the developer needs to contact you
"^DD",11006,11006,7,21,2,0)
concerning this problem.
"^DD",11006,11006,8,0)
USER ENTERING PROBLEM^RP200'^VA(200,^0;8^Q
"^DD",11006,11006,8,3)

"^DD",11006,11006,8,21,0)
^^1^1^2860108^^^
"^DD",11006,11006,8,21,1,0)
This field is a pointer to the User File(#3) and indicates the user who entered the problem.
"^DD",11006,11006,8,"DT")
3050816
"^DD",11006,11006,9,0)
DATE PROBLEM ENTERED^RD^^0;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11006,11006,9,3)

"^DD",11006,11006,9,21,0)
^^1^1^2860108^^
"^DD",11006,11006,9,21,1,0)
This field contains the date the problem was entered.
"^DD",11006,11006,10,0)
STATUS OF PROBLEM^RSX^u:UNDER REVIEW;r:RESOLVED;t:TABLED;n:NOT RELEASED FOR REVIEW;c:COMPLETE/RELEASE FOR REVIEW;^0;10^I $D(X),X="R"!(X="T")!(X="U"),'$D(^A1AE(11007,+$P(^A1AE(11006,DA,0),U,2),"PH",DUZ,0)) W !?3,"Only Authorized for 'C' or 'N'" K X
"^DD",11006,11006,10,1,0)
^.1
"^DD",11006,11006,10,1,1,0)
^^TRIGGER^11006^11
"^DD",11006,11006,10,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="t" I X S X=DIV S Y(1)=$S($D(^A1AE(11006,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11006,10,1,1,1.4)
"^DD",11006,11006,10,1,1,1.4)
S DIH=$G(^A1AE(11006,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=11006,DIG=11 D ^DICR
"^DD",11006,11006,10,1,1,2)
Q
"^DD",11006,11006,10,1,1,"CREATE CONDITION")
S X=X="t"
"^DD",11006,11006,10,1,1,"CREATE VALUE")
TODAY
"^DD",11006,11006,10,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11006,11006,10,1,1,"DT")
3140328
"^DD",11006,11006,10,1,1,"FIELD")
TABLED DATE
"^DD",11006,11006,10,1,2,0)
^^TRIGGER^11006^12
"^DD",11006,11006,10,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="r" I X S X=DIV S Y(1)=$S($D(^A1AE(11006,D0,0)):^(0),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11006,10,1,2,1.4)
"^DD",11006,11006,10,1,2,1.4)
S DIH=$G(^A1AE(11006,DIV(0),0)),DIV=X S $P(^(0),U,12)=DIV,DIH=11006,DIG=12 D ^DICR
"^DD",11006,11006,10,1,2,2)
Q
"^DD",11006,11006,10,1,2,"CREATE CONDITION")
S X=X="r"
"^DD",11006,11006,10,1,2,"CREATE VALUE")
TODAY
"^DD",11006,11006,10,1,2,"DELETE VALUE")
NO EFFECT
"^DD",11006,11006,10,1,2,"DT")
3140328
"^DD",11006,11006,10,1,2,"FIELD")
DATE RESOLVED
"^DD",11006,11006,10,1,3,0)
^^TRIGGER^11006^14
"^DD",11006,11006,10,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="c" I X S X=DIV S Y(1)=$S($D(^A1AE(11006,D0,0)):^(0),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11006,10,1,3,1.4)
"^DD",11006,11006,10,1,3,1.4)
S DIH=$G(^A1AE(11006,DIV(0),0)),DIV=X S $P(^(0),U,14)=DIV,DIH=11006,DIG=14 D ^DICR
"^DD",11006,11006,10,1,3,2)
Q
"^DD",11006,11006,10,1,3,"CREATE CONDITION")
S X=X="c"
"^DD",11006,11006,10,1,3,"CREATE VALUE")
TODAY
"^DD",11006,11006,10,1,3,"DELETE VALUE")
NO EFFECT
"^DD",11006,11006,10,1,3,"DT")
3140328
"^DD",11006,11006,10,1,3,"FIELD")
DATE RELEASED FOR REVIEW
"^DD",11006,11006,10,3)

"^DD",11006,11006,10,21,0)
^^2^2^2860127^^^^
"^DD",11006,11006,10,21,1,0)
Enter the current status of this problem. When the problem is first
"^DD",11006,11006,10,21,2,0)
entered the status is set to NOT RELEASED FOR REVIEW.
"^DD",11006,11006,10,"DT")
3140328
"^DD",11006,11006,11,0)
TABLED DATE^D^^0;11^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11006,11006,11,1,0)
^.1^^0
"^DD",11006,11006,11,5,1,0)
11006^10^1
"^DD",11006,11006,11,9)
^
"^DD",11006,11006,11,21,0)
^^2^2^2860108^^
"^DD",11006,11006,11,21,1,0)
If the Status indicates the problem has been tabled, or set aside,
"^DD",11006,11006,11,21,2,0)
the date tabled is entered.
"^DD",11006,11006,11,"DT")
2860117
"^DD",11006,11006,11.5,0)
TABLED COMMENTS^11006.02^^T;0
"^DD",11006,11006,11.5,21,0)
^^2^2^2860108^^
"^DD",11006,11006,11.5,21,1,0)
If the Status indicates the problem has been tabled, or set aside, the
"^DD",11006,11006,11.5,21,2,0)
reason for this action should be entered.
"^DD",11006,11006,12,0)
DATE RESOLVED^D^^0;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11006,11006,12,1,0)
^.1^^0
"^DD",11006,11006,12,3)

"^DD",11006,11006,12,5,1,0)
11006^10^2
"^DD",11006,11006,12,9)
^
"^DD",11006,11006,12,21,0)
^^1^1^2860108^
"^DD",11006,11006,12,21,1,0)
This field contains the date the problem was resolved.
"^DD",11006,11006,12,"DT")
2860117
"^DD",11006,11006,12.5,0)
RESOLVED COMMENTS^11006.03^^R;0
"^DD",11006,11006,13,0)
PATCH^P11005'^A1AE(11005,^0;13^Q
"^DD",11006,11006,13,21,0)
^^2^2^2860128^^
"^DD",11006,11006,13,21,1,0)
This field points to the Region 1 Patches File (#11005), and indicates
"^DD",11006,11006,13,21,2,0)
any patch related to resolving this problem.
"^DD",11006,11006,14,0)
DATE RELEASED FOR REVIEW^D^^0;14^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11006,11006,14,1,0)
^.1^^0
"^DD",11006,11006,14,5,1,0)
11006^10^3
"^DD",11006,11006,14,9)
^
"^DD",11006,11006,14,21,0)
^^1^1^2860108^
"^DD",11006,11006,14,21,1,0)
This field contains the date the problem was released for review.
"^DD",11006,11006,14,"DT")
2860117
"^DD",11006,11006,15,0)
USER TABLING PROBLEM^P200'^VA(200,^0;15^Q
"^DD",11006,11006,15,21,0)
^^2^2^2860108^^
"^DD",11006,11006,15,21,1,0)
If the problem has been tabled, or set aside, this field keeps track
"^DD",11006,11006,15,21,2,0)
of the Developer who tabled it.
"^DD",11006,11006,15,"DT")
3050816
"^DD",11006,11006,16,0)
USER RESOLVING PROBLEM^P200'^VA(200,^0;16^Q
"^DD",11006,11006,16,21,0)
^^2^2^2860108^^
"^DD",11006,11006,16,21,1,0)
If the problem has been resolved, this field keeps track of the
"^DD",11006,11006,16,21,2,0)
Developer who resolved the problem.
"^DD",11006,11006,16,"DT")
3050816
"^DD",11006,11006.01,0)
PROBLEM DESCRIPTION SUB-FIELD^NL^.01^1
"^DD",11006,11006.01,0,"NM","PROBLEM DESCRIPTION")

"^DD",11006,11006.01,0,"UP")
11006
"^DD",11006,11006.01,.01,0)
PROBLEM DESCRIPTION^W^^0;1^Q
"^DD",11006,11006.01,.01,21,0)
^^1^1^2860108^
"^DD",11006,11006.01,.01,21,1,0)
Enter a detailed description of the problem encountered.
"^DD",11006,11006.01,.01,"DT")
2860108
"^DD",11006,11006.02,0)
TABLED COMMENTS SUB-FIELD^NL^.01^1
"^DD",11006,11006.02,0,"NM","TABLED COMMENTS")

"^DD",11006,11006.02,0,"UP")
11006
"^DD",11006,11006.02,.01,0)
TABLED COMMENTS^W^^0;1^Q
"^DD",11006,11006.02,.01,21,0)
^^2^2^2860108^^
"^DD",11006,11006.02,.01,21,1,0)
If the Status indicates the problem has been tabled, or set aside, the
"^DD",11006,11006.02,.01,21,2,0)
reason for this action should be entered.
"^DD",11006,11006.03,0)
RESOLVED COMMENTS SUB-FIELD^NL^.01^1
"^DD",11006,11006.03,0,"NM","RESOLVED COMMENTS")

"^DD",11006,11006.03,0,"UP")
11006
"^DD",11006,11006.03,.01,0)
RESOLVED COMMENTS^W^^0;1^Q
"^DD",11006,11006.03,.01,"DT")
2860211
"^DD",11007,11007,0)
FIELD^^7^12
"^DD",11007,11007,0,"DT")
3150727
"^DD",11007,11007,0,"ID",2)
W ""
"^DD",11007,11007,0,"IX","AC",11007,6)

"^DD",11007,11007,0,"IX","AD",11007.03,.01)

"^DD",11007,11007,0,"IX","AS",11007.02,.01)

"^DD",11007,11007,0,"IX","AU",11007.05,.01)

"^DD",11007,11007,0,"IX","AV",11007.02,2)

"^DD",11007,11007,0,"IX","B",11007,.01)

"^DD",11007,11007,0,"NM","DHCP PATCH/PROBLEM PACKAGE")

"^DD",11007,11007,0,"VRPK")
A1AE
"^DD",11007,11007,.01,0)
PACKAGE^RP9.4'X^DIC(9.4,^0;1^S DINUM=X
"^DD",11007,11007,.01,1,0)
^.1
"^DD",11007,11007,.01,1,1,0)
11007^B
"^DD",11007,11007,.01,1,1,1)
S ^A1AE(11007,"B",$E(X,1,30),DA)=""
"^DD",11007,11007,.01,1,1,2)
K ^A1AE(11007,"B",$E(X,1,30),DA)
"^DD",11007,11007,.01,3)

"^DD",11007,11007,.01,21,0)
^.001^3^3^3070625^^^^
"^DD",11007,11007,.01,21,1,0)
Enter a Package which resides in the Package File(#9.4).
"^DD",11007,11007,.01,21,2,0)
This Package is now recognized by the DHCP PATCHES and
"^DD",11007,11007,.01,21,3,0)
DHCP PROBLEM files.
"^DD",11007,11007,2,0)
USER SELECTION PERMITTED^RSX^Y:YES;N:NO;^0;2^Q
"^DD",11007,11007,2,1,0)
^.1
"^DD",11007,11007,2,1,1,0)
^^BULLETIN MESSAGE
"^DD",11007,11007,2,1,1,1)
S Y(0)=X,D0=DA S Y(0)=X S X=$S('$D(A1AE2):0,A1AE2=X:0,X="Y":1,1:0) I X X ^DD(11007,2,1,1,1.1) S X=Y(0) S X=$S($D(^DIC(9.4,DA,0)):$P(^(0),U,2),1:"") S XMB(2)=X X ^DD(11007,2,1,1,1.3) K XMY S XMB="A1AE PKG" D EN^XMB:$D(^XMB(3.6,"B",XMB)) K Y,XMB
"^DD",11007,11007,2,1,1,1.1)
S X=Y(0) S Y(1)=$S($D(^A1AE(11007,D0,0)):^(0),1:"") S X=$S('$D(^DIC(9.4,+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1)) S XMB(1)=X
"^DD",11007,11007,2,1,1,1.3)
S X=Y(0) S X=$S($D(^DIC(9.4,DA,0)):$P(^(0),U,3),1:"") S XMB(3)=X
"^DD",11007,11007,2,1,1,2)
Q
"^DD",11007,11007,2,1,1,"CREATE CONDITION")
S X=$S('$D(A1AE2):0,A1AE2=X:0,X="Y":1,1:0)
"^DD",11007,11007,2,1,1,"CREATE PARAMETER #1")
PACKAGE
"^DD",11007,11007,2,1,1,"CREATE PARAMETER #2")
S X=$S($D(^DIC(9.4,DA,0)):$P(^(0),U,2),1:"")
"^DD",11007,11007,2,1,1,"CREATE PARAMETER #3")
S X=$S($D(^DIC(9.4,DA,0)):$P(^(0),U,3),1:"")
"^DD",11007,11007,2,1,1,"CREATE VALUE")
A1AE PKG
"^DD",11007,11007,2,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11007,11007,2,21,0)
^^5^5^2871112^^^^
"^DD",11007,11007,2,21,1,0)
If this field is set to 'YES' user's will be permitted to
"^DD",11007,11007,2,21,2,0)
select to receive notification of patches for this package.
"^DD",11007,11007,2,21,3,0)
They will also be able to print patches for this package.
"^DD",11007,11007,2,21,4,0)
If this field is set to 'NO' then user's can not access the
"^DD",11007,11007,2,21,5,0)
package via any of the Patch Module options.
"^DD",11007,11007,2,"DT")
2880125
"^DD",11007,11007,3,0)
* PERMIT DEVELOPER TO COMPLETE^S^y:YES;n:NO;^0;3^Q
"^DD",11007,11007,3,21,0)
^^19^19^2871112^^^^
"^DD",11007,11007,3,21,1,0)
This field will be phased out with the next version of the patch
"^DD",11007,11007,3,21,2,0)
module, after version 2.0 which will be released fall of 1987.
"^DD",11007,11007,3,21,3,0)
With verison 2.0 of the Patch Module this field became obsolete.
"^DD",11007,11007,3,21,4,0)
It is nolonger an option to force a different developer to
"^DD",11007,11007,3,21,5,0)
complete a patch, it is mandatory. In other words, one developer
"^DD",11007,11007,3,21,6,0)
enters the patch, another developer completes the patch and a
"^DD",11007,11007,3,21,7,0)
verifier, other than the developers who entered and completed
"^DD",11007,11007,3,21,8,0)
the patch, must verifiy the patch. Any valid developer of the
"^DD",11007,11007,3,21,9,0)
package can still change the status of a patch to 'Entered in
"^DD",11007,11007,3,21,10,0)
Error', should the situation arise.
"^DD",11007,11007,3,21,11,0)
 
"^DD",11007,11007,3,21,12,0)
This field use to permit the following:
"^DD",11007,11007,3,21,13,0)
 
"^DD",11007,11007,3,21,14,0)
Enter 'No' to prohibit a package developer who enters an 'Under
"^DD",11007,11007,3,21,15,0)
development' patch to change the status to 'Completed/unverified'.
"^DD",11007,11007,3,21,16,0)
This forces two developers to be involved in signing off on a patch.
"^DD",11007,11007,3,21,17,0)
Enter 'Yes' to permit the same developer to enter and complete a patch.
"^DD",11007,11007,3,21,18,0)
Please contact your supervisor to determine if this flag should be
"^DD",11007,11007,3,21,19,0)
set to 'No'.
"^DD",11007,11007,3,"DT")
2861021
"^DD",11007,11007,4,0)
FOR TEST SITE ONLY?^S^y:YES;n:NO;^0;4^Q
"^DD",11007,11007,4,.1)

"^DD",11007,11007,4,3)
Enter 'YES' if patches for this package are ONLY for test sites, or 'NO' if they are for any site.
"^DD",11007,11007,4,"DT")
2890119
"^DD",11007,11007,5,0)
ASK PATCH DESCRIPTION COPY^S^y:YES;n:NO;^0;5^Q
"^DD",11007,11007,5,3)

"^DD",11007,11007,5,21,0)
^^4^4^2920610^^^^
"^DD",11007,11007,5,21,1,0)
If this is set to Yes the developer will be asked 'Do you wish to copy
"^DD",11007,11007,5,21,2,0)
message text into the Patch Description' when editing a patch.
"^DD",11007,11007,5,21,3,0)
 
"^DD",11007,11007,5,21,4,0)
If set to NO the question will not be asked.
"^DD",11007,11007,5,"DT")
2920610
"^DD",11007,11007,6,0)
PERFORMANCE MEASURE FLAG^S^Y:YES;^0;6^Q
"^DD",11007,11007,6,1,0)
^.1
"^DD",11007,11007,6,1,1,0)
11007^AC
"^DD",11007,11007,6,1,1,1)
S ^A1AE(11007,"AC",$E(X,1,30),DA)=""
"^DD",11007,11007,6,1,1,2)
K ^A1AE(11007,"AC",$E(X,1,30),DA)
"^DD",11007,11007,6,1,1,"%D",0)
^^2^2^3030108^
"^DD",11007,11007,6,1,1,"%D",1,0)
This cross reference is used to get quick selection of packages that are 
"^DD",11007,11007,6,1,1,"%D",2,0)
required for Performance Measures reports.
"^DD",11007,11007,6,1,1,"DT")
3030108
"^DD",11007,11007,6,3)
Enter 'Yes' to include package on Performance Measures reports
"^DD",11007,11007,6,21,0)
^.001^2^2^3030108^^^
"^DD",11007,11007,6,21,1,0)
The field is used to include the package on the Performance 
"^DD",11007,11007,6,21,2,0)
Measures/Compliance Date reports.
"^DD",11007,11007,6,"DT")
3030108
"^DD",11007,11007,7,0)
FOR UNIT TEST ONLY?^S^1:YES, ONLY FOR UNIT TESTING;^0;7^Q
"^DD",11007,11007,7,3)
Select YES if this application only exists as a subject for unit tests.
"^DD",11007,11007,7,21,0)
^^6^6^3150529^
"^DD",11007,11007,7,21,1,0)
Normally, this field must be left blank. The Patch Module developers may 
"^DD",11007,11007,7,21,2,0)
permanently or temporarily create one or more throw-away applications 
"^DD",11007,11007,7,21,3,0)
never intended to distribute real software, only to be subjects for Patch 
"^DD",11007,11007,7,21,4,0)
Module and KIDS to manipulate, to perform unit tests that demonstrate the 
"^DD",11007,11007,7,21,5,0)
soundness of Patch Module and KIDS. For such throw-away unit-testing 
"^DD",11007,11007,7,21,6,0)
applications, set this field to YES.
"^DD",11007,11007,7,23,0)
^^4^4^3150529^
"^DD",11007,11007,7,23,1,0)
Field For Unit Test Only? (7) was created by Rick Marshall of the VISTA 
"^DD",11007,11007,7,23,2,0)
Expertise Network (ven/toad) on Friday, 29 May 2015 in support of unit 
"^DD",11007,11007,7,23,3,0)
testing of Patch Module and KIDS during development of Patch Module 
"^DD",11007,11007,7,23,4,0)
version 2.5.
"^DD",11007,11007,7,"DT")
3150529
"^DD",11007,11007,50,0)
SELECTED USERS FOR PACKAGE^11007.05PA^^1;0
"^DD",11007,11007,50,21,0)
^^2^2^2900428^^^^
"^DD",11007,11007,50,21,1,0)
This field holds the names of users who have requested to
"^DD",11007,11007,50,21,2,0)
receive automatic notification of patches for this package.
"^DD",11007,11007,100,0)
SUPPORT PERSONNEL^11007.02PA^^PB;0
"^DD",11007,11007,100,21,0)
^^4^4^2910307^^^^
"^DD",11007,11007,100,21,1,0)
This field contains the names of ISC personnel which are
"^DD",11007,11007,100,21,2,0)
regional support personnel for the package. It also holds
"^DD",11007,11007,100,21,3,0)
the names of internal verifiers assigned to verifying patches
"^DD",11007,11007,100,21,4,0)
for this package in the Patch Module.
"^DD",11007,11007,200,0)
DEVELOPMENT PERSONNEL^11007.03PA^^PH;0
"^DD",11007,11007,200,21,0)
^^3^3^2871112^^
"^DD",11007,11007,200,21,1,0)
Development Personnel may add, edit, delete and complete patches
"^DD",11007,11007,200,21,2,0)
for this package in the Patch Module. They may also enter and edit
"^DD",11007,11007,200,21,3,0)
authorized users in the DHCP PATCH/PROBLEM PACKAGE file.
"^DD",11007,11007,200,21,4,0)
Resolve any Problem for which they are an assigned developer. 
"^DD",11007,11007,200,21,5,0)
They may also Print any Patch or Problem for any Package.
"^DD",11007,11007,300,0)
VERSION^11007.01I^^V;0
"^DD",11007,11007,300,21,0)
^.001^3^3^3150529^^^^
"^DD",11007,11007,300,21,1,0)
In Options which require a Version the System will
"^DD",11007,11007,300,21,2,0)
default to the most recent Version. The Version is
"^DD",11007,11007,300,21,3,0)
used to keep track of assigning Patch Numbers.
"^DD",11007,11007,300,21,4,0)
Numbers.
"^DD",11007,11007,400,0)
NETWORK MAIL GROUP^11007.04I^^NT;0
"^DD",11007,11007.01,0)
VERSION SUB-FIELD^NL^28^6
"^DD",11007,11007.01,0,"DT")
3150727
"^DD",11007,11007.01,0,"ID",2)
W:+^(0)=999 ?18,"for 'DBA'" W:+$P(^(0),U,2) ?30,"   Date Verified: ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
"^DD",11007,11007.01,0,"NM","VERSION")

"^DD",11007,11007.01,0,"UP")
11007
"^DD",11007,11007.01,.01,0)
VERSION^NJ6,2XO^^0;1^K:+X'=X!(X>999)!(X'>0) X S:$D(X) DINUM=X
"^DD",11007,11007.01,.01,2)
S Y(0)=Y S Y=$S(Y=999:"DBA",1:Y)
"^DD",11007,11007.01,.01,2.1)
S Y=$S(Y=999:"DBA",1:Y)
"^DD",11007,11007.01,.01,3)
TYPE A NUMBER BETWEEN 1 AND 999
"^DD",11007,11007.01,.01,7.5)
S X=$S(X="DBA"!(X="dba"):999,1:X)
"^DD",11007,11007.01,.01,"DT")
3150526
"^DD",11007,11007.01,2,0)
DATE VERIFIED^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11007,11007.01,2,21,0)
^^2^2^2871112^
"^DD",11007,11007.01,2,21,1,0)
This field should hold the date the specified version of the
"^DD",11007,11007.01,2,21,2,0)
package was verified.
"^DD",11007,11007.01,2,"DT")
3150727
"^DD",11007,11007.01,25,0)
NEXT PROBLEM NUMBER^NJ5,0I^^PB;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11007,11007.01,25,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 99999
"^DD",11007,11007.01,25,9)
^
"^DD",11007,11007.01,25,21,0)
^^3^3^2871112^^
"^DD",11007,11007.01,25,21,1,0)
The System assigns numbers to Problems. The number in
"^DD",11007,11007.01,25,21,2,0)
this field represents the Next Problem Number to be
"^DD",11007,11007.01,25,21,3,0)
assigned by the system to this Version of a Package.
"^DD",11007,11007.01,25,"DT")
2860108
"^DD",11007,11007.01,26,0)
NEXT PATCH NUMBER^NJ5,0I^^PH;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11007,11007.01,26,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 99999
"^DD",11007,11007.01,26,9)
^
"^DD",11007,11007.01,26,21,0)
^^3^3^2860306^
"^DD",11007,11007.01,26,21,1,0)
The System assigns numbers to Patches. The number in
"^DD",11007,11007.01,26,21,2,0)
this field represents the Next Patch Number to be
"^DD",11007,11007.01,26,21,3,0)
assigned by the system to this Version of a Package.
"^DD",11007,11007.01,26,"DT")
2880122
"^DD",11007,11007.01,27,0)
NEXT SEQUENCE NUMBER^NJ5,0^^PR;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11007,11007.01,27,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",11007,11007.01,27,"DT")
2921027
"^DD",11007,11007.01,28,0)
PATCH STREAM^11007.128P^^1;0
"^DD",11007,11007.02,0)
SUPPORT PERSONNEL SUB-FIELD^NL^3^3
"^DD",11007,11007.02,0,"DT")
2980730
"^DD",11007,11007.02,0,"NM","SUPPORT PERSONNEL")

"^DD",11007,11007.02,0,"UP")
11007
"^DD",11007,11007.02,.01,0)
SUPPORT PERSONNEL^MP200'X^VA(200,^0;1^S DINUM=X
"^DD",11007,11007.02,.01,1,0)
^.1
"^DD",11007,11007.02,.01,1,1,0)
11007^AS
"^DD",11007,11007.02,.01,1,1,1)
S ^A1AE(11007,"AS",$E(X,1,30),DA(1),DA)=""
"^DD",11007,11007.02,.01,1,1,2)
K ^A1AE(11007,"AS",$E(X,1,30),DA(1),DA)
"^DD",11007,11007.02,.01,21,0)
^^1^1^2860314^^^
"^DD",11007,11007.02,.01,21,1,0)
ISC personnel that do the regional support of the package.
"^DD",11007,11007.02,.01,"DT")
2921202
"^DD",11007,11007.02,2,0)
VERIFY PERSONNEL^S^V:VERIFIER;N:NOT A VERIFIER;^0;2^Q
"^DD",11007,11007.02,2,1,0)
^.1
"^DD",11007,11007.02,2,1,1,0)
11007^AV^MUMPS
"^DD",11007,11007.02,2,1,1,1)
I X="V" S ^A1AE(11007,"AV",DA,DA(1),DA)=""
"^DD",11007,11007.02,2,1,1,2)
K ^A1AE(11007,"AV",DA,DA(1),DA)
"^DD",11007,11007.02,2,3)

"^DD",11007,11007.02,2,21,0)
^^5^5^2900817^^^
"^DD",11007,11007.02,2,21,1,0)
This field should be set to 'V' if the support person is
"^DD",11007,11007.02,2,21,2,0)
an internal verifier. If this field contains a 'V' this
"^DD",11007,11007.02,2,21,3,0)
individual will have access to the 'Verifier Menu' option
"^DD",11007,11007.02,2,21,4,0)
and be permitted to verify completed patches for this
"^DD",11007,11007.02,2,21,5,0)
package.
"^DD",11007,11007.02,2,"DT")
2860402
"^DD",11007,11007.02,3,0)
VERIFIER'S DOMAIN^FX^^0;3^K:$L(X)>30!($L(X)<3) X I $D(X) S SAVX=X,X="A1AEM" X ^%ZOSF("TEST") S X=SAVX K SAVX I $T D MMM^A1AEM K:X="" X I $D(X),$D(X9) S X=X9_"."_X I $E(X)="." S X=$E(X,2,99)
"^DD",11007,11007.02,3,3)
Answer must contain a valid domain
"^DD",11007,11007.02,3,21,0)
^^5^5^2980730^^^^
"^DD",11007,11007.02,3,21,1,0)
This identifies the Verifiers Network Mail Domain for sending Patch 
"^DD",11007,11007.02,3,21,2,0)
messages to the verifier @ domain.  The domain name must have the format:
"^DD",11007,11007.02,3,21,3,0)
               [subdomain.]DOMAIN
"^DD",11007,11007.02,3,21,4,0)
 ie
"^DD",11007,11007.02,3,21,5,0)
     [optional remote subdomain . ]local domain file entry
"^DD",11007,11007.02,3,"DT")
2980730
"^DD",11007,11007.03,0)
DEVELOPMENT PERSONNEL SUB-FIELD^NL^.01^1
"^DD",11007,11007.03,0,"DT")
2921202
"^DD",11007,11007.03,0,"NM","DEVELOPMENT PERSONNEL")

"^DD",11007,11007.03,0,"UP")
11007
"^DD",11007,11007.03,.01,0)
DEVELOPMENT PERSONNEL^MP200'X^VA(200,^0;1^S DINUM=X
"^DD",11007,11007.03,.01,1,0)
^.1
"^DD",11007,11007.03,.01,1,1,0)
11007^AD
"^DD",11007,11007.03,.01,1,1,1)
S ^A1AE(11007,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",11007,11007.03,.01,1,1,2)
K ^A1AE(11007,"AD",$E(X,1,30),DA(1),DA)
"^DD",11007,11007.03,.01,21,0)
^^5^5^2860306^
"^DD",11007,11007.03,.01,21,1,0)
Development Personnel may Enter/Edit Authorized Users in
"^DD",11007,11007.03,.01,21,2,0)
the DHCP AUTHORIZED USER file for Packages which they are
"^DD",11007,11007.03,.01,21,3,0)
assigned developers. They may also Enter/Edit any Patch or
"^DD",11007,11007.03,.01,21,4,0)
Resolve any Problem for which they are assigned developer.
"^DD",11007,11007.03,.01,21,5,0)
They may also Print any Patch or Problem fro any Package.
"^DD",11007,11007.03,.01,"DT")
2921202
"^DD",11007,11007.04,0)
NETWORK MAIL GROUP SUB-FIELD^^4^4
"^DD",11007,11007.04,0,"DT")
3141208
"^DD",11007,11007.04,0,"ID",2)
W "   ",$P(^(0),U,2)
"^DD",11007,11007.04,0,"IX","B",11007.04,.01)

"^DD",11007,11007.04,0,"NM","NETWORK MAIL GROUP")

"^DD",11007,11007.04,0,"UP")
11007
"^DD",11007,11007.04,.01,0)
NETWORK ROUTING^MF^^0;1^K:$L(X)>30!($L(X)<3) X
"^DD",11007,11007.04,.01,1,0)
^.1
"^DD",11007,11007.04,.01,1,1,0)
11007.04^B
"^DD",11007,11007.04,.01,1,1,1)
S ^A1AE(11007,DA(1),"NT","B",$E(X,1,30),DA)=""
"^DD",11007,11007.04,.01,1,1,2)
K ^A1AE(11007,DA(1),"NT","B",$E(X,1,30),DA)
"^DD",11007,11007.04,.01,3)
Answer must be 3-30 characters in length.
"^DD",11007,11007.04,.01,21,0)
^^6^6^2910612^^
"^DD",11007,11007.04,.01,21,1,0)
This field contains the recipient of verified Patch messages.
"^DD",11007,11007.04,.01,21,2,0)
It is combined with the domain for network addressing.  
"^DD",11007,11007.04,.01,21,3,0)
The value in this field for the A1AE entry in the file is 
"^DD",11007,11007.04,.01,21,4,0)
used for all packages for addressing verified patch messages.
"^DD",11007,11007.04,.01,21,5,0)
 
"^DD",11007,11007.04,.01,21,6,0)
Normally this field will be a 'G.group' mail group
"^DD",11007,11007.04,.01,"DT")
2900428
"^DD",11007,11007.04,2,0)
DOMAIN^FX^^0;2^K:$L(X)>30!($L(X)<3) X I $D(X) S SAVX=X,X="A1AEM" X ^%ZOSF("TEST") S X=SAVX K SAVX I $T D MMM^A1AEM K:X="" X I $D(X),$D(X9) S X=X9_"."_X I $E(X)="." S X=$E(X,2,99)
"^DD",11007,11007.04,2,3)
Answer must contain a valid domain
"^DD",11007,11007.04,2,21,0)
^^3^3^2910612^^
"^DD",11007,11007.04,2,21,1,0)
The value in this field is combined with the network routing 
"^DD",11007,11007.04,2,21,2,0)
to send verified Patch messages to 'network routing @ domain'
"^DD",11007,11007.04,2,21,3,0)
The value in the A1AE entry of the file is used for all packages.
"^DD",11007,11007.04,2,"DT")
2910613
"^DD",11007,11007.04,3,0)
TEST SITE^S^1:YES;0:NO;^0;3^Q
"^DD",11007,11007.04,3,"DT")
2900428
"^DD",11007,11007.04,4,0)
DHCP PATCH STREAM^P11007.1'^A1AE(11007.1,^0;4^Q
"^DD",11007,11007.04,4,3)
Enter the DHCP PATCH STREAM associated with this NETWORK MAIL GROUP
"^DD",11007,11007.04,4,21,0)
^^1^1^3141208^
"^DD",11007,11007.04,4,21,1,0)
This field is used to determine the patch stream that should be going to the current NETWORK MAIL GROUP.  If no value is present, it would be FOIA VA.
"^DD",11007,11007.04,4,"DT")
3141208
"^DD",11007,11007.05,0)
SELECTED USERS FOR PACKAGE SUB-FIELD^NL^3^3
"^DD",11007,11007.05,0,"DT")
2921202
"^DD",11007,11007.05,0,"NM","SELECTED USERS FOR PACKAGE")

"^DD",11007,11007.05,0,"UP")
11007
"^DD",11007,11007.05,.01,0)
SELECTED USERS FOR PACKAGE^MP200'X^VA(200,^0;1^S DINUM=X
"^DD",11007,11007.05,.01,1,0)
^.1
"^DD",11007,11007.05,.01,1,1,0)
11007^AU
"^DD",11007,11007.05,.01,1,1,1)
S ^A1AE(11007,"AU",$E(X,1,30),DA(1),DA)=""
"^DD",11007,11007.05,.01,1,1,2)
K ^A1AE(11007,"AU",$E(X,1,30),DA(1),DA)
"^DD",11007,11007.05,.01,21,0)
^^2^2^2860306^
"^DD",11007,11007.05,.01,21,1,0)
Enter Your name to request automatic notification of
"^DD",11007,11007.05,.01,21,2,0)
Patches for this Package.
"^DD",11007,11007.05,.01,"DT")
2921202
"^DD",11007,11007.05,2,0)
DATE USER SELECTED^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11007,11007.05,2,21,0)
^^3^3^2871112^^
"^DD",11007,11007.05,2,21,1,0)
This field holds the date this user selected to receive automatic
"^DD",11007,11007.05,2,21,2,0)
notification of patches for this package. It is set by the system
"^DD",11007,11007.05,2,21,3,0)
via the option to 'Select Packages for Notification'.
"^DD",11007,11007.05,2,"DT")
2860204
"^DD",11007,11007.05,3,0)
TEST SITE DOMAIN^FX^^0;3^K:$L(X)>30!($L(X)<3) X I $D(X) S SAVX=X,X="A1AEM" X ^%ZOSF("TEST") S X=SAVX K SAVX I $T D MMM^A1AEM K:X="" X I $D(X),$D(X9) S X=X9_"."_X I $E(X)="." S X=$E(X,2,99)
"^DD",11007,11007.05,3,3)
Answer must be a valid domain
"^DD",11007,11007.05,3,21,0)
^^3^3^2900803^
"^DD",11007,11007.05,3,21,1,0)
This field should contain the a Domain name for sending
"^DD",11007,11007.05,3,21,2,0)
patch messages to the user @ domain.  This field is only
"^DD",11007,11007.05,3,21,3,0)
used if the Package is set as a TEST SITE.
"^DD",11007,11007.05,3,"DT")
2910613
"^DD",11007,11007.128,0)
PATCH STREAM SUB-FIELD^^3^4
"^DD",11007,11007.128,0,"DT")
3150529
"^DD",11007,11007.128,0,"IX","B",11007.128,.01)

"^DD",11007,11007.128,0,"NM","PATCH STREAM")

"^DD",11007,11007.128,0,"UP")
11007.01
"^DD",11007,11007.128,.01,0)
PATCH STREAM^P11007.1'X^A1AE(11007.1,^0;1^S DINUM=X
"^DD",11007,11007.128,.01,1,0)
^.1
"^DD",11007,11007.128,.01,1,1,0)
11007.128^B
"^DD",11007,11007.128,.01,1,1,1)
S ^A1AE(11007,DA(2),"V",DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",11007,11007.128,.01,1,1,2)
K ^A1AE(11007,DA(2),"V",DA(1),1,"B",$E(X,1,30),DA)
"^DD",11007,11007.128,.01,"DT")
3150526
"^DD",11007,11007.128,1,0)
NEXT PATCH NUMBER^NJ7,0^^PH;1^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11007,11007.128,1,3)
Type a number between 1 and 9999999, 0 decimal digits.
"^DD",11007,11007.128,1,"DT")
3150526
"^DD",11007,11007.128,2,0)
NEXT SEQUENCE NUMBER^NJ7,0^^PR;1^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11007,11007.128,2,3)
Type a number between 1 and 9999999, 0 decimal digits.
"^DD",11007,11007.128,2,"DT")
3150526
"^DD",11007,11007.128,3,0)
NEXT PROBLEM NUMBER^NJ5,0^^PB;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11007,11007.128,3,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",11007,11007.128,3,"DT")
3150529
"^DD",11007.1,11007.1,0)
FIELD^^.07^10
"^DD",11007.1,11007.1,0,"DT")
3150402
"^DD",11007.1,11007.1,0,"NM","DHCP PATCH STREAM")

"^DD",11007.1,11007.1,0,"PT",11005,.2)

"^DD",11007.1,11007.1,0,"PT",11007.04,4)

"^DD",11007.1,11007.1,0,"PT",11007.1,.03)

"^DD",11007.1,11007.1,0,"PT",11007.128,.01)

"^DD",11007.1,11007.1,0,"PT",11007.2,.02)

"^DD",11007.1,11007.1,.001,0)
PATCH NUMBER START^NJ9,0X^^ ^K:+X'=X!(X>999999999)!(X<1)!(X[".")!(X#1000'=1) X
"^DD",11007.1,11007.1,.001,3)
Type a number whose modulus of 1000 is 1.
"^DD",11007.1,11007.1,.001,21,0)
^.001^7^7^3140727^^
"^DD",11007.1,11007.1,.001,21,1,0)
Enter the number to assign to the first patch created for a new version 
"^DD",11007.1,11007.1,.001,21,2,0)
of any package, when patches to it are released as part of this patch 
"^DD",11007.1,11007.1,.001,21,3,0)
stream. For example, VA VISTA patches start their enumeration with 1, IHS 
"^DD",11007.1,11007.1,.001,21,4,0)
RPMS patches start at 1001, and OSEHRA VISTA patches start at 10001.
"^DD",11007.1,11007.1,.001,21,5,0)
 
"^DD",11007.1,11007.1,.001,21,6,0)
To create a new patch stream, start at a number whose modulus of 1000 is 
"^DD",11007.1,11007.1,.001,21,7,0)
1. For example, 2001 and 10001 are valid numbers; 2000 and 10000 are not.
"^DD",11007.1,11007.1,.001,23,0)
^.001^16^16^3140727^^
"^DD",11007.1,11007.1,.001,23,1,0)
This field is used by $$PRIMSTRM^A1AEUTL, which is called by SEQ &
"^DD",11007.1,11007.1,.001,23,2,0)
NUM^A1AEUTL
"^DD",11007.1,11007.1,.001,23,3,0)
 
"^DD",11007.1,11007.1,.001,23,4,0)
in assigning patch numbers.
"^DD",11007.1,11007.1,.001,23,5,0)
 
"^DD",11007.1,11007.1,.001,23,6,0)
Convention: when field .01 of a file is a pointer to this field, Dinum it.
"^DD",11007.1,11007.1,.001,23,7,0)
 
"^DD",11007.1,11007.1,.001,23,8,0)
Change History:
"^DD",11007.1,11007.1,.001,23,9,0)
 
"^DD",11007.1,11007.1,.001,23,10,0)
Wednesday, 22 January 2014: (VEN/SMH) Created field Patch Number Start 
"^DD",11007.1,11007.1,.001,23,11,0)
(.001) for Patch Module version 2.4 as part of the OSEHRA Forum Project 
"^DD",11007.1,11007.1,.001,23,12,0)
Phase One.
"^DD",11007.1,11007.1,.001,23,13,0)
 
"^DD",11007.1,11007.1,.001,23,14,0)
Tuesday, 11 February 2014: (VEN/TOAD) Revised Description, wrote 
"^DD",11007.1,11007.1,.001,23,15,0)
Technical Description, added Change History. Fixed bug in Input 
"^DD",11007.1,11007.1,.001,23,16,0)
Transform: was enforcing X#10000'=1 instead of X#1000'=1.
"^DD",11007.1,11007.1,.001,"DT")
3140728
"^DD",11007.1,11007.1,.01,0)
NAME^RFJ30^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",11007.1,11007.1,.01,.1)
VISTA DIALECT NAME
"^DD",11007.1,11007.1,.01,1,0)
^.1^^0
"^DD",11007.1,11007.1,.01,3)
Answer must be 3-30 characters in length.
"^DD",11007.1,11007.1,.01,21,0)
^.001^4^4^3140728^^
"^DD",11007.1,11007.1,.01,21,1,0)
Enter the name of this patch stream; it should be the name of the VISTA 
"^DD",11007.1,11007.1,.01,21,2,0)
dialect supported by this patch stream. Examples include: VA VISTA, FOIA 
"^DD",11007.1,11007.1,.01,21,3,0)
VISTA, OSEHRA VISTA, IHS RPMS, FOIA RPMS, OSEHRA RPMS, MEDSPHERE 
"^DD",11007.1,11007.1,.01,21,4,0)
OPENVISTA, DSS VXVISTA, WORLDVISTA EHR, DOD CHCS, and FOIA CHCS.
"^DD",11007.1,11007.1,.01,23,0)
^.001^12^12^3140728^^
"^DD",11007.1,11007.1,.01,23,1,0)
Field Name (.01) will be used extensively by the Patch Module in creating 
"^DD",11007.1,11007.1,.01,23,2,0)
subjects for e-mail distributions, header lines for host-file 
"^DD",11007.1,11007.1,.01,23,3,0)
distributions, patch boilerplate text, and so on.
"^DD",11007.1,11007.1,.01,23,4,0)
 
"^DD",11007.1,11007.1,.01,23,5,0)
Change History:
"^DD",11007.1,11007.1,.01,23,6,0)
 
"^DD",11007.1,11007.1,.01,23,7,0)
Monday, 13 January 2014: (VEN/SMH) Created field Name (.01) for Patch 
"^DD",11007.1,11007.1,.01,23,8,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.01,23,9,0)
 
"^DD",11007.1,11007.1,.01,23,10,0)
Tuesday, 11 February 2014: (VEN/TOAD) Wrote Description, Technical 
"^DD",11007.1,11007.1,.01,23,11,0)
Description, and Change History for Patch Module version 2.4 as part of 
"^DD",11007.1,11007.1,.01,23,12,0)
the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.01,"DEL",.01,0)
D EN^DDIOL("Cannot delete an existing entry.") I 1
"^DD",11007.1,11007.1,.01,"DT")
3140805
"^DD",11007.1,11007.1,.02,0)
PRIMARY?^RS^1:YES;0:NO;^0;2^Q
"^DD",11007.1,11007.1,.02,3)
Enter YES or NO.
"^DD",11007.1,11007.1,.02,21,0)
^.001^10^10^3140806^^^^
"^DD",11007.1,11007.1,.02,21,1,0)
Enter YES if this patch stream will be considered the primary stream for 
"^DD",11007.1,11007.1,.02,21,2,0)
this site. There can be only one primary stream at a time. If you set 
"^DD",11007.1,11007.1,.02,21,3,0)
this field to YES for a second stream, this field in all other patch 
"^DD",11007.1,11007.1,.02,21,4,0)
streams will be set to NO.
"^DD",11007.1,11007.1,.02,21,5,0)
 
"^DD",11007.1,11007.1,.02,21,6,0)
A primary patch stream is the default stream under which a new patch 
"^DD",11007.1,11007.1,.02,21,7,0)
developed using this Patch Module will be numberspaced. For example, if 
"^DD",11007.1,11007.1,.02,21,8,0)
the primary patch stream is numberspaced to be 3001, then any patch you 
"^DD",11007.1,11007.1,.02,21,9,0)
develop using this Patch Module system will assign patch numbers 
"^DD",11007.1,11007.1,.02,21,10,0)
enumerating from 3001.
"^DD",11007.1,11007.1,.02,23,0)
^.001^17^17^3140806^^^^
"^DD",11007.1,11007.1,.02,23,1,0)
The purpose of field Primary? (.02) is to set up the PRIM index, which is 
"^DD",11007.1,11007.1,.02,23,2,0)
used by $$PRIMSTRM^A1AEUTL to assign patch numbers. Cross-reference APRIM 
"^DD",11007.1,11007.1,.02,23,3,0)
ensures that only one patch stream at a time may be primary.
"^DD",11007.1,11007.1,.02,23,4,0)
 
"^DD",11007.1,11007.1,.02,23,5,0)
Change History:
"^DD",11007.1,11007.1,.02,23,6,0)
 
"^DD",11007.1,11007.1,.02,23,7,0)
Monday, 13 January 2014: (VEN/SMH) Created field Primary? (2) for Patch 
"^DD",11007.1,11007.1,.02,23,8,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.02,23,9,0)
 
"^DD",11007.1,11007.1,.02,23,10,0)
Wednesday, 22 January 2014: (VEN/SMH) Revised Description to explain 
"^DD",11007.1,11007.1,.02,23,11,0)
numberspacing for Patch Module version 2.4 as part of the OSEHRA Forum 
"^DD",11007.1,11007.1,.02,23,12,0)
Project Phase One.
"^DD",11007.1,11007.1,.02,23,13,0)
 
"^DD",11007.1,11007.1,.02,23,14,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted field Primary? (2) and 
"^DD",11007.1,11007.1,.02,23,15,0)
created field Primary? (.02); revised Description; added Technical 
"^DD",11007.1,11007.1,.02,23,16,0)
Description and Change History for Patch Module version 2.4 as part of 
"^DD",11007.1,11007.1,.02,23,17,0)
the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.02,"DT")
3150402
"^DD",11007.1,11007.1,.03,0)
FEEDS INTO STREAM^*P11007.1'^A1AE(11007.1,^0;3^S DIC("S")="I D0'=Y" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",11007.1,11007.1,.03,3)
Select a patch stream.
"^DD",11007.1,11007.1,.03,12)
You can select any other streams but not yourself.
"^DD",11007.1,11007.1,.03,12.1)
S DIC("S")="I D0'=Y"
"^DD",11007.1,11007.1,.03,21,0)
^^3^3^3140211^
"^DD",11007.1,11007.1,.03,21,1,0)
You may select a derived patch stream, to which incoming patches to this 
"^DD",11007.1,11007.1,.03,21,2,0)
stream will be bifurcated. Defaults to bifurcating to the primary patch 
"^DD",11007.1,11007.1,.03,21,3,0)
stream. This field is optional.
"^DD",11007.1,11007.1,.03,23,0)
^^17^17^3140211^
"^DD",11007.1,11007.1,.03,23,1,0)
Field Feeds into Stream (.03) was designed to allow OSEHRA Forum to 
"^DD",11007.1,11007.1,.03,23,2,0)
redistribute FOIA VISTA patches unchanged while simultaneously 
"^DD",11007.1,11007.1,.03,23,3,0)
distributing renamed and renumbered copies of those same patches, some in 
"^DD",11007.1,11007.1,.03,23,4,0)
modified form, as part of the new OSEHRA VISTA patch stream. This is 
"^DD",11007.1,11007.1,.03,23,5,0)
similar to what IHS does with FOIA VISTA patches to create their IHS RPMS 
"^DD",11007.1,11007.1,.03,23,6,0)
patch stream
"^DD",11007.1,11007.1,.03,23,7,0)
 
"^DD",11007.1,11007.1,.03,23,8,0)
Change History:
"^DD",11007.1,11007.1,.03,23,9,0)
 
"^DD",11007.1,11007.1,.03,23,10,0)
Monday, 13 January 2014: (VEN/SMH) Created field Feeds into Stream (3) 
"^DD",11007.1,11007.1,.03,23,11,0)
for Patch Module version 2.4 as part of the OSEHRA Forum Project Phase 
"^DD",11007.1,11007.1,.03,23,12,0)
One.
"^DD",11007.1,11007.1,.03,23,13,0)
 
"^DD",11007.1,11007.1,.03,23,14,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted field Feeds into Stream (3) 
"^DD",11007.1,11007.1,.03,23,15,0)
and created field Feeds into Stream (.03); revised Description; added 
"^DD",11007.1,11007.1,.03,23,16,0)
Technical Description and Change History for Patch Module version 2.4 as 
"^DD",11007.1,11007.1,.03,23,17,0)
part of the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.03,"DT")
3140211
"^DD",11007.1,11007.1,.04,0)
DOMAIN^FJ60^^0;4^K:$L(X)>60!($L(X)<1) X
"^DD",11007.1,11007.1,.04,3)
Answer must be 1-60 characters in length.
"^DD",11007.1,11007.1,.04,21,0)
^^2^2^3140211^
"^DD",11007.1,11007.1,.04,21,1,0)
Enter the domain associated with incoming patches from this patch stream. 
"^DD",11007.1,11007.1,.04,21,2,0)
This field is optional.
"^DD",11007.1,11007.1,.04,23,0)
^^15^15^3140211^
"^DD",11007.1,11007.1,.04,23,1,0)
Field Domain (.04) was designed to support and differentiate multiple 
"^DD",11007.1,11007.1,.04,23,2,0)
inbound patch streams. For example, is OSEHRA Forum at some point 
"^DD",11007.1,11007.1,.04,23,3,0)
supports both VISTA and RPMS, the Patch Module would need to be able to 
"^DD",11007.1,11007.1,.04,23,4,0)
distinguish IHS's patches from VA's.
"^DD",11007.1,11007.1,.04,23,5,0)
 
"^DD",11007.1,11007.1,.04,23,6,0)
Change History:
"^DD",11007.1,11007.1,.04,23,7,0)
 
"^DD",11007.1,11007.1,.04,23,8,0)
Monday, 13 January 2014: (VEN/SMH) Created field Domain (4) for Patch 
"^DD",11007.1,11007.1,.04,23,9,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One. This 
"^DD",11007.1,11007.1,.04,23,10,0)
field is not yet in use.
"^DD",11007.1,11007.1,.04,23,11,0)
 
"^DD",11007.1,11007.1,.04,23,12,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted field Domain (4) and 
"^DD",11007.1,11007.1,.04,23,13,0)
created field Domain (.04); revised Description; added Technical 
"^DD",11007.1,11007.1,.04,23,14,0)
Description and Change History for Patch Module version 2.4 as part of 
"^DD",11007.1,11007.1,.04,23,15,0)
the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.04,"DT")
3140211
"^DD",11007.1,11007.1,.05,0)
ABBREVIATION^RFJ2^^0;5^K:$L(X)>2!($L(X)<2)!'(X?2U) X
"^DD",11007.1,11007.1,.05,.1)
TWO-LETTER CODE
"^DD",11007.1,11007.1,.05,3)
Answer must be 2 characters in length.
"^DD",11007.1,11007.1,.05,21,0)
^.001^2^2^3140211^^
"^DD",11007.1,11007.1,.05,21,1,0)
Enter a unique two-letter abbreviation for this patch stream. This will 
"^DD",11007.1,11007.1,.05,21,2,0)
be used to help identify or select patch streams.
"^DD",11007.1,11007.1,.05,23,0)
^^8^8^3140211^
"^DD",11007.1,11007.1,.05,23,1,0)
This field is accessed by file DHCP Patches (11005)'s WRITE identifier.
"^DD",11007.1,11007.1,.05,23,2,0)
 
"^DD",11007.1,11007.1,.05,23,3,0)
Change History:
"^DD",11007.1,11007.1,.05,23,4,0)
 
"^DD",11007.1,11007.1,.05,23,5,0)
Tuesday, 11 February 2014: (VEN/TOAD) Created field Abbreviation (.05); 
"^DD",11007.1,11007.1,.05,23,6,0)
cross-referenced it; made it a key field; and made file DHCP Patches 
"^DD",11007.1,11007.1,.05,23,7,0)
(11005)'s WRITE identifier display it for Patch Module version 2.4 as 
"^DD",11007.1,11007.1,.05,23,8,0)
part of the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.05,"DT")
3140211
"^DD",11007.1,11007.1,.06,0)
SUBSCRIPTION^RSX^1:YES;0:NO;^0;6^D STRM^A1AEK2($G(DIEDA),$G(Y(0))) K:'$D(A1AEFOAP) X
"^DD",11007.1,11007.1,.06,3)
Only editable by Forum Action
"^DD",11007.1,11007.1,.06,21,0)
^^12^12^3140806^
"^DD",11007.1,11007.1,.06,21,1,0)
Enter YES if this SUBSCRIPTION represents the Patch Stream in use at
"^DD",11007.1,11007.1,.06,21,2,0)
this site. There can be only one SUBSCRIPTION at a time. If you set this
"^DD",11007.1,11007.1,.06,21,3,0)
field to YES, this SUBSCRIPTION field in all other patch streams
"^DD",11007.1,11007.1,.06,21,4,0)
will be set to NO.
"^DD",11007.1,11007.1,.06,21,5,0)
 
"^DD",11007.1,11007.1,.06,21,6,0)
The SUBSCRIPTION represents the default Patch Stream under which patch 
"^DD",11007.1,11007.1,.06,21,7,0)
installs at this site will use.  For instance, a site set for 
"^DD",11007.1,11007.1,.06,21,8,0)
SUBSCRIPTION - YES as a FOIA VISTA site, will only be able to install 
"^DD",11007.1,11007.1,.06,21,9,0)
patches number spaced in the FOIA VISTA range.
"^DD",11007.1,11007.1,.06,21,10,0)
 
"^DD",11007.1,11007.1,.06,21,11,0)
This field not only documents the Patch Stream in use by this site, but
"^DD",11007.1,11007.1,.06,21,12,0)
prevents installation of patches developed for other streams.
"^DD",11007.1,11007.1,.06,23,0)
^^16^16^3140806^
"^DD",11007.1,11007.1,.06,23,1,0)
SUBSCRIPTION is set to FOIA VISTA by the KIDS installing the DHCP PATCH 
"^DD",11007.1,11007.1,.06,23,2,0)
STREAM [#11007.1] file.  However, a post-install will allow the 
"^DD",11007.1,11007.1,.06,23,3,0)
installing user to select another Patch Subscription.
"^DD",11007.1,11007.1,.06,23,4,0)
 
"^DD",11007.1,11007.1,.06,23,5,0)
Enter YES if this SUBSCRIPTION represents the Patch Stream in use at
"^DD",11007.1,11007.1,.06,23,6,0)
this site. There can be only one SUBSCRIPTION at a time. If you set this
"^DD",11007.1,11007.1,.06,23,7,0)
field to YES, this SUBSCRIPTION field in all other patch streams
"^DD",11007.1,11007.1,.06,23,8,0)
will be set to NO.
"^DD",11007.1,11007.1,.06,23,9,0)
 
"^DD",11007.1,11007.1,.06,23,10,0)
The SUBSCRIPTION represents the default Patch Stream under which patch
"^DD",11007.1,11007.1,.06,23,11,0)
installs at this site will use.  For instance, a site set for
"^DD",11007.1,11007.1,.06,23,12,0)
SUBSCRIPTION - YES as a FOIA VISTA site, will only be able to install
"^DD",11007.1,11007.1,.06,23,13,0)
patches number spaced in the FOIA VISTA range.
"^DD",11007.1,11007.1,.06,23,14,0)
 
"^DD",11007.1,11007.1,.06,23,15,0)
This field not only documents the Patch Stream in use by this site, but
"^DD",11007.1,11007.1,.06,23,16,0)
prevents installation of patches developed for other streams.
"^DD",11007.1,11007.1,.06,"DT")
3150610
"^DD",11007.1,11007.1,.07,0)
FORUM DOMAIN^FJ30^^0;7^K:$L(X)>30!($L(X)<1) X
"^DD",11007.1,11007.1,.07,3)
Answer must be 1-30 characters in length.
"^DD",11007.1,11007.1,.07,21,0)
^^5^5^3140808^
"^DD",11007.1,11007.1,.07,21,1,0)
FORUM DOMAIN is designed to hold the name of MAILMAN PARAMETERS [#4.3]
"^DD",11007.1,11007.1,.07,21,2,0)
entry that represent this DHCP PATCH STREAM [#11007.1] entry as a FORUM
"^DD",11007.1,11007.1,.07,21,3,0)
site. The field is used to trigger the PRIMARY? [#.02] field in
"^DD",11007.1,11007.1,.07,21,4,0)
recognition of this site's ability to build and distribute KIDS patches 
"^DD",11007.1,11007.1,.07,21,5,0)
under this PATCH STREAM.
"^DD",11007.1,11007.1,.07,"DT")
3140808
"^DD",11007.1,11007.1,1,0)
SUBSCRIPTION DATE^11007.12DA^^1;0
"^DD",11007.1,11007.1,10,0)
ROUTINE^11007.11^^RTN;0
"^DD",11007.1,11007.1,10,21,0)
^.001^5^5^3140805^^^^
"^DD",11007.1,11007.1,10,21,1,0)
Contains routines and their current checksums for this stream.
"^DD",11007.1,11007.1,10,21,2,0)
 
"^DD",11007.1,11007.1,10,21,3,0)
Used to calculate the before checksums in $$BCS^A1AEUTL2
"^DD",11007.1,11007.1,10,21,4,0)
 
"^DD",11007.1,11007.1,10,21,5,0)
Updated upon release to the after values of the routines in the released KIDS Build.
"^DD",11007.1,11007.11,0)
ROUTINE SUB-FIELD^^1.1^5
"^DD",11007.1,11007.11,0,"DT")
3140307
"^DD",11007.1,11007.11,0,"IX","B",11007.11,.01)

"^DD",11007.1,11007.11,0,"NM","ROUTINE")

"^DD",11007.1,11007.11,0,"UP")
11007.1
"^DD",11007.1,11007.11,.01,0)
ROUTINE^MFJ16^^0;1^K:$L(X)>16!($L(X)<1) X
"^DD",11007.1,11007.11,.01,1,0)
^.1
"^DD",11007.1,11007.11,.01,1,1,0)
11007.11^B
"^DD",11007.1,11007.11,.01,1,1,1)
S ^A1AE(11007.1,DA(1),"RTN","B",$E(X,1,30),DA)=""
"^DD",11007.1,11007.11,.01,1,1,2)
K ^A1AE(11007.1,DA(1),"RTN","B",$E(X,1,30),DA)
"^DD",11007.1,11007.11,.01,3)
Enter a routine name without the caret.
"^DD",11007.1,11007.11,.01,9)
^
"^DD",11007.1,11007.11,.01,"DT")
3140307
"^DD",11007.1,11007.11,.02,0)
CURRENT CHECKSUM^FJ15^^0;2^K:$L(X)>15!($L(X)<1)!'(X?1A1.N) X
"^DD",11007.1,11007.11,.02,3)
Answer must be 1 Alpha 1-14 Numerics in length.
"^DD",11007.1,11007.11,.02,9)
^
"^DD",11007.1,11007.11,.02,21,0)
^.001^5^5^3140307^^
"^DD",11007.1,11007.11,.02,21,1,0)
This is the routine's New style checksum (starts with a B)
"^DD",11007.1,11007.11,.02,21,2,0)
 
"^DD",11007.1,11007.11,.02,21,3,0)
This field holds the checksum (based on $$SUMB^XPDRSUM(routine)) calculated for Class I release loaded by KIDS.
"^DD",11007.1,11007.11,.02,21,4,0)
 
"^DD",11007.1,11007.11,.02,21,5,0)
The letter at the front tells us what checksum algorithm was used.  
"^DD",11007.1,11007.11,.02,"DT")
3140307
"^DD",11007.1,11007.11,.03,0)
CHECKSUM DATE^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",11007.1,11007.11,.03,3)
Enter a precise Date/Time for when this entry was made
"^DD",11007.1,11007.11,.03,9)
^
"^DD",11007.1,11007.11,.03,21,0)
^^1^1^3140307^
"^DD",11007.1,11007.11,.03,21,1,0)
This field holds the date the Checksum was last saved.
"^DD",11007.1,11007.11,.03,"DT")
3140307
"^DD",11007.1,11007.11,.04,0)
PATCH LIST AT CHECKSUM TIME^FJ200^^0;4^K:$L(X)>200!($L(X)<1) X
"^DD",11007.1,11007.11,.04,3)
Answer must be 1-200 characters in length.
"^DD",11007.1,11007.11,.04,9)
^
"^DD",11007.1,11007.11,.04,21,0)
^^1^1^3140307^
"^DD",11007.1,11007.11,.04,21,1,0)
This field holds the patch list from the second line of the routine at the time the checksum is field from the patch module.
"^DD",11007.1,11007.11,.04,"DT")
3140307
"^DD",11007.1,11007.11,1.1,0)
DELETED BY PATCH^P11005'^A1AE(11005,^1;1^Q
"^DD",11007.1,11007.11,1.1,3)

"^DD",11007.1,11007.11,1.1,21,0)
^^1^1^3140307^^^
"^DD",11007.1,11007.11,1.1,21,1,0)
If a patch deletes a routine, this is noted here.
"^DD",11007.1,11007.11,1.1,"DT")
3140307
"^DD",11007.1,11007.12,0)
SUBSCRIPTION DATE SUB-FIELD^^2^3
"^DD",11007.1,11007.12,0,"DT")
3140805
"^DD",11007.1,11007.12,0,"IX","B",11007.12,.01)

"^DD",11007.1,11007.12,0,"NM","SUBSCRIPTION DATE")

"^DD",11007.1,11007.12,0,"UP")
11007.1
"^DD",11007.1,11007.12,.01,0)
SUBSCRIPTION DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11007.1,11007.12,.01,1,0)
^.1
"^DD",11007.1,11007.12,.01,1,1,0)
11007.12^B
"^DD",11007.1,11007.12,.01,1,1,1)
S ^A1AE(11007.1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",11007.1,11007.12,.01,1,1,2)
K ^A1AE(11007.1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",11007.1,11007.12,.01,21,0)
^^1^1^3140805^
"^DD",11007.1,11007.12,.01,21,1,0)
SUBSCRIPTION DATE documents the date a new SUBSCRIPTION path was selected.
"^DD",11007.1,11007.12,.01,"DT")
3140806
"^DD",11007.1,11007.12,1,0)
AUTHORIZING INDIVIDUAL^P200'^VA(200,^0;2^Q
"^DD",11007.1,11007.12,1,21,0)
^.001^2^2^3140805^^
"^DD",11007.1,11007.12,1,21,1,0)
The authorized user who changed the site's SUBSCRIPTION to this PATCH 
"^DD",11007.1,11007.12,1,21,2,0)
STREAM
"^DD",11007.1,11007.12,1,"DT")
3140805
"^DD",11007.1,11007.12,2,0)
COMMENTS^11007.122^^1;0
"^DD",11007.1,11007.122,0)
COMMENTS SUB-FIELD^^.01^1
"^DD",11007.1,11007.122,0,"DT")
3140805
"^DD",11007.1,11007.122,0,"NM","COMMENTS")

"^DD",11007.1,11007.122,0,"UP")
11007.12
"^DD",11007.1,11007.122,.01,0)
COMMENTS^Wx^^0;1^Q
"^DD",11007.1,11007.122,.01,21,0)
^^2^2^3140805^
"^DD",11007.1,11007.122,.01,21,1,0)
All pertinent information surrounding the decision to make this PATCH 
"^DD",11007.1,11007.122,.01,21,2,0)
STREAM the site's SUBSCRIPTION
"^DD",11007.1,11007.122,.01,"DT")
3140805
"^DD",11007.2,11007.2,0)
FIELD^^.06^7
"^DD",11007.2,11007.2,0,"DT")
3150509
"^DD",11007.2,11007.2,0,"IX","B",11007.2,.01)

"^DD",11007.2,11007.2,0,"NM","PATCH STREAM HISTORY")

"^DD",11007.2,11007.2,.01,0)
DOMAIN^RP4.2'^DIC(4.2,^0;1^Q
"^DD",11007.2,11007.2,.01,1,0)
^.1
"^DD",11007.2,11007.2,.01,1,1,0)
11007.2^B
"^DD",11007.2,11007.2,.01,1,1,1)
S ^A1AE(11007.2,"B",$E(X,1,30),DA)=""
"^DD",11007.2,11007.2,.01,1,1,2)
K ^A1AE(11007.2,"B",$E(X,1,30),DA)
"^DD",11007.2,11007.2,.01,3)

"^DD",11007.2,11007.2,.01,21,0)
^^2^2^3150501^
"^DD",11007.2,11007.2,.01,21,1,0)
Patch Stream History is recorded by Domain.  This allows client sites to 
"^DD",11007.2,11007.2,.01,21,2,0)
have multiple patch streams active (e.g. production and test accounts).
"^DD",11007.2,11007.2,.01,23,0)
^^6^6^3150501^
"^DD",11007.2,11007.2,.01,23,1,0)
FORUM sites need to keep a record of patch streams by domains.  This 
"^DD",11007.2,11007.2,.01,23,2,0)
allows client sites to maintain multiple patch streams, such as a 
"^DD",11007.2,11007.2,.01,23,3,0)
production account and a test account.  Also, as new patches will be 
"^DD",11007.2,11007.2,.01,23,4,0)
distributed dependent on the client's active patch stream, the DOMAIN 
"^DD",11007.2,11007.2,.01,23,5,0)
provides the address of the Q-PATCH mail group to receive incoming 
"^DD",11007.2,11007.2,.01,23,6,0)
patches.
"^DD",11007.2,11007.2,.01,"DT")
3150507
"^DD",11007.2,11007.2,.02,0)
ACTIVE PATCH STREAM^P11007.1'^A1AE(11007.1,^0;2^Q
"^DD",11007.2,11007.2,.02,21,0)
^^1^1^3150501^
"^DD",11007.2,11007.2,.02,21,1,0)
Pointer to DHCP PATCH STREAM [#11007.1] file
"^DD",11007.2,11007.2,.02,23,0)
^.001^4^4^3150501^^
"^DD",11007.2,11007.2,.02,23,1,0)
Pointer to DHCP PATCH STREAM [#11007.1] file which defines available patch
"^DD",11007.2,11007.2,.02,23,2,0)
streams a site may select.  The patch number range appropriate for each
"^DD",11007.2,11007.2,.02,23,3,0)
stream, and identifies patches as to their respective stream, is located
"^DD",11007.2,11007.2,.02,23,4,0)
in the DHCP PATCH STREAM file.
"^DD",11007.2,11007.2,.02,"DT")
3150501
"^DD",11007.2,11007.2,.03,0)
DATE PATCH STREAM ACTIVE^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11007.2,11007.2,.03,21,0)
^^2^2^3150501^
"^DD",11007.2,11007.2,.03,21,1,0)
This is the date/time that this patch stream became active for this 
"^DD",11007.2,11007.2,.03,21,2,0)
domain.
"^DD",11007.2,11007.2,.03,"DT")
3150422
"^DD",11007.2,11007.2,.04,0)
INFORMATIONAL PATCHES REQUIRED^S^0:NO;1:YES;^0;4^Q
"^DD",11007.2,11007.2,.04,21,0)
^^3^3^3150501^
"^DD",11007.2,11007.2,.04,21,1,0)
Toggle indicating whether is is necessary to send this domain the 
"^DD",11007.2,11007.2,.04,21,2,0)
informational initiating patches for each package supported by the ACTIVE 
"^DD",11007.2,11007.2,.04,21,3,0)
PATCH STREAM.
"^DD",11007.2,11007.2,.04,23,0)
^^12^12^3150501^
"^DD",11007.2,11007.2,.04,23,1,0)
At client sites, receipt and installation of informatial patches for each
"^DD",11007.2,11007.2,.04,23,2,0)
package supported under the ACTIVE PATCH STREAM guides pre-installation
"^DD",11007.2,11007.2,.04,23,3,0)
logic during patch installation which verifies the suitablity of
"^DD",11007.2,11007.2,.04,23,4,0)
installation.
"^DD",11007.2,11007.2,.04,23,5,0)
 
"^DD",11007.2,11007.2,.04,23,6,0)
Note also that indicating informational patches may need only be sent to a
"^DD",11007.2,11007.2,.04,23,7,0)
site AFTER they have switch to a new ACTIVE PATCH STREAM.  This prevents
"^DD",11007.2,11007.2,.04,23,8,0)
the need to send these informational patches to every site for every
"^DD",11007.2,11007.2,.04,23,9,0)
package in historical use (e.g. Only after a site/domain has switched from
"^DD",11007.2,11007.2,.04,23,10,0)
FOIA VISTA to OSEHRA VISTA is it necessary for OSEHRA VISTA these special
"^DD",11007.2,11007.2,.04,23,11,0)
informational patches to be installed indicating packages that now will
"^DD",11007.2,11007.2,.04,23,12,0)
install OSEHRA VISTA patches rather than FOIA VISTA.
"^DD",11007.2,11007.2,.04,"DT")
3150501
"^DD",11007.2,11007.2,.05,0)
INFORMATIONAL PATCHES SENT^S^0:NO;1:YES;^0;5^Q
"^DD",11007.2,11007.2,.05,21,0)
^.001^3^3^3150501^^
"^DD",11007.2,11007.2,.05,21,1,0)
Toggle indicating that the informational initiating patches for each
"^DD",11007.2,11007.2,.05,21,2,0)
package supported by the ACTIVE PATCH STREAM have been forwarded to the
"^DD",11007.2,11007.2,.05,21,3,0)
site
"^DD",11007.2,11007.2,.05,23,0)
^^17^17^3150501^
"^DD",11007.2,11007.2,.05,23,1,0)
Note that this toggle doesn't indicate which patches were forwarded, nor
"^DD",11007.2,11007.2,.05,23,2,0)
if they were successfully sent by FORUM or successfully received by the
"^DD",11007.2,11007.2,.05,23,3,0)
client.  It is only a general purpose indicator which, when set to NO,
"^DD",11007.2,11007.2,.05,23,4,0)
that informational patches may yet need to be sent
"^DD",11007.2,11007.2,.05,23,5,0)
 
"^DD",11007.2,11007.2,.05,23,6,0)
At client sites, receipt and installation of informatial patches for each
"^DD",11007.2,11007.2,.05,23,7,0)
package supported under the ACTIVE PATCH STREAM guides pre-installation
"^DD",11007.2,11007.2,.05,23,8,0)
logic during patch installation which verifies the suitablity of
"^DD",11007.2,11007.2,.05,23,9,0)
installation.
"^DD",11007.2,11007.2,.05,23,10,0)
 
"^DD",11007.2,11007.2,.05,23,11,0)
Note also that indicating informational patches need only be sent to a
"^DD",11007.2,11007.2,.05,23,12,0)
site AFTER they have switch to a new ACTIVE PATCH STREAM.  This prevents
"^DD",11007.2,11007.2,.05,23,13,0)
the need to send these informational patches to every site for every
"^DD",11007.2,11007.2,.05,23,14,0)
package in historical use (e.g. Only after a site/domain has switched from
"^DD",11007.2,11007.2,.05,23,15,0)
FOIA VISTA to OSEHRA VISTA is it necessary for OSEHRA VISTA these special
"^DD",11007.2,11007.2,.05,23,16,0)
informational patches to be installed indicating packages that now will
"^DD",11007.2,11007.2,.05,23,17,0)
install OSEHRA VISTA patches rather than FOIA VISTA.
"^DD",11007.2,11007.2,.05,"DT")
3150501
"^DD",11007.2,11007.2,.06,0)
STREAM CHANGE STATUS^S^0:NO REQUESTS;1:IN REVIEW;2:WAITING FORUM APPROVAL;3:CHANGE CONFIRMED;^0;6^Q
"^DD",11007.2,11007.2,.06,21,0)
^^19^19^3150502^
"^DD",11007.2,11007.2,.06,21,1,0)
STREAM CHANGE STATUS tracks the status of a request for Patch Stream 
"^DD",11007.2,11007.2,.06,21,2,0)
Change.  
"^DD",11007.2,11007.2,.06,21,3,0)
 
"^DD",11007.2,11007.2,.06,21,4,0)
INTERNALLY-STORED CODE: 0  WILL STAND FOR: NO REQUESTS
"^DD",11007.2,11007.2,.06,21,5,0)
                           There has never been a request from this
"^DD",11007.2,11007.2,.06,21,6,0)
                             Domain for a change in Patch Stream
"^DD",11007.2,11007.2,.06,21,7,0)
INTERNALLY-STORED CODE: 1  WILL STAND FOR: IN REVIEW
"^DD",11007.2,11007.2,.06,21,8,0)
                           There is an active Patch Stream Change
"^DD",11007.2,11007.2,.06,21,9,0)
                             request from this Domain in process.
"^DD",11007.2,11007.2,.06,21,10,0)
INTERNALLY-STORED CODE: 2  WILL STAND FOR: WAITING FORUM APPROVAL
"^DD",11007.2,11007.2,.06,21,11,0)
                           A request for Patch Stream Change has been
"^DD",11007.2,11007.2,.06,21,12,0)
                             has been received.  Forum has taken no
"^DD",11007.2,11007.2,.06,21,13,0)
                             action to approve or disapprove. 
"^DD",11007.2,11007.2,.06,21,14,0)
INTERNALLY-STORED CODE: 3  WILL STAND FOR: CHANGE CONFIRMED
"^DD",11007.2,11007.2,.06,21,15,0)
                           Indicates there has been a Patch Stream
"^DD",11007.2,11007.2,.06,21,16,0)
                             Change request processed to completion.
"^DD",11007.2,11007.2,.06,21,17,0)
                             Resolution may have been that the change
"^DD",11007.2,11007.2,.06,21,18,0)
                             was not approved, or that the process of
"^DD",11007.2,11007.2,.06,21,19,0)
                             changing Patch Stream completed successfully
"^DD",11007.2,11007.2,.06,"DT")
3150705
"^DD",11007.2,11007.2,1,0)
DATE STREAM CHANGE REQUESTED^11007.21DA^^1;0
"^DD",11007.2,11007.21,0)
DATE STREAM CHANGE REQUESTED SUB-FIELD^^12^13
"^DD",11007.2,11007.21,0,"DT")
3150509
"^DD",11007.2,11007.21,0,"IX","B",11007.21,.01)

"^DD",11007.2,11007.21,0,"NM","DATE STREAM CHANGE REQUESTED")

"^DD",11007.2,11007.21,0,"UP")
11007.2
"^DD",11007.2,11007.21,.01,0)
DATE STREAM CHANGE REQUESTED^DX^^0;1^K:'$D(A1AEFOAP) X K:$L(X)>30!($L(X)<1) X
"^DD",11007.2,11007.21,.01,1,0)
^.1
"^DD",11007.2,11007.21,.01,1,1,0)
11007.21^B
"^DD",11007.2,11007.21,.01,1,1,1)
S ^A1AE(11007.2,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",11007.2,11007.21,.01,1,1,2)
K ^A1AE(11007.2,DA(1),1,"B",$E(X,1,30),DA)
"^DD",11007.2,11007.21,.01,3)
Only editable by FORUM
"^DD",11007.2,11007.21,.01,21,0)
^.001^1^1^3150501^^^
"^DD",11007.2,11007.21,.01,21,1,0)
The date/time a site domain has requested switching to a new PATCH STREAM
"^DD",11007.2,11007.21,.01,23,0)
^^26^26^3150501^
"^DD",11007.2,11007.21,.01,23,1,0)
A site/domain formal request to switch to a new ACTIVE PATCH STREAM is 
"^DD",11007.2,11007.21,.01,23,2,0)
initiated with FORUM'S receipt of a formally structured email message.  
"^DD",11007.2,11007.21,.01,23,3,0)
This message contains all pertinent data to the request as well as a 
"^DD",11007.2,11007.21,.01,23,4,0)
series of additional lines of text, each with a special prefixing 
"^DD",11007.2,11007.21,.01,23,5,0)
string.  As this email dialog continues to each phase, FORUM, and then the
"^DD",11007.2,11007.21,.01,23,6,0)
reqesting site/domain add, in their turn, the next appropriate line to the
"^DD",11007.2,11007.21,.01,23,7,0)
email.  This process allows checking on receipt of an email that it is a
"^DD",11007.2,11007.21,.01,23,8,0)
continuation of the same conversation, and, at the same time, documents
"^DD",11007.2,11007.21,.01,23,9,0)
this process.  The PATCH package manual fully describes this process and
"^DD",11007.2,11007.21,.01,23,10,0)
the SUBJECT TITLES needed at each emailing.
"^DD",11007.2,11007.21,.01,23,11,0)
 
"^DD",11007.2,11007.21,.01,23,12,0)
The email text structure will eventually flesh out as indicated below.  
"^DD",11007.2,11007.21,.01,23,13,0)
Note that if approval is not given by FORUM, or the process at the local 
"^DD",11007.2,11007.21,.01,23,14,0)
site/domain fails, this discussion will end earlier.
"^DD",11007.2,11007.21,.01,23,15,0)
 
"^DD",11007.2,11007.21,.01,23,16,0)
SERVER:::
"^DD",11007.2,11007.21,.01,23,17,0)
ACTIVE SUBSCRIPTION:::
"^DD",11007.2,11007.21,.01,23,18,0)
DATE SUBSCRIPTION ACTIVE:::
"^DD",11007.2,11007.21,.01,23,19,0)
REQUESTOR DUZ:::
"^DD",11007.2,11007.21,.01,23,20,0)
SWITCH TO SUBSCRIPTION:::
"^DD",11007.2,11007.21,.01,23,21,0)
SWITCH REQUEST DATE:::
"^DD",11007.2,11007.21,.01,23,22,0)
APPROVED:::
"^DD",11007.2,11007.21,.01,23,23,0)
FORUM ACTION EDIT:::
"^DD",11007.2,11007.21,.01,23,24,0)
NEW SUBSCRIPTION DATE:::
"^DD",11007.2,11007.21,.01,23,25,0)
NEW ACTIVE SUBSCRIPTION:::
"^DD",11007.2,11007.21,.01,23,26,0)
SUBSCRIPTION CHANGE CONFIRMED:::
"^DD",11007.2,11007.21,.01,"DT")
3150510
"^DD",11007.2,11007.21,1,0)
SERVER^FJ100X^^1;1^K:'$D(A1AEFOAP) X K:$L(X)>100!($L(X)<1) X
"^DD",11007.2,11007.21,1,3)
Answer must be 1-100 characters in length.
"^DD",11007.2,11007.21,1,"DT")
3150509
"^DD",11007.2,11007.21,2,0)
ACTIVE SUBSCRIPTION^FJ30X^^0;2^K:'$D(A1AEFOAP) X K:$L(X)>30!($L(X)<1) X
"^DD",11007.2,11007.21,2,3)
Answer must be 1-30 characters in length.
"^DD",11007.2,11007.21,2,"DT")
3150509
"^DD",11007.2,11007.21,3,0)
DATE SUBSCRIPTION ACTIVE^FJ30X^^1;2^K:'$D(A1AEFOAP) X K:$L(X)>30!($L(X)<1) X
"^DD",11007.2,11007.21,3,3)
Answer must be 1-30 characters in length.
"^DD",11007.2,11007.21,3,"DT")
3150509
"^DD",11007.2,11007.21,4,0)
REQUESTOR DUZ^FJ15X^^1;3^K:'$D(A1AEFOAP) X K:$L(X)>15!($L(X)<1) X
"^DD",11007.2,11007.21,4,3)
Answer must be 1-15 characters in length.
"^DD",11007.2,11007.21,4,"DT")
3150509
"^DD",11007.2,11007.21,5,0)
SWITCH TO SUBSCRIPTION^FJ15X^^1;4^K:'$D(A1AEFOAP) X K:$L(X)>15!($L(X)<1) X
"^DD",11007.2,11007.21,5,3)
Answer must be 1-15 characters in length.
"^DD",11007.2,11007.21,5,"DT")
3150509
"^DD",11007.2,11007.21,6,0)
SWITCH REQUEST DATE^FJ30X^^1;5^K:'$D(A1AEFOAP) X K:$L(X)>30!($L(X)<1) X
"^DD",11007.2,11007.21,6,3)
Answer must be 1-30 characters in length.
"^DD",11007.2,11007.21,6,"DT")
3150509
"^DD",11007.2,11007.21,7,0)
APPROVED^FJ10X^^1;6^K:'$D(A1AEFOAP) X K:$L(X)>10!($L(X)<1) X
"^DD",11007.2,11007.21,7,3)
Answer must be 1-10 characters in length.
"^DD",11007.2,11007.21,7,"DT")
3150509
"^DD",11007.2,11007.21,8,0)
FORUM ACTION EDIT^FJ20X^^1;7^K:'$D(A1AEFOAP) X K:$L(X)>20!($L(X)<1) X
"^DD",11007.2,11007.21,8,3)
Answer must be 1-20 characters in length.
"^DD",11007.2,11007.21,8,"DT")
3150509
"^DD",11007.2,11007.21,9,0)
NEW SUBSCRIPTION DATE^FJ30X^^2;1^K:'$D(A1AEFOAP) X K:$L(X)>30!($L(X)<1) X
"^DD",11007.2,11007.21,9,3)
Answer must be 1-30 characters in length.
"^DD",11007.2,11007.21,9,"DT")
3150509
"^DD",11007.2,11007.21,10,0)
NEW ACTIVE SUBSCRIPTION^FJ30X^^2;2^K:'$D(A1AEFOAP) X K:$L(X)>30!($L(X)<1) X
"^DD",11007.2,11007.21,10,3)
Answer must be 1-30 characters in length.
"^DD",11007.2,11007.21,10,"DT")
3150509
"^DD",11007.2,11007.21,11,0)
SUBSCRIPTION CHANGE CONFIRMED^FJ30X^^2;3^K:'$D(A1AEFOAP) X K:$L(X)>30!($L(X)<1) X
"^DD",11007.2,11007.21,11,3)
Answer must be 1-30 characters in length.
"^DD",11007.2,11007.21,11,"DT")
3150509
"^DD",11007.2,11007.21,12,0)
MOST RECENT MSG NUMBER^P3.9'X^XMB(3.9,^2;4^K:'$D(A1AEFOAP) X Q
"^DD",11007.2,11007.21,12,21,0)
^^1^1^3150502^
"^DD",11007.2,11007.21,12,21,1,0)
The most recently received email concerning this request dialog.  
"^DD",11007.2,11007.21,12,"DT")
3150509
"^DIC",11004,11004,0)
PATCH^11004I
"^DIC",11004,11004,0,"GL")
^A1AE(11004,
"^DIC",11004,11004,"%",0)
^1.005^^
"^DIC",11004,11004,"%D",0)
^^3^3^3150630^
"^DIC",11004,11004,"%D",1,0)
This file contains patch information from the Patch Module. It is 
"^DIC",11004,11004,"%D",2,0)
automatically populated by the installation of each patch by KIDS. It 
"^DIC",11004,11004,"%D",3,0)
acts as the authoritative source of what a patch is on the VISTA system.
"^DIC",11004,"B","PATCH",11004)

"^DIC",11005,11005,0)
DHCP PATCHES^11005I
"^DIC",11005,11005,0,"GL")
^A1AE(11005,
"^DIC",11005,11005,"%D",0)
^^5^5^2930325^^^^
"^DIC",11005,11005,"%D",1,0)
This file contains patch information for DHCP packages. For patches
"^DIC",11005,11005,"%D",2,0)
to be stored in this file the package must reside in the Package file
"^DIC",11005,11005,"%D",3,0)
(#9.4) and in the DHCP Patch/Problem Package file (#11007). For a user to
"^DIC",11005,11005,"%D",4,0)
enter patches s/he must be an authorized developer of the package in
"^DIC",11005,11005,"%D",5,0)
file (#11007).
"^DIC",11005,"B","DHCP PATCHES",11005)

"^DIC",11005.1,11005.1,0)
DHCP PATCH MESSAGE^11005.1P
"^DIC",11005.1,11005.1,0,"GL")
^A1AE(11005.1,
"^DIC",11005.1,"B","DHCP PATCH MESSAGE",11005.1)

"^DIC",11005.2,11005.2,0)
DHCP PATCH STATUS^11005.2
"^DIC",11005.2,11005.2,0,"GL")
^A1AE(11005.2,
"^DIC",11005.2,11005.2,"%",0)
^1.005^^
"^DIC",11005.2,11005.2,"%D",0)
^^6^6^3141009^
"^DIC",11005.2,11005.2,"%D",1,0)
This file describes the statuses that a patch can have. It supports the 
"^DIC",11005.2,11005.2,"%D",2,0)
input transform of the Status of Patch field (8) in the DHCP Patches file 
"^DIC",11005.2,11005.2,"%D",3,0)
(11005), and is used by routine A1AEPHS to help properly process patches 
"^DIC",11005.2,11005.2,"%D",4,0)
when they change status. Some day, the Status of Patch field should be 
"^DIC",11005.2,11005.2,"%D",5,0)
changed to point to this file, and the corresponding routines changes 
"^DIC",11005.2,11005.2,"%D",6,0)
along with it.
"^DIC",11005.2,"B","DHCP PATCH STATUS",11005.2)

"^DIC",11005.5,11005.5,0)
DHCP HFS MESSAGE^11005.5
"^DIC",11005.5,11005.5,0,"GL")
^A1AE(11005.5,
"^DIC",11005.5,"B","DHCP HFS MESSAGE",11005.5)

"^DIC",11006,11006,0)
DHCP PROBLEMS^11006I
"^DIC",11006,11006,0,"GL")
^A1AE(11006,
"^DIC",11006,"B","DHCP PROBLEMS",11006)

"^DIC",11007,11007,0)
DHCP PATCH/PROBLEM PACKAGE^11007PI
"^DIC",11007,11007,0,"GL")
^A1AE(11007,
"^DIC",11007,11007,"%",0)
^1.005^0^0
"^DIC",11007,11007,"%D",0)
^1.001^5^5^3140211^^^^
"^DIC",11007,11007,"%D",1,0)
This file contains DHCP packages for the DHCP PATCHES file (#11005).
"^DIC",11007,11007,"%D",2,0)
For a package to be added to this file it must reside in the PACKAGE
"^DIC",11007,11007,"%D",3,0)
file (#9.4). This file also contains authorized development, support
"^DIC",11007,11007,"%D",4,0)
and verify personnel for the patch file, the next patch/problem number,
"^DIC",11007,11007,"%D",5,0)
and the package versions.
"^DIC",11007,"B","DHCP PATCH/PROBLEM PACKAGE",11007)

"^DIC",11007.1,11007.1,0)
DHCP PATCH STREAM^11007.1
"^DIC",11007.1,11007.1,0,"GL")
^A1AE(11007.1,
"^DIC",11007.1,11007.1,"%",0)
^1.005^^
"^DIC",11007.1,11007.1,"%D",0)
^1.001^45^45^3140728^^^
"^DIC",11007.1,11007.1,"%D",1,0)
This file enables the concept of patch streams. A patch stream is the 
"^DIC",11007.1,11007.1,"%D",2,0)
primary output of a Patch Module system for each package.
"^DIC",11007.1,11007.1,"%D",3,0)
 
"^DIC",11007.1,11007.1,"%D",4,0)
This file enables the numberspacing of patch streams. If you decide 
"^DIC",11007.1,11007.1,"%D",5,0)
patches coming out of this Patch Module need to be numberspaced starting 
"^DIC",11007.1,11007.1,"%D",6,0)
at 20001, you must create an entry here with an IEN of 20001 (in the 
"^DIC",11007.1,11007.1,"%D",7,0)
NUMBER field) and set it as Primary.
"^DIC",11007.1,11007.1,"%D",8,0)
 
"^DIC",11007.1,11007.1,"%D",9,0)
Technical Description:
"^DIC",11007.1,11007.1,"%D",10,0)
 
"^DIC",11007.1,11007.1,"%D",11,0)
The logic to use this file can be found in the routine A1AEUTL in the 
"^DIC",11007.1,11007.1,"%D",12,0)
tags SEQ and NUM.
"^DIC",11007.1,11007.1,"%D",13,0)
 
"^DIC",11007.1,11007.1,"%D",14,0)
Multiplexing of patches (having multiple input and multiple output 
"^DIC",11007.1,11007.1,"%D",15,0)
streams) is supported in the file design but has not been implemented as 
"^DIC",11007.1,11007.1,"%D",16,0)
of Jan 24 2014.
"^DIC",11007.1,11007.1,"%D",17,0)
 
"^DIC",11007.1,11007.1,"%D",18,0)
This file requires Fileman 22.2 patched up to at least DI*22.2*2 to be 
"^DIC",11007.1,11007.1,"%D",19,0)
operational. Contact the developer for details or see the APRIM 
"^DIC",11007.1,11007.1,"%D",20,0)
cross-reference which uses the new capabilities.
"^DIC",11007.1,11007.1,"%D",21,0)
 
"^DIC",11007.1,11007.1,"%D",22,0)
Change History:
"^DIC",11007.1,11007.1,"%D",23,0)
 
"^DIC",11007.1,11007.1,"%D",24,0)
Monday, 13 January 2014: Sam Habiel of the VISTA Expertise Network 
"^DIC",11007.1,11007.1,"%D",25,0)
(VEN/SMH) created file DHCP Patch Stream (11007.1) for Patch Module 
"^DIC",11007.1,11007.1,"%D",26,0)
version 2.4 as part of the OSEHRA Forum Project Phase One. Handling of 
"^DIC",11007.1,11007.1,"%D",27,0)
multiple patch streams is the major innovation of Patch Module version 
"^DIC",11007.1,11007.1,"%D",28,0)
2.4, giving this file central importance to that version.
"^DIC",11007.1,11007.1,"%D",29,0)
 
"^DIC",11007.1,11007.1,"%D",30,0)
Wednesday, 22 January 2014: (VEN/SMH) Upgraded the file to numberspace 
"^DIC",11007.1,11007.1,"%D",31,0)
patch streams, and to ensure there is only one primary stream at a time. 
"^DIC",11007.1,11007.1,"%D",32,0)
For Patch Module version 2.4 as part of the OSEHRA Forum Project Phase 
"^DIC",11007.1,11007.1,"%D",33,0)
One.
"^DIC",11007.1,11007.1,"%D",34,0)
 
"^DIC",11007.1,11007.1,"%D",35,0)
Tuesday, 11 February 2014: Rick Marshall (VEN/TOAD) Added technical 
"^DIC",11007.1,11007.1,"%D",36,0)
descriptions & change histories; revised descriptions; renumbered fields 
"^DIC",11007.1,11007.1,"%D",37,0)
Primary? (2), Feeds into Stream (3), and Domain (4) as .02, .03, and .04; 
"^DIC",11007.1,11007.1,"%D",38,0)
renamed field Patch Stream Name (.01) as Name; replaced traditional 
"^DIC",11007.1,11007.1,"%D",39,0)
cross-references with new-style cross-references; added field 
"^DIC",11007.1,11007.1,"%D",40,0)
Abbreviation (.05); added two new keys, primary on field Name, secondary 
"^DIC",11007.1,11007.1,"%D",41,0)
on field Abbreviation; added pointer to it from file DHCP Patches 
"^DIC",11007.1,11007.1,"%D",42,0)
(11005)' field Patch Stream (.05), so patches can be linked to patch 
"^DIC",11007.1,11007.1,"%D",43,0)
streams, and so DHCP Patches records can be identified in part by the 
"^DIC",11007.1,11007.1,"%D",44,0)
Patch Stream Abbreviation. For Patch Module version 2.4 as part of the 
"^DIC",11007.1,11007.1,"%D",45,0)
OSEHRA Forum Project Phase One.
"^DIC",11007.1,"B","DHCP PATCH STREAM",11007.1)

"^DIC",11007.2,11007.2,0)
PATCH STREAM HISTORY^11007.2
"^DIC",11007.2,11007.2,0,"GL")
^A1AE(11007.2,
"^DIC",11007.2,11007.2,"%D",0)
^1.001^5^5^3150521^^^^
"^DIC",11007.2,11007.2,"%D",1,0)
File to maintain a record of the patch stream, FOIA VISTA or OSEHRA 
"^DIC",11007.2,11007.2,"%D",2,0)
VISTA, in use at this site.   File is automatically updated when a patch 
"^DIC",11007.2,11007.2,"%D",3,0)
stream in file 11007.1 is updated changing the PRIMARY field of an entry 
"^DIC",11007.2,11007.2,"%D",4,0)
from NO to YES indicating a decision by the site to switch to another 
"^DIC",11007.2,11007.2,"%D",5,0)
patch stream.
"^DIC",11007.2,"B","PATCH STREAM HISTORY",11007.2)

**END**
**END**
